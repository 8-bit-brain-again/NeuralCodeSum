Close implements the Query interface 
Exec implements the Query interface 
context Done returns an error if the context was canceled or timed out 
New Engine returns a new engine 
New Instant Query returns an evaluation query for the given expression at the given time 
New Range Query returns an evaluation query for the given time range and with the resolution set by the interval 
exec executes the query At this point per query only one Eval Stmt is evaluated Alert and record statements are not handled by the Engine 
exec Eval Stmt evaluates the expression of an evaluation statement for the given time range 
cumulative Subquery Offset returns the sum of range and offset of all subqueries in the path 
extract Func From Path walks up the path and searches for the first instance of a function or aggregation 
errorf causes a panic with the input formatted into an error 
recover is the handler that turns panics into returns from the top level of evaluation 
drop Metric Name is a cached version of drop Metric Name 
signature Func is a cached version of signature Func 
range Eval evaluates the given expressions and then for each step calls the given function with the values computed for each expression at that step The return value is the combination into time series of all the function call results 
eval Subquery evaluates given Subquery Expr and returns an equivalent evaluated Matrix Selector in its place Note that the Name and Label Matchers are not set 
eval evaluates the given expression as the given AST expression node requires 
vector Selector evaluates a Vector Selector expression 
vector Selector Single evaluates a instant vector for the iterator of one time series 
matrix Selector evaluates a Matrix Selector expression 
matrix Iter Slice populates a matrix vector covering the requested range for a single time series with points retrieved from an iterator As an optimization the matrix vector may already contain points of the same time series from the evaluation of an earlier step with lower mint and maxt values Any such points falling before mint are discarded points that fall into the mint maxt range are retained only points with later timestamps are populated from the iterator 
Vector Binop evaluates a binary operation between two Vectors excluding set operators 
signature Func returns a function that calculates the signature for a metric ignoring the provided labels If on then the given labels are only used instead 
result Metric returns the metric for the given sample s based on the Vector binary operation and the matching options 
Vectorscalar Binop evaluates a binary operation between a Vector and a Scalar 
scalar Binop evaluates a binary operation between two Scalars 
aggregation evaluates an aggregation operation on a Vector 
should Drop Metric Name returns whether the metric name should be dropped in the result of the op operation 
New Endpoints returns a new endpoints discovery 
Run implements the Discoverer interface 
 time float 
extrapolated Rate is a utility function for rate increase delta It calculates the rate allowing for counter resets if is Counter is true extrapolates if the first last sample is close to the boundary and returns the result as either per second if is Rate is true or overall 
 delta Matrix Value Type Matrix Vector 
 rate node Value Type Matrix Vector 
 increase node Value Type Matrix Vector 
 irate node Value Type Matrix Vector 
 idelta node model Val Matric Vector 
Calculate the trend value at the given index i in raw data d This is somewhat analogous to the slope of the trend at the given index The argument s is the set of computed smoothed values The argument b is the set of computed trend factors The argument d is the set of raw input values 
Holt Winters is similar to a weighted moving average where historical data has exponentially less influence on the current data Holt Winter also accounts for trends in data The smoothing factor sf affects how historical data will affect the current data A lower smoothing factor increases the influence of historical data The trend factor tf affects how trends in historical data will affect the current data A higher trend factor increases the influence of trends Algorithm taken from https en wikipedia org wiki Exponential smoothing titled Double exponential smoothing 
 sort node Value Type Vector Vector 
 sort Desc node Value Type Vector Vector 
 clamp max Vector Value Type Vector max Scalar Vector 
 clamp min Vector Value Type Vector min Scalar Vector 
 round Vector Value Type Vector to Nearest Scalar Vector 
 Scalar node Value Type Vector Scalar 
 count over time Matrix Value Type Matrix Vector 
 floor Vector Value Type Vector Vector max over time Matrix Value Type Matrix Vector 
 min over time Matrix Value Type Matrix Vector 
 sum over time Matrix Value Type Matrix Vector 
 quantile over time Matrix Value Type Matrix Vector 
 stddev over time Matrix Value Type Matrix Vector 
 absent Vector Value Type Vector Vector 
 abs Vector Value Type Vector Vector 
 ceil Vector Value Type Vector Vector 
 floor Vector Value Type Vector Vector 
 exp Vector Value Type Vector Vector 
 sqrt Vector Vector Node Vector 
 ln Vector Value Type Vector Vector 
 log Vector Value Type Vector Vector 
 log Vector Value Type Vector Vector 
 timestamp Vector Value Type Vector Vector 
linear Regression performs a least square linear regression analysis on the provided Sample Pairs It returns the slope and the intercept value at the provided time 
 deriv node Value Type Matrix Vector 
 predict linear node Value Type Matrix k Value Type Scalar Vector 
 histogram quantile k Value Type Scalar Vector Value Type Vector Vector 
 resets Matrix Value Type Matrix Vector 
 changes Matrix Value Type Matrix Vector 
 label replace Vector Value Type Vector dst label replacement src labelname regex Value Type String Vector 
 Vector s Scalar Vector 
 label join vector model Val Vector dest labelname separator src labelname Vector 
Common code for date related functions 
 days in month v Vector Scalar 
 day of month v Vector Scalar 
 day of week v Vector Scalar 
 hour v Vector Scalar 
 minute v Vector Scalar 
 month v Vector Scalar 
 year v Vector Scalar 
get Function returns a predefined Function object for the given name 
Validate validates the Service Discovery Config 
Dedupe log lines to next only repeating every repeat duration 
Log implements log Logger 
Start blocks until the gate has a free spot or the context is done 
Unmarshal YAML implements the yaml Unmarshaler interface 
New returns a new Discovery which periodically refreshes its targets 
with Stack Trace logs the stack trace in case the request panics The function will re raise the error which will then be handled by the net http package It is needed because the go kit log package doesn t manage properly the panics from net http see https github com go kit kit issues 
Apply Config updates the config field of the Handler struct 
New initializes a new web Handler 
Verifies whether the server is ready or not 
Run serves the HTTP endpoints 
New returns a file system that returns constant modification time for all files 
Marshal JSON marshals this Tag Value into JSON that only contains runes allowed in Open TSDB It implements json Marshaler The runes allowed in Open TSDB are all single byte This function encodes the arbitrary byte sequence found in this Tag Value in the following way The string that underlies Tag Value is scanned byte by byte If a byte represents a legal Open TSDB rune with the exception of that byte is directly copied to the resulting JSON byte slice If is encountered it is replaced by If is encountered it is replaced by All other bytes are replaced by followed by two bytes containing the uppercase ASCII representation of their hexadecimal value This encoding allows to save arbitrary Go strings in Open TSDB That s required because Prometheus label values can contain anything and even Prometheus metric names may and often do contain which is disallowed in Open TSDB strings The encoding uses as an escape character and renders a more or less recognizable as Examples foo bar foo bar foo bar foo bar http example org http example org Bj rn s email bjoern 
Unmarshal JSON unmarshals JSON strings coming from Open TSDB into Go strings by applying the inverse of what is described for the Marshal JSON method 
New Client creates a new Client 
Write sends a batch of samples to Influx DB via its HTTP API 
merge Samples merges two lists of sample pairs and removes duplicate timestamps It assumes that both lists are sorted by timestamp 
Describe implements prometheus Collector 
Unmarshal YAML implements the yaml Unmarshaler interface 
New Discovery returns a new Marathon Discovery 
new Auth Token Round Tripper adds the provided auth token to a request 
new Auth Token File Round Tripper adds the auth token read from the file to a request 
is Container Net checks if the app s first network is set to mode container 
fetch Apps requests a list of applications from a marathon server 
random Apps URL randomly selects a server from an array and creates an URL pointing to the app list 
apps To Target Groups takes an array of Marathon apps and converts them into target groups 
Generate a target endpoint string in host port format 
Get a list of ports and a list of labels from a Port Mapping 
Load parses the YAML input s into a Config 
Load File parses the given YAML file into a Config 
resolve Filepaths joins all relative paths in a configuration with a given base directory 
Unmarshal YAML implements the yaml Unmarshaler interface 
Unmarshal YAML implements the yaml Unmarshaler interface 
is Zero returns true iff the global config is the zero value 
Unmarshal YAML implements the yaml Unmarshaler interface 
Unmarshal YAML implements the yaml Unmarshaler interface 
Check Target Address checks if target address is valid 
Unmarshal YAML implements the yaml Unmarshaler interface 
Unmarshal YAML implements the yaml Unmarshaler interface 
Unmarshal YAML implements the yaml Unmarshaler interface 
New Discovery returns a new Discovery for the given config 
should Watch returns whether the service of the given name should be watched 
should Watch returns whether the service of the given name should be watched based on its name 
should Watch returns whether the service of the given name should be watched based on its tags This gets called when the user doesn t specify a list of services in order to avoid watching all services Details in https github com prometheus prometheus pull 
Get the local datacenter if not specified 
Initialize the Discoverer run 
Run implements the Discoverer interface 
Watch the catalog for new services we would like to watch This is called only when we don t know yet the names of the services and need to ask Consul the entire list of services 
Start watching a service 
Get updates for a service 
New Pod creates a new pod discovery 
Run implements the Discoverer interface 
New Matcher returns a matcher object 
Matches returns whether the matcher matches the given string value 
Return a string representation of a Query Timing span operation 
New Query Stats makes a Query Stats struct with all Query Timings found in the given Timer Group 
Unmarshal YAML implements the yaml Unmarshaler interface 
Unmarshal YAML implements the yaml Unmarshaler interface 
New Discovery returns a new Open Stack Discoverer which periodically refreshes its targets 
Unmarshal JSON implements json Unmarshaler 
Unmarshal YAML implements yaml Unmarshaler 
Match Labels returns a subset of Labels that matches does not match with the provided label names based on the on boolean If on is set to true it returns the subset of labels that match with the provided label names and its inverse when on is set to false 
Hash returns a hash value for the label set 
Hash For Labels returns a hash value for the labels matching the provided names 
Copy returns a copy of the labels 
Get returns the value for the label with the given name Returns an empty string if the label doesn t exist 
Has returns true if the label with the given name is present 
Equal returns whether the two label sets are equal 
Map returns a string map of the labels 
New returns a sorted Labels from the given labels The caller has to guarantee that all label names are unique 
From Strings creates new labels from pairs of strings 
Compare compares the two label sets The result will be if a b if a b and if a b 
New Builder returns a new Labels Builder 
Del deletes the label of the given name 
Set the name value pair as a label 
Labels returns the labels from the builder If no modifications were made the original labels are returned 
New Storage returns a remote Storage 
Apply Config updates the state as the new config requires 
Querier returns a storage Merge Querier combining the remote client queriers of each configured remote read endpoint 
Close the background processing of the storage queues 
Rate Limit write to a logger 
Unmarshal YAML implements the yaml Unmarshaler interface 
New Discovery returns a new Discovery which periodically refreshes its targets 
lookup With Search Path tries to get an answer for various permutations of the given name appending the system configured search path as necessary There are three possible outcomes One of the permutations of the given name is recognized as valid by the DNS in which case we consider ourselves done and that answer is returned Note that due to the way the DNS handles name has resource records but none of the specified type the answer received may have an empty set of results All of the permutations of the given name are responded to by one of the servers in the nameservers list with the answer that name does not exist NXDOMAIN In that case it can be considered pseudo authoritative that there are no records for that name One or more of the names was responded to by all servers with some sort of error indication In that case we can t know if in fact there are records for the name or not so whatever state the configuration is in we should keep it that way until we know for sure by presumably all the names getting answers in the future Outcomes and are indicated by a valid response message possibly an empty one and no error Outcome is indicated by an error return The error will be generic looking because trying to return all the errors returned by the combination of all name permutations and servers is a nightmare 
lookup From Any Server uses all configured servers to try and resolve a specific name If a viable answer is received from a server then it is immediately returned otherwise the other servers in the config are tried and if none of them return a viable answer an error is returned A viable answer is one which indicates either yes I know that name and here are its records of the requested type RCODE SUCCESS ANCOUNT yes I know that name but it has no records of the requested type RCODE SUCCESS ANCOUNT or I know that name doesn t exist RCODE NXDOMAIN A non viable answer is anything else which encompasses both various system level problems like network timeouts and also valid but unexpected DNS responses SERVFAIL REFUSED etc 
ask Server For Name makes a request to a specific DNS server for a specific name and qtype Retries with TCP in the event of response truncation but otherwise just sends back whatever the server gave whether that be a valid looking response or an error 
new Hypervisor Discovery returns a new hypervisor discovery 
New returns a new API object 
Register GRPC registers all API services with the given server 
HTTPHandler returns an HTTP handler for a REST API gateway to the given grpc address 
extract Time Range returns minimum and maximum timestamp in milliseconds as provided by the time range It defaults either boundary to the minimum and maximum possible value 
TSDBSnapshot implements pb Admin Server 
TSDBClean Tombstones implements pb Admin Server 
Delete Series implements pb Admin Server 
TSDBSnapshot implements pb Admin Server 
TSDBClean Tombstones implements pb Admin Server 
Delete Series implements pb Admin Server 
Writes HTTP response content data 
Closes the compressed Response Writer and ensures to flush all data before 
Constructs a new compressed Response Writer based on client request headers 
Serve HTTP adds compression to the original http Handler s Serve HTTP method 
New Template Expander returns a template expander ready to use 
Alert Template Data returns the interface to be used in expanding the template 
Funcs adds the functions in fm to the Expander s function map Existing functions will be overwritten in case of conflict 
Expand expands a template in text non HTML mode 
Expand HTML expands a template with HTML escaping with templates read from the given files 
New Target creates a reasonably configured target for querying 
Metadata returns type and help metadata for the given metric 
hash returns an identifying hash for the target 
offset returns the time until the next scrape cycle for the target It includes the global server jitter Seed for scrapes from multiple Prometheus to try to be at different times 
Labels returns a copy of the set of all public labels of the target 
Discovered Labels returns a copy of the target s labels before any processing 
Set Discovered Labels sets new Discovered Labels 
URL returns a copy of the target s URL 
Last Error returns the error encountered during the last scrape 
Last Scrape returns the time of the last scrape 
Last Scrape Duration returns how long the last scrape of the target took 
Health returns the last known health state of the target 
populate Labels builds a label set from the given label set and scrape configuration It returns a label set before relabeling was applied as the second return value Returns the original discovered label set found before relabelling was applied if the target is dropped during relabeling 
targets From Group builds targets based on the given Target Group and config 
From Time returns a new millisecond timestamp from a time 
Time returns a new time Time object from a millisecond timestamp 
Enables cross site script calls 
New Client creates a new Client 
Store sends a batch of samples to the HTTP endpoint the request is the proto marshalled and encoded bytes from codec go 
Name identifies the client 
Read reads from a remote endpoint 
Unmarshal YAML implements the yaml Unmarshaler interface 
New Discovery returns a new Azure Discovery which periodically refreshes its targets 
create Azure Client is a helper function for creating an Azure compute client to ARM 
Create a new azure Resource object from an ID string 
Return a string representation of the Timer 
Get Timer gets and creates if necessary the Timer for a given code section 
Swap implements sort Interface 
Return a string representation of a Timer Group 
Register Admin Handler registers the http handlers for service Admin to mux The handlers forward requests to the grpc endpoint over conn 
Register Admin Handler Client registers the http handlers for service Admin to mux The handlers forward requests to the grpc endpoint over the given implementation of Admin Client Note the g RPC framework executes interceptors within the g RPC handler If the passed in Admin Client doesn t go through the normal g RPC flow creating a g RPC client etc then it will be up to the passed in Admin Client to call the correct interceptors 
Parse Expr returns the expression parsed from the input 
Parse Metric parses the input into a metric 
Parse Metric Selector parses the provided textual metric selector into a list of label matchers 
new Parser returns a new parser 
parse Expr parses a single expression from the input 
parse Series Desc parses the description of a time series 
parse Series Desc parses a description of a time series into its metric and value sequence 
typecheck checks correct typing of the parsed statements or expression 
next returns the next token 
peek returns but does not consume the next token 
errorf formats the error and terminates processing 
error terminates processing 
expect consumes the next token and guarantees it has the required type 
expect One Of consumes the next token and guarantees it has one of the required types 
recover is the handler that turns panics into returns from the top level of Parse 
expr parses any expression 
unary Expr parses a unary expression Vector selector Matrix selector number literal expr 
subquery Or Range Selector parses a Subquery based on given Expr or a Matrix a k a range selector based on a given Vector selector Vector selector duration Vector selector duration duration 
number parses a number 
primary Expr parses a primary expression metric name function call Vector aggregation literal 
labels parses a list of labelnames label name 
aggr Expr parses an aggregation expression aggr op Vector expr by without labels aggr op by without labels Vector expr 
call parses a function call func name arg expr 
label Set parses a set of label matchers labelname match string 
label Matchers parses a set of label matchers labelname match op match string 
metric parses a metric label set metric identifier label set 
offset parses an offset modifier offset duration 
Vector Selector parses a new instant vector selector metric identifier label matchers metric identifier label matchers 
expect Type checks the type of the node and raises an error if it is not of the expected type 
check the types of the children of each node and raise an error if they do not form a valid node Some of these checks are redundant as the parsing stage does not allow them but the costs are small and might reveal errors when making changes 
Appender implements scrape Appendable 
Add implements storage Appender 
Add Fast implements storage Appender 
Commit implements storage Appender 
Add appends a new Problem to the slice for the specified metric with the specified issue text 
Lint performs a linting pass returning a slice of Problems indicating any issues found in the metrics stream The slice is sorted by metric name and issue description 
lint is the entry point for linting a single metric 
lint Help detects issues related to the help text for a metric 
lint Metric Units detects issues with metric unit names 
lint Counter detects issues specific to counters as well as patterns that should only be used with counters 
lint Histogram Summary Reserved detects when other types of metrics use names or labels reserved for use by histograms and or summaries 
metric Units attempts to detect known unit types used as part of a metric name e g foo bytes total or bar baz milligrams 
New Client creates a new Client 
Write sends a batch of samples to Graphite 
New returns a new Pool with size buckets for min Size to max Size increasing by the given factor 
Get returns a new byte slices that fits the given size 
Put adds a slice to the right bucket in the pool 
Marshal JSON implements json Marshaler 
Contains Same Labelset checks if a vector has samples with the same labelset Such a behavior is semantically undefined https github com prometheus prometheus issues 
Total Samples returns the total number of samples in the series within a matrix 
Contains Same Labelset checks if a matrix has samples with the same labelset Such a behavior is semantically undefined https github com prometheus prometheus issues 
Vector returns a Vector if the result value is one An error is returned if the result was an error or the result value is not a Vector 
Scalar returns a Scalar value An error is returned if the result was an error or the result value is not a Scalar 
Unmarshal YAML implements the yaml Unmarshaler interface 
New Discovery returns a new EC Discovery which periodically refreshes its targets 
Note you must implement this function for your discovery implementation as part of the Discoverer interface Here you should query your SD for it s list of known targets determine which of those targets you care about for example which of Consuls known services do you want to scrape for metrics and then send those targets as a target Target Group to the ch channel 
New Queue Manager builds a new Queue Manager 
Append queues a sample to be sent to the remote storage Blocks until all samples are enqueued on their shards or a shutdown signal is received 
Start the queue manager sending samples to the remote storage Does not block 
Stop stops sending samples to the remote storage and waits for pending sends to complete 
Store Series keeps track of which series we know about for lookups when sending samples to remote 
Series Reset is used when reading a checkpoint WAL Watcher should have stored series records with the checkpoints index number so we can now delete any ref ID s lower than that from the two maps 
process External Labels merges external Labels into ls If ls contains a label in external Labels the value in ls wins 
start the shards must be called before any call to enqueue 
stop the shards subsequent call to enqueue will return false 
enqueue a sample If we are currently in the process of shutting down or resharding will return false in this case you should back off and retry 
send Samples to the remote storage with backoff for recoverable errors 
Unmarshal YAML implements the yaml Unmarshaler interface 
Unmarshal YAML implements the yaml Unmarshaler interface 
Unmarshal YAML implements the yaml Unmarshaler interface 
New creates a new Kubernetes discovery for the given role 
Run implements the discoverer interface 
compile CORSRegex String compiles given string and adds anchors 
compute External URL computes a sanitized external URL from a raw input It infers unset URL parts from the OS and the given listen address 
send Alerts implements the rules Notify Func for a Notifier 
Validate validates all rules in the rule groups 
Validate the rule and return a list of encountered errors 
Parse parses and validates a set of rules 
Parse File reads and parses rules from a file 
Table Link For Expression creates an escaped relative link to the table view of the provided expression 
Graph Link For Expression creates an escaped relative link to the graph view of the provided expression 
New Fanout returns a new fan out Storage which proxies reads and writes through to multiple underlying storages 
Start Time implements the Storage interface 
Close closes the storage and all its underlying resources 
New Merge Querier returns a new Querier that merges results of input queriers NB New Merge Querier will return Noop Querier if no queriers are passed to it and will filter Noop Queriers from its arguments in order to reduce overhead when only one querier is passed 
Select returns a set of series that matches the given label matchers 
Label Values returns all potential values for a label name 
Label Names returns all the unique label names present in the block in sorted order 
Close releases the resources of the Querier 
New Merge Series Set returns a new series set that merges deduplicates series returned by the input series sets when iterating 
Graphite doesn t support tags so label names and values must be encoded into the metric path The list of characters that are usable with Graphite is rather fuzzy One source of truth might be the grammar used to parse requests in the webapp https github com graphite project graphite web blob master webapp graphite render grammar py L The list of valid symbols is defined as legal printables symbols escaped symbols The default storage backend for Graphite whisper stores data in filenames so we also need to use only valid filename characters Fortunately on UNIX only isn t and Windows is completely unsupported by Graphite http graphite readthedocs org en latest install html windows users escape escapes a model Label Value into runes allowed in Graphite The runes allowed in Graphite are all single byte This function encodes the arbitrary byte sequence found in this Tag Value in way very similar to the traditional percent encoding https en wikipedia org wiki Percent encoding The string that underlies Tag Value is scanned byte by byte If a byte represents a legal Graphite rune with the exception of and that byte is directly copied to the resulting byte slice is used for percent encoding of other bytes is not usable in filenames is used when generating the path to associate values to labels already means something for Graphite and thus can t be used in a value If the byte is any of then a will be prepended to it We do not percent encode them since they are explicitly usable in this way in Graphite All other bytes are replaced by followed by two bytes containing the uppercase ASCII representation of their hexadecimal value This encoding allows to save arbitrary Go strings in Graphite That s required because Prometheus label values can contain anything Using percent encoding makes it easy to unescape even in javascript Examples foo bar foo bar foo bar foo bar http example org http F Fexample Eorg Bj rn s email bjoern 
New Alerting Rule constructs a new Alerting Rule 
Set Last Error sets the current error seen by the alerting rule 
Last Error returns the last error seen by the alerting rule 
Set Health sets the current health of the alerting rule 
Health returns the current health of the alerting rule 
for State Sample returns the sample for ALERTS FOR STATE 
Set Evaluation Duration updates evaluation Duration to the duration it took to evaluate the rule on its last evaluation 
Get Evaluation Duration returns the time in seconds it took to evaluate the alerting rule 
Set Evaluation Timestamp updates evaluation Timestamp to the timestamp of when the rule was last evaluated 
Get Evaluation Timestamp returns the time the evaluation took place 
Eval evaluates the rule expression and then creates pending alerts and fires or removes previously pending alerts accordingly 
State returns the maximum state of alert instances for this rule State Firing State Pending State Inactive 
Active Alerts returns a slice of active alerts 
current Alerts returns all instances of alerts for this rule This may include inactive alerts that were previously firing 
For Each Active Alert runs the given function on each alert This should be used when you want to use the actual alerts from the Alerting Rule and not on its copy If you want to run on a copy of alerts then don t use this get the alerts from Active Alerts 
HTMLSnippet returns an HTML snippet representing this alerting rule The resulting snippet is expected to be presented in a pre element so that line breaks and other returned whitespace is respected 
Parses incoming target groups updates If the update contains changes to the target groups Adapter already knows about or new target groups we Marshal to JSON and write to file 
Writes JSON formatted targets to output file 
Run starts a Discovery Manager and the custom service discovery implementation 
New Adapter creates a new instance of Adapter 
New Group Metrics makes a new Metrics and registers them with then provided registerer if not nil 
Engine Query Func returns a new query function that executes instant queries against the given engine It converts scalar into vector results 
New Group makes a new Group with the given name options and rules 
Get Evaluation Duration returns the time in seconds it took to evaluate the rule group 
set Evaluation Duration sets the time in seconds the last evaluation took 
Get Evaluation Timestamp returns the time the last evaluation of the rule group took place 
set Evaluation Timestamp updates evaluation Timestamp to the timestamp of when the rule group was last evaluated 
eval Timestamp returns the immediately preceding consistently slotted evaluation time 
Copy State copies the alerting rule and staleness related state from the given group Rules are matched based on their name and labels If there are duplicates the first is matched with the first second with the second etc 
Eval runs a single evaluation cycle in which all rules are evaluated sequentially 
Restore For State restores the for state of the alerts by looking up last Active At from storage 
New Manager returns an implementation of Manager ready to be started by calling the Run method 
Stop the rule manager s rule evaluation cycles 
Update the rule manager s state as the config requires If loading the new rules failed the old rule set is restored 
Load Groups reads groups from a list of files 
Rule Groups returns the list of manager s rule groups 
Rules returns the list of the manager s rules 
Alerting Rules returns the list of the manager s alerting rules 
Collect implements prometheus Collector 
New WALWatcher creates a new WAL watcher for a given Write To 
Start the WALWatcher 
Stop the WALWatcher 
find Segment For Index finds the first segment greater than or equal to index 
Copied from tsdb wal wal go so we do not have to open a WAL Plan is to move WAL watcher to TSDB and dedupe these implementations 
Use tail true to indicate that the reader is currently on a segment that is actively being written to If false assume it s a full segment and we re replaying it on start to cache the series records 
Read all the series records from a Checkpoint directory 
Get size of segment 
Printf implements zk Logger 
New Zookeeper Tree Cache creates a new Zookeeper Tree Cache for a given path 
New Manager is the Discovery Manager constructor 
Name sets the name of the manager 
Run starts the background processing 
Apply Config removes all running discovery providers and starts new ones using the provided config 
Start Custom Provider is used for sdtool Only use this if you know what you re doing 
Run implements the Worker interface 
New Discovery returns a Discoverer function that calls a refresh function at every interval 
Run implements the Discoverer interface 
Unmarshal YAML implements the yaml Unmarshaler interface 
New Nerve Discovery returns a new Discovery for the given Nerve config 
New Serverset Discovery returns a new Discovery for the given serverset config 
New Discovery returns a new discovery along Zookeeper parses with the given parse function 
Run implements the Discoverer interface 
Walk traverses an AST in depth first order It starts by calling v Visit node path node must not be nil If the visitor w returned by v Visit node path is not nil and the visitor returns no error Walk is invoked recursively with visitor w for each of the non nil children of node followed by a call of w Visit nil returning an error As the tree is descended the path of previous nodes is provided 
Inspect traverses an AST in depth first order It starts by calling f node path node must not be nil If f returns a nil error Inspect invokes f for all the non nil children of node recursively 
Lex is called by the parser generated by go tool yacc to obtain each token The method is opened before the matching rules block and closed at the end of the file 
Fuzz the metric parser Note that his is not the parser for the text based exposition format that lives in github com prometheus client golang text 
Fuzz the metric selector parser 
Fuzz the expression parser 
Fuzz the parser 
Run implements the Discoverer interface 
New Manager is the Manager constructor 
Run receives and saves target set updates and triggers the scraping loops reloading Reloading happens in the background so that it doesn t block receiving targets updates 
set Jitter Seed calculates a global jitter Seed per server relying on extra label set 
Stop cancels all running scrape pools and blocks until all have exited 
Apply Config resets the manager s target providers and job configurations as defined by the new cfg 
Targets All returns active and dropped targets grouped by job name 
Targets Active returns the active targets currently being scraped 
Targets Dropped returns the dropped targets during relabelling 
get Fqdn returns a FQDN if it s possible otherwise falls back to hostname 
New Client creates a new Client 
tags From Metric translates Prometheus metric into Open TSDB tags 
Write sends a batch of samples to Open TSDB via its HTTP API 
Unmarshal YAML implements the yaml Unmarshaler interface 
New Discovery returns a new Discovery which periodically refreshes its targets 
Queryable Client returns a storage Queryable which queries the given Client to select series sets 
Select implements storage Querier and uses the given matchers to read series sets from the Client 
External Labels Handler returns a storage Queryable which creates a external Labels Querier 
Select adds equality matchers for all external labels to the list of matchers before calling the wrapped storage Queryable The added external labels are removed from the returned series sets 
Prefer Local Storage Filter returns a Queryable Func which creates a Noop Querier if requested timeframe can be answered completely by the local TSDB and reduces maxt if the timeframe can be partially answered by TSDB 
Required Matchers Filter returns a storage Queryable which creates a required Matchers Querier 
Select returns a Noop Series Set if the given matchers don t match the label set of the required Matchers Querier Otherwise it ll call the wrapped querier 
add External Labels adds matchers for each external label External labels that already have a corresponding user supplied matcher are skipped as we assume that the user explicitly wants to select a different value for them We return the new set of matchers along with a map of labels for which matchers were added so that these can later be removed from the result time series again 
New returns a new parser of the byte slice 
New Instance Discovery returns a new instance discovery 
Querier calls f with the given parameters 
Resolved At returns true iff the activity interval ended before the given timestamp 
New Manager is the manager constructor 
Apply Config updates the status state as the new config requires 
Run dispatches notifications continuously 
Send queues the given notification requests for processing Panics if called on a handler that is not running 
Alertmanagers returns a slice of Alertmanager URLs 
Dropped Alertmanagers returns a slice of Alertmanager URLs 
send All sends the alerts to all configured Alertmanagers concurrently It returns true if the alerts could be sent successfully to at least one Alertmanager 
Stop shuts down the notification handler 
sync extracts a deduplicated set of Alertmanager endpoints from a list of target groups definitions 
alertmanagers From Group extracts a list of alertmanagers from a target group and an associated Alertmanager Config 
Unquote interprets s as a single quoted double quoted or backquoted Prometheus query language string literal returning the string value that s quotes NOTE This function as well as the necessary helper functions below unquote Char contains unhex and associated tests have been adapted from the corresponding functions in the strconv package of the Go standard library to work for Prometheus style strings Go s special casing for single quotes was removed and single quoted strings are now treated the same as double quoted ones 
String returns a descriptive string for the item 
is Aggregator returns true if the item is an aggregator that takes a parameter Returns false otherwise 
is Compairson Operator returns true if the item corresponds to a comparison operator Returns false otherwise 
is Set Operator returns whether the item corresponds to a set operator 
Precedence returns the operator precedence of the binary operator op If op is not a binary operator the result is Lowest Prec 
next returns the next rune in the input 
peek returns but does not consume the next rune in the input 
emit passes an item back to the client 
line Position reports at which character in the current line we are on 
next Item returns the next item from the input 
lex creates a new scanner for the input string 
lex Statements is the top level state for lexing 
lex Inside Braces scans the inside of a vector selector Keywords are ignored and scanned as identifiers 
lex Value Sequence scans a value sequence of a series description 
lex Escape scans a string escape sequence The initial escaping character has already been seen NOTE This function as well as the helper function digit Val and associated tests have been adapted from the corresponding functions in the go scanner package of the Go standard library to work for Prometheus style strings None of the actual escaping quoting logic was changed in this function it was only modified to integrate with our lexer 
digit Val returns the digit value of a rune or in case the rune does not represent a valid digit 
lex String scans a quoted string The initial quote has already been seen 
lex Space scans a run of space characters One space has already been seen 
lex Line Comment scans a line comment Left comment marker is known to be present 
lex Number scans a number decimal hex oct or float 
lex Number Or Duration scans a number or a duration item 
scan Number scans numbers of different formats The scanned item is not necessarily a valid number This case is caught by the parser 
lex Identifier scans an alphanumeric identifier The next character is known to be a letter 
lex Keyword Or Identifier scans an alphanumeric identifier which may contain a colon rune If the identifier is a keyword the respective keyword item is scanned 
is Label reports whether the string can be used as label 
buf returns the buffer of the current token 
New returns a new parser of the byte slice 
Series returns the bytes of the series the timestamp if set and the value of the current sample 
Help returns the metric name and help text in the current entry Must only be called after Next returned a help entry The returned byte slices become invalid after the next call to Next 
Type returns the metric name and type in the current entry Must only be called after Next returned a type entry The returned byte slices become invalid after the next call to Next 
next Token returns the next token from the promlexer It skips over tabs and spaces 
Next advances the parser to the next sample It returns false if no more samples were read or an error occurred 
New API returns an initialized API type 
Register the API s endpoints in the given router 
merge Labels merges two sets of sorted proto labels preferring those in primary to those in secondary when there is an overlap 
Lex is called by the parser generated by go tool yacc to obtain each token The method is opened before the matching rules block and closed at the end of the file 
Set the storage 
Get the storage 
Start Time implements the Storage interface 
Querier implements the Storage interface 
Appender implements the Storage interface 
Close implements the Storage interface 
Adapter return an adapter as storage Storage 
Open returns a new storage backed by a TSDB database that is configured for Prometheus 
Start Time implements the Storage interface 
Appender returns a new appender against the storage 
Unmarshal YAML implements the yaml Unmarshaler interface 
Unmarshal YAML implements the yaml Unmarshaler interface 
New Regexp creates a new anchored Regexp and returns an error if the passed in regular expression does not compile 
Must New Regexp works like New Regexp but panics if the regular expression does not compile 
Unmarshal YAML implements the yaml Unmarshaler interface 
Marshal YAML implements the yaml Marshaler interface 
Process returns a relabeled copy of the given label set The relabel configurations are applied in order of input If a label set is dropped nil is returned May return the input label Set modified 
sum sums the md hash to an uint 
stop terminates all scrape loops and returns after they all terminated 
reload the scrape pool with the given scrape configuration The target state is preserved but all scrape loops are restarted with the new scrape configuration This method returns after all scrape loops that were stopped have stopped scraping 
Sync converts target groups into actual scrape targets and synchronizes the currently running scraper with the resulting set and returns all scraped and dropped targets 
sync takes a list of potentially duplicated targets deduplicates them starts scrape loops for new targets and stops scrape loops for disappeared targets It returns after all stopped scrape loops terminated 
appender returns an appender for ingested samples from the target 
Run implements the Discoverer interface 
Uname returns the uname of the host machine 
Decode Read Request reads a remote Request from a http Request 
Encode Read Response writes a remote Response to a http Response Writer 
To Query builds a Query proto 
From Query unpacks a Query proto 
To Query Result builds a Query Result proto 
From Query Result unpacks a Query Result proto 
Seek implements storage Series Iterator 
At implements storage Series Iterator 
Next implements storage Series Iterator 
validate Labels And Metric Name validates the label names values and metric names returned from remote read 
Label Protos To Metric unpack a prompb Label to a model Metric 
New Buffer Iterator returns a new iterator that buffers the values within the time range of the current element and the duration of delta before 
Reset re uses the buffer with a new iterator resetting the buffered time delta to its original value 
Reduce Delta lowers the buffered time delta for the current Series Iterator only 
Peek Back returns the nth previous element of the iterator If there is none buffered ok is false 
Seek advances the iterator to the element at time t or greater 
Next advances the iterator to the next element 
Returns the current iterator Invalidates previously returned iterators 
reduce Delta lowers the buffered time delta dropping any samples that are out of the new delta range 
nth Last returns the nth most recent element added to the ring 
buf returns the buffer of the current token 
next advances the open Metrics Lexer to the next character 
Help returns the metric name and help text in the current entry Must only be called after Next returned a help entry The returned byte slices become invalid after the next call to Next 
Unit returns the metric name and unit in the current entry Must only be called after Next returned a unit entry The returned byte slices become invalid after the next call to Next 
Metric writes the labels of the current sample into the passed labels It returns the string from which the metric was parsed 
Next advances the parser to the next sample It returns false if no more samples were read or an error occurred 
bucket Quantile calculates the quantile q based on the given buckets The buckets will be sorted by upper Bound by this function i e no sorting needed before calling this function The quantile value is interpolated assuming a linear distribution within a bucket However if the quantile falls into the highest bucket the upper bound of the nd highest bucket is returned A natural lower bound of is assumed if the upper bound of the lowest bucket is greater In that case interpolation in the lowest bucket happens linearly between and the upper bound of the lowest bucket However if the lowest bucket has an upper bound less or equal this upper bound is returned if the quantile falls into the lowest bucket There are a number of special cases once we have a way to report errors happening during evaluations of AST functions we should report those explicitly If buckets has fewer than elements Na N is returned If the highest bucket is not Inf Na N is returned If q Inf is returned If q Inf is returned 
coalesce Buckets merges buckets with the same upper bound The input buckets must be sorted 
The assumption that bucket counts increase monotonically with increasing upper Bound may be violated during Recording rule evaluation of histogram quantile especially when rate has been applied to the underlying bucket timeseries Evaluation of histogram quantile computed over federated bucket timeseries especially when rate has been applied This is because scraped data is not made available to rule evaluation or federation atomically so some buckets are computed with data from the most recent scrapes but the other buckets are missing data from the most recent scrape Monotonicity is usually guaranteed because if a bucket with upper bound u has count c then any bucket with a higher upper bound u u must have counted all c observations and perhaps more so that c c Randomly interspersed partial sampling breaks that guarantee and rate exacerbates it Specifically suppose bucket le has a count of from samples but the bucket with le has a count of from samples The monotonicity is broken It is exacerbated by rate because under normal operation cumulative counting of buckets will cause the bucket counts to diverge such that small differences from missing samples are not a problem rate removes this divergence bucket Quantile depends on that monotonicity to do a binary search for the bucket with the quantile count so breaking the monotonicity guarantee causes bucket Quantile to return undefined nonsense results As a somewhat hacky solution until ingestion is atomic per scrape we calculate the envelope of the histogram buckets essentially removing any decreases in the count between successive buckets 
qauntile calculates the given quantile of a vector of samples The Vector will be sorted If values has zero elements Na N is returned If q Inf is returned If q Inf is returned 
Unmarshal YAML implements the yaml Unmarshaler interface 
Collect creates constant metrics for each file with last modified time of the file 
New Timestamp Collector creates a Timestamp Collector 
New Discovery returns a new file discovery for the given paths 
list Files returns a list of all files that match the configured patterns 
watch Files sets watches on all full paths or directories that were configured for this file discovery 
Run implements the Discoverer interface 
stop shuts down the file watcher 
refresh reads all files matching the discovery s patterns and sends the respective updated target groups through the channel 
read File reads a JSON or YAML list of targets groups from the file depending on its file extension It returns full configuration target groups 
file Source returns a source ID for the i th target group in the file 
New Recording Rule returns a new recording rule 
Eval evaluates the rule and then overrides the metric names and labels accordingly 
Set Evaluation Duration updates evaluation Duration to the time in seconds it took to evaluate the rule on its last evaluation 
Set Last Error sets the current error seen by the recording rule 
Last Error returns the last error seen by the recording rule 
Set Health sets the current health of the recording rule 
Health returns the current health of the recording rule 
Get Evaluation Duration returns the time in seconds it took to evaluate the recording rule 
Set Evaluation Timestamp updates evaluation Timestamp to the timestamp of when the rule was last evaluated 
Get Evaluation Timestamp returns the time the evaluation took place 
HTMLSnippet returns an HTML snippet representing this rule 
new EWMARate always allocates a new ewma Rate as this guarantees the atomically accessed int will be aligned on ARM See prometheus 
rate returns the per second rate 
tick assumes to be called every r interval 
inc counts one event 
New Node returns a new node discovery 
Run implements the Discoverer interface 
node Addresses returns the provided node s address based on the priority Node Internal IP Node External IP Node Legacy Host IP Node Host Name Derived from k s io kubernetes pkg util node node go 
Check Config validates configuration files 
Check Rules validates rule files 
Check Metrics performs a linting pass on input metrics 
Query Instant performs an instant query against a Prometheus server 
Query Range performs a range query against a Prometheus server 
Query Series queries for a series against a Prometheus server 
Query Labels queries for label values against a Prometheus server 
Unmarshal YAML implements the yaml Unmarshaler interface 
Marshal YAML implements the yaml Marshaler interface 
Unmarshal JSON implements the json Unmarshaler interface 
New Stream Reader returns a reader which replays all the data generated by sw The returned reader may be passed to Response Set Body Stream Close must be called on the returned reader after all the required data has been read Otherwise goroutine leak may occur See also Response Set Body Stream Writer 
Expvar Handler dumps json representation of expvars to http response Expvars may be filtered by regexp provided via r query argument See https golang org pkg expvar for details 
Status Message returns HTTP status message for the given status code 
Copy To copies all args to dst 
Visit All calls f for each existing arg f must not retain references to key and value after returning Make key and or value copies if you need storing them after returning 
Parse parses the given string containing query args 
Parse Bytes parses the given b containing query args 
Query String returns query string for the args The returned value is valid until the next call to Args methods 
Sort sorts Args by key and then value using f as comparison function For example args Sort bytes Compare 
Append Bytes appends query string to dst and returns the extended dst 
Write To writes query string to w Write To implements io Writer To interface 
Del deletes argument with the given key from query args 
Del Bytes deletes argument with the given key from query args 
Add adds key value argument Multiple values for the same key may be added 
Add Bytes K adds key value argument Multiple values for the same key may be added 
Add Bytes KV adds key value argument Multiple values for the same key may be added 
Add No Value adds only key as argument without the Multiple values for the same key may be added 
Add Bytes KNo Value adds only key as argument without the Multiple values for the same key may be added 
Set sets key value argument 
Set Bytes V sets key value argument 
Set Bytes KV sets key value argument 
Set No Value sets only key as argument without the Only key in argumemt like key key 
Set Bytes KNo Value sets key argument 
Peek returns query arg value for the given key Returned value is valid until the next Args call 
Peek Bytes returns query arg value for the given key Returned value is valid until the next Args call 
Peek Multi returns all the arg values for the given key 
Peek Multi Bytes returns all the arg values for the given key 
Has returns true if the given key exists in Args 
Has Bytes returns true if the given key exists in Args 
Get Uint returns uint value for the given key 
Set Uint sets uint value for the given key 
Set Uint Bytes sets uint value for the given key 
Get Uint Or Zero returns uint value for the given key Zero is returned on error 
Get Ufloat returns ufloat value for the given key 
Get Ufloat Or Zero returns ufloat value for the given key Zero is returned on error 
Get Bool returns boolean value for the given key true is returned for t T true TRUE True y yes Y YES Yes otherwise false is returned 
decode Arg Append No Plus is almost identical to decode Arg Append but it doesn t substitute with The function is copy pasted from decode Arg Append due to the performance reasons only 
Append HTMLEscape appends html escaped s to dst and returns the extended dst 
Append IPv appends string representation of the given ip v to dst and returns the extended dst 
Parse IPv parses ip address from ip Str into dst and returns the extended dst 
Append HTTPDate appends HTTP compliant RFC representation of date to dst and returns the extended dst 
Parse HTTPDate parses HTTP compliant RFC date 
Parse Uint parses uint from buf 
Parse Ufloat parses unsigned float from buf 
Append Quoted Arg appends url encoded src to dst and returns appended dst 
Copy To copies uri contents to dst 
Set Hash sets URI hash 
Set Hash Bytes sets URI hash 
Set Query String sets URI query string 
Set Query String Bytes sets URI query string 
Path returns URI path i e foo bar of http aaa com foo bar baz qwe The returned path is always urldecoded and normalized i e f obar baz zzz becomes f obar zzz The returned value is valid until the next URI method call 
Set Path sets URI path 
Set Path Bytes sets URI path 
Scheme returns URI scheme i e http of http aaa com foo bar baz qwe Returned scheme is always lowercased The returned value is valid until the next URI method call 
Set Scheme sets URI scheme i e http https ftp etc 
Set Scheme Bytes sets URI scheme i e http https ftp etc 
Reset clears uri 
Host returns host part i e aaa com of http aaa com foo bar baz qwe Host is always lowercased 
Set Host sets host for the uri 
Set Host Bytes sets host for the uri 
Parse initializes URI from the given host and uri host may be nil In this case uri must contain fully qualified uri i e with scheme and host http is assumed if scheme is omitted uri may contain e g Request URI without scheme and host if host is non empty 
Request URI returns Request URI i e URI without Scheme and Host 
Last Path Segment returns the last part of uri path after Examples For foo bar baz html path returns baz html For foo bar returns empty byte slice For foobar js returns foobar js 
Update Bytes updates uri The following new URI types are accepted Absolute i e http foobar com aaa bb cc In this case the original uri is replaced by new URI Absolute without scheme i e foobar com aaa bb cc In this case the original scheme is preserved Missing host i e aaa bb cc In this case only Request URI part of the original uri is replaced Relative path i e xx yy abc In this case the original Request URI is updated according to the new relative path 
Full URI returns full uri in the form Scheme Host Request URI Hash 
Append Bytes appends full uri to dst and returns the extended dst 
Write To writes full uri to w Write To implements io Writer To interface 
New Writer creates a stackless writer around a writer returned from new Writer The returned writer writes data to dst W Writers that use a lot of stack space may be wrapped into stackless writer thus saving stack space for high number of concurrently running goroutines 
New Pipe Conns returns new bi directional connection pipe 
Close closes pipe connections 
Do performs the given http request and fills the given http response Request must contain at least non zero Request URI with full url including scheme and host or non zero Host header Request URI Client determines the server to be requested in the following order from Request URI if it contains full url with scheme and host from Host header otherwise The function doesn t follow redirects Use Get for following redirects Response is ignored if resp is nil Err No Free Conns is returned if all Default Max Conns Per Host connections to the requested host are busy It is recommended obtaining req and resp via Acquire Request and Acquire Response in performance critical code 
Do Timeout performs the given request and waits for response during the given timeout duration Request must contain at least non zero Request URI with full url including scheme and host or non zero Host header Request URI Client determines the server to be requested in the following order from Request URI if it contains full url with scheme and host from Host header otherwise The function doesn t follow redirects Use Get for following redirects Response is ignored if resp is nil Err Timeout is returned if the response wasn t returned during the given timeout Err No Free Conns is returned if all Default Max Conns Per Host connections to the requested host are busy It is recommended obtaining req and resp via Acquire Request and Acquire Response in performance critical code Warning Do Timeout does not terminate the request itself The request will continue in the background and the response will be discarded If requests take too long and the connection pool gets filled up please try using a Client and setting a Read Timeout 
Do Deadline performs the given request and waits for response until the given deadline Request must contain at least non zero Request URI with full url including scheme and host or non zero Host header Request URI Client determines the server to be requested in the following order from Request URI if it contains full url with scheme and host from Host header otherwise The function doesn t follow redirects Use Get for following redirects Response is ignored if resp is nil Err Timeout is returned if the response wasn t returned until the given deadline Err No Free Conns is returned if all Default Max Conns Per Host connections to the requested host are busy It is recommended obtaining req and resp via Acquire Request and Acquire Response in performance critical code 
Get returns the status code and body of url The contents of dst will be replaced by the body and returned if the dst is too small a new slice will be allocated The function follows redirects Use Do for manually handling redirects 
Get Timeout returns the status code and body of url The contents of dst will be replaced by the body and returned if the dst is too small a new slice will be allocated The function follows redirects Use Do for manually handling redirects Err Timeout error is returned if url contents couldn t be fetched during the given timeout 
Get Deadline returns the status code and body of url The contents of dst will be replaced by the body and returned if the dst is too small a new slice will be allocated The function follows redirects Use Do for manually handling redirects Err Timeout error is returned if url contents couldn t be fetched until the given deadline 
Post sends POST request to the given url with the given POST arguments The contents of dst will be replaced by the body and returned if the dst is too small a new slice will be allocated The function follows redirects Use Do for manually handling redirects Empty POST body is sent if post Args is nil 
Get Timeout returns the status code and body of url The contents of dst will be replaced by the body and returned if the dst is too small a new slice will be allocated The function follows redirects Use Do for manually handling redirects Err Timeout error is returned if url contents couldn t be fetched during the given timeout 
Get Deadline returns the status code and body of url The contents of dst will be replaced by the body and returned if the dst is too small a new slice will be allocated The function follows redirects Use Do for manually handling redirects Err Timeout error is returned if url contents couldn t be fetched until the given deadline 
Post sends POST request to the given url with the given POST arguments The contents of dst will be replaced by the body and returned if the dst is too small a new slice will be allocated The function follows redirects Use Do for manually handling redirects Empty POST body is sent if post Args is nil 
Do Timeout performs the given request and waits for response during the given timeout duration Request must contain at least non zero Request URI with full url including scheme and host or non zero Host header Request URI Client determines the server to be requested in the following order from Request URI if it contains full url with scheme and host from Host header otherwise The function doesn t follow redirects Use Get for following redirects Response is ignored if resp is nil Err Timeout is returned if the response wasn t returned during the given timeout Err No Free Conns is returned if all Client Max Conns Per Host connections to the requested host are busy It is recommended obtaining req and resp via Acquire Request and Acquire Response in performance critical code Warning Do Timeout does not terminate the request itself The request will continue in the background and the response will be discarded If requests take too long and the connection pool gets filled up please try setting a Read Timeout 
Do Deadline performs the given request and waits for response until the given deadline Request must contain at least non zero Request URI with full url including scheme and host or non zero Host header Request URI Client determines the server to be requested in the following order from Request URI if it contains full url with scheme and host from Host header otherwise The function doesn t follow redirects Use Get for following redirects Response is ignored if resp is nil Err Timeout is returned if the response wasn t returned until the given deadline Err No Free Conns is returned if all Client Max Conns Per Host connections to the requested host are busy It is recommended obtaining req and resp via Acquire Request and Acquire Response in performance critical code 
Do performs the given http request and fills the given http response Request must contain at least non zero Request URI with full url including scheme and host or non zero Host header Request URI Client determines the server to be requested in the following order from Request URI if it contains full url with scheme and host from Host header otherwise Response is ignored if resp is nil The function doesn t follow redirects Use Get for following redirects Err No Free Conns is returned if all Client Max Conns Per Host connections to the requested host are busy It is recommended obtaining req and resp via Acquire Request and Acquire Response in performance critical code 
Last Use Time returns time the client was last used 
Get returns the status code and body of url The contents of dst will be replaced by the body and returned if the dst is too small a new slice will be allocated The function follows redirects Use Do for manually handling redirects 
Acquire Request returns an empty Request instance from request pool The returned Request instance may be passed to Release Request when it is no longer needed This allows Request recycling reduces GC pressure and usually improves performance 
Acquire Response returns an empty Response instance from response pool The returned Response instance may be passed to Release Response when it is no longer needed This allows Response recycling reduces GC pressure and usually improves performance 
Do performs the given http request and sets the corresponding response Request must contain at least non zero Request URI with full url including scheme and host or non zero Host header Request URI The function doesn t follow redirects Use Get for following redirects Response is ignored if resp is nil Err No Free Conns is returned if all Host Client Max Conns connections to the host are busy It is recommended obtaining req and resp via Acquire Request and Acquire Response in performance critical code 
Do Timeout performs the given request and waits for response during the given timeout duration Request must contain at least non zero Request URI with full url including scheme and host or non zero Host header Request URI The function doesn t follow redirects Response is ignored if resp is nil Err Timeout is returned if the response wasn t returned during the given timeout It is recommended obtaining req and resp via Acquire Request and Acquire Response in performance critical code Warning Do Timeout does not terminate the request itself The request will continue in the background and the response will be discarded If requests take too long and the connection pool gets filled up please try setting a Read Timeout 
Do Deadline performs the given request and waits for response until the given deadline Request must contain at least non zero Request URI with full url including scheme and host or non zero Host header Request URI The function doesn t follow redirects Response is ignored if resp is nil Err Timeout is returned if the response wasn t returned until the given deadline It is recommended obtaining req and resp via Acquire Request and Acquire Response in performance critical code 
Do performs the given http request and sets the corresponding response Request must contain at least non zero Request URI with full url including scheme and host or non zero Host header Request URI The function doesn t follow redirects Use Get for following redirects Response is ignored if resp is nil It is recommended obtaining req and resp via Acquire Request and Acquire Response in performance critical code 
Pending Requests returns the current number of pending requests pipelined to the server This number may exceed Max Pending Requests Max Conns by up to two times since each connection to the server may keep up to Max Pending Requests requests in the queue before sending them to the server This function may be used for balancing load among multiple Pipeline Client instances 
Do Deadline calls Do Deadline on the least loaded client 
Do Timeout calculates deadline and calls Do Deadline on the least loaded client 
Do calls calculates deadline using LBClient Timeout and calls Do Deadline on the least loaded client 
Serve Conn serves HTTP requests from the given connection using the given handler Serve Conn returns nil if all requests from the c are successfully served It returns non nil error otherwise Connection c must immediately propagate all the data passed to Write to the client Otherwise requests processing may hang Serve Conn closes c before returning 
Serve serves incoming connections from the given listener using the given handler Serve blocks until the given listener returns permanent error 
Serve TLS serves HTTPS requests from the given net Listener using the given handler cert File and key File are paths to TLS certificate and key files 
Serve TLSEmbed serves HTTPS requests from the given net Listener using the given handler cert Data and key Data must contain valid TLS certificate and key data 
Listen And Serve serves HTTP requests from the given TCP addr using the given handler 
Listen And Serve UNIX serves HTTP requests from the given UNIX addr using the given handler The function deletes existing file at addr before starting serving The server sets the given file mode for the UNIX addr 
Listen And Serve TLS serves HTTPS requests from the given TCP addr using the given handler cert File and key File are paths to TLS certificate and key files 
Listen And Serve TLSEmbed serves HTTPS requests from the given TCP addr using the given handler cert Data and key Data must contain valid TLS certificate and key data 
Timeout Handler creates Request Handler which returns Status Request Timeout error with the given msg to the client if h didn t return during the given duration The returned handler may return Status Too Many Requests error with the given msg to the client if there are more than Server Concurrency concurrent handlers h are running at the moment 
Compress Handler Level returns Request Handler that transparently compresses response body generated by h if the request contains gzip or deflate Accept Encoding header Level is the desired compression level Compress No Compression Compress Best Speed Compress Best Compression Compress Default Compression Compress Huffman Only 
Set User Value stores the given value arbitrary object under the given key in ctx The value stored in ctx may be obtained by User Value This functionality may be useful for passing arbitrary values between functions involved in request processing All the values are removed from ctx after returning from the top Request Handler Additionally Close method is called on each value implementing io Closer before removing the value from ctx 
Set User Value Bytes stores the given value arbitrary object under the given key in ctx The value stored in ctx may be obtained by User Value This functionality may be useful for passing arbitrary values between functions involved in request processing All the values stored in ctx are deleted after returning from Request Handler 
Visit User Values calls visitor for each existing user Value visitor must not retain references to key and value after returning Make key and or value copies if you need storing them after returning 
Is TLS returns true if the underlying connection is tls Conn tls Conn is an encrypted connection aka SSL HTTPS 
TLSConnection State returns TLS connection state The function returns nil if the underlying connection isn t tls Conn The returned state may be used for verifying TLS version client certificates etc 
String returns unique string representation of the ctx The returned value may be useful for logging 
Set Content Type sets response Content Type 
Set Content Type Bytes sets response Content Type It is safe modifying content Type buffer after function return 
Form File returns uploaded file associated with the given multipart form key The file is automatically deleted after returning from Request Handler so either move or copy uploaded file into new place if you want retaining it Use Save Multipart File function for permanently saving uploaded file The returned file header is valid until returning from Request Handler 
Save Multipart File saves multipart file fh under the given filename path 
Form Value returns form value associated with the given key The value is searched in the following places Query string POST or PUT body There are more fine grained methods for obtaining form values Query Args for obtaining values from query string Post Args for obtaining values from POST or PUT body Multipart Form for obtaining values from multipart form Form File for obtaining uploaded files The returned value is valid until returning from Request Handler 
Remote Addr returns client address for the given request Always returns non nil result 
Error sets response status code to the given value and sets response body to the given message 
Success sets response Content Type and body to the given values 
Success String sets response Content Type and body to the given values 
Redirect sets Location uri response header and sets the given status Code status Code must have one of the following values Status Moved Permanently Status Found Status See Other Status Temporary Redirect Status Permanent Redirect All other status Code values are replaced by Status Found The redirect uri may be either absolute or relative to the current request uri Fasthttp will always send an absolute uri back to the client To send a relative uri you can use the following code str Location byte Location Put this with your top level var declarations ctx Response Header Set Canonical str Location relative uri ctx Response Set Status Code fasthttp Status Moved Permanently 
Redirect Bytes sets Location uri response header and sets the given status Code status Code must have one of the following values Status Moved Permanently Status Found Status See Other Status Temporary Redirect Status Permanent Redirect All other status Code values are replaced by Status Found The redirect uri may be either absolute or relative to the current request uri Fasthttp will always send an absolute uri back to the client To send a relative uri you can use the following code str Location byte Location Put this with your top level var declarations ctx Response Header Set Canonical str Location relative uri ctx Response Set Status Code fasthttp Status Moved Permanently 
If Modified Since returns true if last Modified exceeds If Modified Since value from the request header The function returns true also If Modified Since request header is missing 
Not Found resets response and sets Not Found response status code 
Write writes p into response body 
Write String appends s to response body 
Set Body Stream sets response body stream and optionally body size body Stream Close is called after finishing reading all body data if it implements io Closer If body Size is then body Size bytes must be provided by body Stream before returning io EOF If body Size then body Stream is read until io EOF See also Set Body Stream Writer 
Logger returns logger which may be used for logging arbitrary request specific messages inside Request Handler Each message logged via returned logger contains request specific information such as request id request duration local address remote address request method and request url It is safe re using returned logger for logging multiple messages for the current request The returned logger is valid until returning from Request Handler 
Timeout Error With Code sets response body to msg and response status code to status Code All response modifications after Timeout Error With Code call are ignored Timeout Error With Code MUST be called before returning from Request Handler if there are references to ctx and or its members in other goroutines remain Usage of this function is discouraged Prefer eliminating ctx references from pending goroutines instead of using this function 
Timeout Error With Response marks the ctx as timed out and sends the given response to the client All ctx modifications after Timeout Error With Response call are ignored Timeout Error With Response MUST be called before returning from Request Handler if there are references to ctx and or its members in other goroutines remain Usage of this function is discouraged Prefer eliminating ctx references from pending goroutines instead of using this function 
Next Proto adds nph to be processed when key is negotiated when TLS connection is established This function can only be called before the server is started 
Listen And Serve serves HTTP requests from the given TCP addr Pass custom listener to Serve if you need listening on non TCP media such as IPv Accepted connections are configured to enable TCP keep alives 
Listen And Serve UNIX serves HTTP requests from the given UNIX addr The function deletes existing file at addr before starting serving The server sets the given file mode for the UNIX addr 
Listen And Serve TLS serves HTTPS requests from the given TCP addr cert File and key File are paths to TLS certificate and key files Pass custom listener to Serve if you need listening on non TCP media such as IPv If the cert File or key File has not been provided to the server structure the function will use the previously added TLS configuration Accepted connections are configured to enable TCP keep alives 
Listen And Serve TLSEmbed serves HTTPS requests from the given TCP addr cert Data and key Data must contain valid TLS certificate and key data Pass custom listener to Serve if you need listening on arbitrary media such as IPv If the cert File or key File has not been provided the server structure the function will use previously added TLS configuration Accepted connections are configured to enable TCP keep alives 
Serve TLS serves HTTPS requests from the given listener cert File and key File are paths to TLS certificate and key files If the cert File or key File has not been provided the server structure the function will use previously added TLS configuration 
Serve TLSEmbed serves HTTPS requests from the given listener cert Data and key Data must contain valid TLS certificate and key data If the cert File or key File has not been provided the server structure the function will use previously added TLS configuration 
Append Cert appends certificate and keyfile to TLS Configuration This function allows programmer to handle multiple domains in one server structure See examples multidomain 
Append Cert Embed does the same as Append Cert but using in memory data 
Serve serves incoming connections from the given listener Serve blocks until the given listener returns permanent error 
Shutdown gracefully shuts down the server without interrupting any active connections Shutdown works by first closing all open listeners and then waiting indefinitely for all connections to return to idle and then shut down When Shutdown is called Serve Listen And Serve and Listen And Serve TLS immediately return nil Make sure the program doesn t exit and waits instead for Shutdown to return Shutdown does not close keepalive connections so its recommended to set Read Timeout to something else than 
Serve Conn serves HTTP requests from the given connection Serve Conn returns nil if all requests from the c are successfully served It returns non nil error otherwise Connection c must immediately propagate all the data passed to Write to the client Otherwise requests processing may hang Serve Conn closes c before returning 
Init prepares ctx for passing to Request Handler conn is used only for determining local and remote addresses This function is intended for custom Server implementations See https github com valyala httpteleport for details 
Init prepares ctx for passing to Request Handler remote Addr and logger are optional They are used by Request Ctx Logger This function is intended for custom Server implementations 
Err returns a non nil error value after Done is closed successive calls to Err return the same error If Done is not yet closed Err returns nil If Done is closed Err returns a non nil error explaining why Canceled if the context was canceled via server Shutdown or Deadline Exceeded if the context s deadline passed 
Value returns the value associated with this context for key or nil if no value is associated with key Successive calls to Value with the same key returns the same result This method is present to make Request Ctx implement the context interface This method is the same as calling ctx User Value key 
Append Gzip Bytes Level appends gzipped src to dst using the given compression level and returns the resulting dst Supported compression levels are Compress No Compression Compress Best Speed Compress Best Compression Compress Default Compression Compress Huffman Only 
Write Gzip Level writes gzipped p to w using the given compression level and returns the number of compressed bytes written to w Supported compression levels are Compress No Compression Compress Best Speed Compress Best Compression Compress Default Compression Compress Huffman Only 
Write Gzip writes gzipped p to w and returns the number of compressed bytes written to w 
Write Gunzip writes ungzipped p to w and returns the number of uncompressed bytes written to w 
Append Gunzip Bytes appends gunzipped src to dst and returns the resulting dst 
Append Deflate Bytes Level appends deflated src to dst using the given compression level and returns the resulting dst Supported compression levels are Compress No Compression Compress Best Speed Compress Best Compression Compress Default Compression Compress Huffman Only 
Write Deflate Level writes deflated p to w using the given compression level and returns the number of compressed bytes written to w Supported compression levels are Compress No Compression Compress Best Speed Compress Best Compression Compress Default Compression Compress Huffman Only 
Write Deflate writes deflated p to w and returns the number of compressed bytes written to w 
Write Inflate writes inflated p to w and returns the number of uncompressed bytes written to w 
Append Inflate Bytes appends inflated src to dst and returns the resulting dst 
New Func returns stackless wrapper for the function f Unlike f the returned stackless wrapper doesn t use stack space on the goroutine that calls it The wrapper may save a lot of stack space if the following conditions are met f doesn t contain blocking calls on network I O or channels f uses a lot of stack space the wrapper is called from high number of concurrent goroutines The stackless wrapper returns false if the call cannot be processed at the moment due to high load 
Set Request URI sets Request URI 
Set Request URIBytes sets Request URI 
Request URI returns request s URI 
Send File registers file on the given path to be used as response body when Write is called Note that Send File doesn t set Content Type so set it yourself with Header Set Content Type 
Set Body Stream sets request body stream and optionally body size If body Size is then the body Stream must provide exactly body Size bytes before returning io EOF If body Size then body Stream is read until io EOF body Stream Close is called after finishing reading all body data if it implements io Closer Note that GET and HEAD requests cannot have body See also Set Body Stream Writer 
Set Body Stream sets response body stream and optionally body size If body Size is then the body Stream must provide exactly body Size bytes before returning io EOF If body Size then body Stream is read until io EOF body Stream Close is called after finishing reading all body data if it implements io Closer See also Set Body Stream Writer 
Set Body Stream Writer registers the given sw for populating request body This function may be used in the following cases if request body is too big more than MB if request body is streamed from slow external sources if request body must be streamed to the server in chunks aka http client push or chunked transfer encoding Note that GET and HEAD requests cannot have body See also Set Body Stream 
Set Body Stream Writer registers the given sw for populating response body This function may be used in the following cases if response body is too big more than MB if response body is streamed from slow external sources if response body must be streamed to the client in chunks aka http server push or chunked transfer encoding See also Set Body Stream 
Body Writer returns writer for populating response body If used inside Request Handler the returned writer must not be used after returning from Request Handler Use Request Ctx Write or Set Body Stream Writer in this case 
Body Writer returns writer for populating request body 
Body returns response body The returned body is valid until the response modification 
Body Write To writes request body to w 
Body Write To writes response body to w 
Append Body String appends s to response body 
Set Body String sets response body 
Reset Body resets response body 
Set Body Raw sets response body but without copying it From this point onward the body argument must not be changed 
Release Body retires the response body if it is greater than size bytes This permits GC to reclaim the large buffer If used must be before Release Response Use this method only if you really understand how it works The majority of workloads don t need this method 
Release Body retires the request body if it is greater than size bytes This permits GC to reclaim the large buffer If used must be before Release Request Use this method only if you really understand how it works The majority of workloads don t need this method 
Swap Body swaps response body with the given body and returns the previous response body It is forbidden to use the body passed to Swap Body after the function returns 
Swap Body swaps request body with the given body and returns the previous request body It is forbidden to use the body passed to Swap Body after the function returns 
Body returns request body The returned body is valid until the request modification 
Append Body String appends s to request body 
Set Body String sets request body 
Reset Body resets request body 
Copy To copies req contents to dst except of body stream 
Copy To copies resp contents to dst except of body stream 
Multipart Form returns requests s multipart form Returns Err No Multipart Form if request s Content Type isn t multipart form data Remove Multipart Form Files must be called after returned multipart form is processed 
Write Multipart Form writes the given multipart form f with the given boundary to w 
Remove Multipart Form Files removes multipart form data temporary files associated with the request 
Reset clears response contents 
Read reads request including body from the given r Remove Multipart Form Files or Reset must be called after reading multipart form data request in order to delete temporarily uploaded files If May Continue returns true the caller must Either send Status Expectation Failed response if request headers don t satisfy the caller Or send Status Continue response before reading request body with Continue Read Body Or close the connection io EOF is returned if r is closed before reading the first header byte 
Read Limit Body reads request from the given r limiting the body size If max Body Size and the body size exceeds max Body Size then Err Body Too Large is returned Remove Multipart Form Files or Reset must be called after reading multipart form data request in order to delete temporarily uploaded files If May Continue returns true the caller must Either send Status Expectation Failed response if request headers don t satisfy the caller Or send Status Continue response before reading request body with Continue Read Body Or close the connection io EOF is returned if r is closed before reading the first header byte 
May Continue returns true if the request contains Expect continue header The caller must do one of the following actions if May Continue returns true Either send Status Expectation Failed response if request headers don t satisfy the caller Or send Status Continue response before reading request body with Continue Read Body Or close the connection 
Continue Read Body reads request body if request header contains Expect continue The caller must send Status Continue response before calling this method If max Body Size and the body size exceeds max Body Size then Err Body Too Large is returned 
Read reads response including body from the given r io EOF is returned if r is closed before reading the first header byte 
Read Limit Body reads response from the given r limiting the body size If max Body Size and the body size exceeds max Body Size then Err Body Too Large is returned io EOF is returned if r is closed before reading the first header byte 
Write To writes request to w It implements io Writer To 
Write To writes response to w It implements io Writer To 
Write writes request to w Write doesn t flush request to w for performance reasons See also Write To 
Write Gzip writes response with gzipped body to w The method gzips response body and sets Content Encoding gzip header before writing response to w Write Gzip doesn t flush response to w for performance reasons 
Write Gzip Level writes response with gzipped body to w Level is the desired compression level Compress No Compression Compress Best Speed Compress Best Compression Compress Default Compression Compress Huffman Only The method gzips response body and sets Content Encoding gzip header before writing response to w Write Gzip Level doesn t flush response to w for performance reasons 
Write Deflate writes response with deflated body to w The method deflates response body and sets Content Encoding deflate header before writing response to w Write Deflate doesn t flush response to w for performance reasons 
Write Deflate Level writes response with deflated body to w Level is the desired compression level Compress No Compression Compress Best Speed Compress Best Compression Compress Default Compression Compress Huffman Only The method deflates response body and sets Content Encoding deflate header before writing response to w Write Deflate Level doesn t flush response to w for performance reasons 
Write writes response to w Write doesn t flush response to w for performance reasons See also Write To 
Set Content Range sets Content Range bytes start Pos end Pos content Length header 
Set Byte Range sets Range bytes start Pos end Pos header If start Pos is negative then bytes start Pos value is set If end Pos is negative then bytes start Pos value is set 
Set Last Modified sets Last Modified header to the given value 
Reset Connection Close clears Connection close header if it exists 
Reset Connection Close clears Connection close header if it exists 
Connection Upgrade returns true if Connection Upgrade header is set 
Peek Cookie is able to returns cookie by a given key from response 
Set Content Length sets Content Length header value Content Length may be negative means Transfer Encoding chunked means Transfer Encoding identity 
Set Content Length sets Content Length header value Negative content length sets Transfer Encoding chunked header 
Content Type returns Content Type header value 
Set Content Type sets Content Type header value 
Set Content Type Bytes sets Content Type header value 
Set Server sets Server header value 
Set Server Bytes sets Server header value 
Set Content Type sets Content Type header value 
Set Content Type Bytes sets Content Type header value 
Set Multipart Form Boundary sets the following Content Type multipart form data boundary where is substituted by the given boundary 
Set Multipart Form Boundary Bytes sets the following Content Type multipart form data boundary where is substituted by the given boundary 
Multipart Form Boundary returns boundary part from multipart form data boundary Content Type 
Host returns Host header value 
Set Host sets Host header value 
Set Host Bytes sets Host header value 
Set User Agent sets User Agent header value 
Set User Agent Bytes sets User Agent header value 
Method returns HTTP request method 
Set Method sets HTTP request method 
Set Method Bytes sets HTTP request method 
Request URI returns Request URI from the first HTTP request line 
Set Request URI sets Request URI for the first HTTP request line Request URI must be properly encoded Use URI Request URI for constructing proper Request URI if unsure 
Set Request URIBytes sets Request URI for the first HTTP request line Request URI must be properly encoded Use URI Request URI for constructing proper Request URI if unsure 
Has Accept Encoding returns true if the header contains the given Accept Encoding value 
Has Accept Encoding Bytes returns true if the header contains the given Accept Encoding value 
Len returns the number of headers set i e the number of times f is called in Visit All 
Reset clears response header 
Copy To copies all the headers to dst 
Copy To copies all the headers to dst 
Visit All calls f for each header f must not retain references to key and or value after returning Copy key and or value contents before returning if you need retaining them 
Visit All Cookie calls f for each response cookie Cookie name is passed in key and the whole Set Cookie header value is passed in value on each f invocation Value may be parsed with Cookie Parse Bytes f must not retain references to key and or value after returning 
Visit All Cookie calls f for each request cookie f must not retain references to key and or value after returning 
Visit All calls f for each header f must not retain references to key and or value after returning Copy key and or value contents before returning if you need retaining them To get the headers in order they were received use Visit All In Order 
Visit All In Order calls f for each header in the order they were received f must not retain references to key and or value after returning Copy key and or value contents before returning if you need retaining them This function is slightly slower than Visit All because it has to reparse the raw headers to get the order 
Del deletes header with the given key 
Del Bytes deletes header with the given key 
Del deletes header with the given key 
Del Bytes deletes header with the given key 
Add Bytes KV adds the given key value header Multiple headers with the same key may be added with this function Use Set Bytes KV for setting a single header for the given key 
Set sets the given key value header Use Add for setting multiple header values under the same key 
Set Bytes K sets the given key value header Use Add Bytes K for setting multiple header values under the same key 
Set Canonical sets the given key value header assuming that key is in canonical form 
Set Cookie sets the given response cookie It is save re using the cookie after the function returns 
Set Cookie sets key value cookies 
Set Cookie Bytes K sets key value cookies 
Set Cookie Bytes KV sets key value cookies 
Del Client Cookie instructs the client to remove the given cookie Use Del Cookie if you want just removing the cookie from response header 
Del Cookie removes cookie under the given key from response header Note that Del Cookie doesn t remove the cookie from the client Use Del Client Cookie instead 
Del Cookie removes cookie under the given key 
Del All Cookies removes all the cookies from request headers 
Add adds the given key value header Multiple headers with the same key may be added with this function Use Set for setting a single header for the given key 
Add Bytes K adds the given key value header Multiple headers with the same key may be added with this function Use Set Bytes K for setting a single header for the given key 
Add Bytes KV adds the given key value header Multiple headers with the same key may be added with this function Use Set Bytes KV for setting a single header for the given key 
Set Bytes V sets the given key value header Use Add Bytes V for setting multiple header values under the same key 
Set Bytes KV sets the given key value header Use Add Bytes KV for setting multiple header values under the same key 
Set Canonical sets the given key value header assuming that key is in canonical form 
Peek returns header value for the given key Returned value is valid until the next call to Response Header Do not store references to returned value Make copies instead 
Peek Bytes returns header value for the given key Returned value is valid until the next call to Response Header Do not store references to returned value Make copies instead 
Cookie returns cookie for the given key 
Cookie Bytes returns cookie for the given key 
Cookie fills cookie for the given cookie Key Returns false if cookie with the given cookie Key is missing 
Read reads request header from r io EOF is returned if r is closed before reading the first header byte 
Header returns response header representation The returned value is valid until the next call to Response Header methods 
Append Bytes appends response header representation to dst and returns the extended dst 
Write writes request header to w 
Write To writes request header to w Write To implements io Writer To interface 
Header returns request header representation The returned representation is valid until the next call to Request Header methods 
Append Bytes appends request header representation to dst and returns the extended dst 
Append Normalized Header Key appends normalized header key name to dst and returns the resulting dst Normalized header key starts with uppercase letter The first letters after dashes are also uppercased All the other letters are lowercased Examples co NTENT TYPe Content Type HOST Host foo bar baz Foo Bar Baz 
Fasthttp Socks Dialer returns a fasthttp Dial Func that dials using the provided SOCKS proxy Example usage c fasthttp Client Dial fasthttpproxy Fasthttp Socks Dialer localhost 
Serve File Uncompressed returns HTTP response containing file contents from the given path Directory contents is returned if path points to directory Serve File may be used for saving network traffic when serving files with good compression ratio See also Request Ctx Send File 
Serve File returns HTTP response containing compressed file contents from the given path HTTP response may contain uncompressed file contents in the following cases Missing Accept Encoding gzip request header No write access to directory containing the file Directory contents is returned if path points to directory Use Serve File Uncompressed is you don t need serving compressed file contents See also Request Ctx Send File 
New VHost Path Rewriter returns path rewriter which strips slashes Count leading slashes from the path and prepends the path with request s host thus simplifying virtual hosting for static files Examples host foobar com slashes Count original path foo bar Resulting path foobar com foo bar host img aaa com slashes Count original path images jpg Resulting path img aaa com jpg 
New Path Slashes Stripper returns path rewriter which strips slashes Count leading slashes from the path Examples slashes Count original path foo bar result foo bar slashes Count original path foo bar result bar slashes Count original path foo bar result The returned path rewriter may be used as FS Path Rewrite 
New Path Prefix Stripper returns path rewriter which removes prefix Size bytes from the path prefix Examples prefix Size original path foo bar result foo bar prefix Size original path foo bar result o bar prefix Size original path foo bar result r The returned path rewriter may be used as FS Path Rewrite 
FSHandler returns request handler serving static files from the given root folder strip Slashes indicates how many leading slashes must be stripped from requested path before searching requested file in the root folder Examples strip Slashes original path foo bar result foo bar strip Slashes original path foo bar result bar strip Slashes original path foo bar result The returned request handler automatically generates index pages for directories without index html The returned handler caches requested file handles for FSHandler Cache Duration Make sure your program has enough max open files limit aka ulimit n if root folder contains many files Do not create multiple request handler instances for the same root strip Slashes arguments just reuse a single instance Otherwise goroutine leak will occur 
New Request Handler returns new request handler with the given FS settings The returned handler caches requested file handles for FS Cache Duration Make sure your program has enough max open files limit aka ulimit n if FS Root folder contains many files Do not create multiple request handlers from a single FS instance just reuse a single request handler 
Parse Byte Range parses Range bytes header value It follows https www w org Protocols rfc rfc sec html sec 
File Last Modified returns last modified time for the file 
Copy To copies src cookie to c 
Set Path sets cookie path 
Set Path Bytes sets cookie path 
Set Domain sets cookie domain 
Set Domain Bytes sets cookie domain 
Expire returns cookie expiration time Cookie Expire Unlimited is returned if cookie doesn t expire 
Set Value sets cookie value 
Set Value Bytes sets cookie value 
Set Key sets cookie name 
Set Key Bytes sets cookie name 
Reset clears the cookie 
Append Bytes appends cookie representation to dst and returns the extended dst 
Cookie returns cookie representation The returned value is valid until the next call to Cookie methods 
Write To writes cookie representation to w Write To implements io Writer To interface 
Parse parses Set Cookie header 
Parse Bytes parses Set Cookie header 
For Response we can not use the above function as response cookies already contain the key in the value 
Pprof Handler serves server runtime profiling data in the format expected by the pprof visualization tool See https golang org pkg net http pprof for details 
Dial Timeout dials the given TCP addr using tcp using the given timeout This function has the following additional features comparing to net Dial It reduces load on DNS resolver by caching resolved TCP addressed for Default DNSCache Duration It dials all the resolved TCP addresses in round robin manner until connection is established This may be useful if certain addresses are temporarily unreachable This dialer is intended for custom code wrapping before passing to Client Dial or Host Client Dial For instance per host counters and or limits may be implemented by such wrappers The addr passed to the function must contain port Example addr values foobar baz foo bar aaa com 
Dial dials the given TCP addr using tcp This function has the following additional features comparing to net Dial It reduces load on DNS resolver by caching resolved TCP addressed for Default DNSCache Duration It dials all the resolved TCP addresses in round robin manner until connection is established This may be useful if certain addresses are temporarily unreachable It returns Err Dial Timeout if connection cannot be established during Default Dial Timeout seconds Use Dial Timeout for customizing dial timeout This dialer is intended for custom code wrapping before passing to Client Dial or Host Client Dial For instance per host counters and or limits may be implemented by such wrappers The addr passed to the function must contain port Example addr values foobar baz foo bar aaa com 
Dial Timeout dials the given TCP addr using tcp using the given timeout This function has the following additional features comparing to net Dial It reduces load on DNS resolver by caching resolved TCP addressed for Default DNSCache Duration It dials all the resolved TCP addresses in round robin manner until connection is established This may be useful if certain addresses are temporarily unreachable This dialer is intended for custom code wrapping before passing to Client Dial or Host Client Dial For instance per host counters and or limits may be implemented by such wrappers The addr passed to the function must contain port Example addr values foobar baz foo bar aaa com 
Dial Dual Stack dials the given TCP addr using both tcp and tcp This function has the following additional features comparing to net Dial It reduces load on DNS resolver by caching resolved TCP addressed for Default DNSCache Duration It dials all the resolved TCP addresses in round robin manner until connection is established This may be useful if certain addresses are temporarily unreachable It returns Err Dial Timeout if connection cannot be established during Default Dial Timeout seconds Use Dial Dual Stack Timeout for custom dial timeout This dialer is intended for custom code wrapping before passing to Client Dial or Host Client Dial For instance per host counters and or limits may be implemented by such wrappers The addr passed to the function must contain port Example addr values foobar baz foo bar aaa com 
Dial Dual Stack Timeout dials the given TCP addr using both tcp and tcp using the given timeout This function has the following additional features comparing to net Dial It reduces load on DNS resolver by caching resolved TCP addressed for Default DNSCache Duration It dials all the resolved TCP addresses in round robin manner until connection is established This may be useful if certain addresses are temporarily unreachable This dialer is intended for custom code wrapping before passing to Client Dial or Host Client Dial For instance per host counters and or limits may be implemented by such wrappers The addr passed to the function must contain port Example addr values foobar baz foo bar aaa com 
Acquire Timer returns a time Timer from the pool and updates it to send the current time on its channel after at least timeout The returned Timer may be returned to the pool with Release Timer when no longer needed This allows reducing GC load 
Accept implements net Listener s Accept It is safe calling Accept from concurrently running goroutines Accept returns new connection per each Dial call 
Close implements net Listener s Close 
Dial creates new client server connection Just like a real Dial it only returns once the server has accepted the connection It is safe calling Dial from concurrently running goroutines 
Listen returns TCP listener with SO REUSEPORT option set The returned listener tries enabling the following TCP options which usually have positive impact on performance TCP DEFER ACCEPT This option expects that the server reads from accepted connections before writing to them TCP FASTOPEN See https lwn net Articles for details Use https github com valyala tcplisten if you want customizing these options Only tcp and tcp networks are supported Err No Reuse Port error is returned if the system doesn t support SO REUSEPORT 
File Server conveniently sets up a http File Server handler to serve static files from a http File System 
Reset a routing context to its initial state 
URLParam returns the corresponding URL parameter value from the request routing context 
Route Pattern builds the routing pattern string for the particular request at the particular point during routing This means the value will change throughout the execution of a request in a router That is why its advised to only use this value after calling the next handler For example func Instrument next http Handler http Handler return http Handler Func func w http Response Writer r http Request next Serve HTTP w r route Pattern chi Route Context r Context Route Pattern measure w r route Pattern 
URLParam returns the url parameter from a http Request object 
URLParam From Ctx returns the url parameter from a http Request Context 
Add will append a URL parameter to the end of the route param 
Server Base Context wraps an http Handler to set the request context to the base Ctx 
Get Head automatically route undefined HEAD requests to GET handlers 
Heartbeat endpoint middleware useful to setting up a path like ping that load balancers or uptime testing external services can make a request before hitting any routes It s also convenient to place this above ACL middlewares as well 
Real IP is a middleware that sets a http Request s Remote Addr to the results of parsing either the X Forwarded For header or the X Real IP header in that order This middleware should be inserted fairly early in the middleware stack to ensure that subsequent layers e g request loggers which examine the Remote Addr will see the intended value You should only use this middleware if you can trust the headers passed to you in particular the two headers this middleware uses for example because you have placed a reverse proxy like HAProxy or nginx in front of chi If your reverse proxies are configured to pass along arbitrary header values from the client or if you use this middleware without a reverse proxy malicious clients will be able to make you very sad or depending on how you re using Remote Addr vulnerable to an attack of some sort 
Ping returns pong 
color Write 
Recoverer is a middleware that recovers from panics logs the panic and a backtrace and returns a HTTP Internal Server Error status if possible Recoverer prints a request ID if one is provided Alternatively look at https github com pressly lg middleware pkgs 
Strip Slashes is a middleware that will match request paths with a trailing slash strip it from the path and continue routing through the mux if a route matches then it will serve the handler 
Redirect Slashes is a middleware that will match request paths with a trailing slash and redirect to the same path less the trailing slash NOTE Redirect Slashes middleware is incompatible with http File Server see https github com go chi chi issues 
Profiler is a convenient subrouter used for mounting net http pprof ie func My Service http Handler r chi New Router middlewares r Mount debug middleware Profiler routes return r 
Timeout is a middleware that cancels ctx after a given timeout and return a Gateway Timeout error to the client It s required that you select the ctx Done channel to check for the signal if the context has reached its deadline and return otherwise the timeout signal will be just ignored ie a route handler may look like r Get long func w http Response Writer r http Request ctx r Context process Time time Duration rand Intn time Second select case ctx Done return case time After process Time The above channel simulates some hard work w Write byte done 
Set Header is a convenience handler to set a response header key value 
Allow Content Type enforces a whitelist of request Content Types otherwise responds with a Unsupported Media Type status 
A quick note on the statistics here we re trying to calculate the chance that two randomly generated base prefixes will collide We use the formula from http en wikipedia org wiki Birthday problem P m n approx e m n We ballpark an upper bound for m by imagining for whatever reason a server that restarts every second over years for m For a k character base identifier we have n k k Plugging this in we find P m n approx which is good enough for our purposes and is surely more than anyone would ever need in practice a process that is rebooted a handful of times a day for a hundred years has less than a millionth of a percent chance of generating two colliding IDs 
Request ID is a middleware that injects a request ID into the context of each request A request ID is a string of the form host example com random where random is a base random string that uniquely identifies this go process and where the last number is an atomically incremented request counter 
Get Req ID returns a request ID from the given context if one is present Returns the empty string if a request ID cannot be found 
Handler Func builds and returns a http Handler from the chain of middlewares with h http Handler as the final handler 
chain builds a http Handler composed of an inline middleware stack and endpoint handler in the order they are passed 
New Mux returns a newly initialized Mux object that implements the Router interface 
Serve HTTP is the single method of the http Handler interface that makes Mux interoperable with the standard library It uses a sync Pool to get and reuse routing contexts for each request 
Use appends a middleware handler to the Mux middleware stack The middleware stack for any Mux will execute before searching for a matching route to a specific handler which provides opportunity to respond early change the course of the request execution or set request scoped values for the next http Handler 
Handle adds the route pattern that matches any http method to execute the handler http Handler 
Handle Func adds the route pattern that matches any http method to execute the handler Fn http Handler Func 
Method adds the route pattern that matches method http method to execute the handler http Handler 
Method Func adds the route pattern that matches method http method to execute the handler Fn http Handler Func 
Connect adds the route pattern that matches a CONNECT http method to execute the handler Fn http Handler Func 
Delete adds the route pattern that matches a DELETE http method to execute the handler Fn http Handler Func 
Get adds the route pattern that matches a GET http method to execute the handler Fn http Handler Func 
Head adds the route pattern that matches a HEAD http method to execute the handler Fn http Handler Func 
Options adds the route pattern that matches a OPTIONS http method to execute the handler Fn http Handler Func 
Patch adds the route pattern that matches a PATCH http method to execute the handler Fn http Handler Func 
Post adds the route pattern that matches a POST http method to execute the handler Fn http Handler Func 
Put adds the route pattern that matches a PUT http method to execute the handler Fn http Handler Func 
Trace adds the route pattern that matches a TRACE http method to execute the handler Fn http Handler Func 
Not Found sets a custom http Handler Func for routing paths that could not be found The default handler is http Not Found 
Method Not Allowed sets a custom http Handler Func for routing paths where the method is unresolved The default handler returns a with an empty body 
With adds inline middlewares for an endpoint handler 
Group creates a new inline Mux with a fresh middleware stack It s useful for a group of handlers along the same routing path that use an additional set of middlewares See examples 
Route creates a new Mux with a fresh middleware stack and mounts it along the pattern as a subrouter Effectively this is a short hand call to Mount See examples 
Mount attaches another http Handler or chi Router as a subrouter along a routing path It s very useful to split up a large API as many independent routers and compose them as a single service using Mount See examples Note that Mount simply sets a wildcard along the pattern that will continue routing at the handler which in most cases is another chi Router As a result if you define two Mount routes on the exact same pattern the mount will panic 
Match searches the routing tree for a handler that matches the method path It s similar to routing a http request but without executing the handler thereafter Note the Context state is updated during execution so manage the state carefully or make a New Route Context 
Not Found Handler returns the default Mux responder whenever a route cannot be found 
Method Not Allowed Handler returns the default Mux responder whenever a method cannot be resolved for a route 
build Route Handler builds the single mux handler that is a chain of the middleware stack as defined by calls to Use and the tree router Mux itself After this point no other middlewares can be registered on this Mux s stack But you can still compose additional middlewares via Group s or using a chained middleware handler 
handle registers a http Handler in the routing tree for a particular http method and routing pattern 
route HTTP routes a http Request through the Mux routing tree to serve the matching handler for a particular http method 
Recursively update data on child routers 
method Not Allowed Handler is a helper function to respond with a method not allowed 
No Cache is a simple piece of middleware that sets a number of HTTP headers to prevent a router or subrouter from being cached by an upstream proxy and or client As per http wiki nginx org Http Proxy Module No Cache sets Expires Thu Jan UTC Cache Control no cache private max age X Accel Expires Pragma no cache for HTTP proxies clients 
Request Logger returns a logger handler using a custom Log Formatter 
Get Log Entry returns the in context Log Entry for a request 
With Log Entry sets the in context Log Entry for a request 
New Log Entry creates a new Log Entry for the request 
Structured Logger is a simple but powerful implementation of a custom structured logger backed on logrus I encourage users to copy it adapt it and make it their own Also take a look at https github com pressly lg for a dedicated pkg based on this work designed for context based http routers 
Helper methods used by the application to get the request scoped logger entry and set additional fields between handlers This is a useful pattern to use to set state on the entry as it passes through the handler chain which at any point can be logged with a call to Print Info etc 
Content Charset generates a handler that writes a Unsupported Media Type response if none of the charsets match An empty charset will allow requests with no Content Type header or no specified charset 
Check the content encoding against a list of acceptable values 
Split a string in two parts cleaning any whitespace 
Register Method adds support for custom HTTP method handlers available via Router Method and Router Method Func 
add Child appends the new child node to the tree using the pattern as the trie key For a URL router like chi s we split the static param regexp and wildcard segments into different nodes In addition add Child will recursively call itself until every pattern segment is added to the url pattern tree as individual nodes depending on type 
Recursive edge traversal by checking all node Typ groups along the way It s like searching through a multi dimensional radix trie 
pat Next Segment returns the next segment details from a pattern node type param key regexp string param tail byte param starting index param ending index 
tail Sort pushes nodes with as the tail to the end of the list for param nodes The list order determines the traversal order 
Article Ctx middleware is used to load an Article object from the URL parameters passed through as the request In case the Article could not be found we stop here and return a 
Search Articles searches the Articles data for a matching article It s just a stub but you get the idea 
Create Article persists the posted Article and returns it back to the client as an acknowledgement 
Get Article returns the specific Article You ll notice it just fetches the Article right off the context as its understood that if we made it this far the Article must be on the context In case its not due to a bug then it will panic and our Recoverer will save us 
Update Article updates an existing Article in our persistent store 
Delete Article removes an existing Article from our persistent store 
A completely separate router for administrator routes 
Admin Only middleware restricts access to just administrators 
paginate is a stub but very possible to implement middleware logic to handle the request params for handling a paginated request 
This is entirely optional but I wanted to demonstrate how you could easily add your own logic to the render Respond method 
New Compressor creates a new Compressor that will handle encoding responses The level should be one of the ones defined in the flate package The types are the content types that are allowed to be compressed 
Set Encoder can be used to set the implementation of a compression algorithm The encoding should be a standardised identifier See https developer mozilla org en US docs Web HTTP Headers Accept Encoding For example add the Brotli algortithm import brotli enc gopkg in kothar brotli go v enc compressor middleware New Compressor text html compressor Set Encoder br func w http Response Writer level int io Writer params brotli enc New Brotli Params params Set Quality level return brotli enc New Brotli Writer params w 
Handler returns a new middleware that will compress the response based on the current Compressor 
select Encoder returns the encoder the name of the encoder and a closer function 
Set Encoder can be used to set the implementation of a compression algorithm The encoding should be a standardised identifier See https developer mozilla org en US docs Web HTTP Headers Accept Encoding For example add the Brotli algortithm import brotli enc gopkg in kothar brotli go v enc middleware Set Encoder br func w http Response Writer level int io Writer params brotli enc New Brotli Params params Set Quality level return brotli enc New Brotli Writer params w DEPRECATED 
Default Compress is a middleware that compresses response body of predefined content types to a data format based on Accept Encoding request header It uses a default compression level DEPRECATED 
Compress is a middleware that compresses response body of a given content types to a data format based on Accept Encoding request header It uses a given compression level NOTE make sure to set the Content Type header on your response otherwise this middleware will not compress the response body For ex in your handler you should set w Header Set Content Type http Detect Content Type your Body or set it manually DEPRECATED 
Throttle is a middleware that limits number of currently processed requests at a time 
Throttle Backlog is a middleware that limits number of currently processed requests at a time and provides a backlog for holding a finite number of pending requests 
Serve HTTP is the primary throttler request handler 
URLFormat is a middleware that parses the url extension from a request path and stores it on the context as a string under the key middleware URLFormat Ctx Key The middleware will trim the suffix from the routing path and continue routing Routers should not include a url parameter for the suffix when using this middleware Sample usage for url paths articles articles json and articles xml func routes http Handler r chi New Router r Use middleware URLFormat r Get articles id List Articles return r func List Articles w http Response Writer r http Request url Format r Context Value middleware URLFormat Ctx Key string switch url Format case json render JSON w r articles case xml render XML w r articles default render JSON w r articles 
New Wrap Response Writer wraps an http Response Writer returning a proxy that allows you to hook into various parts of the response process 
With Value is a middleware that sets a given key value in a context chain 
Routes creates a REST router for the todos resource 
New AWSProvider initializes a new AWS Route based Provider 
Zones returns the list of hosted zones 
wildcard Unescape converts abc back to abc Route stores wildcards escaped http docs aws amazon com Route latest Developer Guide Domain Name Format html short Footer true domain name format asterisk 
Records returns the list of records in a given hosted zone 
Create Records creates a given set of DNS records in the given hosted zone 
Update Records updates a given set of old records to a new set of records in a given hosted zone 
Delete Records deletes a given set of DNS records in a given zone 
Apply Changes applies a given set of changes in a given zone 
submit Changes takes a zone and a collection of Changes and sends them as a single transaction 
new Changes returns a collection of Changes based on the given records and action 
new Change returns a Change of the given record by the given action e g action Change Action Create returns a change for creation of the record and action Change Action Delete returns a change for deletion of the record 
changes By Zone separates a multi zone change into a single change per zone 
suitable Zones returns all suitable private zones and the most suitable public zone for a given hostname and a set of zones 
is AWSLoad Balancer determines if a given hostname belongs to an AWS load balancer 
is AWSAlias determines if a given hostname belongs to an AWS Alias record by doing an reverse lookup 
canonical Hosted Zone returns the matching canonical zone for a given hostname 
clean Zone ID removes the hostedzone prefix 
New TXTRegistry returns new TXTRegistry object 
Records returns the current records from the registry excluding TXT Records If TXT records was created previously to indicate ownership its corresponding value will be added to the endpoints Labels map 
Apply Changes updates dns provider with the changes for each created deleted record it will also take into account TXT records for creation deletion 
New Domain Filter returns a new Domain Filter given a comma separated list of domains 
Match checks whether a domain can be found in the Domain Filter 
Is Configured returns true if Domain Filter is configured false otherwise 
In Memory With Logging injects logging when Apply Changes is called 
In Memory Init Zones pre seeds the In Memory Provider with given zones 
New In Memory Provider returns In Memory Provider DNS provider interface implementation 
Create Zone adds new zone if not present 
Zones returns filtered zones as specified by domain 
Records returns the list of endpoints 
Apply Changes simply modifies records in memory error checking occurs before any modifications are made i e batch processing create record record should not exist update delete record record should exist create update delete lists should not have overlapping records 
Zones filters map zone ID zone Name for names having f domain as suffix 
Endpoint Zone ID determines zone ID for endpoint from map zone ID zone Name by taking longest suffix zone Name match in endpoint DNSName returns empty string if no match found 
validate Change Batch validates that the changes passed to In Memory DNS provider is valid 
New Zone Tag Filter returns a new Zone Tag Filter given a list of zone tags 
Match checks whether a zone s set of tags matches the provided tag values 
New Ingress Source creates a new ingress Source with the given config 
Endpoints returns endpoint objects for each host target combination that should be processed Retrieves all ingress resources on all namespaces 
filter By Annotations filters a list of ingresses by a given annotation selector 
endpoints From Ingress extracts the endpoints from ingress object 
New Labels From String constructs endpoints labels from a provided format string if heritage set to another value is found then error is returned no heritage automatically assumes is not owned by external dns and returns invalid Heritage error 
Serialize transforms endpoints labels into a external dns recognizable format string with Quotes adds additional quotes 
Kube Client generates a kube client if it was not created before 
Istio Client generates an istio client if it was not created before 
By Names returns multiple Sources given multiple names 
Build With Config allows to generate a Source implementation from the shared config 
New Kube Client returns a new Kubernetes client object It takes a Config and uses Kube Master and Kube Config attributes to connect to the cluster If Kube Config isn t provided it defaults to using the recommended default 
New Istio Client returns a new Istio client object It uses the configured Kube Config attribute to connect to the cluster If Kube Config isn t provided it defaults to using the recommended default NB Istio controls the creation of the underlying Kubernetes client so we have no ability to tack on transport wrappers e g Prometheus request wrappers to the client s config at this level Furthermore the Istio client constructor does not expose the ability to override the Kubernetes master so the Master config attribute has no effect 
New CRDClient For APIVersion Kind return rest client for the given api Version and kind of the CRD 
New CRDSource creates a new crd Source with the given config 
Endpoints returns endpoint objects 
Match checks whether a zone matches the zone type that s filtered for 
TODO ideahitme consider moving this to Plan 
New Infoblox Provider creates a new Infoblox provider 
Records gets the current records 
Apply Changes applies the given changes 
New Service Source creates a new service Source with the given config 
Endpoints returns endpoint objects for each service that should be processed 
endpoints From Service extracts the endpoints from a service object 
filter By Annotations filters a list of services by a given annotation selector 
filter By Service Type filters services according their types 
TODO allows record type change which might not be supported by all dns providers 
Calculate computes the actions needed to move current state towards desired state It then passes those changes to the current policy for further processing It returns a copy of Plan with the changes populated 
filter Records For Plan removes records that are not relevant to the planner Currently this just removes TXT records to prevent them from being deleted erroneously by the planner only the TXT registry should do this Per RFC CNAME records conflict with all other records it is the only record with this property The behavior of the planner may need to be made more sophisticated to codify this 
normalize DNSName converts a DNS name to a canonical form so that we can use string equality it removes space converts to lower case ensures there is a trailing dot 
New Exoscale Provider returns Exoscale Provider DNS provider interface implementation 
New Exoscale Provider With Client returns Exoscale Provider DNS provider interface implementation Client provided 
Apply Changes simply modifies DNS via exoscale API 
Records returns the list of endpoints 
Exoscale With Logging injects logging when Apply Changes is called 
Zones filters map zone ID zone Name for names having f domain as suffix 
Endpoint Zone ID determines zone ID for endpoint from map zone ID zone Name by taking longest suffix zone Name match in endpoint DNSName returns if no matches are found 
New Linode Provider initializes a new Linode DNS based Provider 
Zones returns the list of hosted zones 
Records returns the list of records in a given zone 
submit Changes takes a zone and a collection of Changes and sends them as a single transaction 
Apply Changes applies a given set of changes in a given zone 
New Targets is a convenience method to create a new Targets object from a vararg of strings 
Same compares to Targets and returns true if they are completely identical 
Is Less should fulfill the requirement to compare two targets and chosse the lesser one In the past target was a simple string so simple string comparison could be used Now we define less as either being the shorter list of targets or where the first entry is less FIXME We really need to define under which circumstances a list Targets is considered less than another 
New Endpoint initialization method to be used to create an endpoint 
New Endpoint With TTL initialization method to be used to create an endpoint with a TTL struct 
With Provider Specific attaches a key value pair to the Endpoint and returns the Endpoint This can be used to pass additional data through the stages of External DNS s Endpoint processing The assumption is that most of the time this will be provider specific metadata that doesn t warrant its own field on the Endpoint object itself It differs from Labels in the fact that it s not persisted in the Registry but only kept in memory during a single record synchronization 
Get Provider Specific Property returns a Provider Specific Property if the property exists 
Match checks whether a zone matches one of the provided zone ids 
Validate Config performs validation on the Config object 
Create Record wraps the Create method of the API s Record service 
Delete Record wraps the Delete method of the API s Record service 
Update Record wraps the Update method of the API s Record service 
Get Zone wraps the Get method of the API s Zones service 
List Zones wraps the List method of the API s Zones service 
Records returns the endpoints this provider knows about 
ns Build Record returns a dns Record for a change set 
ns Submit Changes takes an array of changes and sends them to NS 
Zones returns the list of hosted zones 
Apply Changes applies a given set of changes in a given zone 
new NS Changes returns a collection of Changes based on the given records and action 
ns Changes By Zone separates a multi zone change into a single change per zone 
all Log Levels As Strings returns all logrus levels as a list of strings 
Parse Flags adds and parses flags from command line 
Apply applies the upsert only policy which strips out any deletions 
Run Once runs a single iteration of a reconciliation loop 
Run runs Run Once in a loop with a delay until stop Chan receives a value 
New Cloud Flare Provider initializes a new Cloud Flare DNS based Provider 
Zones returns the list of hosted zones 
Records returns the list of records 
Apply Changes applies a given set of changes in a given zone 
submit Changes takes a zone and a collection of Changes and sends them as a single transaction 
changes By Zone separates a multi zone change into a single change per zone 
new Cloud Flare Changes returns a collection of Changes based on the given records and action 
Returns the account ID given dnsimple credentials 
New Dnsimple Provider initializes a new Dnsimple based provider 
Returns a list of filtered Zones 
Records retuns a list of endpoints in a given zone 
new Dnsimple Change initializes a new change to dns records 
new Dnsimple Changes returns a slice of changes based on given action and record 
submit Changes takes a zone and a collection of changes and makes all changes from the collection 
Returns the record ID for a given record name and zone 
dnsimple Suitable Zone returns the most suitable zone for a given hostname and a set of zones 
Create Records creates records for a given slice of endpoints 
Delete Records deletes records for a given slice of endpoints 
Update Records updates records for a given slice of endpoints 
Apply Changes applies a given set of changes 
New Google Provider initializes a new Google Cloud DNS based Provider 
Zones returns the list of hosted zones 
Records returns the list of records in all relevant zones 
Create Records creates a given set of DNS records in the given hosted zone 
Update Records updates a given set of old records to a new set of records in a given hosted zone 
Delete Records deletes a given set of DNS records in a given zone 
Apply Changes applies a given set of changes in a given zone 
new Filtered Records returns a collection of Record Sets based on the given endpoints and domain Filter 
submit Change takes a zone and a Change and sends it to Google 
separate Change separates a multi zone change into a single change per zone 
new Record returns a Record Set based on the given endpoint 
New Rcode Zero Provider creates a new Rcode Zero Anycast DNS provider Returns the provider or an error if a provider could not be created 
Zones returns filtered zones if filter is set 
Records returns resource records Decrypts TXT records if TXT Encrypt flag is set and key is provided 
Apply Changes applies a given set of changes in a given zone 
Helper function 
Helper function 
Helper function 
Helper function to submit changes Changes are submitted by change type 
New Rcodezero Changes returns a Rcode Zero specific array with rrset change objects 
New Rcodezero Change returns a Rcode Zero specific rrset change object 
New Alibaba Cloud Provider creates a new Alibaba Cloud provider Returns the provider or an error if a provider could not be created 
Records gets the current records Returns the current records or an error if the operation failed 
Apply Changes applies the given changes Returns nil if the operation was successful or an error if the operation failed 
records For DNS gets the current records Returns the current records or an error if the operation failed 
records For Private Zone gets the current records Returns the current records or an error if the operation failed 
Apply Changes applies the given changes Returns nil if the operation was successful or an error if the operation failed 
Get Service return all Service records stored in etcd stored anywhere under the given key recursively 
Save Service persists service data into etcd 
Delete Service deletes service record from etcd 
loads TLS artifacts and builds tls Clonfig object 
builds etcd client config depending on connection scheme and TLS parameters 
new ETCDClient is an etcd client constructor 
New Core DNSProvider is a Core DNS provider constructor 
Records returns all DNS records found in Core DNS etcd backend Depending on the record fields it may be mapped to one or two records of type A CNAME TXT A TXT CNAME TXT 
Apply Changes stores changes back to etcd converting them to Core DNS format and aggregating A CNAME and TXT records 
New Rfc Provider is a factory function for Open Stack rfc providers 
Records returns the list of records 
Apply Changes applies a given set of changes in a given zone 
Function for debug printing 
List Zones Method returns all enabled zones from Power DNS ref https doc powerdns com authoritative http api zone html get servers server id zones 
Partition Zones Method returns a slice of zones that adhere to the domain filter and a slice of ones that does not adhere to the filter 
List Zone Method returns the details of a specific zone from Power DNS ref https doc powerdns com authoritative http api zone html get servers server id zones zone id 
New PDNSProvider initializes a new Power DNS based Provider 
Convert Endpoints To Zones marshals endpoints into pdns compatible Zone structs 
mutate Records takes a list of endpoints and creates replaces or deletes them based on the changetype 
Records returns all DNS records controlled by the configured PDNS server for all zones 
Apply Changes takes a list of changes endpoints and updates the PDNS server by sending the correct HTTP PATCH requests to a matching zone 
New AWSSDProvider initializes a new AWS Route Auto Naming based Provider 
new Sd Namespace Filter initialized AWS SD Namespace Filter based on given string config 
Records returns list of all endpoints 
Apply Changes applies Kubernetes changes in endpoints to AWS API 
List Namespaces returns all namespaces matching defined namespace filter 
List Services By Namespace ID returns list of services in given namespace Returns map srv name sd Service 
Get Service Detail returns detail of given service 
List Instances By Service ID returns list of instances registered in given service 
Create Service creates a new service in AWS API Returns the created service 
Update Service updates the specified service with information from provided endpoint 
Register Instance creates a new instance in given service 
Deregister Instance removes an instance from given service 
Instance ID length is limited by AWS API to characters For longer strings SHA hash will be used instead of the verbatim target to limit the length 
nolint deadcode used from unit test 
nolint deadcode used from unit test 
nolint deadcode used from unit test 
returns list of all namespaces matching given hostname 
parse hostname to namespace domain and service 
determine service routing policy based on endpoint type 
determine service type A CNAME from given endpoint 
determine if a given hostname belongs to an AWS load balancer 
Resolve Create is invoked when dns name is not owned by any resource Resolve Create takes minimal string comparison of Target endpoint to acquire the DNS record 
Resolve Update is invoked when dns name is already owned by current endpoint Resolve Update uses current record as base and updates it accordingly with new version of same resource if it doesn t exist then pick min 
less returns true if endpoint x is less than y 
New Digital Ocean Provider initializes a new Digital Ocean DNS based Provider 
Zones returns the list of hosted zones 
Records returns the list of records in a given zone 
submit Changes takes a zone and a collection of Changes and sends them as a single transaction 
Apply Changes applies a given set of changes in a given zone 
new Digital Ocean Changes returns a collection of Changes based on the given records and action 
get Record ID returns the ID from a record the ID is mandatory to update and delete records 
digital Oceanchanges By Zone separates a multi zone change into a single change per zone 
legacy Endpoints From Service tries to retrieve Endpoints from Services annotated with legacy annotations 
legacy Endpoints From Mate Service tries to retrieve Endpoints from Services annotated with Mate s annotation semantics 
legacy Endpoints From Molecule Service tries to retrieve Endpoints from Services annotated with Molecule Software s annotation semantics 
Endpoints returns endpoint objects 
get Targets From Target Annotation gets endpoints from optional target annotation Returns empty endpoints array if none are found 
suitable Type returns the DNS resource record type suitable for the target In this case type A for IPs and type CNAME for everything else 
endpoints For Hostname returns the endpoint objects for each host target combination 
Get Records For Serial retrieves from memory the last known recordset for the zone serial tuple 
Store Records For Serial associates a result set with a zone serial 
New Dyn Provider initializes a new Dyn Provider 
filter And Fix Links removes from links all the records we don t care about and strops the REST prefix 
merge produces a singe list of records that can be used as a replacement Dyn allows to replace all records with a single call Invariant the result contains only elements from the update New parameter 
endpoint To Record puts the Target of an Endpoint in the correct field of Data Block See Data Block comments for more info 
Use SOAP to fetch all records with a single call 
fetch All Record Links In Zone list all records in a zone with a single call Records not matched by the Domain Filter are ignored The response is a list of links that can be fed to dynect Client Do directly 
build Link To Record build a resource link The symmetry of the dyn API is used to save switch case boilerplate Empty response means the endpoint is not mappable to a records link either because the fqdn is not matched by the domain Filter or it is in the wrong zone 
create a dynect client and performs login You need to clean it up This method also stores the Dyn API version Don t user the dynect Client Login 
the zones we are allowed to touch Currently only exact matches are considered not all zones with the given suffix 
delete Record deletes all existing records CNAME TXT A for the given Endpoint DNSName with API call 
replace Record replaces all existing records pf the given type for the Endpoint DNSName with API call 
commit commits all pending changes It will always attempt to commit if there are no 
Records makes on average C Z requests Z number of zones login fetch All Records A cache is used to avoid querying for every single record found C is proportional to the number of expired changed records 
this method does C Z requests C total number of changes Z number of affected zones login commit 
Endpoints collects endpoints of all nested Sources and returns them in a single slice 
factory function for the designate Client Interface 
copies environment variables to new names without overwriting existing values 
returns Open Stack Keystone authentication settings by obtaining values from standard environment variables also fixes incompatibilities between gophercloud implementation and stackrc files that can be downloaded from Open Stack dashboard in latest versions 
authenticate in Open Stack and obtain Designate service endpoint 
For Each Zone calls handler for each zone managed by the Designate 
For Each Record Set calls handler for each recordset in the given DNS zone 
Create Record Set creates recordset in the given DNS zone 
Update Record Set updates recordset in the given DNS zone 
Delete Record Set deletes recordset in the given DNS zone 
New Designate Provider is a factory function for Open Stack designate providers 
converts domain names to FQDN 
converts domain name to FQDN 
returns Zone ID Zone Name mapping for zones that are managed by the Designate and match domain filter 
finds best suitable DNS zone for the hostname 
Records returns the list of records 
adds endpoint into recordset aggregation loading original values from endpoint labels first 
Apply Changes applies a given set of changes in a given zone 
apply recordset changes by inserting updating deleting recordsets 
New Istio Gateway Source creates a new gateway Source with the given config 
Endpoints returns endpoint objects for each host target combination that should be processed Retrieves all gateway resources in the source s namespace s 
filter By Annotations filters a list of configs by a given annotation selector 
endpoints From Gateway Config extracts the endpoints from an Istio Gateway Config object 
Deep Copy Into is an autogenerated deepcopy function copying the receiver writing into out in must be non nil 
Deep Copy is an autogenerated deepcopy function copying the receiver creating a new DNSEndpoint 
Deep Copy Object is an autogenerated deepcopy function copying the receiver creating a new runtime Object 
Deep Copy Into is an autogenerated deepcopy function copying the receiver writing into out in must be non nil 
Deep Copy is an autogenerated deepcopy function copying the receiver creating a new DNSEndpoint List 
Deep Copy Object is an autogenerated deepcopy function copying the receiver creating a new runtime Object 
Deep Copy Into is an autogenerated deepcopy function copying the receiver writing into out in must be non nil 
Deep Copy is an autogenerated deepcopy function copying the receiver creating a new DNSEndpoint Spec 
Deep Copy is an autogenerated deepcopy function copying the receiver creating a new DNSEndpoint Status 
Deep Copy Into is an autogenerated deepcopy function copying the receiver writing into out in must be non nil 
Deep Copy is an autogenerated deepcopy function copying the receiver creating a new Endpoint 
Deep Copy Into is an autogenerated deepcopy function copying the receiver writing into out in must be non nil 
Deep Copy is an autogenerated deepcopy function copying the receiver creating a new Labels 
Deep Copy Into is an autogenerated deepcopy function copying the receiver writing into out in must be non nil 
Deep Copy is an autogenerated deepcopy function copying the receiver creating a new Provider Specific 
Deep Copy Into is an autogenerated deepcopy function copying the receiver writing into out in must be non nil 
Deep Copy is an autogenerated deepcopy function copying the receiver creating a new Targets 
ensure Trailing Dot ensures that the hostname receives a trailing dot if it hasn t already 
New Noop Registry returns new Noop Registry object 
Apply Changes propagates changes to the dns provider 
Endpoints collects endpoints from its wrapped source and returns them without duplicates 
New Fake Source creates a new fake Source with the given config 
Endpoints returns endpoint objects 
Create TLSConfig creates tls Config instance from TLS parameters passed in environment variables with the given prefix 
New AWSSDRegistry returns implementation of registry for AWS SD 
Records calls AWS SD API and expects AWS SD provider to provider Owner Resource information as a serialized value in the AWSSDDescription Label value in the Labels map 
Apply Changes filters out records not owned the External DNS additionally it adds the required label inserted in the AWS SD instance as a Create ID field 
Load OCIConfig reads and parses the OCI External DNS config file at the given path 
New OCIProvider initialises a new OCI DNS based Provider 
Records returns the list of records in a given hosted zone 
Apply Changes applies a given set of changes to a given zone 
new Record Operation returns a Record Operation based on a given endpoint 
operations By Zone segments a slice of Record Operations by their zone 
New Azure Provider creates a new Azure provider Returns the provider or an error if a provider could not be created 
get Access Token retrieves Azure API access token 
Records gets the current records Returns the current records or an error if the operation failed 
Apply Changes applies the given changes Returns nil if the operation was successful or an error if the operation failed 
Helper function shared with test code 
Helper function shared with text code 
Make a boot docker VM disk image 
create Disk Image makes a disk image at dest with the given size in MB If r is not nil it will be read as a raw disk image to convert from 
Save changes the configuration of the host only network 
Save IPv changes the ipv configuration of the host only network 
create Hostonly Adapter creates a new host only network 
list Host Only Adapters gets all host only adapters in a map keyed by Network Name 
remove Orphan DHCPServers removed the DHCP servers linked to no host only adapter 
add Host Only DHCPServer adds a DHCP server to a host only network 
list DHCPServers lists all DHCP server settings in a map keyed by DHCP Network Name 
list Host Interfaces returns a map of net IPNet addresses of host interfaces that are UP and not loopback adapters and not virtualbox host only networks given by exclude Nets keyed by CIDR string 
check IPNet Collision returns true if any host interfaces conflict with the host only network mask passed as a parameter This works with IPv or IPv ip addresses 
parse IPv Mask parses IPv netmask written in IP form e g This function should really belong to the net package 
New Driver Not Supported creates a placeholder Driver that replaces a driver that is not supported on a given platform eg fusion on linux 
Helper method to make requests which take no arguments and return simply a string e g Get IP 
Driver Name returns the name of the driver 
Get SSHKey Path returns the key path TODO This method doesn t even make sense to have with RPC 
Must Be Running will return an error if the machine is not in a running state 
Get Create Flags registers the flags this driver adds to docker hosts create 
New Driver creates and returns a new instance of the driver 
power State From Instance View reads the instance view response and extracts the power state status if exists from there If no status is found or an unknown status has occurred returns Unknown 
Support migrating single string Driver fields to slices 
Docker Client creates a docker client for a given host 
Create Container creates a docker container 
cleanup Resource If Exists checks if the resource exists if it does and it does not have any attached resources then deletes the resource If the resource does not exist or is not eligible for cleanup returns nil If an error is encountered returns the error 
Get Create Flags registers the flags this driver adds to docker hosts create 
New Driver creates a Driver with the specified machine Name and store Path 
Get SSHUsername returns the username to use with SSH 
Set Config From Flags configures the driver with the object that was returned by Register Create Flags 
Pre Create Check allows for pre create operations to make sure a driver is ready for creation 
Get State returns a github com machine libmachine state State representing the state of the host running stopped etc 
Create creates the VM instance acting as the docker host 
Start starts the existing VM instance 
Stop stops the existing VM instance 
Restart reboots the existing VM instance 
Remove destroys the VM instance and the associated SSH key 
Build a cloud init user data string that will install and run docker 
Generate CACertificate generates a new certificate authority from the specified org and bit size and stores the resulting certificate and key file in the arguments 
Generate Cert generates a new certificate signed using the provided certificate authority files and stores the result in the certificate file and key provided The provided host names are set to the appropriate certificate fields 
Read TLSConfig reads the tls config for a machine 
Validate Certificate validate the certificate installed on the vm 
compare compares two versions of Docker to decipher which came first compare returns if v v if v v otherwise 
compare CE Community Edition will differentiate between versions of Docker that use the versioning scheme release year release month ce ee rcnum This will be every release after 
Is VTXDisabled checks if VT x is disabled in the CPU 
New VBox Manager creates a VBox Manager instance 
TODO ahmetalpbalkan Remove duplication around client creation This is happening because we auto generate our SDK and we don t have generics in Go We are hoping to come up with a factory or some defaults instance to set these client configuration in a central place in azure sdk for go 
Get Create Flags registers the flags this driver adds to docker hosts create 
Pre Create Check checks that the machine creation process can be started safely 
execute command over SSH with user password authentication 
driver Path finds the path of a driver binary by its name If the driver is a core driver there is no separate driver binary We reuse current binary if it s docker machine or we assume docker machine is in the PATH If the driver is NOT a core driver then the separate binary must be in the PATH and it s name must be docker machine driver driver Name 
Authenticate Device Flow fetches a token from the local file cache or initiates a consent flow and waits for token to be obtained Obtained token is stored in a file cache for future use and refreshing 
Authenticate Service Principal uses given service principal credentials to return a service principal token Generated token is not stored in a cache file or refreshed 
token From File returns a token from the specified file if it is found otherwise returns nil Any error retrieving or creating the token is returned as an error 
device Flow Auth prints a message to the screen for user to take action to consent application on a browser and in the meanwhile the authentication endpoint is polled until user gives consent denies or the flow times out Returned token must be saved 
token Cache Path returns the full path the OAuth token should be saved at for given tenant ID 
tenant IDPath returns the full path the tenant ID for the given subscription should be saved at f 
mk Token Callback returns a callback function that can be used to save the token initially or register to the Azure SDK to be called when the token is refreshed 
validate Token makes a call to Azure SDK with given token essentially making sure if the access token valid if not it uses SDK s functionality to automatically refresh the token using refresh token which might have expired This check is essentially to make sure refresh token is good 
New Fmt Machine Logger creates a Machine Logger implementation used by the drivers 
New Compute Util creates and initializes a Compute Util 
disk returns the persistent disk attached to the vm 
delete Disk deletes the persistent disk 
static Address returns the external static IP address 
open Firewall Ports configures the firewall to open docker and swarm ports 
instance retrieves the instance 
create Instance creates a GCE VM instance 
configure Instance configures an existing instance for use with Docker Machine 
add Firewall Tag adds a tag to the instance to match the firewall rule 
upload SSHKey updates the instance metadata with the given ssh key 
parse Tags computes the tags for the instance 
start Instance starts the instance 
wait For Op waits for the operation to finish 
wait For Regional Op waits for the regional operation to finish 
wait For Global Op waits for the global operation to finish 
ip retrieves and returns the external IP address of the instance 
Get SSHPort returns port for use with ssh 
cmd Output runs a shell command and returns its output 
detect the vmrun and vmware vdiskmanager cmds path if needed 
Make a vmdk disk image with the given size in MB 
Get Create Flags registers the flags this driver adds to docker hosts create 
Helpers 
Register Resource Providers registers current subscription to the specified resource provider namespaces if they are not already registered Namespaces are case insensitive 
Create Resource Group creates a Resource Group if not exists 
Cleanup Virtual Network If Exists removes a subnet if there are no subnets attached to it Note that this method is not safe for multiple concurrent writers in case of races deployment of a machine could fail or resource might not be cleaned up 
Create Subnet creates or updates a subnet if it does not already exist 
Cleanup Subnet If Exists removes a subnet if there are no IP configurations through NICs are attached to it Note that this method is not safe for multiple concurrent writers in case of races deployment of a machine could fail or resource might not be cleaned up 
Cleanup Availability Set If Exists removes an availability set if there are no virtual machines attached to it Note that this method is not safe for multiple concurrent writers in case of races deployment of a machine could fail or resource might not be cleaned up 
Get Public IPAddress attempts to get public IP address from the Public IP resource If IP address is not allocated yet returns empty string If use Fqdn is set to true the a FQDN hostname will be returned 
Get Private IPAddress attempts to retrieve private IP address of the specified network interface name If IP address is not allocated yet returns empty string 
Stop Virtual Machine power offs the virtual machine and waits until it reaches the goal state stopped or times out 
Restart Virtual Machine restarts the virtual machine and waits until it reaches the goal state stopped or times out 
delete Resource If Exists is an utility method to determine if a resource exists from the error returned from its Get response If so deletes it name is used only for logging purposes 
wait VMPower State polls the Virtual Machine instance view until it reaches the specified goal power state or times out If checking for virtual machine state fails or waiting times out an error is returned 
check Exists From Error inspects an error and returns a true if err is nil false if error is an autorest Error with Status Code and will return the error back if error is another status code or another type of error 
os Disk Storage Blob URL gives the full url of the VHD blob where the OS disk for the given VM should be stored 
os Disk Storage Container URL crafts a URL with a trailing slash pointing to the full Azure Blob Container URL for given VM name 
extract Storage Account From VHDURL parses a blob URL and extracts the Azure Storage account name from the URL namely first subdomain of the hostname and the Azure Storage service base URL e g core windows net If it could not be parsed returns empty string 
New Key Pair generates a new SSH keypair This will return a private public key encoded as DER 
Fingerprint calculates the fingerprint of the public key 
Generate SSHKey generates SSH keypair based on path of the private key The public key would be generated to the same path with pub added 
load Or Find Tenant ID figures out the AAD tenant ID of the subscription by first looking at the cache file if not exists makes a network call to load it and cache it for future use 
find Tenant ID figures out the AAD tenant ID of the subscription by making an unauthenticated request to the Get Subscription Details endpoint and parses the value from WWW Authenticate header 
save Tenant ID performs an atomic write to the path with given tenant ID contents 
Get Create Flags registers the flags this driver adds to docker hosts create 
Send sends a crash report to bugsnag via an http call 
Create a host using the driver s config 
Driver Name returns the name of the driver as it is registered 
Get Create Flags returns the mcnflag Flag slice representing the flags that can be set their descriptions and defaults 
Get IP returns an IP or hostname that this host is available at e g or docker host d b a d a cloudapp net 
Get Machine Name returns the name of the machine 
Get SSHHostname returns hostname for use with ssh 
Get SSHKey Path returns key path for use with ssh 
Get SSHPort returns port for use with ssh 
Get SSHUsername returns username for use with ssh 
Get URL returns a Docker compatible host URL for connecting to this host e g tcp 
Get State returns the state that the host is in running stopped etc 
Kill stops a host forcefully 
Pre Create Check allows for pre create operations to make sure a driver is ready for creation 
Remove a host 
Restart a host This may just call Stop Start if the provider does not have any special restart behaviour 
Set Config From Flags configures the driver with the object that was returned by Register Create Flags 
Start a host 
Stop a host gracefully 
In the transition the JSON representation of machines changed from a flat to a more nested structure for various options and configuration settings To preserve compatibility with existing machines these migration functions have been introduced They preserve backwards compat at the expense of some duplicated information Migrate Host V To Host V validates host config and modifies if needed this is used for configuration updates 
Migrate Host Metadata V To Host Metadata V fills nested host metadata and modifies if needed this is used for configuration updates 
re implementation of private function in https github com golang go blob master src syscall syscall windows go L 
get Name And Its Ppid returns the exe file name its parent process id 
The following function is needed because the CLI acrobatics that we re doing with having an outer and inner function each with their own custom settings and flag parsing needs are not well supported by codegangsta cli Instead of trying to make a convoluted series of flag parsing and relying on codegangsta cli internals work well we simply read the flags we re interested in from the outer function into module level variables and then use them from the inner function I m not very pleased about this but it seems to be the only decent compromise without drastically modifying codegangsta cli internals or our own CLI 
Get Create Flags registers the flags this driver adds to docker hosts create 
New Driver creates a Driver with the specified store Path 
Set Config From Flags initializes the driver based on the command line flags 
Pre Create Check is called to enforce pre creation steps 
Create creates a GCE VM instance acting as a docker host 
Get IP returns the IP address of the GCE instance 
Get State returns a docker hosts state State value representing the current state of the host 
Start starts an existing GCE instance or create an instance with an existing disk 
Stop stops an existing GCE instance 
Restart restarts a machine which is known to be running 
Remove deletes the GCE instance and the disk 
New Driver returns a new driver instance 
Get Create Flags returns list of create flags driver accepts 
Set Config From Flags initializes driver values from the command line values and checks if the arguments have values 
Pre Create Check validates if driver values are valid to create the machine 
Create creates the virtual machine 
Remove deletes the virtual machine and resources associated to it 
Get IP returns public IP address or hostname of the machine instance 
Get URL returns a socket address to connect to Docker engine of the machine instance 
Get State returns the state of the virtual machine role instance 
Start issues a power on for the virtual machine instance 
Stop issues a power off for the virtual machine instance 
Restart reboots the virtual machine instance 
check Legacy Driver errors out if it encounters an Azure VM created with the legacy docker machine Azure driver 
Sample Virtualbox create independent of Machine CLI 
Streaming the output of an SSH session in virtualbox 
New Driver creates a new Hyper v driver with default settings 
Pre Create Check checks that the machine creation process can be started safely 
wait For IP waits until the host has a valid IP 
wait Stopped waits until the host is stopped 
Start starts an host 
Stop stops an host 
Remove removes an host 
generate Disk Image creates a small fixed vhd put the tar in convert to dynamic then resize 
Get IP returns the ip 
Get SSHKey Path returns the ssh key path 
Get SSHPort returns the ssh port if not specified 
Get SSHUsername returns the ssh user name root if not specified 
Resolve Store Path returns the store path where the machine is 
Set Swarm Config From Flags configures the driver for swarm 
Is VTXDisabled In The VM checks if VT X is disabled in the started vm 
get Release Tag gets the release tag of Boot Docker from api URL 
get Release URL gets the latest release URL of Boot Docker 
version scans the volume ID in b and returns its version tag 
Download ISO downloads boot docker ISO image for the given tag and save it at dest 
Make Disk Image makes a boot docker VM disk image See https github com boot docker boot docker blob master rootfs rootfs etc rc d automount 
Authenticate creates a Rackspace specific Gophercloud client 
Get Instance IPAddresses can be short circuited with the server s Access IPv Addr on Rackspace 
target Host returns a specific host name if one is indicated by the first CLI arg or the default host name if no host is specified 
machine Command maps the command name to the corresponding machine command We run commands concurrently and communicate back an error if there was one 
run Action Foreach Machine will run the command across multiple machines 
PERFORMANCE The code of this function is complicated because we try to call the underlying drivers as less as possible to get the information we need 
Docker Client Version returns the version of the Docker client on the host that ssh is connected to e g 
Split Port Proto splits a string in the format port protocol defaulting protocol to tcp if not provided 
Create is the wrapper method which covers all of the boilerplate around actually creating provisioning and persisting an instance in the store 
Truncate ID returns a shorten id Following two functions are from github com docker docker utils module It was way overkill to include the whole module so we just have these bits that we re using here 
Generate Random ID returns an unique id 
Get Create Flags registers the machine create flags recognized by this driver including their help text and defaults 
New Driver instantiates a Rackspace driver 
Set Config From Flags assigns and verifies the command line arguments presented to the driver 
URL returns the Docker host URL 
new Azure Client creates an Azure Client helper from the Driver context and initiates authentication if required 
generate SSHKey creates a ssh key pair locally and saves the public key file contents in Open SSH format to the Deployment Context 
get Security Rules creates network security group rules based on driver configuration such as SSH port docker port and swarm port 
ip Address returns machine s private or public IP address according to the configuration If no IP address is found it returns empty string 
parse Virtual Network parses Virtual Network input format resourcegroup name into Resource Group uses provided one if omitted and Virtual Network Name 
parse Security Rule Protocol parses a protocol string into a network Security Rule Protocol and returns error if the protocol is not supported 
Given a State type returns its string representation 
 Utilities random Azure Storage Account Name generates a valid storage account name prefixed with a predefined string Availability of the name is not checked Uses maximum length to maximise randomness 
random String generates a random string of given length using specified alphabet 
parse Image Name parses a publisher offer sku version into those parts 
TODO This could use a unit test 
Get Create Flags registers the flags this driver adds to docker machine create 
Pre Create Check checks that the machine creation process can be started safely 
Create has the following implementation check whether the docker directory contains the boot docker ISO generate an SSH keypair and bundle it in a tar create a virtual machine with the boot docker ISO mounted reconfigure the virtual machine network and disk size 
Make a boot docker userdata tar key bundle 
New Driver creates a new Virtual Box driver with default settings 
Get Create Flags registers the flags this driver adds to docker hosts create 
Pre Create Check checks that VBox Manage exists and works 
Restart restarts a machine which is known to be running 
validate No IPCollisions ensures no conflicts between the host s network interfaces and the vbox host only network that will be used for machine vm instances 
Select an available port trying the specified port first falling back on an OS selected port 
Setup a NAT port forwarding entry 
get Random IPin Subnet returns a pseudo random net IP in the same subnet as the IP passed 
Detect detects user s current shell 
vault Renew Duration accepts a secret and returns the recommended amount of time to sleep 
print Vault Warnings prints warnings for a given dependency 
vault Secret Renewable determines if the given secret is renewable 
transform Secret transforms an api secret into our secret This does not deep copy underlying deep data structures so it s not safe to modify the vault secret as that may modify the data in the transformed secret 
update Secret updates our secret with the new data from the api careful to not overwrite missing data Renewals don t include the original secret and we don t want to delete that data accidentally 
Copy returns a deep copy of this configuration 
Merge combines all values in this configuration with the values in the other configuration with values in the other configuration taking precedence Maps and slices are merged most other values are overwritten Complex structs define their own merge functionality 
Finalize ensures the configuration has no nil pointers and sets default values 
Go String defines the printable version of this struct 
Display is the human friendly form of this configuration It tries to describe this template in as much detail as possible in a single line so log consumers can uniquely identify it 
Copy returns a deep copy of this configuration 
Merge combines all values in this configuration with the values in the other configuration with values in the other configuration taking precedence Maps and slices are merged most other values are overwritten Complex structs define their own merge functionality 
Finalize ensures the configuration has no nil pointers and sets default values 
Go String defines the printable version of this struct 
Parse Template Config parses a string in the form source destination command into a Template Config 
New Vault Write Query creates a new datacenter dependency 
String returns the human friendly version of this dependency 
sha Map returns the sha hash of the data in the map The reason this data is hashed is because it appears in the output and could contain sensitive information 
New View constructs a new view with the given inputs 
Data returns the most recently received data from Consul for this View 
Data And Last Index returns the most recently received data from Consul for this view along with the last index This is atomic so you will get the index that goes with the data you are fetching 
poll queries the Consul instance for data using the fetch function but also accounts for interrupts on the interrupt channel This allows the poll function to be fired in a goroutine but then halted even if the fetch function is in the middle of a blocking query 
fetch queries the Consul instance for the attached dependency This API promises that either data will be written to done Ch or an error will be written to err Ch It is designed to be run in a goroutine that selects the result of done Ch and err Ch It is assumed that only one instance of fetch is running per View and therefore no locking or mutexes are used 
New Catalog Node Query parses the given string into a dependency If the name is empty then the name of the local agent is used 
Fetch queries the Consul API defined by the given client and returns a of Catalog Node object 
String returns the human friendly version of this dependency 
Parse Auth Config parses the auth into username password 
Copy returns a deep copy of this configuration 
Merge combines all values in this configuration with the values in the other configuration with values in the other configuration taking precedence Maps and slices are merged most other values are overwritten Complex structs define their own merge functionality 
Finalize ensures there no nil pointers 
Go String defines the printable version of this struct 
String is the string representation of this authentication If authentication is not enabled this returns the empty string The username and password will be separated by a colon 
New Vault List Query creates a new datacenter dependency 
Fetch queries the Vault API 
Remember accepts a dependency and the data to store associated with that dep This function converts the given data to a proper type and stores it interally 
Recall gets the current value for the given dependency in the Brain 
Force Set is used to force set the value of a dependency for a given hash code 
Forget accepts a dependency and removes all associated data with this dependency It also resets the received Data internal map 
New Catalog Datacenters Query creates a new datacenter dependency 
Fetch queries the Consul API defined by the given client and returns a slice of strings representing the datacenters 
New Catalog Nodes Query parses the given string into a dependency If the name is empty then the name of the local agent is used 
Fetch queries the Consul API defined by the given client and returns a slice of Node objects 
String returns the human friendly version of this dependency 
Copy returns a deep copy of this configuration 
Merge combines all values in this configuration with the values in the other configuration with values in the other configuration taking precedence Maps and slices are merged most other values are overwritten Complex structs define their own merge functionality 
Finalize ensures there no nil pointers 
Go String defines the printable version of this struct 
Parse parses the given string as a signal If the signal is not found an error is returned 
Copy returns a deep copy of this configuration 
Merge combines all values in this configuration with the values in the other configuration with values in the other configuration taking precedence Maps and slices are merged most other values are overwritten Complex structs define their own merge functionality 
Finalize ensures there no nil pointers 
Go String defines the printable version of this struct 
Default Vault Config returns a configuration that is populated with the default values 
Copy returns a deep copy of this configuration 
Merge combines all values in this configuration with the values in the other configuration with values in the other configuration taking precedence Maps and slices are merged most other values are overwritten Complex structs define their own merge functionality 
Finalize ensures there no nil pointers 
Go String defines the printable version of this struct 
New Template creates and parses a new Consul Template template at the given path If the template does not exist an error is returned During initialization the template is read and is parsed for dependencies Any errors that occur are returned 
Execute evaluates this template in the provided context 
func Map is the map of template functions to their respective functions 
String To File Mode Func returns a function that converts strings to os File Mode value This is designed to be used with mapstructure for parsing out a filemode value 
String To Wait Duration Hook Func returns a function that converts strings to wait value This is designed to be used with mapstructure for parsing out a wait value 
Consul String To Struct Func checks if the value set for the key should actually be a struct and sets the appropriate value in the struct This is for backwards compatability with older versions of Consul Template 
Copy returns a deep copy of this configuration 
Merge combines all values in this configuration with the values in the other configuration with values in the other configuration taking precedence Maps and slices are merged most other values are overwritten Complex structs define their own merge functionality 
Finalize ensures there no nil pointers 
Go String defines the printable version of this struct 
Key returns a boolean indicating whether the given key exists in the map 
Get returns a value previously set by Add or Set 
Set stores the value v at the key k It will overwrite an existing value if present 
Set X behaves the same as Set except it will not overwrite existing keys if already present 
Map Set stores the value v into a key mk in the map named k 
Map Set X behaves the same as Map Set except it will not overwrite the map key if it already exists 
map Set is sets the value in the map overwriting if o is true This function does not perform locking callers should lock before invoking 
Map Values returns the list of values in the map sorted by key 
init initializes the scratch 
Render atomically renders a file contents to disk returning a result of whether it would have rendered and actually did render 
Atomic Write accepts a destination path and the template contents It writes the template contents to a Temp File on disk returning if any errors occur If the parent destination directory does not exist it will be created automatically with permissions To use a different permission create the directory first or use chmod in a Command If the destination path exists all attempts will be made to preserve the existing file permissions If those permissions cannot be read an error is returned If the file does not exist it will be created automatically with permissions To use a different permission create the destination file first or use chmod in a Command If no errors occur the Tempfile is renamed moved to the destination path 
copy File copies the file at src to the path at dst Any errors that occur are returned 
Copy returns a deep copy of the current configuration This is useful because the nested data structures may be shared 
Merge merges the values in config into this config object Values in the config object overwrite the values in c 
Parse parses the given string contents as a config 
Must returns a config object that must compile If there are any errors this function will panic This is most useful in testing or constants 
From File reads the configuration file at the given path and returns a new Config struct with the data populated 
From Path iterates and merges all configuration files in a given directory returning the resulting config 
Go String defines the printable version of this struct 
Default Config returns the default configuration struct Certain environment variables may be set which control the values for the default configuration 
Finalize ensures all configuration options have the default values so it is safe to dereference the pointers later down the line It also intelligently tries to activate stanzas that should be enabled because data was given but the user did not explicitly add Enabled true to the configuration 
flatten Keys is a function that takes a map string interface and recursively flattens any keys that are a map string interface where the key is in the given list of keys 
New Watcher creates a new watcher using the given API client 
Add adds the given dependency to the list of monitored dependencies and start the associated view If the dependency already exists no action is taken If the Dependency already existed it this function will return false If the view was successfully created it will return true If an error occurs while creating the view it will be returned here but future errors returned by the view will happen on the channel 
Watching determines if the given dependency is being watched 
Force Watching is used to force setting the internal state of watching a dependency This is only used for unit testing purposes 
Remove removes the given dependency from the list and stops the associated View If a View for the given dependency does not exist this function will return false If the View does exist this function will return true upon successful deletion 
Size returns the number of views this watcher is watching 
Stop halts this watcher and any currently polling views immediately If a view was in the middle of a poll no data will be returned 
Add adds a new element to the set if it does not already exist 
Get retrieves a single element from the set by name 
List returns the insertion ordered list of dependencies 
Len is the size of the set 
String is a string representation of the set 
deep Copy And Sort Tags deep copies the tags in the given string slice and then sorts and returns the copied result 
resp With Metadata is a short wrapper to return the given interface with fake response metadata for non Consul dependencies 
regexp Match matches the given regexp and extracts the match groups into a named map 
New Catalog Service Query parses a string into a Catalog Service Query 
Fetch queries the Consul API defined by the given client and returns a slice of Catalog Service objects 
String returns the human friendly version of this dependency 
New KVList Query parses a string into a dependency 
Fetch queries the Consul API defined by the given client 
String returns the human friendly version of this dependency 
New Dedup Manager creates a new Dedup manager 
Start is used to start the de duplication manager 
Stop is used to stop the de duplication manager 
create Session is used to create and maintain a session to Consul 
Is Leader checks if we are currently the leader instance 
Update Deps is used to update the values of the dependencies for a template 
set Leader sets if we are currently the leader instance 
parse Data is used to update brain from a KV data pair 
New File Query creates a file dependency from the given path 
Fetch retrieves this dependency and returns the result or any errors that occur in the process 
New CLI creates a new CLI object with the given stdout and stderr streams 
Run accepts a slice of arguments and returns an int representing the exit status from the command 
stop is used internally to shutdown a running CLI 
Parse Flags is a helper function for parsing command line flags using Go s Flag library This is extracted into a helper to keep the main function small but it also makes writing tests for parsing command line arguments much easier and cleaner 
load Configs loads the configuration from the list of paths The optional configuration is the list of overrides to apply at the very end taking precedence over any configurations that were loaded from the paths If any errors occur when reading or parsing those sub configs it is returned 
log Error logs an error message and then returns the given status 
File Mode Go String returns the value of the os File Mode for printing in a string 
Signal Val returns the value of the os Signal at the pointer or if the pointer is nil 
Signal Go String returns the value of the os Signal for printing in a string 
Signal Present returns a boolean indicating if the pointer is nil or if the pointer is pointing to the zero value 
Time Duration Val returns the value of the string at the pointer or if the pointer is nil 
Time Duration Go String returns the value of the time Duration for printing in a string 
Create Consul Client creates a new Consul API client from the given input 
Consul returns the Consul client for this set 
Vault returns the Vault client for this set 
Stop closes all idle connections for any attached clients 
New Vault Read Query creates a new datacenter dependency 
Fetch queries the Vault API 
Copy returns a deep copy of this configuration 
Merge combines all values in this configuration with the values in the other configuration with values in the other configuration taking precedence Maps and slices are merged most other values are overwritten Complex structs define their own merge functionality 
Finalize ensures there no nil pointers 
Go String defines the printable version of this struct 
New KVGet Query parses a string into a dependency 
Fetch queries the Consul API defined by the given client 
String returns the human friendly version of this dependency 
New Vault Agent Token Query creates a new dependency 
Fetch retrieves this dependency and returns the result or any errors that occur in the process 
watch watches the file for changes 
New KVKeys Query parses a string into a dependency 
Fetch queries the Consul API defined by the given client 
String returns the human friendly version of this dependency 
New creates a new child process for management with high level APIs for sending signals to the child process restarting the child process and gracefully terminating the child process 
Exit Ch returns the current exit channel for this child process This channel may change if the process is restarted so implementers must not cache this value 
Pid returns the pid of the child process If no child process exists is returned 
Command returns the human formatted command with arguments 
Start starts and begins execution of the child process A buffered channel is returned which is where the command s exit code will be returned upon exit Any errors that occur prior to starting the command will be returned as the second error argument but any errors returned by the command after execution will be returned as a non zero value over the exit code channel 
Signal sends the signal to the child process returning any errors that occur 
Reload sends the reload signal to the child process and does not wait for a response If no reload signal was provided the process is restarted and replaces the process attached to this Child 
Kill sends the kill signal to the child process and waits for successful termination If no kill signal is defined the process is killed with the most aggressive kill signal If the process does not gracefully stop within the provided Kill Timeout the process is force killed If a splay was provided this function will sleep for a random period of time between and the provided splay value to reduce the thundering herd problem This function does not return any errors because it guarantees the process will be dead by the return of the function call 
Stop behaves almost identical to Kill except it suppresses future processes from being started by this child and it prevents the killing of the child process from sending its value back up the exit channel This is useful when doing a graceful shutdown of an application 
Copy returns a deep copy of this configuration 
Merge combines all values in this configuration with the values in the other configuration with values in the other configuration taking precedence Maps and slices are merged most other values are overwritten Complex structs define their own merge functionality 
Env calculates and returns the finalized environment for this exec configuration It takes into account pristine custom environment whitelist and blacklist values 
Finalize ensures there no nil pointers 
Go String defines the printable version of this struct 
New Health Service Query processes the strings to build a service dependency 
Fetch queries the Consul API defined by the given client and returns a slice of Health Service objects 
String returns the human friendly version of this dependency 
accept Status allows us to check if a slice of health checks pass this filter 
Copy returns a deep copy of this configuration 
Merge combines all values in this configuration with the values in the other configuration with values in the other configuration taking precedence Maps and slices are merged most other values are overwritten Complex structs define their own merge functionality 
Retry Func returns the retry function associated with this configuration 
Finalize ensures there no nil pointers 
Go String defines the printable version of this struct 
New Runner accepts a slice of Template Configs and returns a pointer to the new Runner and any error that occurred during creation 
Start begins the polling for this runner Any errors that occur will cause this function to push an item onto the runner s error channel and the halt execution This function is blocking and should be called as a goroutine 
Stop halts the execution of this runner and its subprocesses 
Render Events returns the render events for each template was rendered The map is keyed by template ID 
Receive accepts a Dependency and data for that dep This data is cached on the Runner This data is then used to determine if a Template is renderable i e all its Dependencies have been downloaded at least once 
Signal sends a signal to the child process if it exists Any errors that occur are returned 
Run iterates over each template in this Runner and conditionally executes the template rendering and command execution The template is rendered atomically If and only if the template render completes successfully the optional commands will be executed if given Please note that all templates are rendered and then any commands are executed 
run Template is used to run a particular template It takes as input the template to run and a shared run context that allows sharing of information between templates The run returns a potentially nil render event and any error that occured The render event is nil in the case that the template has been already rendered and is a once template or if there is an error 
init creates the Runner s underlying data structures and returns an error if any problems occur 
diff And Update Deps iterates through the current map of dependencies on this runner and stops the watcher for any deps that are no longer required At the end of this function the given deps Map is converted to a slice and stored on the runner 
Template Config For returns the Template Config for the given Template 
Template Config Mapping returns a mapping between the template ID and the set of Template Config represented by the template ID 
all Templates Rendered returns true if all the templates in this Runner have been rendered at least one time 
child Env creates a map of environment variables for child processes to have access to configurations in Consul Template s configuration 
store Pid is used to write out a PID file to disk 
delete Pid is used to remove the PID on exit 
spawn Child spawns a child process with the given inputs and returns the resulting child 
new Quiescence creates a new quiescence timer for the given template 
tick updates the minimum quiescence timer 
find Command searches the list of template configs for the given command and returns it if it exists 
new Client Set creates a new client set from the given config 
new Watcher creates a new watcher 
New Catalog Services Query parses a string of the format 
Fetch queries the Consul API defined by the given client and returns a slice of Catalog Service objects 
String returns the human friendly version of this dependency 
Default Consul Config returns a configuration that is populated with the default values 
Copy returns a deep copy of this configuration 
Merge combines all values in this configuration with the values in the other configuration with values in the other configuration taking precedence Maps and slices are merged most other values are overwritten Complex structs define their own merge functionality 
Finalize ensures there no nil pointers 
Go String defines the printable version of this struct 
String To Signal Func parses a string as a signal based on the signal lookup table If the user supplied an empty string or nil a special nil signal is returned Clients should check for this value and set the response back nil after mapstructure finishes parsing 
Copy returns a deep copy of this configuration 
Merge combines all values in this configuration with the values in the other configuration with values in the other configuration taking precedence Maps and slices are merged most other values are overwritten Complex structs define their own merge functionality 
Finalize ensures there no nil pointers 
Go String defines the printable version of this struct 
Parse Wait Config parses a string of the format minimum maximum into a Wait Config 
Set sets the value in the format min max for a wait timer 
String returns the string format for this wait variable 
Copy returns a deep copy of this configuration 
Merge combines all values in this configuration with the values in the other configuration with values in the other configuration taking precedence Maps and slices are merged most other values are overwritten Complex structs define their own merge functionality 
Finalize ensures there no nil pointers 
Go String defines the printable version of this struct 
New Vault Token Query creates a new dependency 
New Log Filter returns a Level Filter that is configured with the log levels that we use 
Validate Level Filter verifies that the log levels within the filter are valid 
datacenters Func returns or accumulates datacenter dependencies 
env Func returns a function which checks the value of an environment variable Invokers can specify their own environment which takes precedences over any real environment variables 
execute Template Func executes the given template in the context of the parent If an argument is specified it will be used as the context instead This can be used for nested template definitions 
file Func returns or accumulates file dependencies 
key Func returns or accumulates key dependencies 
key Exists Func returns true if a key exists false otherwise 
node Func returns or accumulates catalog node dependency 
nodes Func returns or accumulates catalog node dependencies 
secret Func returns or accumulates secret dependencies from Vault 
secrets Func returns or accumulates a list of secret dependencies from Vault 
service Func returns or accumulates health service dependencies 
services Func returns or accumulates catalog services dependencies 
tree Func returns or accumulates key Prefix dependencies 
base Decode decodes the given string as a base string returning an error if it fails 
base Encode encodes the given value into a string represented as base 
base URLDecode decodes the given string as a URL safe base string 
base URLEncode encodes the given string to be URL safe 
by Key accepts a slice of KV pairs and returns a map of the top level key to all its subkeys For example elasticsearch a elasticsearch b redis a b Passing the result from Consul through by Tag would yield map string map string string elasticsearch dep Key Pair a dep Key Pair b redis dep Key Pair a b Note that the top most key is stripped from the Key value Keys that have no prefix after stripping are removed from the list 
by Tag is a template func that takes the provided services and produces a map based on Service tags The map key is a string representing the service tag The map value is a slice of Services which have the tag assigned 
contains Some Func returns functions to implement each of the following contains All true if x v then x l false otherwise contains Any true if x v such that x l false otherwise contains None true if x v then x l false otherwise contains Not All true if x v such that x l false otherwise ret true return true at end of loop for none all false for any notall invert invert block test for all notall 
explode is used to expand a list of keypairs into a deeply nested hash 
explode Helper is a recursive helper for explode 
in searches for a given value in a given interface 
Indent prefixes each line of a string with the specified number of spaces 
loop accepts varying parameters and differs its behavior If given one parameter loop will return a goroutine that begins at and loops until the given int increasing the index by each iteration If given two parameters loop will return a goroutine that begins at the first parameter and loops up to but not including the second parameter Prints for i range loop print i Prints for i range loop print i 
join is a version of strings Join that can be piped 
parse Bool parses a string into a boolean 
parse Float parses a string into a base float 
parse Int parses a string into a base int 
parse JSON returns a structure for valid JSON 
parse Uint parses a string into a base int 
plugin executes a subprocess as the given command string It is assumed the resulting command returns JSON which is then parsed and returned as the value for use in the template 
replace All replaces all occurrences of a value in a string with the given replacement value 
regex Replace All replaces all occurrences of a regular expression with the given replacement value 
regex Match returns true or false if the string matches the given regular expression 
split is a version of strings Split that can be piped 
timestamp returns the current UNIX timestamp in UTC If an argument is specified it will be used to format the timestamp 
to JSON converts the given structure into a deeply nested JSON string 
to JSONPretty converts the given structure into a deeply nested pretty JSON string 
to YAML converts the given structure into a deeply nested YAML string 
to TOML converts the given structure into a deeply nested TOML string 
add returns the sum of a and b 
modulo returns the modulo of b from a 
Returns true if the item has expired 
Add an item to the cache replacing any existing item If the duration is Default Expiration the cache s default expiration time is used If it is No Expiration the item never expires 
Add an item to the cache replacing any existing item using the default expiration 
Add an item to the cache only if an item doesn t already exist for the given key or if the existing item has expired Returns an error otherwise 
Get an item from the cache Returns the item or nil and a bool indicating whether the key was found 
Get With Expiration returns an item and its expiration time from the cache It returns the item or nil the expiration time if one is set if the item never expires a zero value for time Time is returned and a bool indicating whether the key was found 
Increment an item of type int by n Returns an error if the item s value is not an int or if it was not found If there is no error the incremented value is returned 
Decrement an item of type int int int int int uintptr uint uint uint or uint float or float by n Returns an error if the item s value is not an integer if it was not found or if it is not possible to decrement it by n To retrieve the decremented value use one of the specialized methods e g Decrement Int 
Decrement an item of type float or float by n Returns an error if the item s value is not floating point if it was not found or if it is not possible to decrement it by n Pass a negative number to decrement the value To retrieve the decremented value use one of the specialized methods e g Decrement Float 
Delete an item from the cache Does nothing if the key is not in the cache 
Delete all expired items from the cache 
Sets an optional function that is called with the key and value when an item is evicted from the cache Including when it is deleted manually but not when it is overwritten Set to nil to disable 
Write the cache s items using Gob to an io Writer NOTE This method is deprecated in favor of c Items and New From see the documentation for New From 
Save the cache s items to the given filename creating the file if it doesn t exist and overwriting it if it does NOTE This method is deprecated in favor of c Items and New From see the documentation for New From 
Add Gob serialized cache items from an io Reader excluding any items with keys that already exist and haven t expired in the current cache NOTE This method is deprecated in favor of c Items and New From see the documentation for New From 
Load and add cache items from the given filename excluding any items with keys that already exist in the current cache NOTE This method is deprecated in favor of c Items and New From see the documentation for New From 
Copies all unexpired items in the cache into a new map and returns it 
Returns the number of items in the cache This may include items that have expired but have not yet been cleaned up 
Delete all items from the cache 
Return a new cache with a given default expiration duration and cleanup interval If the expiration duration is less than one or No Expiration the items in the cache never expire by default and must be deleted manually If the cleanup interval is less than one expired items are not deleted from the cache before calling c Delete Expired 
Return a new cache with a given default expiration duration and cleanup interval If the expiration duration is less than one or No Expiration the items in the cache never expire by default and must be deleted manually If the cleanup interval is less than one expired items are not deleted from the cache before calling c Delete Expired New From also accepts an items map which will serve as the underlying map for the cache This is useful for starting from a deserialized cache serialized using e g gob Encode on c Items or passing in e g make map string Item to improve startup performance when the cache is expected to reach a certain minimum size Only the cache s methods synchronize access to this map so it is not recommended to keep any references to the map around after creating a cache If need be the map can be accessed at a later point using c Items subject to the same caveat Note regarding serialization When using e g gob make sure to gob Register the individual types stored in the cache before encoding a map retrieved with c Items and to register those same types before decoding a blob containing an items map 
djb with better shuffling x faster than FNV with the hash Hash overhead 
Returns the items in the cache This may include items that have expired but have not yet been cleaned up If this is significant the Expiration fields of the items should be checked Note that explicit synchronization is needed to use a cache and its corresponding Items return values at the same time as the maps are shared 
Link By Name finds a link by name and returns a pointer to the object 
New Mock Task Engine creates a new mock instance 
Add Task mocks base method 
Add Task indicates an expected call of Add Task 
Get Task By Arn mocks base method 
Init mocks base method 
List Tasks mocks base method 
Marshal JSON mocks base method 
Must Init mocks base method 
Set Saver mocks base method 
State Change Events mocks base method 
Version mocks base method 
Version indicates an expected call of Version 
New Mock Image Manager creates a new mock instance 
Add All Image States mocks base method 
Add All Image States indicates an expected call of Add All Image States 
Get Image State From Image Name mocks base method 
Record Container Reference mocks base method 
Set Saver mocks base method 
Start Image Cleanup Process mocks base method 
New EC Metadata Client creates an ec metadata client to retrieve metadata 
Default Credentials returns the credentials associated with the instance iam role 
Get Dynamic Data returns the dynamic data with provided path from instance metadata 
Get Metadata returns the metadata from instance metadata service specified by the path 
VPCID returns the VPC id for the network interface given its mac address 
Subnet ID returns the subnet id for the network interface given its mac address 
new Refresh Credentials Handler returns a new refresh Credentials Handler object 
handler Func returns the request handler function for the ecsacs IAMRole Credentials Message 
send Acks sends ack requests to ACS 
ack Message Id sends an IAMRole Credentials Ack Request to the backend 
handle Messages processes refresh credentials messages in the buffer in order 
handle Single Message processes a single refresh credentials message 
validate IAMRole Credentials Message validates fields in the IAMRole Credentials Message It returns an error if any of the following fields are not set in the message message Id task Arn role Credentials 
valid Role Type returns false if the Role Type in the acs refresh payload is not one of the expected types Task Application Task Execution 
New Error returns an error corresponding to a typed error returned from ACS It is expected that the passed in interface is really a struct which has a Message field of type string In that case the Message will be conveyed as part of the Error string as well as the type It is safe to pass anything into this constructor and it will also work reasonably well with anything fulfilling the error interface 
new Payload Request Handler returns a new payload Request Handler object 
handler Func returns the request handler function for the ecsacs Payload Message type 
send Acks sends ack requests to ACS 
ack Message Id sends an Ack Request for a message id 
handle Messages processes payload messages in the payload message buffer in order 
handle Single Message processes a single payload message It adds tasks in the message to the task engine An error is returned if the message was not handled correctly The error is being used only for testing today In the future it could be used for doing more interesting things 
add Payload Tasks does validation on each task and for all valid ones adds it to the task engine It returns a bool indicating if it could add every task to the task Engine and a slice of credential ack requests 
add Tasks adds the tasks to the task engine based on the skip Add Task condition This is used to add non stopped tasks before adding stopped tasks 
handle Unrecognized Task handles unrecognized tasks by sending stopped with a suitable reason to the backend 
Build Type Decoder takes a list of interfaces and stores them internally as a list of type Mappings in the format below My Message Type Of ecstcs My Message 
v Handlers Setup adds all handlers in v package to the mux router 
v Handlers Setup adds all handlers in v package to the mux router 
Serve Task HTTPEndpoint serves task container metadata task container stats and IAM Role Credentials for tasks being managed by the agent 
Agent Metadata Handler creates response for v metadata API 
New Mock Provider creates a new mock instance 
Is Expired mocks base method 
Is Expired indicates an expected call of Is Expired 
Retrieve mocks base method 
New Mock Container Metadata Resolver creates a new mock instance 
Resolve Container mocks base method 
Resolve Container indicates an expected call of Resolve Container 
Resolve Task mocks base method 
New Sensitive Raw Message returns a new encapsulated json Raw Message or nil if the data is empty It cannot be accidentally logged via String Go String v v 
New Task Response creates a new response object for the task 
New Container Response creates a new container response based on container id 
New creates a new Args object from the argument list 
Default Config returns the default configuration for Windows 
New returns an ECS http Client with a roundtrip timeout of the given duration 
Remove From Task Array removes the element at ndx from an array of task pointers arr If the ndx is out of bounds it returns arr unchanged 
adjust For Platform makes Windows specific changes to the task after unmarshal 
downcase All Volume Paths forces all volume paths host path and container path to be lower case This is to account for Windows case insensitivity and the case sensitive string comparison that takes place elsewhere in the code 
platform Host Config Override provides an entry point to set up default Host Config options to be passed to Docker API 
String return the string value of the eniattachment status 
return based exit code so the defer works 
new Submit State Change Client returns a client intended to be used for Submit State Change APIs which has the behavior of retrying the call on retriable errors for an extended period of time roughly hours 
Retry Rules returns the correct time to delay between retries for this instance of a retry For the first requests it follows an exponential backoff between ms and minute See the const comments for math on how this gets us to around hours total 
Status String returns a human readable string representation of this object 
Marshal JSON overrides the logic for JSON encoding the Resource Status type 
Unmarshal JSON overrides the logic for parsing the JSON encoded Resource Status data 
New Mock Time creates a new mock instance 
After mocks base method 
After Func mocks base method 
Now mocks base method 
Now indicates an expected call of Now 
Sleep mocks base method 
Sleep indicates an expected call of Sleep 
New Mock Timer creates a new mock instance 
Reset mocks base method 
Reset indicates an expected call of Reset 
Stop mocks base method 
Stop indicates an expected call of Stop 
Add Agent Update Handlers adds the needed update handlers to perform agent updates 
New Docker Go Client creates a new Docker Go Client TODO Remove clientfactory parameter once migration to Docker SDK is complete 
Returns the Docker SDK Client 
Docker State To State converts the container status from docker to status recognized by the agent 
Metadata From Container translates docker Container into Docker Container Metadata 
Listen to the docker event stream for container changes and pass them up 
List Containers returns a slice of container IDs 
List Plugins With Filters takes in filter arguments and returns the string of filtered Plugin names 
APIVersion returns the client api version 
Stats returns a channel of types Stats JSON entries for the container 
Load Image invokes loads an image from an input stream with a specified timeout 
Update Container Reference updates container reference in image state 
Add Image Name adds image name to image state 
Get Image Names Count returns number of image names 
Update Image State updates image name and container reference in image state 
Remove Image Name removes image name from image state 
Has Image Name returns true if image state contains the container Image Name 
Remove Container Reference removes container reference from image state 
Set Pull Succeeded sets the Pull Succeeded of the image State 
Get Pull Succeeded safely returns the Pull Succeeded of the image State 
Marshal JSON marshals image state 
String returns a human readable string representation of this object 
Unmarshal JSON overrides the logic for parsing the JSON encoded Task Status data 
Marshal JSON overrides the logic for JSON encoding the Task Status type 
New Client creates a client of ecscni which is used to invoke the plugin 
Setup NS will set up the namespace of container including create the bridge and the veth pair move the eni to container namespace setup the routes 
Cleanup NS will clean up the container namespace including remove the veth pair and stop the dhclient 
Release IPResource marks the ip available in the ipam db 
add invokes the ADD command of the given plugin 
del invokes the DEL command of the given plugin 
create Bridge Network Config With IPAM creates the config of bridge for ADD command where bridge plugin acquires the IP and route information from IPAM 
create Bridge Network Config Without IPAM creates the config of the bridge for removal 
construct Network Config takes in the config from agent and construct the configuration that s accepted by the libcni 
create IPAMNetwork Config constructs the ipam configuration accepted by libcni 
Version returns the version of the plugin 
str generates a string version of the CNI plugin version Example version dirty true git Short Hash db 
Capabilities returns the capabilities supported by a plugin 
Status String returns a human readable string representation of this object 
Marshal JSON overrides the logic for JSON encoding the Resource Status type 
Unmarshal JSON overrides the logic for parsing the JSON encoded Resource Status data 
New is used to return an instance of the Udev Watcher struct 
new Watcher is used to nest the return of the Udev Watcher struct 
perform Periodic Reconciliation is used to periodically invoke the reconciliation process based on a ticker 
reconcile Once is used to reconcile the state of ENIs attached to the instance 
send ENIState Change handles the eni event from udev or reconcile phase 
build State is used to build a state of the system for reconciliation 
event Handler is used to manage udev net subsystem events to add remove interfaces 
send ENIState Change With Retries invokes the send ENIState Change method with backoff and retries Retries are only effective if send ENIState Change returns an unmanaged ENIError We re effectively waiting for the ENI attachment message from ACS for a network device at this point of time 
New returns a client server to bidirectionally communicate with the backend The returned struct should have both Connect and Serve called upon it before being used 
Serve begins serving requests using previously registered handlers see Add Request Handler All request handlers should be added prior to making this call as unhandled requests will be discarded 
Close closes the underlying connection 
sign Request Func is a Make Request Hook Func that signs each generated request 
publish Metrics invokes the Publish Metrics Request on the clientserver object 
publish Metrics Once is invoked by the ticker to periodically publish metrics to backend 
metrics To Publish Metric Requests gets task metrics and converts them to a list of Publish Metric Request objects 
publish Health Metrics send the container health information to backend 
publish Health Metrics Once is invoked by the ticker to periodically publish metrics to backend 
create Publish Health Requests creates the requests to publish container health 
copy Metrics Metadata creates a new Metrics Metadata object from a given Metrics Metadata object It copies all the fields from the source object to the new object and sets the Fin field as specified by the argument 
copy Task Metrics copies a slice of Task Metric objects to another slice This is needed as we reset the source slice after creating a new Publish Metrics Request object 
copy Health Metadata performs a deep copy of Health Metadata object 
copy Task Health Metrics copies a slice of task Health Metrics to another slice 
Credentials Handler creates response for the v credentials API 
Status String returns a human readable string representation of this object 
Unmarshal JSON overrides the logic for parsing the JSON encoded Resource Status data 
Unmarshal JSON unmarshals Resources Map object 
New returns a client server to bidirectionally communicate with ACS The returned struct should have both Connect and Serve called upon it before being used 
Serve begins serving requests using previously registered handlers see Add Request Handler All request handlers should be added prior to making this call as unhandled requests will be discarded 
New Volume Resource returns a docker volume wrapper object 
Desired Terminal returns true if the cgroup s desired status is REMOVED 
Set Desired Status safely sets the desired status of the resource 
Get Desired Status safely returns the desired status of the task 
Set Known Status safely sets the currently known status of the resource 
Get Known Status safely returns the currently known status of the task 
Known Created returns true if the volume s known status is CREATED 
Apply Transition calls the function required to move to the specified status 
Set Applied Status sets the applied status of resource and returns whether the resource is already in a transition 
Status String returns the string of the cgroup resource status 
Set Created At sets the timestamp for resource s creation time 
Get Created At sets the timestamp for resource s creation time 
set Mount Point sets the mountpoint of the created volume This is a read only field hence making this a private function 
Get Mount Point gets the mountpoint of the created volume 
Create performs resource creation 
Cleanup performs resource cleanup 
Marshal JSON marshals Volume Resource object using duplicate struct Volume Resource JSON 
Unmarshal JSON unmarshals Volume Resource object using duplicate struct Volume Resource JSON 
New Mock Client Creator creates a new mock instance 
New ASMClient mocks base method 
New ASMClient indicates an expected call of New ASMClient 
New Transport Protocol returns a Transport Protocol from a string in the task 
String converts Transport Protocol to a string 
Unmarshal JSON for Transport Protocol determines whether to use TCP or UDP setting TCP as the zero value but treating other unrecognized values as errors 
Marshal JSON overrides the logic for JSON encoding the Transport Protocol type 
New Mock Manager creates a new mock instance 
Get Task Credentials mocks base method 
Remove Credentials mocks base method 
Set Task Credentials mocks base method 
Get Docker Auth From ASM makes the api call to the AWS Secrets Manager service to retrieve the docker auth data 
Get Secret From ASM makes the api call to the AWS Secrets Manager service to retrieve the secret value 
New Mock Cgroup Factory creates a new mock instance 
Load mocks base method 
Load indicates an expected call of Load 
New mocks base method 
Load Image helps load the pause container image for the agent 
New Cgroup Resource is used to return an object that implements the Resource interface 
Set Desired Status safely sets the desired status of the resource 
Get Desired Status safely returns the desired status of the task 
Get Name safely returns the name of the resource 
Desired Terminal returns true if the cgroup s desired status is REMOVED 
Known Created returns true if the cgroup s known status is CREATED 
Apply Transition calls the function required to move to the specified status 
Set Known Status safely sets the currently known status of the resource 
update Applied Status Unsafe updates the resource transitioning status 
Set Applied Status sets the applied status of resource and returns whether the resource is already in a transition 
Get Known Status safely returns the currently known status of the task 
Status String returns the string of the cgroup resource status 
Set Created At sets the timestamp for resource s creation time 
Get Created At sets the timestamp for resource s creation time 
Create creates cgroup root for the task 
Cleanup removes the cgroup root created for the task 
Marshal JSON marshals Cgroup Resource object using duplicate struct Cgroup Resource JSON 
Unmarshal JSON unmarshals Cgroup Resource object using duplicate struct Cgroup Resource JSON 
Get Cgroup Root returns cgroup root of the resource 
Get Cgroup Mount Path returns cgroup mount path of the resource 
Initialize initializes the resource fileds in cgroup 
Load Image returns Unsupported Platform Error on the unsupported platform 
New ECRFactory returns an ECRFactory capable of producing ECRSDK clients 
Get Client creates the ECR SDK client based on the authdata 
get Client Config returns the config for the ecr client based on auth Data 
New Mock Audit Logger creates a new mock instance 
Get Container Instance Arn mocks base method 
Get Container Instance Arn indicates an expected call of Get Container Instance Arn 
Log mocks base method 
Log indicates an expected call of Log 
New Mock Info Logger creates a new mock instance 
Info mocks base method 
Info indicates an expected call of Info 
New Error returns an error corresponding to a typed error returned from ACS It is expected that the passed in interface is really a struct which has a Message field of type string In that case the Message will be conveyed as part of the Error string as well as the type It is safe to pass anything into this constructor and it will also work reasonably well with anything fulfilling the error interface 
task Should Be Sent checks whether the event should be sent this includes both task state change and container state change events 
send tries to send an event specified by event To Submit of type event Type to ECS 
send Container Status To ECS invokes the Submit Container State Change API to send a container status change to ECS 
send Task Status To ECS invokes the Submit Task State Change API to send a task status change to ECS 
set Container Change Sent sets the event s container change object as sent 
set Task Change Sent sets the event s task change object as sent 
set Task Attachment Sent sets the event s task attachment object as sent 
Get Secret From SSM makes the api call to the AWS SSM parameter store to retrieve secrets value in batches 
version gen is a simple program that generates the agent s version file containing information about the agent s version commit hash and repository cleanliness 
Association response is a string that s assumed to be in valid JSON format which will be exactly the same as the value of Association Content Value cp is responsible to validate it and deal with it if it s not valid We don t do any decoding base on the encoding because the only encoding that cp currently sends us is identity we don t explicitly model the value field as a struct because we don t want to let agent s implementation depends on the payload format of the association i e eia device for now 
Is Retriable Error returns a boolean indicating whether the call that generated the error can be retried When stopping a container most errors that we can get should be considered retriable However in the case where the container is already stopped or doesn t exist at all there s no sense in retrying 
New Mock File creates a new mock instance 
Chmod mocks base method 
Chmod indicates an expected call of Chmod 
Close indicates an expected call of Close 
Write mocks base method 
New Mock OS creates a new mock instance 
Create mocks base method 
Create indicates an expected call of Create 
Is Not Exist mocks base method 
Open File mocks base method 
Remove All mocks base method 
New Mock SSMClient Creator creates a new mock instance 
New SSMClient mocks base method 
New SSMClient indicates an expected call of New SSMClient 
New Mock EC Metadata Client creates a new mock instance 
Default Credentials mocks base method 
Default Credentials indicates an expected call of Default Credentials 
Get Dynamic Data mocks base method 
Get Metadata indicates an expected call of Get Metadata 
Instance Identity Document mocks base method 
New Mock Http Client creates a new mock instance 
Get Instance Identity Document mocks base method 
Get Metadata indicates an expected call of Get Metadata 
Get User Data mocks base method 
Get User Data indicates an expected call of Get User Data 
New Mock Client creates a new mock instance 
Describe ECSTags For Instance mocks base method 
New Mock Client SDK creates a new mock instance 
Create Tags mocks base method 
Describe Tags mocks base method 
Describe Tags indicates an expected call of Describe Tags 
New State Manager constructs a new State Manager which saves data at the location specified in cfg and operates under the given options The returned State Manager will not save more often than every seconds and will not reliably return errors with Save but will log them appropriately 
Add Saveable is an option that adds a given saveable as one that should be saved under the given name The name must be the same across uses of the statemanager e g program invocations for it to be serialized and deserialized correctly 
Save triggers a save to file though respects a minimum save interval to wait between saves 
Force Save saves the given State to a file It is an atomic operation on POSIX systems by Renaming over the target file This function logs errors at will and does not necessarily expect the caller to handle the error because there s little a caller can do in general other than just keep going In addition the State Manager internally buffers save requests in order to only save at most every STATE SAVE INTERVAL 
Load reads state off the disk from the well known filepath and loads it into the passed State object 
Valid Dependencies takes a task and verifies that it is possible to allow all containers within it to reach the desired status by proceeding in some order 
Dependencies Can Be Resolved verifies that it s possible to transition a target given a group of already handled containers by Essentially it asks is target resolved by by It assumes that everything in by has reached Desired Status and that target is also trying to get there This function is used for verifying that a state should be resolvable not for actually deciding what to do Dependencies Are Resolved should be used for that purpose instead 
Dependencies Are Resolved validates that the target container can be transitioned given the current known state of the containers in by If this function returns true target should be technically able to launch without issues Transitions are between known statuses whether the container can move to the next known status not desired statuses the desired status typically is either RUNNING or STOPPED 
verify Status Resolvable validates that target can be resolved given that target depends on dependencies which are container names and there are existing Containers map from name to container The resolves function passed should return true if the named container is resolved 
verify Container Ordering Status Resolvable validates that target can be resolved given that the depends On containers are resolved and there are existing Containers map from name to container The resolves function passed should return true if the named container is resolved 
on Steady State Is Resolved defines a relationship where a target cannot be created until dependency has reached the steady state Transitions include pulling 
new Agent returns a new ecs Agent object but does not start anything 
print ECSAttributes prints the Agent s ECS Attributes based on its environment 
start starts the ECS Agent 
do Start is the worker invoked by start for starting the ECS Agent This involves initializing the docker task engine state saver image manager credentials manager poll and telemetry sessions api handler etc 
new Task Engine creates a new docker task engine object It tries to load the local state if needed else initializes a new one 
set Cluster In Config sets the cluster name in the config object based on previous state It returns an error if there s a mismatch between the the current cluster name with what s restored from the cluster state 
get EC Instance ID gets the EC instance ID from the metadata service 
new State Manager creates a new state manager object for the task engine Rest of the parameters are pointers and it s expected that all of these will be backfilled when state manager s Load method is invoked 
construct VPCSubnet Attributes returns vpc and subnet IDs of the instance as an attribute list 
register Container Instance registers the container instance ID for the ECS Agent 
reregister Container Instance registers a container instance that has already been registered with ECS This is for cases where the ECS Agent is being restored from a check point 
start Async Routines starts all of the background methods 
start ACSSession starts a session with ECS s Agent Communication service This is a blocking call and only returns when the handler returns 
validate Required Version validates docker version Minimum docker version supported is maps to api version see https docs docker com develop sdk api version matrix 
get Container Instance Tags From EC API will retrieve the tags of this instance remotely 
merge Tags will merge the local tags and ec tags for the overlap part ec tags will be overridden by local tags 
get Host Public IPv Address From EC Metadata will retrieve the Public IPAddress IPv of this instance through the EC API 
Slices Deep Equal checks if slice and slice are equal disregarding order 
Uint Slice To String Slice converts a slice of type uint to a slice of type string It uses strconv Itoa on each element 
Is AWSError Code Equal returns true if the err implements Error interface of awserr and it has the same error code as the passed in error code 
Map To Tags converts a map to a slice of tags 
Credentials Handler Impl is the major logic in Credentials Handler abstract this out because v Credentials Handler also uses the same logic 
process Credentials Request returns the response json containing credentials for the credentials id in the request 
New Task Handler returns a pointer to Task Handler 
Add State Change Event queues up the state change event to be sent to ECS If the event is for a container state change it just gets added to the handler tasks To Container States map If the event is for task state change it triggers the non blocking handler submit Task Events method to submit the batched container state changes and the task state change to ECS 
start Drain Events Ticker starts a ticker that periodically drains the events queue by submitting state change events to the ECS backend 
task State Changes To Send gets a list task state changes for container events that have been batched and not sent beyond the drain Events Frequency threshold 
batch Container Event Unsafe collects container state change events for a given task arn 
flush Batch Unsafe attaches the task arn s container events to Task State Change event by creating the sendable event list It then submits this event to ECS asynchronously 
get Task Events Unsafe gets the event list for the task arn in the sendable Event from task To Event map 
Continuously retries sending an event until it succeeds sleeping between each attempt 
send Change adds the change to the sendable events queue It triggers the handler s submit Task Events async method to submit this change if there s no go routines already sending changes for this event list 
submit First Event submits the first event for the task from the event list It returns true if the list became empty after submitting the event Else it returns false An error is returned if there was an error with submitting the state change to ECS The error is used by the backoff handler to backoff before retrying the state change submission for the first event 
get Tasks To Events Len returns the length of the tasks To Events map It is used only in the test code to ascertain that map has been cleaned up 
handle Invalid Param Exception removes the event from event queue when its parameters are invalid to reduce redundant API call 
New Mock Control creates a new mock instance 
Create mocks base method 
Exists mocks base method 
Init mocks base method 
Init indicates an expected call of Init 
Remove indicates an expected call of Remove 
New Queue creates a queue 
Reset resets the stats queue 
Add adds a new set of container stats to the queue 
Get Last Stat returns the last recorded raw statistics object from docker 
Get Raw Usage Stats gets the array of most recent raw Usage Stats in descending order of timestamps 
get CWStats Set gets the stats set for either CPU or Memory based on the function pointer 
Status String returns a human readable string representation of this object 
Unmarshal JSON overrides the logic for parsing the JSON encoded Resource Status data 
New Mock CNIClient creates a new mock instance 
Capabilities mocks base method 
Capabilities indicates an expected call of Capabilities 
Cleanup NS mocks base method 
Release IPResource mocks base method 
Setup NS mocks base method 
Setup NS indicates an expected call of Setup NS 
Container Association Handler returns the handler method for handling container associations requests 
Container Association Handler returns the handler method for handling container association requests 
docker Stats To Container Stats returns a new object of the Container Stats object from docker stats 
Get Mock Server returns a mock websocket server that can be started up as TLS or not TODO replace with gomock 
String returns a human readable string representation of this object 
Marshal JSON overrides the logic for JSON encoding the Resource Status type 
Unmarshal JSON overrides the logic for parsing the JSON encoded Resource Status data 
New Manager creates a metadata Manager for a given Docker Task Engine settings 
Create creates the metadata file and adds the metadata directory to the container s mounted host volumes Pointer host Config is modified directly so there is risk of concurrency errors 
Update updates the metadata file after container starts and dynamic metadata is available 
Clean removes the metadata files of all containers associated with a task 
Get Authconfig retrieves the correct auth configuration for the given repository 
Normalize all auth types into a uniform docker Auths type On error any appropriate information will be logged and an empty docker Auths will be returned 
strip Registry Schema normalizes the registry url by removing http https from it because registries only support those two schemas this function can be quite naive 
Serve HTTP logs the method and remote address of the request 
New Jittered Ticker works like a time Ticker except with randomly distributed ticks between start and end duration 
capabilities returns the supported capabilities of this agent docker client pair Currently the following capabilities are possible com amazonaws ecs capability privileged container com amazonaws ecs capability docker remote api com amazonaws ecs capability docker remote api com amazonaws ecs capability docker remote api com amazonaws ecs capability docker remote api com amazonaws ecs capability logging driver json file com amazonaws ecs capability logging driver syslog com amazonaws ecs capability logging driver fluentd com amazonaws ecs capability logging driver journald com amazonaws ecs capability logging driver gelf com amazonaws ecs capability logging driver none com amazonaws ecs capability selinux com amazonaws ecs capability apparmor com amazonaws ecs capability ecr auth com amazonaws ecs capability task iam role com amazonaws ecs capability task iam role network host ecs capability docker volume driver driver Name ecs capability task eni ecs capability task eni block instance metadata ecs capability execution role ecr pull ecs capability execution role awslogs ecs capability container health check ecs capability private registry authentication secretsmanager ecs capability secrets ssm environment variables ecs capability secrets ssm bootstrap log driver ecs capability pid ipc namespace sharing ecs capability ecr endpoint ecs capability secrets asm environment variables ecs capability secrets asm bootstrap log driver ecs capability aws appmesh ecs capability task eia 
get Task ENIPlugin Version Attribute returns the version information of the ECS CNI plugins It just executes the ENI plugin as the assumption is that these plugins are packaged with the ECS Agent which means all of the other plugins should also emit the same version information Also the version information doesn t contribute to placement decisions and just serves as additional debugging information 
New Mock ECSSDK creates a new mock instance 
Create Cluster mocks base method 
Discover Poll Endpoint mocks base method 
List Tags For Resource mocks base method 
Register Container Instance mocks base method 
Register Container Instance indicates an expected call of Register Container Instance 
New Mock ECSSubmit State SDK creates a new mock instance 
Submit Container State Change mocks base method 
Submit Container State Change indicates an expected call of Submit Container State Change 
Submit Task State Change mocks base method 
New Mock ECSClient creates a new mock instance 
Discover Poll Endpoint mocks base method 
Discover Poll Endpoint indicates an expected call of Discover Poll Endpoint 
Get Resource Tags mocks base method 
Register Container Instance mocks base method 
Register Container Instance indicates an expected call of Register Container Instance 
Submit Container State Change mocks base method 
Submit Task State Change mocks base method 
New Task Engine returns a default Task Engine 
New Mock State Manager creates a new mock instance 
New State Manager mocks base method 
New State Manager indicates an expected call of New State Manager 
New Mock Saveable Option creates a new mock instance 
Add Saveable mocks base method 
Add Saveable indicates an expected call of Add Saveable 
New ECSClient creates a new ECSClient interface object 
Create Cluster creates a cluster from a given name and returns its arn 
Register Container Instance calculates the appropriate resources creates the default cluster if necessary and returns the registered Container Instance ARN if successful Supplying a non empty container instance ARN allows a container instance to update its registered resources 
Connect opens a connection to the backend and upgrades it to a websocket Calls to Make Request can be made after calling this but responses will not be receivable until Serve is also called 
Is Ready gives a boolean response that informs the caller if the websocket connection is fully established 
Set Read Deadline sets the read deadline for the websocket connection A read timeout results in an io error if there are any outstanding reads that exceed the deadline 
Disconnect disconnects the connection 
Add Request Handler adds a request handler to this client A request handler must be a function taking a single argument and that argument must be a pointer to a recognized ecsacs struct E g if you desired to handle messages from acs of type Foo Message you would pass the following handler in func message ecsacs Foo Message This function will panic if the passed in function does not have one pointer argument or the argument is not a recognized type Additionally the request handler will block processing of further messages on this connection so it s important that it return quickly 
Make Request makes a request using the given input Note the input MUST be a pointer to a valid backend type that this client recognises 
Write Message wraps the low level websocket write method with a lock 
Consume Messages reads messages from the websocket connection and handles read messages from an active connection 
Create Request Message creates the request json message using the given input Note the input MUST be a pointer to a valid backend type that this client recognises 
handle Message dispatches a message to the correct request Handler for its type If no request handler is found the message is discarded 
See https github com gorilla websocket blob f f a ebfbc f b ccdc fddd b c f conn go L 
All Tasks returns all of the tasks 
All Image States returns all of the image Image States 
All ENIAttachments returns all the enis managed by ecs on the instance 
ENIBy Mac returns the eni object that match the give mac address 
Add ENIAttachment adds the eni into the state 
Remove ENIAttachment removes the eni from state and stop managing 
Get All Container IDs returns all of the Container Ids 
Container By ID returns an apicontainer Docker Container for a given container ID 
Container Map By Arn returns a map of containers belonging to a particular task ARN 
Task By Short ID retrieves the task of a given docker short container id 
Task By ID retrieves the task of a given docker container id 
Task By Arn returns a task for a given ARN 
Add Task adds a new task to the state 
Add Container adds a container to the state If the container has been added with only a name and no docker id this updates the state to include the docker id 
Add Image State adds an image Image State to be stored 
Remove Task removes a task from this state It removes all containers and other associated metadata It does acquire the write lock 
task To IPUnsafe gets the ip address for a given task arn 
store IDTo Container Task Unsafe stores the container in the id To Container and id To Task maps The key to the maps is either the Docker generated ID or the agent generated name if the ID is not available If the container is updated with an ID a subsequent call to this function will update the map to use the ID as the key 
remove IDTo Container Task Unsafe removes the container from the id To Container and id To Task maps They key to the maps is either the Docker generated ID or the agent generated name if the ID is not available This function assumes that the ID takes precedence and will delete by the ID when the ID is available 
remove V Endpoint IDTo Task Container Unsafe removes the container from v Endpoint IDTo Task and v Endpoint IDTo Docker ID maps 
Remove Image State removes an image Image State 
Add Task IPAddress adds ip adddress for a task arn into the state 
Get Task By IPAddress gets the task arn for an IP address 
store V Endpoint IDTo Task Unsafe adds v Endpoint ID task ARN mapping to state 
store V Endpoint IDTo Container Name Unsafe adds v Endpoint ID docker ID mapping to state 
Docker IDBy V Endpoint ID returns a docker ID for a given v endpoint ID 
Task ARNBy V Endpoint ID returns a task ARN for a given v endpoint ID 
v Handlers Setup adds all handlers except Credentials Handler in v package to the server mux 
Serve Introspection HTTPEndpoint serves information about this agent container Instance and tasks running on it V here indicates the hostname version of this server instead of the handler versions i e V server can include V and V handlers 
String returns a human readable string representation of Docker Container 
New Container With Steady State creates a new Container object with the specified steady state Containers that need the non default steady state set will use this method instead of setting it directly 
Get Known Status returns the known status of the container 
Set Known Status sets the known status of the container and update the container applied status 
Get Desired Status gets the desired status of the container 
Set Desired Status sets the desired status of the container 
Get Sent Status safely returns the Sent Status Unsafe of the container 
Set Sent Status safely sets the Sent Status Unsafe of the container 
Set Known Exit Code sets exit code field in container struct 
Get Known Exit Code returns the container exit code 
Set Registry Auth Credentials sets the credentials for pulling image from ECR 
Should Pull With Execution Role returns whether this container has its own ECR credentials 
String returns a human readable string representation of this object 
Get Steady State Status returns the steady state status for the container If Container steady State is not initialized the default steady state status defined by default Container Steady State Status is returned The pause container s steady state differs from that of other containers as the pause container can reach its teady state once networking resources have been provisioned for it which is done in the Container Resources Provisioned state 
Is Known Steady State returns true if the Known State of the container equals the steady State defined for the container 
Get Next Known State Progression returns the state that the container should progress to based on its Known State The progression is incremental until the container reaches its steady state From then on it transitions to Container Stopped For example a if the steady state of the container is defined as Container Running the progression is Container None Pulled Created Running Stopped Zombie b if the steady state of the container is defined as Container Resources Provisioned the progression is Container None Pulled Created Running Provisioned Stopped Zombie c if the steady state of the container is defined as Container Created the progression is Container None Pulled Created Stopped Zombie 
Is Metadata File Updated returns true if the metadata file has been once the metadata file is ready and will no longer change 
Set Metadata File Updated sets the container s Metadata File Updated status to true 
Is Essential returns whether the container is an essential container or not 
Set Created At sets the timestamp for container s creation time 
Set Started At sets the timestamp for container s start time 
Set Finished At sets the timestamp for container s stopped time 
Get Created At sets the timestamp for container s creation time 
Get Started At sets the timestamp for container s start time 
Get Finished At sets the timestamp for container s stopped time 
Set Labels sets the labels for a container 
Get Labels gets the labels for a container 
Set Known Port Bindings sets the ports for a container 
Get Known Port Bindings gets the ports for a container 
Set Volumes sets the volumes mounted in a container 
Get Volumes returns the volumes mounted in a container 
Set Network Settings sets the networks field in a container 
Get Network Settings returns the networks field in a container 
Set Network Mode sets the network mode of the container 
Get Network Mode returns the network mode of the container 
Set Health Status sets the container health status 
Get Health Status returns the container health information 
Build Container Dependency adds a new dependency container and satisfied status to the dependent container 
Build Resource Dependency adds a new resource dependency by taking in the required status of the resource that satisfies the dependency and the dependent container status whose transition is dependent on the resource example if container s PULLED transition is dependent on volume resource s CREATED status then Required Status Volume Created and dependent Status Container Pulled 
update Applied Status Unsafe updates the container transitioning status 
Set Applied Status sets the applied status of container and returns whether the container is already in a transition 
Get Applied Status returns the transitioning status of container 
Should Pull With ASMAuth returns true if this container needs to retrieve private registry authentication data from ASM 
Set ASMDocker Auth Config add the docker auth config data to the Registry Authentication struct held by the container this is then passed down to the docker client to pull the image 
Set V Endpoint ID sets the v endpoint id of container 
Get V Endpoint ID returns the v endpoint id of container 
Inject V Metadata Endpoint injects the v metadata endpoint as an environment variable for a container 
Should Create With SSMSecret returns true if this container needs to get secret value from SSM Parameter Store 
Should Create With ASMSecret returns true if this container needs to get secret value from AWS Secrets Manager 
Merge Environment Variables appends additional env Var Name env Var Value pairs to the the container s enviornment values structure 
Decode Data decodes a raw message into its type E g An ACS message of the form type Foo Message message foo will be decoded into the corresponding ecsacs Foo Message type The type string Foo Message will also be returned as a convenience 
Decode Connection Error decodes some of the connection errors returned by the backend Some differ from the usual ones in that they do not have a type and message field but rather are of the form Error Type Error Message 
get Task IDfrom ARN parses a task ARN and produces the task ID A task ARN has format arn aws ecs region account id task task id For a correctly formatted ARN we split it over into parts the last part containing the task id which we extract by splitting it by This function should be eventually be replaced by a standardized ARN parsing module 
get Metadata File Path gives the metadata file path for any agent managed container 
get Task Metadata Dir acquires the directory with all of the metadata files of a given task 
Marshal JSON is used to serialize the type to json per the Marshaller interface 
Unmarshal JSON is used to deserialize json types into Conditional per the Unmarshaller interface 
New ASMSecret Resource creates a new ASMSecret Resource object 
Set Desired Status safely sets the desired status of the resource 
Get Desired Status safely returns the desired status of the task 
Get Name safely returns the name of the resource 
Desired Terminal returns true if the secret s desired status is REMOVED 
Known Created returns true if the secret s known status is CREATED 
Set Known Status safely sets the currently known status of the resource 
update Applied Status Unsafe updates the resource transitioning status 
Set Applied Status sets the applied status of resource and returns whether the resource is already in a transition 
Get Known Status safely returns the currently known status of the task 
Status String returns the string of the cgroup resource status 
It spins up multiple goroutines in order to retrieve values in parallel 
retrieve ASMSecret Value reads secret value from cache first if not exists call Get Secret From ASM to retrieve value AWS secrets Manager 
get Required Secrets returns the required Secrets field of asmsecret task resource 
get Execution Credentials ID returns the execution role s credential ID 
clear ASMSecret Value cycles through the collection of secret value data and removes them from the task 
Marshal JSON serialises the ASMSecret Resource struct to JSON 
Unmarshal JSON deserialises the raw JSON to a ASMSecret Resource struct 
Create creates a new cgroup based off the spec post validation 
Remove is used to delete the cgroup 
Exists is used to verify the existence of a cgroup 
validate Cgroup Spec checks the cgroup spec for valid path and specifications 
When pulling an image the docker api will pull and then subsequently unzip the downloaded artifacts Docker does not separate the pull from the unpack step What this means is that this timeout doesn t tick while unpacking the downloaded files This only causes noticeable impact with large files but we should investigate improving this 
New Image Manager returns a new Image Manager 
Record Container Reference adds container reference to the corresponding image State object 
Remove Container Reference From Image State removes container reference from the corresponding image State object 
get Image State returns the Image State object that the container is referenced at 
remove Image State removes the image State from the list of image State objects in Image Manager 
Merge merges two config files preferring the ones on the left Any nil or zero values present in the left that are not present in the right will be overridden 
New Config returns a config struct created by merging environment variables a config file and EC Metadata info The config struct it returns can be used even if an error is returned An error is returned however if the config is incomplete in some way that is considered fatal 
trim Whitespace trims whitespace from all string cfg values with the trim tag 
validate And Override Bounds performs validation over members of the Config struct and check the value against the minimum required value 
check Missing And Deprecated checks all zero valued fields for tags of the form missing STRING and acts based on that string Current options are fatal warn Fatal will result in an error being returned warn will result in a warning that the field is missing being logged 
complete returns true if all fields of the config are populated nonzero 
user Data Config reads configuration JSON from instance s userdata It doesn t return any error as it s entirely optional to configure the ECS agent using this method Example ECSAgent Configuration Cluster default 
environment Config reads the given configs from the environment and attempts to convert them to the given type 
String returns a lossy string representation of the config suitable for human readable display Consequently it should not return any sensitive information 
New Task Stats Response returns a new task stats response object 
New Session creates a new Session object 
Start starts the session It ll forever keep trying to connect to ACS unless the context is cancelled If the context is cancelled Start would return with the error code returned by the context If the instance is deregistered Start would emit an event to the deregister instance event stream and sets the connection backoff time to hour 
start Session Once creates a session with ACS and handles requests using the passed in arguments 
start ACSSession starts a session with ACS It adds request handlers for various kinds of messages expected from ACS It returns on server disconnection or when the context is cancelled 
wait For Duration waits for the specified duration of time If the wait is interrupted it returns a false value Else it returns true indicating completion of wait time 
create ACSClient creates the ACS Client using the specified URL 
acs Ws URL returns the websocket url for ACS given the endpoint 
new Disconnection Timer creates a new time object with a callback to disconnect from ACS on inactivity 
any Message Handler handles any server message Any server message means the connection is active and thus the heartbeat disconnect should not occur 
validate IPRules validates IP rules created in the container network namespace 
Write JSONTo Response writes the header JSON response to a Response Writer and log the error if necessary 
Value From Request returns the value of a field in the http request The boolean value is set to true if the field exists in the query 
Get Mux Value From Request extracts the mux value from the request using a gorilla mux name 
Construct Mux Var constructs the mux var that is used in the gorilla mux styled path example id id 
Limit Reached Handler logs the throttled request in the credentials audit log 
Unmarshal JSON decodes the Transition Dependency Set tag in the JSON encoded string into the Transition Dependencies Map object 
Add adds the given delta to the waitgroup at the given sequence 
Done decrements the waitgroup at the given sequence by one 
Wait waits for all waitgroups at or below the given sequence to complete Please note that this is INCLUSIVE of the sequence 
New Mock Cgroup creates a new mock instance 
Add mocks base method 
Add indicates an expected call of Add 
Delete indicates an expected call of Delete 
Move To mocks base method 
New mocks base method 
OOMEvent FD mocks base method 
Processes mocks base method 
Stat mocks base method 
State mocks base method 
Subsystems mocks base method 
Update mocks base method 
Task Stats Handler returns the handler method for handling task stats requests 
Get Known APIVersions returns all of the API versions that we know about It doesn t care if the version is supported by Docker or ECS agent 
New Mock Udev creates a new mock instance 
Close indicates an expected call of Close 
Monitor mocks base method 
Monitor indicates an expected call of Monitor 
Validate inspects the fields of the type to determine if they are valid 
Set Inference Devices sets the Inference Devices field s value 
Set Client Token sets the Client Token field s value 
Validate inspects the fields of the type to determine if they are valid 
Set Device Name sets the Device Name field s value 
Set Device Type sets the Device Type field s value 
Set Client Token sets the Client Token field s value 
Validate inspects the fields of the type to determine if they are valid 
Set Inference Accelerators sets the Inference Accelerators field s value 
Validate inspects the fields of the type to determine if they are valid 
Set Inference Accelerators sets the Inference Accelerators field s value 
Default Config returns the default configuration for Linux 
platform String returns platform specific config data that can be serialized to string for debugging 
Map Container To Task Status maps the container status to the corresponding task status The transition map is illustrated below Container None Pulled Created Running Provisioned Stopped Zombie Task None Created Running Stopped 
Map Task To Container Status maps the task status to the corresponding container status 
Error returns the error string for Multi Err 
New Multi Error creates a new Mult Err object 
Get Pull Credentials returns the pull credentials in the auth 
Set Pull Credentials sets the credentials to pull from ECR in the auth 
Get Docker Auth Config returns the pull credentials in the auth 
Set Docker Auth Config sets the credentials to pull from ECR in the auth 
New Mock Secrets Manager API creates a new mock instance 
Cancel Rotate Secret mocks base method 
Cancel Rotate Secret indicates an expected call of Cancel Rotate Secret 
Cancel Rotate Secret Request mocks base method 
Cancel Rotate Secret With Context mocks base method 
Create Secret mocks base method 
Create Secret Request mocks base method 
Create Secret With Context mocks base method 
Delete Resource Policy mocks base method 
Delete Resource Policy Request mocks base method 
Delete Resource Policy With Context mocks base method 
Delete Secret mocks base method 
Delete Secret Request mocks base method 
Delete Secret With Context mocks base method 
Describe Secret mocks base method 
Describe Secret Request mocks base method 
Describe Secret With Context mocks base method 
Get Random Password mocks base method 
Get Random Password Request mocks base method 
Get Random Password With Context mocks base method 
Get Resource Policy mocks base method 
Get Resource Policy Request mocks base method 
Get Resource Policy With Context mocks base method 
Get Secret Value mocks base method 
Get Secret Value Request mocks base method 
Get Secret Value With Context mocks base method 
List Secret Version Ids mocks base method 
List Secret Version Ids Pages mocks base method 
List Secret Version Ids Pages With Context mocks base method 
List Secret Version Ids Request mocks base method 
List Secrets mocks base method 
List Secrets Pages mocks base method 
List Secrets Request mocks base method 
List Secrets With Context mocks base method 
Put Resource Policy mocks base method 
Put Resource Policy Request mocks base method 
Put Resource Policy With Context mocks base method 
Put Secret Value mocks base method 
Put Secret Value Request mocks base method 
Put Secret Value With Context mocks base method 
Restore Secret mocks base method 
Restore Secret Request mocks base method 
Restore Secret With Context mocks base method 
Rotate Secret mocks base method 
Rotate Secret Request mocks base method 
Rotate Secret With Context mocks base method 
Tag Resource mocks base method 
Tag Resource Request mocks base method 
Untag Resource mocks base method 
Untag Resource Request mocks base method 
Untag Resource With Context mocks base method 
Update Secret mocks base method 
Update Secret Request mocks base method 
Update Secret Version Stage mocks base method 
Update Secret Version Stage Request mocks base method 
Update Secret Version Stage With Context mocks base method 
Update Secret Version Stage With Context indicates an expected call of Update Secret Version Stage With Context 
Update Secret With Context mocks base method 
create Binds Env will do the appropriate formatting to add a new mount in a container s Host Config and add the metadata file path as an environment variable ECS CONTAINER METADATA FILE We add an additional uuid to the path to ensure it does not conflict with user mounts 
write To Metadata puts the metadata into JSON format and writes into the metadata file 
parse Metadata At Container Create gathers metadata from task and cluster configurations then packages it for JSON Marshaling We use this version to get data available prior to container creation Since we accept incomplete metadata fields we should not return errors here and handle them at this or the above stage 
parse Metadata gathers metadata from a docker container and task configuration and data then packages it for JSON Marshaling Since we accept incomplete metadata fields we should not return errors here and handle them at this or the above stage 
parse Docker Container Metadata parses the metadata in a docker container and packages this data for JSON marshaling Since we accept incomplete metadata fields we should not return errors here and handle them at this stage 
parse Network Metadata parses the docker Network Settings struct and packages the desired metadata for JSON marshaling Since we accept incomplete metadata fields we should not return errors here and handle them at this stage 
Initialize sets the fields of Nvidia GPU Manager struct 
Set GPUIDs sets the GPUIDs 
Set Driver Version is a setter for nvidia driver version 
Get Driver Version is a getter for nvidia driver version 
Get Devices returns the GPU devices as Platform Devices 
New Mock License Provider creates a new mock instance 
Get Text mocks base method 
Get Text indicates an expected call of Get Text 
New Mock Backoff creates a new mock instance 
Duration mocks base method 
Duration indicates an expected call of Duration 
Allows unmarshaling from byte to Metadata Status text form 
After sleeps for the given duration and then writes to to the returned channel 
After Func waits for the duration to elapse and then calls f in its own goroutine It returns a Timer that can be used to cancel the call using its Stop method 
Since returns the time different from Now and the given time t 
New Mock Task Resource creates a new mock instance 
Apply Transition mocks base method 
Cleanup mocks base method 
Get Created At mocks base method 
Get Terminal Reason mocks base method 
Initialize mocks base method 
Initialize indicates an expected call of Initialize 
Known Created mocks base method 
Marshal JSON indicates an expected call of Marshal JSON 
Next Known State mocks base method 
Set Applied Status mocks base method 
Set Applied Status indicates an expected call of Set Applied Status 
Set Created At mocks base method 
Set Desired Status mocks base method 
Set Known Status mocks base method 
Status String mocks base method 
New Mock Loader creates a new mock instance 
Load Image mocks base method 
Load Image indicates an expected call of Load Image 
Error returns an error string for the Container Not Found error 
String returns a human readable string of the container change event 
Unmarshal JSON for Task Volume determines the name and volume type and unmarshals it into the appropriate Host Volume fulfilling interfaces 
Marshal JSON overrides the logic for JSON encoding a Task Volume object 
check Compatibility for linux ensures that the running task engine is capable for running with the Task CPUMem Limit flag enabled It will disable the feature if it determines that it is incompatible and the feature isn t explicitly enabled 
SSM Client will automatically retry times when has throttling error 
Get Client will replace some versions of Docker on Windows We need this because agent assumes that it can always call older versions of the docker API 
get Windows Replaceable Versions returns the set of versions that agent will report as Docker 
get Windows Supported Versions returns the set of remote api versions that are supported by agent in windows 
Port Binding From Docker Port Binding constructs a Port Binding slice from a docker Network Settings Ports map 
New ASMAuth Resource creates a new ASMAuth Resource object 
Set Desired Status safely sets the desired status of the resource 
Get Desired Status safely returns the desired status of the task 
Get Name safely returns the name of the resource 
Desired Terminal returns true if the cgroup s desired status is REMOVED 
Known Created returns true if the cgroup s known status is CREATED 
Apply Transition calls the function required to move to the specified status 
Set Known Status safely sets the currently known status of the resource 
update Applied Status Unsafe updates the resource transitioning status 
Set Applied Status sets the applied status of resource and returns whether the resource is already in a transition 
Get Known Status safely returns the currently known status of the task 
Status String returns the string of the cgroup resource status 
Set Created At sets the timestamp for resource s creation time 
Get Created At sets the timestamp for resource s creation time 
Create fetches credentials from ASM 
Get Required ASMResources returns the list of ASMAuth Data that has to be retrieved from AWS Secrets Manager 
Get Execution Credentials ID returns the execution role s credential ID 
clear ASMDocker Auth Config cycles through the collection of docker private registry auth data and removes them from the task 
Get ASMDocker Auth Config retrieves the docker private registry auth data from the task 
Marshal JSON serialises the ASMAuth Resource struct to JSON 
Unmarshal JSON deserialises the raw JSON to a ASMAuth Resource struct 
Container Metadata Handler returns the handler method for handling container metadata requests 
Get Container Response gets container response for v metadata 
Get Container Network Metadata returns the network metadata for the container 
Initialize fills the resource fileds 
Start Default Termination Handler defines a default termination handler suitable for running in a process 
Final Save should be called immediately before exiting and only before exiting in order to flush tasks to disk It waits a short timeout for state to settle if necessary If unable to reach a steady state and save within this short timeout it returns an error 
String formats the cach Key as a string 
New ECRAuth Provider returns a Docker Auth Provider that can handle retrieve credentials for pulling from Amazon EC Container Registry 
Get Authconfig retrieves the correct auth configuration for the given repository 
get Authconfig From Cache retrieves the token from cache 
get Auth Config From ECR calls the ECR API to get docker auth config 
Is Token Valid checks the token is still within it s expiration window We early expire to allow for timing in calls and add jitter to avoid refreshing all of the tokens at once 
create Task Response creates JSON response and sets the http status code for the task queried 
Task Container Metadata Handler creates response for the v tasks API Lists all tasks if the request doesn t contain any fields Returns a Task if either of dockerid or taskarn are specified in the request 
New Task State Change Event creates a new task state change event 
New Container State Change Event creates a new container state change event 
String returns a human readable string representation of this object 
Set Task Timestamps adds the timestamp information of task into the event to be sent by Submit Task State Change 
Should Be Reported checks if the statechange should be reported to backend 
String returns a human readable string representation of this object 
Get IPV Addresses returns a list of ipv addresses allocated to the ENI 
Get IPV Addresses returns a list of ipv addresses allocated to the ENI 
String returns a human readable version of the ENI object 
ENIFrom ACS validates the information from acs message and create the ENI object 
Validate Task ENI validates the eni informaiton sent from acs 
New Mock Plugins creates a new mock instance 
Scan mocks base method 
Scan indicates an expected call of Scan 
Task From ACS translates ecsacs Task to apitask Task by first marshaling the received ecsacs Task to json and unmarshaling it as apitask Task 
Post Unmarshal Task is run after a task has been unmarshalled but before it has been run It is possible it will be subsequently called after that and should be able to handle such an occurrence appropriately e g behave idempotently 
initialize Docker Volumes checks the volume resource in the task to determine if the agent should create the volume before creating the container 
add Task Scoped Volumes adds the task scoped volume into task resources and updates container dependency 
add Shared Volumes adds shared volume into task resources and updates container dependency 
update Container Volume Dependency adds the volume resource to container dependency 
initialize Credentials Endpoint sets the credentials endpoint for all containers in a task if needed 
initialize Containers V Metadata Endpoint generates an v endpoint id for each container constructs the v metadata endpoint and injects it as an environment variable 
requires ASMDocker Auth Data returns true if atleast one container in the task needs to retrieve private registry authentication data from ASM 
initialize ASMAuth Resource builds the resource dependency map for the ASM auth resource 
requires SSMSecret returns true if at least one container in the task needs to retrieve secret from SSM parameter 
initialize SSMSecret Resource builds the resource dependency map for the SSM ssmsecret resource 
get All SSMSecret Requirements stores all secrets in a map whose key is region and value is all secrets in that region 
requires ASMSecret returns true if at least one container in the task needs to retrieve secret from AWS Secrets Manager 
initialize ASMSecret Resource builds the resource dependency map for the asmsecret resource 
get All ASMSecret Requirements stores secrets in a task in a map 
Build CNIConfig constructs the cni configuration from eni 
convert ENITo CNIConfig converts input eni config into cni config 
convert App Mesh To CNIConfig converts input app mesh config into cni config 
Container By Name returns the Container for the given name 
Host Volume By Name returns the task Volume for the given a volume name in that task The second return value indicates the presence of that volume 
Update Mount Points updates the mount points of volumes that were created without specifying a host path This is used as part of the empty host volume feature 
update Task Known Status updates the given task s status based on its container s status It updates to the minimum of all containers no matter what It returns a Task Status indicating what change occurred or Task Status None if there was no change Invariant task known status is the minimum of container known status 
get Earliest Known Task Status For Containers gets the lowest earliest task status based on the known statuses of all containers in the task 
Docker Config converts the given container in this task to the format of the Docker SDK Config struct 
Docker Host Config construct the configuration recognized by docker 
Apply Execution Role Logs Auth will check whether the task has execution role credentials and add the genereated credentials endpoint to the associated Host Config 
Requires an apicontainer Container and returns the Resources for the Host Config struct 
should Override Network Mode returns true if the network mode of the container needs to be overridden It also returns the override string in this case It returns false otherwise 
override DNS overrides a container s host config if the following conditions are true Task has an ENI associated with it ENI has custom DNS IPs and search list associated with it This should only be done for the pause container as other containers inherit etc resolv conf of this container they share the network namespace 
apply ENIHostname adds the hostname provided by the ENI message to the container s docker config At the time of implmentation we are only using it to configure the pause container for awsvpc tasks 
generate ENIExtra Hosts returns a slice of strings of the form hostname ip that is generated using the hostname and ip addresses allocated to the ENI 
should Override PIDMode returns true if the PIDMode of the container needs to be overridden It also returns the override string in this case It returns false otherwise 
should Override IPCMode returns true if the IPCMode of the container needs to be overridden It also returns the override string in this case It returns false otherwise 
Update Status updates a task s known and desired statuses to be compatible with all of its containers It will return a bool indicating if there was a change 
Update Desired Status sets the known status of the task 
update Task Desired Status Unsafe determines what status the task should properly be at based on the containers statuses Invariant task desired status must be stopped if any essential container is stopped 
update Container Desired Status Unsafe sets all container s desired status s to the task s desired status Invariant container desired status is task desired status converted to container status Note task desired status and container desired status is typically only RUNNING or STOPPED 
update Resource Desired Status Unsafe sets all resources desired status depending on the task s desired status TODO Create a mapping of resource status to the corresponding task status and use it here 
Set Known Status sets the known status of the task 
Get Known Status gets the Known Status of the task 
Get Known Status Time gets the Known Status Time of the task 
Set Credentials ID sets the credentials ID for the task 
Get Credentials ID gets the credentials ID for the task 
Set Execution Role Credentials ID sets the ID for the task execution role credentials 
Get Execution Credentials ID gets the credentials ID for the task 
Get Desired Status gets the desired status of the task 
Set Desired Status sets the desired status of the task 
Get Sent Status safely returns the Sent Status of the task 
Set Sent Status safely sets the Sent Status of the task 
Set Task ENI sets the eni information of the task 
Get Task ENI returns the eni of task for now task can only have one enis 
Set App Mesh sets the app mesh config of the task 
Get App Mesh returns the app mesh config of the task 
Get Stop Sequence Number returns the stop sequence number of a task 
Set Stop Sequence Number sets the stop seqence number of a task 
Set Pull Started At sets the task pullstartedat timestamp and returns whether this field was updated or not 
Get Pull Started At returns the Pull Started At timestamp 
Set Pull Stopped At sets the task pullstoppedat timestamp 
Get Pull Stopped At returns the Pull Stopped At timestamp 
Set Execution Stopped At sets the Execution Stopped At timestamp of the task 
Get Execution Stopped At returns the task execution Stopped At timestamp 
String returns a human readable string representation of this object 
string Unsafe returns a human readable string representation of this object 
Get ID is used to retrieve the task ID from task ARN Reference http docs aws amazon com general latest gr aws arns and namespaces html arn syntax ecs 
Record Execution Stopped At checks if this is an essential container stopped and set the task execution Stopped At timestamps 
Get Resources returns the list of task resources from Resources Map 
get Resources Unsafe returns the list of task resources from Resources Map 
Add Resource adds a resource to Resources Map 
Set Terminal Reason sets the terminal Reason string and this can only be set once per the task s lifecycle This field does not accept updates 
Get Terminal Reason retrieves the terminal Reason string 
Populate ASMAuth Data sets docker auth credentials for a container 
get SSMSecrets Resource retrieves ssmsecret resource from resource map 
Populate Secrets appends secrets to container s env var map and hostconfig section 
get ASMSecrets Resource retrieves asmsecret resource from resource map 
Initialize Resources initializes the required field in the task on agent restart Some of the fields in task isn t saved in the agent state file agent needs to initialize these fields before processing the task eg docker client in resource 
Retrieves a Task s PIDMode 
Retrieves a Task s IPCMode 
Association By Type And Container gets a list of names of all the associations associated with a container and of a certain type 
Association By Type And Name gets an association of a certain type and name 
new Attach ENIHandler returns an instance of the attach ENIHandler struct 
handler Func returns a function to enqueue requests onto attach ENIHandler buffer 
handle Messages handles each message one at a time 
handle Single Message acks the message received 
add ENIAttachment To State adds the eni info to the state 
validate Attach Task Network Interfaces Message performs validation checks on the Attach Task Network Interfaces Message 
Force Save mocks base method 
Force Save indicates an expected call of Force Save 
Unmarshal JSON overrides the logic for parsing the JSON encoded Container Overrides data This custom unmarshaller is needed because the json sent to us as a string rather than a fully typed object We support both formats in the hopes that one day everything will be fully typed Note the json string tag DOES NOT apply here it DOES NOT work with struct types only ints floats etc We re basically doing that though We also intentionally fail if there are any keys we were unable to unmarshal into our struct 
New Mock Client Server creates a new mock instance 
Add Request Handler mocks base method 
Add Request Handler indicates an expected call of Add Request Handler 
Connect indicates an expected call of Connect 
Disconnect mocks base method 
Is Connected mocks base method 
Make Request mocks base method 
Set Any Request Handler mocks base method 
Set Connection mocks base method 
Set Read Deadline mocks base method 
Write Message mocks base method 
New Simple Backoff creates a Backoff which ranges from min to max increasing by multiple each time t start multiple n for the nth iteration It also adds and yes the jitter is always added never subtracted a random amount of jitter up to jitter Multiple percent that is jitter Multiple is no jitter is added jitter The total time may exceed max when accounting for jitter such that the absolute max is max max jiter Multiple 
String returns a human readable string representation of this object 
Should Report To Backend returns true if the container status is recognized as a valid state by ECS Note that not all container statuses are recognized by ECS or map to ECS states 
Backend Status maps the internal container status in the agent to that in the backend 
Unmarshal JSON overrides the logic for parsing the JSON encoded Container Status data 
Marshal JSON overrides the logic for JSON encoding the Container Status type 
Unmarshal JSON overrides the logic for parsing the JSON encoded container health data 
Marshal JSON overrides the logic for JSON encoding the Container Health Status type 
Initializes the Global Metrics Engine used throughout Agent Currently we use the Prometheus Global Default Registerer which also collecs basic Go application metrics that we use like memory usage In future cases we can use a custom Prometheus Registry to group metrics For unit testing purposes we only focus on API calls and use our own Registry 
We create a Metrics Client for all managed APIs APIs for which we will collect metrics 
Records a call s start and returns a function to be deferred Wrapper functions will use this function for Generic Metrics Clients If Metrics collection is enabled from the cfg we record a metric with call ID as an empty string signaling a call start and then return a function to record a second metric with a non empty call ID We use a channel holding bool to ensure that the Fire Call End is called AFTER the Fire Call Start because these are done in separate go routines Recording a metric in an API needs only a wrapper function that supplies the APIType and called using the following format defer metrics Metrics Engine Global Record Metric Wrapper call Name 
Function that exposes all Agent Metrics on a given port 
New Mock Docker Client creates a new mock instance 
APIVersion mocks base method 
Container Events mocks base method 
Container Events indicates an expected call of Container Events 
Create Container mocks base method 
Create Volume mocks base method 
Describe Container mocks base method 
Inspect Container mocks base method 
Inspect Image mocks base method 
Known Versions mocks base method 
Known Versions indicates an expected call of Known Versions 
List Containers mocks base method 
List Images mocks base method 
List Plugins mocks base method 
List Plugins With Filters mocks base method 
Load Image mocks base method 
Pull Image mocks base method 
Remove Image mocks base method 
Stop Container mocks base method 
Version mocks base method 
With Version mocks base method 
New Mock Cache creates a new mock instance 
Delete mocks base method 
Get mocks base method 
Set mocks base method 
Set indicates an expected call of Set 
new Managed Task is a method on Docker Task Engine to create a new managed Task This method must only be called when the engine process Tasks write lock is already held 
oversee Task is the main goroutine of the managed Task It runs an infinite loop of receiving messages and attempting to take action based on those messages 
emit Current Status emits a container event for every container and a task event for the task 
wait For Host Resources waits for host resources to become available to start the task This involves waiting for previous stops to complete so the resources become free 
wait Steady waits for a task to leave steady state by waiting for a new event or a timeout 
steady State returns if the task is in a steady state Steady state is when task s desired and known status are both RUNNING 
cleanup Credentials removes credentials for a stopped task 
wait Event waits for any event to occur If an event occurs the appropriate handler is called Generally the stop Waiting arg is the context s Done channel When the Done channel is signalled by the context wait Event will return true 
handle Desired Status Change updates the desired status on the task Updates only occur if the new desired status is compatible farther along than the current desired state redundant less than or equal desired states are ignored and dropped 
handle Container Change updates a container s known status If the message contains any interesting information like exit codes or ports they are propagated 
handle Resource State Change attempts to update resource s known status depending on the current status and errors during transition 
emit Container Event passes a given event up through the container Events channel if necessary It will omit events the backend would not process and will perform best effort deduplication of events 
release IPIn IPAM releases the ip used by the task for awsvpc 
handle Stopped To Running Container Transition detects a backwards container transition where a known stopped container is found to be running again and handles it 
handle Event Error handles a container change event error and decides whether we should proceed to transition the container 
handle Container Stopped Transition Error handles an error when transitioning a container to STOPPED It returns a boolean indicating whether the tak can continue with updating its state 
progress Task tries to step forwards all containers and resources that are able to be transitioned in the task s current state It will continue listening to events from all channels while it does so but none of those changes will be acted upon until this set of requests to docker completes Container changes may also prompt the task status to change as well 
is Waiting For ACSExecution Credentials checks if the container that can t be transitioned was caused by waiting for credentials and start waiting 
start Container Transitions steps through each container in the task and calls the passed transition function when a transition should occur 
start Resource Transitions steps through each resource in the task and calls the passed transition function when a transition should occur 
transition Resource calls apply Resource State and then notifies the managed task of the change transition Resource is called by progress Task 
apply Resource State moves the resource to the given state by calling the function defined in the transition Function Map for the state 
container Next State determines the next state a container should go to It returns a transition struct including the information container state it should transition to a bool indicating whether any action is required an error indicating why this transition can t happen Stopped false You can move it to known stopped but you don t have to call a transition function Running true You can move it to running and you need to call the transition function None false container Dependency Not Resolved This should not be moved it has unresolved dependencies Next status is determined by whether the known and desired statuses are equal the next numerically greater iota wise status and whether dependencies are fully resolved 
wait For Stop Reported will wait for the task to be reported stopped and return true or will time out and return false Messages on the mtask docker Messages and mtask acs Messages channels will be handled while this function is waiting 
New Factory initializes a client factory using a specified endpoint 
Find Client APIVersion returns the version of the client from the map 
get Client returns a client specified by the docker version It s wrapped by Get Client so that it can do platform specific magic 
find Docker Versions loops over all known API versions and finds which ones are supported by the docker daemon on the host 
Execute implements https godoc org golang org x sys windows svc Handler The basic way that this implementation works is through two channels representing the requests from Windows and the responses we re sending to Windows and two goroutines one for message processing with Windows and the other to actually run the agent Once we ve set everything up and started both goroutines we wait for either one to exit the Windows goroutine will exit based on messages from Windows while the agent goroutine exits if the agent exits and then cancel the other Once everything has stopped running this function returns and the process exits 
handle Windows Requests is a loop intended to run in a goroutine It handles bidirectional communication with the Windows service manager This function works by pretty much immediately moving to running and then waiting for a stop or shut down message from Windows or to be canceled which could happen if the agent exits by itself and the calling function cancels the context 
run Agent runs the ECS agent inside a goroutine and waits to be told to exit 
sleep Ctx provides a cancelable sleep 
Task Metadata Handler returns the handler method for handling task metadata requests 
Subscribe adds the handler to be called into Event Stream 
broadcast calls all handler s handler function 
Unsubscribe deletes the handler from the Event Stream 
Write To Event Stream writes event to the event stream 
listen listens to the event channel 
Start Listening mark the event stream as open and start listening 
Set Level sets the log level for logging 
For Module returns an Old Logger instance Old Logger is deprecated and kept for compatibility reasons Prefer using Seelog directly 
New Mock Websocket Conn creates a new mock instance 
Close indicates an expected call of Close 
Read Message mocks base method 
Set Write Deadline indicates an expected call of Set Write Deadline 
Write Message mocks base method 
docker Stats To Container Stats returns a new object of the Container Stats object from docker stats 
Get indicates an expected call of Get 
New SSMSecret Resource creates a new SSMSecret Resource object 
Get Name safely returns the name of the resource 
Desired Terminal returns true if the secret s desired status is REMOVED 
Known Created returns true if the secret s known status is CREATED 
Apply Transition calls the function required to move to the specified status 
update Applied Status Unsafe updates the resource transitioning status 
Set Applied Status sets the applied status of resource and returns whether the resource is already in a transition 
Status String returns the string of the cgroup resource status 
Set Created At sets the timestamp for resource s creation time 
Get Created At sets the timestamp for resource s creation time 
Create fetches secret value from SSM in batches It spins up multiple goroutines in order to retrieve values in parallel 
get Go Routine Max Num calculates the maximum number of goroutines that we need to spin up to retrieve secret values from SSM parameter store Assume each goroutine initiates one SSM Get Parameters call and each call will have parameters 
retrieve SSMSecret Values By Region reads secret values from cache first if not exists batches secrets based on field value From and call retrieve SSMSecret Values to retrieve values from SSM 
retrieve SSMSecret Values retrieves secret values from SSM parameter store and caches them into memory 
get Execution Credentials ID returns the execution role s credential ID 
clear SSMSecret Value cycles through the collection of secret value data and removes them from the task 
Get Cached Secret Value retrieves the secret value from secret Data field 
Set Cached Secret Value set the secret value in the secret Data field given the key and value 
Clean mocks base method 
Create mocks base method 
Set Availability Zone mocks base method 
Set Container Instance ARN mocks base method 
Set Host Public IPv Address mocks base method 
Update mocks base method 
New Mock Docker Metadata Client creates a new mock instance 
Inspect Container indicates an expected call of Inspect Container 
Json Keys takes an arbitrary byte array representing a json stringified object and returns all the keys of that object 
Complete Json Unmarshal determines if a given struct has members corresponding to every key of a json object passed as the json string By default Go ignores fields in an object which have no corresponding struct member and this can be used to determine if this ignoring has occurred Errors will result in false as a return value 
Task Container Metadata Handler returns the handler method for handling task and container metadata requests 
Write Container Metadata Response writes the container metadata to response writer 
Write Task Metadata Response writes the task metadata to response writer 
Init is used to setup the cgroup root for ecs 
write To Metadata puts the metadata into JSON format and writes into the metadata file 
Error returns an error string 
Retry returns true if this error should be considered retriable 
New Mock Docker State Resolver creates a new mock instance 
State mocks base method 
State indicates an expected call of State 
print License prints the Agent s license text 
Load is used to load the cgroup hierarchy based off the cgroup path 
New is used to create a new cgroup hierarchy 
Print Versions prints the version information on stdout as a multi line string The output will look similar to the following Amazon ECS Agent Version Commit bdc fc 
timeout And Move On executes the long running function pointed to by fp and times out after timeout duration 
New Docker Task Engine returns a created but uninitialized Docker Task Engine The distinction between created and initialized is that when created it may be serialized deserialized but it will not communicate with docker until it is also initialized 
Unmarshal JSON restores a previously marshaled task engine state from json 
Init initializes a Docker Task Engine such that it may communicate with docker and operate normally This function must be called before any other function except serializing and deserializing can succeed without error 
Must Init blocks and retries until an engine can be initialized 
is Task Managed checks if task for the corresponding arn is present 
synchronize State explicitly goes through each docker container stored in state and updates its Known Status appropriately as well as queueing up events to push upstream 
filter Tasks To Start Unsafe filters only the tasks that need to be started after the agent has been restarted It also synchronizes states of all of the containers in tasks that need to be started 
update Container Metadata sets the container metadata from the docker inspect 
synchronize Container Status checks and updates the container status with docker 
check Task State inspects the state of all containers within a task and writes their state to the managed task s container channel 
sweep Task deletes all the containers associated with a task 
start Task creates a managed Task construct to track the task and then begins pushing it towards its desired state when allowed start Task is protected by the tasks Lock lock of Add Task It should not be called from anywhere else and should exit quickly to allow Add Task to do more work 
open Eventstream opens but does not consume the docker event stream 
handle Docker Events must be called after open Eventstream it processes each event that it reads from the docker eventstream 
handle Docker Event is the entrypoint for task modifications originating with events occurring through Docker outside the task engine itself handle Docker Event is responsible for taking an event that correlates to a container and placing it in the context of the task to which that container belongs 
Add Task starts tracking a task 
List Tasks returns the tasks currently managed by the Docker Task Engine 
Get Task By Arn returns the task identified by that ARN 
image Pull Required returns true if pulling image is required or return false if local image cache should be used by inspecting the agent pull behavior variable defined in config The caller has to make sure the container passed in is not an internal container 
cleanup Pause Container Network will clean up the network namespace of pause container 
update Task Unsafe determines if a new transition needs to be applied to the referenced task and if needed applies it It should not be called anywhere but from Add Task and is protected by the tasks Lock lock there 
transition Container calls apply Container State and then notifies the managed task of the change transition Container is called by progress Task and by handle Stopped To Running Container Transition 
apply Container State moves the container to the given state by calling the function defined in the transition Function Map for the state 
Version returns the underlying docker version 
New Mock SSMClient creates a new mock instance 
Get Parameters mocks base method 
Get Parameters indicates an expected call of Get Parameters 
New Mock Factory creates a new mock instance 
Find Client APIVersion mocks base method 
Find Known APIVersions mocks base method 
Get Client mocks base method 
Get Default Client mocks base method 
New Mock File System creates a new mock instance 
Copy mocks base method 
Exit mocks base method 
Mkdir All mocks base method 
Open mocks base method 
Read All mocks base method 
Remove mocks base method 
Remove indicates an expected call of Remove 
Rename mocks base method 
Tee Reader mocks base method 
Temp File mocks base method 
initialize Task ENIDependencies initializes all of the dependencies required by the Agent to support the awsvpc networking mode A non nil error is returned if an error is encountered during this process An additional boolean flag to indicate if this error is considered terminal is also returned 
set VPCSubnet sets the vpc and subnet ids for the agent by querying the instance metadata service 
is Instance Launched In VPC returns false when the http status code is set to not found when querying the vpc id from instance metadata 
verify CNIPlugins Capabilities returns an error if there s an error querying capabilities or if the required capability is absent from the capabilities of the following plugins a ecs eni b ecs bridge c ecs ipam d aws appmesh 
start Udev Watcher starts the udev monitor and the watcher for receiving notifications from the monitor 
initialize Resource Fields exists mainly for testing do Start to use mock Control object 
This function creates a hash of the call Name and a randomly generated number The hash serves to match the call invokation with the call s end which is required to compute the call duration The final metric is observed when the Fire Call End function is called If call ID is empty then we initiate the call with Fire Call Start We use a channel holding bool to ensure that the Fire Call End is called AFTER the Fire Call Start because these are done in separate go routines 
This function increments the call count for a specific API call This is invoked at the API call s start whereas the duration metrics are updated at the API call s end 
New Mock Task Engine State creates a new mock instance 
Add Container mocks base method 
Add ENIAttachment mocks base method 
Add Image State mocks base method 
Add Task mocks base method 
Add Task IPAddress mocks base method 
All Image States mocks base method 
All Image States indicates an expected call of All Image States 
All Tasks mocks base method 
Container By ID mocks base method 
ENIBy Mac mocks base method 
Get All Container IDs mocks base method 
Remove ENIAttachment mocks base method 
Remove Image State mocks base method 
Remove Task mocks base method 
Remove Task indicates an expected call of Remove Task 
Task ARNBy V Endpoint ID mocks base method 
Task By Arn mocks base method 
Unmarshal JSON mocks base method 
String converts the container type enum to a string 
Unmarshal JSON decodes the container type field in the JSON encoded string into the Container Type object 
Marshal JSON overrides the logic for JSON encoding a Container Type object 
parse Nano Time returns the time object from a string formatted with RFC Nano layout 
is Network Stats Error returns if the error indicates that files in sys class net could not be opened 
New Mock Response Writer creates a new mock instance 
Header mocks base method 
Header indicates an expected call of Header 
Write Header mocks base method 
Write Header indicates an expected call of Write Header 
Matches returns whether or not a version matches a given selector The selector can be any of the following x y Matches a version exactly the same as the selector version x y Matches a version greater than or equal to the selector version x y Matches a version greater than the selector version x y Matches a version less than or equal to the selector version x y Matches a version less than the selector version x y a b Matches if the version matches either of the two selector versions 
compare Docker Versions compares two docker api versions lhs and rhs and returns if lhs is less than rhs if they are equal and if lhs is greater than rhs 
Sign HTTPRequest signs an http Request struct with authv using the given region service and credentials 
Get Client on linux will simply return the cached client from the map 
get Agent Versions returns a list of supported agent supported versions for linux 
Log will construct an audit log entry log and log that entry to the audit log using the underlying logger which implements the audit Info Logger interface 
duplicate of docker CPUShares in task linux go 
verify Tasks Metadata verifies the number of tasks in tasks metadata 
verify Task Metadata verifies the number of containers in task metadata make sure each necessary field is not empty we cannot check the values of those fields since they are dynamic It also verifies the container metadata 
verify Container Metadata verifies the container name of the container metadata and each necessary field is not empty 
New Mock Result creates a new mock instance 
Get As Version mocks base method 
Get As Version indicates an expected call of Get As Version 
Print mocks base method 
Print indicates an expected call of Print 
Container Create mocks base method 
Container Inspect mocks base method 
Container List mocks base method 
Container Remove mocks base method 
Container Start mocks base method 
Container Stats mocks base method 
Container Stop mocks base method 
Events mocks base method 
Image Import mocks base method 
Image Inspect With Raw mocks base method 
Image List mocks base method 
Image Load mocks base method 
Image Pull mocks base method 
Image Remove mocks base method 
Ping mocks base method 
Plugin List mocks base method 
Volume Create mocks base method 
Volume Inspect mocks base method 
Volume Remove mocks base method 
Resolve Task resolves the api task object given container id 
Resolve Container resolves the api container object given container id 
New Docker Stats Engine creates a new instance of the Docker Stats Engine object Must Init must be called to initialize the fields of the new event listener 
synchronize State goes through all the containers on the instance to synchronize the state on agent start 
add And Start Stats Container add the container into stats engine and start collecting the container stats 
Must Init initializes fields of the Docker Stats Engine object 
wait To Stop waits for the container change event stream close ans stop collection metrics 
remove All stops the periodic usage data collection for all containers 
add Container Unsafe adds a container to the map of containers being watched 
add To Stats Container Map Unsafe adds the statscontainer into stats for tracking and returns a boolean indicates whether this container should be tracked for collecting metrics 
Get Instance Metrics gets all task metrics and instance metadata from stats engine 
Get Task Health Metrics returns the container health metrics 
stop Tracking Container Unsafe removes the Stats Container from stats engine and returns true if the container is stopped or no longer tracked in agent Otherwise it does nothing and return false 
handle Docker Events must be called after open Eventstream it processes each event that it reads from the docker event stream 
remove Container deletes the container from the map of containers being watched It also stops the periodic usage data collection for the container 
new Docker Container Metadata Resolver returns a new instance of Docker Container Metadata Resolver 
task Container Metrics Unsafe gets all container metrics for a task arn 
reset Stats Unsafe resets stats for all watched containers 
Container Docker Stats returns the last stored raw docker stats object for a container 
new Metrics Metadata creates the singleton metadata object 
Matches returns whether or not a version matches a given selector The selector can be any of the following x y z Matches a version exactly the same as the selector version x y z Matches a version greater than or equal to the selector version x y z Matches a version greater than the selector version x y z Matches a version less than or equal to the selector version x y z Matches a version less than the selector version x y z a b c Matches if the version matches either of the two selector versions 
compare Semver compares two semvers lhs and rhs and returns if lhs is less than rhs if they are equal and lhs is greater than rhs 
Extract Version extracts a matching version from the version number string 
Get IAMRole Credentials returns the IAM role credentials in the task IAM role struct 
Generate Credentials Endpoint Relative URI generates the relative URI for the credentials endpoint for a given task id 
IAMRole Credentials From ACS translates ecsacs IAMRole Credentials object to api IAMRole Credentials 
Set Task Credentials adds or updates credentials in the credentials manager 
Get Task Credentials retrieves credentials for a given credentials id 
Remove Credentials removes credentials from the credentials manager 
verify all the field names in the response are what we expected this is needed because a direct unmarshal is not case sensitive so can t ensure that the response is in valid format 
helper func to check whether two lists of distinct strings matches without order 
Getpid mocks base method 
Getpid indicates an expected call of Getpid 
Run runs the ECS Agent App It returns an exit code which is used by main to set the status code for the program 
App Mesh From ACS validates proxy config if it is app mesh type and creates App Mesh object 
build App Ports creates app ports from proxy config 
build Egress Ignored IPs creates egress ignored IPs from proxy config 
build Egress Ignored Ports creates egress ignored ports from proxy config 
append Default Egress Ignored IPs append task metadata endpoint ip and instance metadata ip address to egress ignored IPs if does not exist 
Is Instance Type Changed Error returns true if the error when registering the container instance is because of instance type being changed 
Error implements error 
New Named Error creates a Named Error 
Error returns the error as a string 
Error implements error 
Build Cgroup Root helps build the task cgroup prefix Example ecs task id 
Build Linux Resource Spec returns a linux Resources object for the task cgroup 
build Explicit Linux CPUSpec builds CPU spec when task CPU limits are explicitly requested 
build Implicit Linux CPUSpec builds the implicit task CPU spec when task CPU and memory limit feature is enabled 
build Linux Memory Spec validates and builds the task memory spec 
platform Host Config Override to override platform specific feature sets 
override Cgroup Parent updates hostconfig with cgroup parent when task cgroups are enabled 
Get MACAddress retrieves the MAC address of a device using netlink 
retrieve retrives the mac address of a network device If the retrieved mac address is empty it retries the operation with a timeout specified by the caller 
retrieve Once retrieves the MAC address of a device using netlink Link By Name 
Is Valid Network Device is used to differentiate virtual and physical devices Returns true only for pci or vif interfaces 
Receive Message receives a log line from seelog and emits it to the Windows event log 
Get Authorization Token calls the ecr api to get the docker auth for the specified registry 
New Mock Engine creates a new mock instance 
Container Docker Stats mocks base method 
Container Docker Stats indicates an expected call of Container Docker Stats 
Get Instance Metrics mocks base method 
Get Instance Metrics indicates an expected call of Get Instance Metrics 
Get Task Health Metrics mocks base method 
Retry With Backoff takes a Backoff and a function to call that returns an error If the error is nil then the function will no longer be called If the error is Retriable then that will be used to determine if it should be retried 
Retry With Backoff Ctx takes a context a Backoff and a function to call that returns an error If the context is done nil will be returned If the error is nil then the function will no longer be called If the error is Retriable then that will be used to determine if it should be retried 
Retry NWith Backoff takes a Backoff a maximum number of tries n and a function that returns an error The function is called until either it does not return an error or the maximum tries have been reached If the error returned is Retriable the Retriability of it will be respected If the number of tries is exhausted the last error will be returned 
Retry NWith Backoff Ctx takes a context a Backoff a maximum number of tries n and a function that returns an error The function is called until it does not return an error the context is done or the maximum tries have been reached If the error returned is Retriable the Retriability of it will be respected If the number of tries is exhausted the last error will be returned 
Add Jitter adds an amount of jitter between and the given jitter to the given duration 
License Handler creates response for license API 
New Mock IOUtil creates a new mock instance 
Temp File mocks base method 
Write File mocks base method 
Write File indicates an expected call of Write File 
Describe ECSTags For Instance calls Describe Tags API to get the EC tags of the instance id and return it back as ECS tags 
Task Container Stats Handler returns the handler method for handling task and container stats requests 
Write Task Stats Response writes the task stats to response writer 
Write Container Stats Response writes the container stats to response writer 
New Task Response creates a Task Response for a task 
New Container Response creates Container Response for a container 
New Port Bindings Response creates Port Response for a container 
New Volumes Response creates Volume Response for a container 
New Tasks Response creates Tasks Response for all the tasks 
New Publish Metrics Request creates a Publish Metrics Request object 
New Publish Health Metrics Request creates a Publish Health Request 
Start Listening starts reading from the input channel and writes to the buffer When context is cancelled stop listening 
Copy Events copies the event into the buffer 
Consume reads the buffer and write to a listener channel 
Container Stats Handler returns the handler method for handling container stats requests 
A factory method that enables various Metrics Clients to be created 
New Mock ECRSDK creates a new mock instance 
Get Authorization Token mocks base method 
Get Authorization Token indicates an expected call of Get Authorization Token 
New Mock ECRFactory creates a new mock instance 
Get Client mocks base method 
Get Client indicates an expected call of Get Client 
New Mock ECRClient creates a new mock instance 
Get Authorization Token mocks base method 
Get Authorization Token indicates an expected call of Get Authorization Token 
Get Credentials Event Type is the type for a Get Credentials request 
New Mock GPUManager creates a new mock instance 
Get Devices mocks base method 
Get GPUIDs Unsafe mocks base method 
Initialize mocks base method 
Set Devices indicates an expected call of Set Devices 
Set Driver Version mocks base method 
Set Driver Version indicates an expected call of Set Driver Version 
Set GPUIDs mocks base method 
Set Runtime Version mocks base method 
New Mock Round Tripper creates a new mock instance 
Round Trip mocks base method 
Round Trip indicates an expected call of Round Trip 
New Mock Net Link creates a new mock instance 
Link By Name mocks base method 
Link By Name indicates an expected call of Link By Name 
Link List mocks base method 
Link List indicates an expected call of Link List 
New Mock CNI creates a new mock instance 
Add Network mocks base method 
Add Network List mocks base method 
Del Network mocks base method 
Del Network indicates an expected call of Del Network 
Del Network List mocks base method 
Creates an LRUCache with maximum size ttl for items 
Get returns the value associated with the key 
Set sets the key value pair in the cache 
Delete removes the entry associated with the key from cache 
Start Timer starts the ack timer to record the expiration of ENI attachment 
Is Sent checks if the eni attached status has been sent 
Set Sent Status marks the eni attached status has been sent 
Stop Ack Timer stops the ack timer set on the ENI attachment 
Has Expired returns true if the ENI attachment object has exceeded the threshold for notifying the backend of the attachment 
String returns a string representation of the ENI Attachment 
string Unsafe returns a string representation of the ENI Attachment 
Start Metrics Session starts a metric session It initializes the stats engine and invokes Start Session 
Start Session creates a session with the backend and handles requests using the passed in arguments The engine is expected to initialized and gathering container metrics by the time the websocket client starts using it 
heartbeat Handler resets the heartbeat timer when Heartbeat Message message is received from tcs 
ack Publish Metric Handler consumes the ack message from the backend THe backend sends the ack each time it processes a metric message 
ack Publish Health Metric Handler consumes the ack message from backend The backend sends the ack each time it processes a health message 
any Message Handler handles any server message Any server message means the connection is active 
format URL returns formatted url for tcs endpoint 
gtk box bar set center widget Gtk Box box Gtk Widget center widget 
gtk box bar get center widget Gtk Box box 
native returns a pointer to the underlying Gtk Stack Switcher 
Stack Switcher New is a wrapper around gtk stack switcher new 
Set Stack is a wrapper around gtk stack switcher set stack 
Get Stack is a wrapper around gtk stack switcher get stack 
native returns a pointer to the underlying Gtk Combo Box 
Combo Box New is a wrapper around gtk combo box new 
Combo Box New With Entry is a wrapper around gtk combo box new with entry 
Combo Box New With Model is a wrapper around gtk combo box new with model 
Get Active is a wrapper around gtk combo box get active 
Set Active is a wrapper around gtk combo box set active 
Get Active Iter is a wrapper around gtk combo box get active iter 
Set Active Iter is a wrapper around gtk combo box set active iter 
Get Active ID is a wrapper around gtk combo box get active id 
Set Active ID is a wrapper around gtk combo box set active id 
Get Model is a wrapper around gtk combo box get model 
Set Model is a wrapper around gtk combo box set model 
native returns a pointer to the underlying Gtk Combo Box Text 
Combo Box Text New is a wrapper around gtk combo box text new 
Combo Box Text New With Entry is a wrapper around gtk combo box text new with entry 
Append is a wrapper around gtk combo box text append 
Prepend is a wrapper around gtk combo box text prepend 
Insert is a wrapper around gtk combo box text insert 
Append Text is a wrapper around gtk combo box text append text 
Prepend Text is a wrapper around gtk combo box text prepend text 
Insert Text is a wrapper around gtk combo box text insert text 
Remove is a wrapper around gtk combo box text remove 
Get Active Text is a wrapper around gtk combo box text get active text 
void pango extents to pixels Pango Rectangle inclusive Pango Rectangle nearest 
Popup At Pointer is a wrapper for gtk menu popup at pointer on older versions it uses Popup At Mouse Cursor 
native returns a pointer to the underlying GApplication 
Application IDIs Valid is a wrapper around g application id is valid 
Application New is a wrapper around g application new 
Get Application ID is a wrapper around g application get application id 
Set Application ID is a wrapper around g application set application id 
Set Inactivity Timeout is a wrapper around g application set inactivity timeout 
Set Flags is a wrapper around g application set flags 
Only available in GLib Get Resource Base Path is a wrapper around g application get resource base path func v Application Get Resource Base Path string c C g application get resource base path v native return C Go String C char c Only available in GLib Set Resource Base Path is a wrapper around g application set resource base path func v Application Set Resource Base Path bp string cstr C gchar C CString bp defer C free unsafe Pointer cstr C g application set resource base path v native cstr Get Dbus Object Path is a wrapper around g application get dbus object path 
Send Notification is a wrapper around g application send notification 
Withdraw Notification is a wrapper around g application withdraw notification 
Application Get Default is a wrapper around g application get default 
Run is a wrapper around g application run 
native returns a pointer to the underlying Gtk App Chooser 
TODO Needs gio GApp Info implementation first gtk app chooser get app info Get Content Type is a wrapper around gtk app chooser get content type 
native returns a pointer to the underlying Gtk App Chooser Button 
App Chooser Button New is a wrapper around gtk app chooser button new 
Set Active Custom Item is a wrapper around gtk app chooser button set active custom item 
Set Show Default Item is a wrapper around gtk app chooser button set show default item 
Set Show Dialog Item is a wrapper around gtk app chooser button set show dialog item 
Get Heading is a wrapper around gtk app chooser button get heading In case when gtk app chooser button get heading returns a nil string Get Heading returns a non nil error 
Set Heading is a wrapper around gtk app chooser button set heading 
native returns a pointer to the underlying Gtk App Chooser Widget 
App Chooser Widget New is a wrapper around gtk app chooser widget new 
Set Show Default is a wrapper around gtk app chooser widget set show default 
Set Show Recommended is a wrapper around gtk app chooser widget set show recommended 
Set Show Fallback is a wrapper around gtk app chooser widget set show fallback 
Set Show Other is a wrapper around gtk app chooser widget set show other 
Set Show All is a wrapper around gtk app chooser widget set show all 
Get Default Text is a wrapper around gtk app chooser widget get default text In case when gtk app chooser widget get default text returns a nil string Get Default Text returns a non nil error 
Set Default Text is a wrapper around gtk app chooser widget set default text 
native returns a pointer to the underlying Gtk App Chooser Button 
TODO Uncomment when gio builds successfully App Chooser Dialog New is a wrapper around gtk app chooser dialog new func App Chooser Dialog New parent Window flags Dialog Flags file gio File App Chooser Dialog error var gfile C GFile if file nil gfile C GFile unsafe Pointer file Native c C gtk app chooser dialog new parent native C Gtk Dialog Flags flags gfile if c nil return nil nil Ptr Err return wrap App Chooser Dialog glib Take unsafe Pointer c nil App Chooser Dialog New For Content Type is a wrapper around gtk app chooser dialog new for content type 
Get Widget is a wrapper around gtk app chooser dialog get widget 
Get Heading is a wrapper around gtk app chooser dialog get heading In case when gtk app chooser dialog get heading returns a nil string Get Heading returns a non nil error 
Set Heading is a wrapper around gtk app chooser dialog set heading 
native returns a pointer to the underlying Gdk Pixbuf 
Get Mime Types is a wrapper around gdk pixbuf format get mime types 
Get Extensions is a wrapper around gdk pixbuf format get extensions 
 deprecated since version and should not be used in newly written code Resize Grip Is Visible is a wrapper around gtk window resize grip is visible 
Set Has Resize Grip is a wrapper around gtk window set has resize grip 
Get Has Resize Grip is a wrapper around gtk window get has resize grip 
Reparent is a wrapper around gtk widget reparent 
Get Padding is a wrapper around gtk alignment get padding 
Set Padding is a wrapper around gtk alignment set padding 
Alignment New is a wrapper around gtk alignment new 
Set is a wrapper around gtk alignment set 
Arrow New is a wrapper around gtk arrow new 
Set is a wrapper around gtk arrow set 
Set Alignment is a wrapper around gtk button set alignment 
Get Alignment is a wrapper around gtk button get alignment 
Set Reallocate Redraws is a wrapper around gtk container set reallocate redraws 
Get Alignment is a wrapper around gtk misc get alignment 
Set Alignment is a wrapper around gtk misc set alignment 
Get Padding is a wrapper around gtk misc get padding 
Set Padding is a wrapper around gtk misc set padding 
Set Double Buffered is a wrapper around gtk widget set double buffered 
Get Double Buffered is a wrapper around gtk widget get double buffered 
 Gtk Arrow deprecated since version native returns a pointer to the underlying Gtk Button 
native returns a pointer to the underlying Gtk Alignment 
TODO Gtk Status Icon gtk status icon new from gicon GIcon icon TODO void gtk status icon set from gicon Gtk Status Icon status icon GIcon icon TODO GIcon gtk status icon get gicon Gtk Status Icon status icon TODO void gtk status icon set screen Gtk Status Icon status icon Gdk Screen screen TODO Gdk Screen gtk status icon get screen Gtk Status Icon status icon TODO Gdk Pixbuf gtk status icon get pixbuf Gtk Status Icon status icon TODO void gtk status icon position menu Gtk Menu menu gint x gint y gboolean push in gpointer user data TODO gboolean gtk status icon get geometry Gtk Status Icon status icon Gdk Screen screen Gdk Rectangle area Gtk Orientation orientation Status Icon New is a wrapper around gtk status icon new 
Status Icon New From File is a wrapper around gtk status icon new from file 
Status Icon New From Icon Name is a wrapper around gtk status icon new from icon name 
Status Icon New From Pixbuf is a wrapper around gtk status icon new from pixbuf 
Set From File is a wrapper around gtk status icon set from file 
Set From Icon Name is a wrapper around gtk status icon set from icon name 
Set From Pixbuf is a wrapper around gtk status icon set from pixbuf 
Set Tooltip Text is a wrapper around gtk status icon set tooltip text 
Get Tooltip Text is a wrapper around gtk status icon get tooltip text 
Set Tooltip Markup is a wrapper around gtk status icon set tooltip markup 
Get Tooltip Markup is a wrapper around gtk status icon get tooltip markup 
Set Has Tooltip is a wrapper around gtk status icon set has tooltip 
Get Title is a wrapper around gtk status icon get title 
Set Name is a wrapper around gtk status icon set name 
Set Visible is a wrapper around gtk status icon set visible 
Set Title is a wrapper around gtk status icon set title 
Get Icon Name is a wrapper around gtk status icon get icon name 
Popup At Status Icon is a wrapper around gtk menu popup specific to usage with Gtk Status Icon gomenu popup is defined in menu go h this is a workaround to pass gtk status icon position menu as the Gtk Menu Position Func 
native returns a pointer to the underlying Gtk Misc 
 Convenience Pango Context pango cairo create context cairo t cr 
Pango Layout pango cairo create layout cairo t cr 
void pango cairo update layout cairo t cr Pango Layout layout 
 Rendering void pango cairo show glyph string cairo t cr Pango Font font Pango Glyph String glyphs 
void pango cairo show glyph item cairo t cr const char text Pango Glyph Item glyph item 
void pango cairo show layout line cairo t cr Pango Layout Line line 
void pango cairo show layout cairo t cr Pango Layout layout 
void pango cairo show error underline cairo t cr double x double y double width double height Rendering to a path void pango cairo glyph string path cairo t cr Pango Font font Pango Glyph String glyphs 
void pango cairo layout line path cairo t cr Pango Layout Line line 
void pango cairo layout path cairo t cr Pango Layout layout 
void pango cairo error underline path cairo t cr double x double y double width double height 
native returns a pointer to the underlying Gtk Application Window 
Application Window New is a wrapper around gtk application window new 
Set Show Menubar is a wrapper around gtk application window set show menubar 
 Gtk Widget Is Visible is a wrapper around gtk widget is visible 
Set Opacity is a wrapper around gtk widget set opacity 
Get Opacity is a wrapper around gtk widget get opacity 
Get Frame Clock is a wrapper around gtk widget get frame clock 
Add Tick Callback is a wrapper around gtk widget add tick callback 
Remove Tick Callback is a wrapper around gtk widget remove tick callback 
export go List Box Filter Funcs 
To GVariant exposes the underlying C GVariant type for this Variant necessary to implement IVariant 
Variant From Unsafe Pointer returns a Variant from an unsafe pointer XXX unnecessary footgun func Variant From Unsafe Pointer p unsafe Pointer Variant return Variant C to GVariant p native returns a pointer to the underlying GVariant 
Type String returns the g variant type string for this variant 
Get String returns the string value of the variant 
Get Strv returns a slice of strings from this variant It wraps g variant get strv but returns copies of the strings instead 
Get Int returns the int value of the variant if it is an integer type and an error otherwise It wraps variouns g variant get functions dealing with integers of different sizes 
Is Type returns true if the variant s type matches t 
String wraps g variant print It returns a string understood by g variant parse 
Annotated String wraps g variant print but returns a type annotated string 
void gtk popover set default widget Gtk Popover popover Gtk Widget widget 
Gtk Widget gtk popover get default widget Gtk Popover popover 
 func marshal Layout p uintptr interface error c C g value get object C GValue unsafe Pointer p obj wrap Object unsafe Pointer c return wrap Layout obj nil 
Pango Layout pango layout copy Pango Layout src 
Pango Context pango layout get context Pango Layout layout 
void pango layout set attributes Pango Layout layout Pango Attr List attrs 
Pango Attr List pango layout get attributes Pango Layout layout 
void pango layout set text Pango Layout layout const char text int length 
const char pango layout get text Pango Layout layout 
gint pango layout get character count Pango Layout layout 
void pango layout set markup Pango Layout layout const char markup int length 
void pango layout set markup with accel Pango Layout layout const char markup int length gunichar accel marker gunichar accel char func v Layout Set Markup With Accel text string length int accel marker accel char rune cstr C CString text defer C free unsafe Pointer cstr C pango layout set markup with accel v native C char cstr C int length C gunichar accel marker C gunichar accel char void pango layout set font description Pango Layout layout const Pango Font Description desc 
const Pango Font Description pango layout get font description Pango Layout layout 
void pango layout set width Pango Layout layout int width 
int pango layout get width Pango Layout layout 
void pango layout set height Pango Layout layout int height 
int pango layout get height Pango Layout layout 
void pango layout set wrap Pango Layout layout Pango Wrap Mode wrap 
Pango Wrap Mode pango layout get wrap Pango Layout layout 
gboolean pango layout is wrapped Pango Layout layout 
void pango layout set indent Pango Layout layout int indent 
int pango layout get indent Pango Layout layout 
void pango layout set spacing Pango Layout layout int spacing int pango layout get spacing Pango Layout layout void pango layout set justify Pango Layout layout gboolean justify gboolean pango layout get justify Pango Layout layout void pango layout set auto dir Pango Layout layout gboolean auto dir gboolean pango layout get auto dir Pango Layout layout void pango layout set alignment Pango Layout layout Pango Alignment alignment Pango Alignment pango layout get alignment Pango Layout layout void pango layout set tabs Pango Layout layout Pango Tab Array tabs Pango Tab Array pango layout get tabs Pango Layout layout void pango layout set single paragraph mode Pango Layout layout gboolean setting gboolean pango layout get single paragraph mode Pango Layout layout void pango layout set ellipsize Pango Layout layout Pango Ellipsize Mode ellipsize Pango Ellipsize Mode pango layout get ellipsize Pango Layout layout gboolean pango layout is ellipsized Pango Layout layout int pango layout get unknown glyphs count Pango Layout layout void pango layout context changed Pango Layout layout guint pango layout get serial Pango Layout layout void pango layout get log attrs Pango Layout layout Pango Log Attr attrs gint n attrs const Pango Log Attr pango layout get log attrs readonly Pango Layout layout gint n attrs void pango layout index to pos Pango Layout layout int index Pango Rectangle pos void pango layout index to line x Pango Layout layout int index gboolean trailing int line int x pos void pango layout get cursor pos Pango Layout layout int index Pango Rectangle strong pos Pango Rectangle weak pos void pango layout move cursor visually Pango Layout layout gboolean strong int old index int old trailing int direction int new index int new trailing gboolean pango layout xy to index Pango Layout layout int x int y int index int trailing void pango layout get extents Pango Layout layout Pango Rectangle ink rect Pango Rectangle logical rect void pango layout get pixel extents Pango Layout layout Pango Rectangle ink rect Pango Rectangle logical rect void pango layout get size Pango Layout layout int width int height 
Button New From Stock is a wrapper around gtk button new from stock 
Set Use Stock is a wrapper around gtk button set use stock 
Get Use Stock is a wrapper around gtk button get use stock 
Get Icon Stock is a wrapper around gtk entry get icon stock 
Set Icon From Stock is a wrapper around gtk entry set icon from stock 
Image New From Stock is a wrapper around gtk image new from stock 
Set From Stock is a wrapper around gtk image set from stock 
Status Icon New From Stock is a wrapper around gtk status icon new from stock Deprecated since use Status Icon New From Icon Name gtk status icon new from icon name instead 
Set From Stock is a wrapper around gtk status icon set from stock Deprecated since use Set From Icon Name gtk status icon set from icon name instead 
Get Stock is a wrapper around gtk status icon get stock Deprecated since use Get Icon Name gtk status icon get icon name instead 
Get Focus Chain is a wrapper around gtk container get focus chain 
Set Focus Chain is a wrapper around gtk container set focus chain 
Css Provider Get Default is a wrapper around gtk css provider get default 
native returns a pointer to the underlying GMenu Model 
Get Item Link is a wrapper around g menu model get item link 
Items Changed is a wrapper around g menu model items changed 
native returns a pointer to the underlying GMenu 
Menu New is a wrapper around g menu new 
Insert is a wrapper around g menu insert 
Prepend is a wrapper around g menu prepend 
Append is a wrapper around g menu append 
Insert Item is a wrapper around g menu insert item 
Append Item is a wrapper around g menu append item 
Prepend Item is a wrapper around g menu prepend item 
Insert Section is a wrapper around g menu insert section 
Prepend Section is a wrapper around g menu prepend section 
Append Section is a wrapper around g menu append section 
Insert Section Without Label is a wrapper around g menu insert section with label set to null 
Prepend Section Without Label is a wrapper around g menu prepend section with label set to null 
Append Section Without Label is a wrapper around g menu append section with label set to null 
Insert Submenu is a wrapper around g menu insert submenu 
Prepend Submenu is a wrapper around g menu prepend submenu 
Append Submenu is a wrapper around g menu append submenu 
Remove is a wrapper around g menu remove 
native returns a pointer to the underlying GMenu Item 
Menu Item New is a wrapper around g menu item new 
Menu Item New Section is a wrapper around g menu item new section 
Menu Item New Submenu is a wrapper around g menu item new submenu 
Menu Item New From Model is a wrapper around g menu item new from model 
Set Label is a wrapper around g menu item set label 
Set Detailed Action is a wrapper around g menu item set detailed action 
Set Section is a wrapper around g menu item set section 
Set Submenu is a wrapper around g menu item set submenu 
Get Link is a wrapper around g menu item get link 
Set Link is a wrapper around g menu item Set link 
Set Overlay Scrolling is a wrapper around gtk scrolled window set overlay scrolling 
Set Wide Handle is a wrapper around gtk paned set wide handle 
Get XAlign is a wrapper around gtk label get xalign 
Get YAlign is a wrapper around gtk label get yalign 
Set XAlign is a wrapper around gtk label set xalign 
Set YAlign is a wrapper around gtk label set yalign 
native returns a pointer to the underlying Gtk Stack 
Stack Sidebar New is a wrapper around gtk stack sidebar new 
Reorder Overlay is a wrapper around gtk overlay reorder overlay 
Get Overlay Pass Through is a wrapper around gtk overlay get overlay pass through 
Set Overlay Pass Through is a wrapper around gtk overlay set overlay pass through 
native returns a pointer to the underlying Gdk Frame Clock 
Get Timings is a wrapper around gdk frame clock get timings 
Get Current Timings is a wrapper around dk frame clock get current timings 
Get Refresh Info is a wrapper around gdk frame clock get refresh info 
Request Phase is a wrapper around gdk frame clock request phase 
native returns a pointer to the underlying Gdk Frame Timings 
Ref is a wrapper around gdk frame timings ref 
 Gdk Display Get NMonitors is a wrapper around gdk display get n monitors 
Get Primary Monitor is a wrapper around gdk display get primary monitor 
native returns a pointer to the underlying Gdk Monitor 
Get Geometry is a wrapper around gdk monitor get geometry 
Set Use ES is a wrapper around gdk gl context set use es 
native returns a pointer to the underlying Gdk Screen 
Get RGBAVisual is a wrapper around gdk screen get rgba visual 
Get System Visual is a wrapper around gdk screen get system visual 
Get Root Window is a wrapper around gdk screen get root window 
Get Display is a wrapper around gdk screen get display 
Set Resolution is a wrapper around gdk screen set resolution 
native returns a pointer to the underlying GVariant Builder 
Get Opacity is a wrapper around gtk window get opacity Deprecated since replaced by Get Opacity on Widget gtk widget get opacity 
String returns a readable status messsage usable in texts 
To Error returns the error for the status Returns nil if success 
native returns a pointer to the underlying Gtk Level Bar 
Level Bar New is a wrapper around gtk level bar new 
Level Bar New For Interval is a wrapper around gtk level bar new for interval 
Set Mode is a wrapper around gtk level bar set mode 
Set Value is a wrapper around gtk level bar set value 
Get Value is a wrapper around gtk level bar get value 
Set Min Value is a wrapper around gtk level bar set min value 
Get Min Value is a wrapper around gtk level bar get min value 
Set Max Value is a wrapper around gtk level bar set max value 
Get Max Value is a wrapper around gtk level bar get max value 
Add Offset Value is a wrapper around gtk level bar add offset value 
Remove Offset Value is a wrapper around gtk level bar remove offset value 
Get Offset Value is a wrapper around gtk level bar get offset value 
Accelerator Name is a wrapper around gtk accelerator name 
Accelerator Valid is a wrapper around gtk accelerator valid 
Accelerator Parse is a wrapper around gtk accelerator parse 
Accelerator Get Label is a wrapper around gtk accelerator get label 
native returns a pointer to the underlying Gtk Accel Group 
Accel Group is a wrapper around gtk accel group new 
Connect is a wrapper around gtk accel group connect 
Connect By Path is a wrapper around gtk accel group connect by path 
Disconnect is a wrapper around gtk accel group disconnect 
Disconnect Key is a wrapper around gtk accel group disconnect key 
Accel Group From Closure is a wrapper around gtk accel group from accel closure 
Get Modifier Mask is a wrapper around gtk accel group get modifier mask 
Accel Groups Activate is a wrapper around gtk accel groups activate 
Activate is a wrapper around gtk accel group activate 
Accel Groups From Object is a wrapper around gtk accel groups from object 
native returns a pointer to the underlying Gtk Accel Map 
Accel Map Add Entry is a wrapper around gtk accel map add entry 
Accel Map Lookup Entry is a wrapper around gtk accel map lookup entry 
Accel Map Change Entry is a wrapper around gtk accel map change entry 
Accel Map Load is a wrapper around gtk accel map load 
Accel Map Save is a wrapper around gtk accel map save 
Accel Map Add Filter is a wrapper around gtk accel map add filter 
Accel Map Get is a wrapper around gtk accel map get 
Accel Map Lock Path is a wrapper around gtk accel map lock path 
Accel Map Unlock Path is a wrapper around gtk accel map unlock path 
Set Accel Group is a wrapper around gtk menu set accel group 
Get Accel Group is a wrapper around gtk menu get accel group 
Set Accel Path is a wrapper around gtk menu set accel path 
Get Accel Path is a wrapper around gtk menu get accel path 
Set Accel Path is a wrapper around gtk menu item set accel path 
Get Accel Path is a wrapper around gtk menu item get accel path 
Add Accelerator is a wrapper around gtk widget add accelerator 
Remove Accelerator is a wrapper around gtk widget remove accelerator 
Set Accel Path is a wrapper around gtk widget set accel path 
Can Activate Accel is a wrapper around gtk widget can activate accel 
Add Accel Group is a wrapper around gtk window add accel group 
Remove Accel Group is a wrapper around gtk window add accel group 
Data Wapper sets wrap functions which is called during Nth Data Wrapped and Data Wrapped It s used to cast raw C data into appropriate Go structures and types every time that data is retreived 
Append is a wrapper around g list append 
Prepend is a wrapper around g list prepend 
Insert is a wrapper around g list insert 
nth Data Raw is a wrapper around g list nth data 
Nth is a wrapper around g list nth 
Nth Data Wrapped acts the same as g list nth data but passes retrieved value before returning through wrap function set by Data Wrapper If no wrap function is set it returns raw unsafe Pointer 
data Raw is a wrapper around the data struct field 
Data Wrapped acts the same as data struct field but passes retrieved value before returning through wrap function set by Data Wrapper If no wrap function is set it returns raw unsafe Pointer 
Foreach acts the same as g list foreach No user data argument is implemented because of Go clojure capabilities 
Free Full acts the same as g list free full Calling list Free Full fn is equivalent to calling list Foreach fn and list Free sequentially 
 func marshal Context p uintptr interface error c C g value get object C GValue unsafe Pointer p obj wrap Object unsafe Pointer c return wrap Context obj nil 
Pango Context pango context new void 
 Dialog Get Header Bar is a wrapper around gtk dialog get header bar 
 Entry Set Max Width Chars is a wrapper around gtk entry set max width chars 
Get Max Width Chars is a wrapper around gtk entry get max width chars 
 Header Bar Get Decoration Layout is a wrapper around gtk header bar get decoration layout 
Set Decoration Layout is a wrapper around gtk header bar set decoration layout 
Get Has Subtitle is a wrapper around gtk header bar get has subtitle 
Set Has Subtitle is a wrapper around gtk header bar set has subtitle 
 Menu Button Set Popover is a wrapper around gtk menu button set popover 
Get Popover is a wrapper around gtk menu button get popover 
Get Use Popover is a wrapper around gtk menu button get use popover 
Set Use Popover is a wrapper around gtk menu button set use popover 
Flow Box New is a wrapper around gtk flow box new 
Insert is a wrapper around gtk flow box insert 
Get Child At Index is a wrapper around gtk flow box get child at index 
TODO gtk flow box get child at pos Set HAdjustment is a wrapper around gtk flow box set hadjustment 
Set VAdjustment is a wrapper around gtk flow box set vadjustment 
Set Homogeneous is a wrapper around gtk flow box set homogeneous 
Get Homogeneous is a wrapper around gtk flow box get homogeneous 
Set Row Spacing is a wrapper around gtk flow box set row spacing 
Get Row Spacing is a wrapper around gtk flow box get row spacing 
Set Column Spacing is a wrapper around gtk flow box set column spacing 
Get Column Spacing is a wrapper around gtk flow box get column spacing 
Set Min Children Per Line is a wrapper around gtk flow box set min children per line 
Get Min Children Per Line is a wrapper around gtk flow box get min children per line 
Set Max Children Per Line is a wrapper around gtk flow box set max children per line 
Get Max Children Per Line is a wrapper around gtk flow box get max children per line 
Set Activate On Single Click is a wrapper around gtk flow box set activate on single click 
Get Activate On Single Click gtk flow box get activate on single click 
TODO gtk flow box selected foreach Get Selected Children is a wrapper around gtk flow box get selected children 
Select Child is a wrapper around gtk flow box select child 
Unselect Child is a wrapper around gtk flow box unselect child 
Set Selection Mode is a wrapper around gtk flow box set selection mode 
Get Selection Mode is a wrapper around gtk flow box get selection mode 
Flow Box Child New is a wrapper around gtk flow box child new 
Get Index is a wrapper around gtk flow box child get index 
Is Selected is a wrapper around gtk flow box child is selected 
native returns a pointer to the underlying cairo t 
Create is a wrapper around cairo create 
destroy is a wrapper around cairo destroy 
Status is a wrapper around cairo status 
Get Target is a wrapper around cairo get target 
Push Group With Content is a wrapper around cairo push group with content 
Get Group Target is a wrapper around cairo get group target 
Set Source is a wrapper around cairo set source 
Set Source RGB is a wrapper around cairo set source rgb 
Set Source RGBA is a wrapper around cairo set source rgba 
TODO jrick Set Source depends on Pattern Set Source Surface is a wrapper around cairo set source surface 
TODO jrick Get Source depends on Pattern Set Antialias is a wrapper around cairo set antialias 
Get Antialias is a wrapper around cairo get antialias 
Set Dash is a wrapper around cairo set dash 
Get Dash Count is a wrapper around cairo get dash count 
Get Dash is a wrapper around cairo get dash 
Set Fill Rule is a wrapper around cairo set fill rule 
Get Fill Rule is a wrapper around cairo get fill rule 
Set Line Cap is a wrapper around cairo set line cap 
Get Line Cap is a wrapper around cairo get line cap 
Set Line Join is a wrapper around cairo set line join 
Get Line Join is a wrapper around cairo get line join 
Set Line Width is a wrapper around cairo set line width 
Get Line Width is a wrapper cairo get line width 
Set Miter Limit is a wrapper around cairo set miter limit 
Get Miter Limit is a wrapper around cairo get miter limit 
Set Operator is a wrapper around cairo set operator 
Get Operator is a wrapper around cairo get operator 
Set Tolerance is a wrapper around cairo set tolerance 
Get Tolerance is a wrapper around cairo get tolerance 
Clip Extents is a wrapper around cairo clip extents 
In Clip is a wrapper around cairo in clip 
Rectangle is a wrapper around cairo rectangle 
Arc is a wrapper around cairo arc 
Arc Negative is a wrapper around cairo arc negative 
Line To is a wrapper around cairo line to 
Curve To is a wrapper around cairo curve to 
Move To is a wrapper around cairo move to 
Get Current Point is a wrapper around cairo get current point 
Fill Extents is a wrapper around cairo fill extents 
In Fill is a wrapper around cairo in fill 
TODO jrick Mask depends on Pattern Mask Surface is a wrapper around cairo mask surface 
Paint With Alpha is a wrapper around cairo paint with alpha 
Stroke Extents is a wrapper around cairo stroke extents 
In Stroke is a wrapper around cairo in stroke 
native returns a pointer to the underlying Gtk Text View 
Text View New is a wrapper around gtk text view new 
Text View New With Buffer is a wrapper around gtk text view new with buffer 
Get Buffer is a wrapper around gtk text view get buffer 
Set Buffer is a wrapper around gtk text view set buffer 
Set Editable is a wrapper around gtk text view set editable 
Get Editable is a wrapper around gtk text view get editable 
Set Wrap Mode is a wrapper around gtk text view set wrap mode 
Set Cursor Visible is a wrapper around gtk text view set cursor visible 
Get Cursor Visible is a wrapper around gtk text view get cursor visible 
Get Overwrite is a wrapper around gtk text view get overwrite 
Set Justification is a wrapper around gtk text view set justification 
Get Justification is a wrapper around gtk text view get justification 
Set Accepts Tab is a wrapper around gtk text view set accepts tab 
Get Accepts Tab is a wrapper around gtk text view get accepts tab 
Set Pixels Above Lines is a wrapper around gtk text view set pixels above lines 
Get Pixels Above Lines is a wrapper around gtk text view get pixels above lines 
Set Pixels Below Lines is a wrapper around gtk text view set pixels below lines 
Get Pixels Below Lines is a wrapper around gtk text view get pixels below lines 
Set Pixels Inside Wrap is a wrapper around gtk text view set pixels inside wrap 
Get Pixels Inside Wrap is a wrapper around gtk text view get pixels inside wrap 
Set Left Margin is a wrapper around gtk text view set left margin 
Get Left Margin is a wrapper around gtk text view get left margin 
Set Right Margin is a wrapper around gtk text view set right margin 
Get Right Margin is a wrapper around gtk text view get right margin 
Set Indent is a wrapper around gtk text view set indent 
Get Indent is a wrapper around gtk text view get indent 
Set Input Hints is a wrapper around gtk text view set input hints 
Get Input Hints is a wrapper around gtk text view get input hints 
Set Input Purpose is a wrapper around gtk text view set input purpose 
Get Input Purpose is a wrapper around gtk text view get input purpose 
Scroll To Mark is a wrapper around gtk text view scroll to mark 
Scroll To Iter is a wrapper around gtk text view scroll to iter 
Scroll Mark Onscreen is a wrapper around gtk text view scroll mark onscreen 
Move Mark Onscreen is a wrapper around gtk text view move mark onscreen 
Get Visible Rect is a wrapper around gtk text view get visible rect 
Get Iter Location is a wrapper around gtk text view get iter location 
Get Cursor Locations is a wrapper around gtk text view get cursor locations 
Get Line At Y is a wrapper around gtk text view get line at y 
Get Line Yrange is a wrapper around gtk text view get line yrange 
Get Iter At Location is a wrapper around gtk text view get iter at location 
Get Iter At Position is a wrapper around gtk text view get iter at position 
Buffer To Window Coords is a wrapper around gtk text view buffer to window coords 
Window To Buffer Coords is a wrapper around gtk text view window to buffer coords 
Get Window is a wrapper around gtk text view get window 
Get Window Type is a wrapper around gtk text view get window type 
Set Border Window Size is a wrapper around gtk text view set border window size 
Get Border Window Size is a wrapper around gtk text view get border window size 
Forward Display Line is a wrapper around gtk text view forward display line 
Backward Display Line is a wrapper around gtk text view backward display line 
Forward Display Line End is a wrapper around gtk text view forward display line end 
Backward Display Line Start is a wrapper around gtk text view backward display line start 
Starts Display Line is a wrapper around gtk text view starts display line 
Move Visually is a wrapper around gtk text view move visually 
Add Child In Window is a wrapper around gtk text view add child in window 
Move Child is a wrapper around gtk text view move child 
Im Context Filter Keypress is a wrapper around gtk text view im context filter keypress 
Add Child At Anchor is a wrapper around gtk text view add child at anchor 
native returns a pointer to the underlying GSettings Backend 
Keyfile Settings Backend New is a wrapper around g keyfile settings backend new 
Get Child By Name is a wrapper around gtk stack get child by name 
Get Transition Running is a wrapper around gtk stack get transition running 
Get Clip is a wrapper around gtk widget get clip 
Set Clip is a wrapper around gtk widget set clip 
Pango Color pango color copy const Pango Color src 
gboolean pango color parse Pango Color color const char spec 
gchar pango color to string const Pango Color color 
Get Active Window is a wrapper around gdk screen get active window 
Get Height is a wrapper around gdk screen get height 
Get Monitor At Point is a wrapper around gdk screen get monitor at point 
Get Monitor At Window is a wrapper around gdk screen get monitor at window 
Get Monitor Height MM is a wrapper around gdk screen get monitor height mm 
Get Monitor Plug Name is a wrapper around gdk screen get monitor plug name 
Get Monitor Scale Factor is a wrapper around gdk screen get monitor scale factor 
Get Monitor Width MM is a wrapper around gdk screen get monitor width mm 
Get Width is a wrapper around gdk screen get width 
Make Display Name is a wrapper around gdk screen make display name 
String returns a copy of this Variant Type s type string 
native returns a pointer to the underlying Gtk Application 
Application New is a wrapper around gtk application new 
Add Window is a wrapper around gtk application add window 
Remove Window is a wrapper around gtk application remove window 
Get Window By ID is a wrapper around gtk application get window by id 
Get Active Window is a wrapper around gtk application get active window 
Uninhibit is a wrapper around gtk application uninhibit 
Get App Menu is a wrapper around gtk application get app menu 
Set App Menu is a wrapper around gtk application set app menu 
Get Menubar is a wrapper around gtk application get menubar 
Set Menubar is a wrapper around gtk application set menubar 
Is Inhibited is a wrapper around gtk application is inhibited 
Inhibited is a wrapper around gtk application inhibit 
void gtk application add accelerator deprecated and uses a gvariant paramater void gtk application remove accelerator deprecated and uses a gvariant paramater Get Windows is a wrapper around gtk application get windows Returned list is wrapped to return gtk Window elements 
Supports Composite is a wrapper around gdk display supports composite 
Is Maximized is a wrapper around gtk window is maximized 
native returns a pointer to the underlying Gtk Menu Shell 
Append is a wrapper around gtk menu shell append 
Prepend is a wrapper around gtk menu shell prepend 
Insert is a wrapper around gtk menu shell insert 
Select Item is a wrapper around gtk menu shell select item 
Select First is a wrapper around gtk menu shell select first 
Activate Item is a wrapper around gtk menu shell activate item 
Set Take Focus is a wrapper around gtk menu shell set take focus 
 Type conversions 
native returns a pointer to the underlying Gtk Style Context 
Get Style Context is a wrapper around gtk widget get style context 
Get Parent is a wrapper around gtk style context get parent 
Get Property is a wrapper around gtk style context get property 
Get Style Property is a wrapper around gtk style context get style property 
Get Screen is a wrapper around gtk style context get screen 
Get Color is a wrapper around gtk style context get color 
Lookup Color is a wrapper around gtk style context lookup color 
Style Context Reset Widgets is a wrapper around gtk style context reset widgets 
Set Parent is a wrapper around gtk style context set parent 
Has Class is a wrapper around gtk style context has class 
Set Screen is a wrapper around gtk style context set screen 
Set State is a wrapper around gtk style context set state 
Add Provider is a wrapper around gtk style context add provider 
Add Provider For Screen is a wrapper around gtk style context add provider for screen 
Remove Provider is a wrapper around gtk style context remove provider 
Remove Provider For Screen is a wrapper around gtk style context remove provider for screen 
New Matrix creates a new identiy matrix 
Native returns native c pointer to a matrix 
Init Translate initializes a matrix with the given translation 
Init Scale initializes a matrix with the give scale 
Init Rotate initializes a matrix with the given rotation 
Translate translates a matrix by the given amount 
Scale scales the matrix by the given amounts 
Rotate rotates the matrix by the given amount 
Multiply multiplies the matrix by another matrix 
Transform Distance 
Transform Point 
native returns a pointer to the underlying Gtk Menu 
Menu New is a wrapper around gtk menu new 
Reorder Child is a wrapper around gtk menu reorder child 
Page Setup New is a wrapper around gtk page setup new 
Copy is a wrapper around gtk page setup copy 
Get Orientation is a wrapper around gtk page setup get orientation 
Set Orientation is a wrapper around gtk page setup set orientation 
Get Paper Size is a wrapper around gtk page setup get paper size 
Set Paper Size is a wrapper around gtk page setup set paper size 
Get Top Margin is a wrapper around gtk page setup get top margin 
Set Top Margin is a wrapper around gtk page setup set top margin 
Get Bottom Margin is a wrapper around gtk page setup get bottom margin 
Set Bottom Margin is a wrapper around gtk page setup set bottom margin 
Get Left Margin is a wrapper around gtk page setup get left margin 
Set Left Margin is a wrapper around gtk page setup set left margin 
Get Right Margin is a wrapper around gtk page setup get right margin 
Set Right Margin is a wrapper around gtk page setup set right margin 
Set Paper Size And Default Margins is a wrapper around gtk page setup set paper size and default margins 
Get Paper Width is a wrapper around gtk page setup get paper width 
Get Paper Height is a wrapper around gtk page setup get paper height 
Get Page Width is a wrapper around gtk page setup get page width 
Get Page Height is a wrapper around gtk page setup get page height 
Page Setup New From File is a wrapper around gtk page setup new from file 
Page Setup Load Key File is a wrapper around gtk page setup load key file Page Setup To File is a wrapper around gtk page setup to file 
native returns a pointer to the underlying Gtk Paper Size 
Paper Size New is a wrapper around gtk paper size new 
Paper Size New From PPD is a wrapper around gtk paper size new from ppd 
Paper Size New Custom is a wrapper around gtk paper size new custom 
Copy is a wrapper around gtk paper size copy 
Is Equal is a wrapper around gtk paper size is equal 
Paper Size Get Paper Sizes is a wrapper around gtk paper size get paper sizes 
Get Name is a wrapper around gtk paper size get name 
Get Display Name is a wrapper around gtk paper size get display name 
Get PPDName is a wrapper around gtk paper size get ppd name 
Get Width is a wrapper around gtk paper size get width 
Is Custom is a wrapper around gtk paper size is custom 
Set Size is a wrapper around gtk paper size set size 
Get Default Top Margin is a wrapper around gtk paper size get default top margin 
Get Default Bottom Margin is a wrapper around gtk paper size get default bottom margin 
Get Default Left Margin is a wrapper around gtk paper size get default left margin 
Get Default Right Margin is a wrapper around gtk paper size get default right margin 
Paper Size Get Default is a wrapper around gtk paper size get default 
native returns a pointer to the underlying Gtk Print Context 
Get Cairo Context is a wrapper around gtk print context get cairo context 
Set Cairo Context is a wrapper around gtk print context set cairo context 
Get Page Setup is a wrapper around gtk print context get page setup 
Get Width is a wrapper around gtk print context get width 
Get Height is a wrapper around gtk print context get height 
Get Dpi X is a wrapper around gtk print context get dpi x 
Get Dpi Y is a wrapper around gtk print context get dpi y 
Get Pango Font Map is a wrapper around gtk print context get pango fontmap 
Create Pango Context is a wrapper around gtk print context create pango context 
Create Pango Layout is a wrapper around gtk print context create pango layout 
Get Hard Margins is a wrapper around gtk print context get hard margins 
Print Operation New is a wrapper around gtk print operation new 
Set Allow Async is a wrapper around gtk print operation set allow async 
Get Error is a wrapper around gtk print operation get error 
Set Default Page Setup is a wrapper around gtk print operation set default page setup 
Get Default Page Setup is a wrapper around gtk print operation get default page setup 
Set Print Settings is a wrapper around gtk print operation set print settings 
Get Print Settings is a wrapper around gtk print operation get print settings 
Set Job Name is a wrapper around gtk print operation set job name 
Set NPages is a wrapper around gtk print operation set n pages 
Get NPages To Print is a wrapper around gtk print operation get n pages to print 
Set Current Page is a wrapper around gtk print operation set current page 
Set Use Full Page is a wrapper around gtk print operation set use full page 
Set Unit is a wrapper around gtk print operation set unit 
Set Export Filename is a wrapper around gtk print operation set export filename 
Set Show Progress is a wrapper around gtk print operation set show progress 
Set Track Print Status is a wrapper around gtk print operation set track print status 
Set Custom Tab Label is a wrapper around gtk print operation set custom tab label 
Run is a wrapper around gtk print operation run 
Get Status is a wrapper around gtk print operation get status 
Get Status String is a wrapper around gtk print operation get status string 
Is Finished is a wrapper around gtk print operation is finished 
Set Support Selection is a wrapper around gtk print operation set support selection 
Get Support Selection is a wrapper around gtk print operation get support selection 
Set Has Selection is a wrapper around gtk print operation set has selection 
Get Has Selection is a wrapper around gtk print operation get has selection 
Set Embed Page Setup is a wrapper around gtk print operation set embed page setup 
Get Embed Page Setup is a wrapper around gtk print operation get embed page setup 
Print Run Page Setup Dialog is a wrapper around gtk print run page setup dialog 
Print Run Page Setup Dialog Async is a wrapper around gtk print run page setup dialog async 
native returns a pointer to the underlying GObject as a Gtk Print Operation Preview 
Render Page is a wrapper around gtk print operation preview render page 
Is Selected is a wrapper around gtk print operation preview is selected 
Print Settings New is a wrapper around gtk print settings new 
Copy is a wrapper around gtk print settings copy 
Has Key is a wrapper around gtk print settings has key 
Get is a wrapper around gtk print settings get 
Set is a wrapper around gtk print settings set TODO Since value can t be nil we can t unset values here 
Unset is a wrapper around gtk print settings unset 
Foreach is a wrapper around gtk print settings foreach 
Get Bool is a wrapper around gtk print settings get bool 
Set Bool is a wrapper around gtk print settings set bool 
Get Double is a wrapper around gtk print settings get double 
Get Double With Default is a wrapper around gtk print settings get double with default 
Set Double is a wrapper around gtk print settings set double 
Get Length is a wrapper around gtk print settings get length 
Set Length is a wrapper around gtk print settings set length 
Get Int is a wrapper around gtk print settings get int 
Get Int With Default is a wrapper around gtk print settings get int with default 
Set Int is a wrapper around gtk print settings set int 
Get Printer is a wrapper around gtk print settings get printer 
Set Printer is a wrapper around gtk print settings set printer 
Get Orientation is a wrapper around gtk print settings get orientation 
Set Orientation is a wrapper around gtk print settings set orientation 
Get Paper Size is a wrapper around gtk print settings get paper size 
Set Paper Size is a wrapper around gtk print settings set paper size 
Get Paper Width is a wrapper around gtk print settings get paper width 
Set Paper Width is a wrapper around gtk print settings set paper width 
Get Paper Height is a wrapper around gtk print settings get paper height 
Set Paper Height is a wrapper around gtk print settings set paper height 
Get Use Color is a wrapper around gtk print settings get use color 
Set Use Color is a wrapper around gtk print settings set use color 
Get Collate is a wrapper around gtk print settings get collate 
Set Collate is a wrapper around gtk print settings set collate 
Get Reverse is a wrapper around gtk print settings get reverse 
Set Reverse is a wrapper around gtk print settings set reverse 
Get Duplex is a wrapper around gtk print settings get duplex 
Set Duplex is a wrapper around gtk print settings set duplex 
Get Quality is a wrapper around gtk print settings get quality 
Set Quality is a wrapper around gtk print settings set quality 
Get NCopies is a wrapper around gtk print settings get n copies 
Set NCopies is a wrapper around gtk print settings set n copies 
Get Nmber Up is a wrapper around gtk print settings get number up 
Set Number Up is a wrapper around gtk print settings set number up 
Get Number Up Layout is a wrapper around gtk print settings get number up layout 
Set Number Up Layout is a wrapper around gtk print settings set number up layout 
Get Resolution is a wrapper around gtk print settings get resolution 
Set Resolution is a wrapper around gtk print settings set resolution 
Set Resolution XY is a wrapper around gtk print settings set resolution xy 
Get Resolution X is a wrapper around gtk print settings get resolution x 
Get Resolution Y is a wrapper around gtk print settings get resolution y 
Get Printer Lpi is a wrapper around gtk print settings get printer lpi 
Set Printer Lpi is a wrapper around gtk print settings set printer lpi 
Get Scale is a wrapper around gtk print settings get scale 
Set Scale is a wrapper around gtk print settings set scale 
Get Print Pages is a wrapper around gtk print settings get print pages 
Set Print Pages is a wrapper around gtk print settings set print pages 
Get Page Set is a wrapper around gtk print settings get page set 
Set Page Set is a wrapper around gtk print settings set page set 
Get Default Source is a wrapper around gtk print settings get default source 
Set Sefault Source is a wrapper around gtk print settings set default source 
Get Media Type is a wrapper around gtk print settings get media type 
Set Media Type is a wrapper around gtk print settings set media type 
Get Dither is a wrapper around gtk print settings get dither 
Set Dither is a wrapper around gtk print settings set dither 
Get Finishings is a wrapper around gtk print settings get finishings 
Set Finishings is a wrapper around gtk print settings set finishings 
Get Output Bin is a wrapper around gtk print settings get output bin 
Set Output Bin is a wrapper around gtk print settings set output bin 
Print Settings New From File is a wrapper around gtk print settings new from file 
Print Settings New From Key File is a wrapper around gtk print settings new from key file Load File is a wrapper around gtk print settings load file 
export substring match equal func 
export go Builder Connect 
export go Page Setup Done 
export go Print Settings 
export go Tree Model Filter Funcs 
 Gtk Dialog Get Action Area is a wrapper around gtk dialog get action area 
 Gtk Message Dialog Get Image is a wrapper around gtk message dialog get image 
Set Image is a wrapper around gtk message dialog set image 
 Gtk Widget Get Margin Left is a wrapper around gtk widget get margin left 
Set Margin Left is a wrapper around gtk widget set margin left 
Get Margin Right is a wrapper around gtk widget get margin right 
Set Margin Right is a wrapper around gtk widget set margin right 
native returns a pointer to the underlying Gdk GLContext 
Get Display is a wrapper around gdk gl context get display 
Get Window is a wrapper around gdk gl context get window 
Get Shared Context is a wrapper around gdk gl context get shared context 
Get Version is a wrapper around gdk gl context get version 
Get Required Version is a wrapper around gdk gl context get required version 
Set Required Version is a wrapper around gdk gl context set required version 
Set Debug Enabled is a wrapper around gdk gl context set debug enabled 
Set Forward Compatible is a wrapper around gdk gl context set forward compatible 
Realize is a wrapper around gdk gl context realize 
Get Current is a wrapper around gdk gl context get current 
native returns a pointer to the underlying Gtk Button Box 
Button Box New is a wrapper around gtk button box new 
Get Layout is a wrapper around gtk button box get layout 
Get Child Secondary is a wrapper around gtk button box get child secondary 
Get Child Non Homogeneous is a wrapper around gtk button box get child non homogeneous 
Set Layout is a wrapper around gtk button box set layout 
Set Child Secondary is a wrapper around gtk button box set child secondary 
Set Child Non Homogeneous is a wrapper around gtk button box set child non homogeneous 
native returns a pointer to the underlying Gtk Icon View 
Set Markup is a wrapper around gtk tooltip set markup 
Set Text is a wrapper around gtk tooltip set text 
Set Icon is a wrapper around gtk tooltip set icon 
Set Icon From Icon Name is a wrapper around gtk tooltip set icon from icon name 
func t Tooltip Set Icon From GIcon Set Custom is a wrapper around gtk tooltip set custom 
Set Tip Area is a wrapper around gtk tooltip set tip area 
Grab is a wrapper around gdk device grab 
Get Client Pointer is a wrapper around gdk device manager get client pointer 
List Devices is a wrapper around gdk device manager list devices 
Ungrab is a wrapper around gdk device ungrab 
Get Device Manager is a wrapper around gdk display get device manager 
Get Screen is a wrapper around gdk display get screen 
 Gtk Window Set Titlebar is a wrapper around gtk window set titlebar 
native returns a pointer to the underlying Gtk Text Iter 
Get Buffer is a wrapper around gtk text iter get buffer 
Get Slice is a wrapper around gtk text iter get slice 
Get Text is a wrapper around gtk text iter get text 
Get Visible Slice is a wrapper around gtk text iter get visible slice 
Get Visible Text is a wrapper around gtk text iter get visible text 
Ends Tag is a wrapper around gtk text iter ends tag 
Toggles Tag is a wrapper around gtk text iter toggles tag 
Has Tag is a wrapper around gtk text iter has tag 
Editable is a wrapper around gtk text iter editable 
Can Insert is a wrapper around gtk text iter can insert 
Forward Chars is a wrapper around gtk text iter forward chars 
Backward Chars is a wrapper around gtk text iter backward chars 
Forward Lines is a wrapper around gtk text iter forward lines 
Backward Lines is a wrapper around gtk text iter backward lines 
Forward Word Ends is a wrapper around gtk text iter forward word ends 
Forward Cursor Positions is a wrapper around gtk text iter forward cursor positions 
Backward Cursor Positions is a wrapper around gtk text iter backward cursor positions 
Forward Sentence Ends is a wrapper around gtk text iter forward sentence ends 
Forward Visible Cursor Positions is a wrapper around gtk text iter forward visible cursor positions 
Backward Visible Cursor Positions is a wrapper around gtk text iter backward visible cursor positions 
Forward Visible Lines is a wrapper around gtk text iter forward visible lines 
Backward Visible Lines is a wrapper around gtk text iter backward visible lines 
Set Offset is a wrapper around gtk text iter set offset 
Set Line is a wrapper around gtk text iter set line 
Set Line Offset is a wrapper around gtk text iter set line offset 
Set Line Index is a wrapper around gtk text iter set line index 
Set Visible Line Offset is a wrapper around gtk text iter set visible line offset 
Set Visible Line Index is a wrapper around gtk text iter set visible line index 
Forward To Tag Toggle is a wrapper around gtk text iter forward to tag toggle 
Backward To Tag Toggle is a wrapper around gtk text iter backward to tag toggle 
Equal is a wrapper around gtk text iter equal 
Compare is a wrapper around gtk text iter compare 
In Range is a wrapper around gtk text iter in range 
native returns a pointer to the underlying GMain Context 
Main Context Default is a wrapper around g main context default 
native returns a pointer to the underlying Gtk Tree View Column 
Tree View Column New is a wrapper around gtk tree view column new 
Tree View Column New With Attribute is a wrapper around gtk tree view column new with attributes that only sets one attribute for one column 
Add Attribute is a wrapper around gtk tree view column add attribute 
Set Expand is a wrapper around gtk tree view column set expand 
Get Expand is a wrapper around gtk tree view column get expand 
Set Min Width is a wrapper around gtk tree view column set min width 
Get Min Width is a wrapper around gtk tree view column get min width 
Pack Start is a wrapper around gtk tree view column pack start 
Pack End is a wrapper around gtk tree view column pack end 
Clear Attributes is a wrapper around gtk tree view column clear attributes 
Set Spacing is a wrapper around gtk tree view column set spacing 
Set Visible is a wrapper around gtk tree view column set visible 
Set Fixed Width is a wrapper around gtk tree view column set fixed width 
Set Title is a wrapper around gtk tree view column set title 
Get Title is a wrapper around gtk tree view column get title 
Set Reorderable is a wrapper around gtk tree view column set reorderable 
Set Sort Indicator is a wrapper around gtk tree view column set sort indicator 
Set Sort Column ID is a wrapper around gtk tree view column set sort column id 
Focus Cell is a wrapper around gtk tree view column focus cell 
void gtk tree view column set sizing 
Set Widget is a wrapper around gtk tree view column set widget 
Get Widget is a wrapper around gtk tree view column get widget 
Gtk Widget gtk tree view column get button void gtk tree view column set alignment gfloat gtk tree view column get alignment void gtk tree view column set sort order 
native returns a pointer to the underlying GVariant Iter 
Next is a wrapper around the next struct field 
Foreach acts the same as g slist foreach No user data argument is implemented because of Go clojure capabilities 
Free is a wrapper around g slist free 
Free Full is a wrapper around g slist free full 
Get Accels For Action is a wrapper around gtk application get accels for action 
Set Accels For Action is a wrapper around gtk application set accels for action 
List Action Descriptions is a wrapper around gtk application list action descriptions 
native returns a pointer to the underlying GSettings 
Settings New is a wrapper around g settings new 
Settings New With Path is a wrapper around g settings new with path 
Settings New With Backend is a wrapper around g settings new with backend 
Settings New With Backend And Path is a wrapper around g settings new with backend and path 
Settings New Full is a wrapper around g settings new full 
Is Writable is a wrapper around g settings is writable 
Get Child is a wrapper around g settings get child 
Reset is a wrapper around g settings reset 
Get Boolean is a wrapper around g settings get boolean 
Set Boolean is a wrapper around g settings set boolean 
Get Int is a wrapper around g settings get int 
Set Int is a wrapper around g settings set int 
Get UInt is a wrapper around g settings get uint 
Set UInt is a wrapper around g settings set uint 
Get Double is a wrapper around g settings get double 
Set Double is a wrapper around g settings set double 
Get String is a wrapper around g settings get string 
Set String is a wrapper around g settings set string 
Get Enum is a wrapper around g settings get enum 
Get Strv is a wrapper around g settings get strv 
Set Strv is a wrapper around g settings set strv 
Get Flags is a wrapper around g settings get flags 
void g action map add action entries GAction Map action map const GAction Entry entries gint n entries gpointer user data struct GAction Entry native returns a pointer to the underlying GAction Map 
Lookup Action is a wrapper around g action map lookup action 
Add Action is a wrapper around g action map add action 
Remove Action is a wrapper around g action map remove action 
Popup At Mouse is a wrapper for gtk menu popup without the option for a custom positioning function 
Set WMClass is a wrapper around gtk window set wmclass 
Get Font Name is a wrapper around gtk font button get font name 
Set Font Name is a wrapper around gtk font button set font name 
TODO cairo set font matrix TODO cairo get font matrix TODO cairo set font options TODO cairo get font options TODO cairo set font face TODO cairo get font face TODO cairo set scaled font TODO cairo get scaled font 
Create Image Surface is a wrapper around cairo image surface create 
 Create a new PDF surface 
native returns a pointer to the underlying cairo surface t 
New Surface creates a gotk cairo Surface from a pointer to a C cairo surface t This is primarily designed for use with other gotk packages and should be avoided by applications 
Create Similar is a wrapper around cairo surface create similar 
TODO cairo surface create similar image since Create For Rectangle is a wrapper around cairo surface create for rectangle 
destroy is a wrapper around cairo surface destroy 
Status is a wrapper around cairo surface status 
Mark Dirty Rectangle is a wrapper around cairo surface mark dirty rectangle 
Set Device Offset is a wrapper around cairo surface set device offset 
Get Device Offset is a wrapper around cairo surface get device offset 
Set Fallback Resolution is a wrapper around cairo surface set fallback resolution 
Get Fallback Resolution is a wrapper around cairo surface get fallback resolution 
Get Type is a wrapper around cairo surface get type 
Has Show Text Glyphs is a wrapper around cairo surface has show text glyphs 
TODO jrick Set Mime Data depends on Destroy Func Get Mime Data is a wrapper around cairo surface get mime data The returned mimetype data is returned as a Go byte slice 
Write To PNG is a wrapper around cairo surface write png It writes the Cairo surface to the given file in PNG format 
Get Data is a wrapper around cairo image surface get data 
Fixed New is a wrapper around gtk fixed new 
Put is a wrapper around gtk fixed put 
Move is a wrapper around gtk fixed move 
native returns a pointer to the underlying Gtk About Dialog 
About Dialog New is a wrapper around gtk about dialog new 
Get Comments is a wrapper around gtk about dialog get comments 
Set Comments is a wrapper around gtk about dialog set comments 
Get Copyright is a wrapper around gtk about dialog get copyright 
Set Copyright is a wrapper around gtk about dialog set copyright 
Get License is a wrapper around gtk about dialog get license 
Set License is a wrapper around gtk about dialog set license 
Get License Type is a wrapper around gtk about dialog get license type 
Set License Type is a wrapper around gtk about dialog set license type 
Get Logo is a wrapper around gtk about dialog get logo 
Set Logo is a wrapper around gtk about dialog set logo 
Get Logo Icon Name is a wrapper around gtk about dialog get logo icon name 
Set Logo Icon Name is a wrapper around gtk about dialog set logo icon name 
Get Program Name is a wrapper around gtk about dialog get program name 
Set Program Name is a wrapper around gtk about dialog set program name 
Get Authors is a wrapper around gtk about dialog get authors 
Set Authors is a wrapper around gtk about dialog set authors 
Get Artists is a wrapper around gtk about dialog get artists 
Set Artists is a wrapper around gtk about dialog set artists 
Get Documenters is a wrapper around gtk about dialog get documenters 
Set Documenters is a wrapper around gtk about dialog set documenters 
Get Translator Credits is a wrapper around gtk about dialog get translator credits 
Set Translator Credits is a wrapper around gtk about dialog set translator credits 
Get Version is a wrapper around gtk about dialog get version 
Set Version is a wrapper around gtk about dialog set version 
Get Website is a wrapper around gtk about dialog get website 
Set Website is a wrapper around gtk about dialog set website 
Get Website Label is a wrapper around gtk about dialog get website label 
Set Website Label is a wrapper around gtk about dialog set website label 
Set Wrap License is a wrapper around gtk about dialog set wrap license 
Add Credit Section is a wrapper around gtk about dialog add credit section 
Add Font adds the font to the configuration 
 Pango Font Description 
Pango Font Description pango font description new void 
Pango Font Description pango font description copy const Pango Font Description desc 
Pango Font Description pango font description copy static const Pango Font Description desc 
guint pango font description hash const Pango Font Description desc G GNUC PURE 
gboolean pango font description equal const Pango Font Description desc const Pango Font Description desc G GNUC PURE 
void pango font descriptions free Pango Font Description descs int n descs func v Font Description Font Descriptions Free n descs int C pango font descriptions free v native C int n descs void pango font description set family Pango Font Description desc const char family 
void pango font description set family static Pango Font Description desc const char family 
const char pango font description get family const Pango Font Description desc G GNUC PURE 
void pango font description set style Pango Font Description desc Pango Style style 
Pango Style pango font description get style const Pango Font Description desc G GNUC PURE 
void pango font description set variant Pango Font Description desc Pango Variant variant Pango Variant pango font description get variant const Pango Font Description desc G GNUC PURE void pango font description set weight Pango Font Description desc Pango Weight weight 
Pango Weight pango font description get weight const Pango Font Description desc G GNUC PURE 
void pango font description set stretch Pango Font Description desc Pango Stretch stretch 
Pango Stretch pango font description get stretch const Pango Font Description desc G GNUC PURE 
void pango font description set size Pango Font Description desc gint size 
gint pango font description get size const Pango Font Description desc G GNUC PURE 
void pango font description set absolute size Pango Font Description desc double size 
gboolean pango font description get size is absolute const Pango Font Description desc G GNUC PURE 
void pango font description set gravity Pango Font Description desc Pango Gravity gravity 
Pango Gravity pango font description get gravity const Pango Font Description desc G GNUC PURE 
Pango Font Mask pango font description get set fields const Pango Font Description desc G GNUC PURE 
void pango font description unset fields Pango Font Description desc Pango Font Mask to unset 
void pango font description merge Pango Font Description desc const Pango Font Description desc to merge gboolean replace existing 
void pango font description merge static Pango Font Description desc const Pango Font Description desc to merge gboolean replace existing 
gboolean pango font description better match const Pango Font Description desc const Pango Font Description old match const Pango Font Description new match G GNUC PURE 
Pango Font Description pango font description from string const char str 
char pango font description to string const Pango Font Description desc 
char pango font description to filename const Pango Font Description desc 
Get Focus On Click is a wrapper around gtk button get focus on click 
Begins Tag is a wrapper around gtk text iter begins tag 
Resize To Geometry is a wrapper around gtk window resize to geometry 
Set Default Geometry is a wrapper around gtk window set default geometry 
Set Focus On Click is a wrapper around gtk button set focus on click 
gtk action bar new 
gtk action bar pack start Gtk Action Bar action bar Gtk Widget child 
gtk action bar pack end Gtk Action Bar action bar Gtk Widget child 
gtk action bar set center widget Gtk Action Bar action bar Gtk Widget center widget 
gtk action bar get center widget Gtk Action Bar action bar 
native returns a pointer to the underlying Gtk Label 
Set Text is a wrapper around gtk label set text 
Set Markup is a wrapper around gtk label set markup 
Set Markup With Mnemonic is a wrapper around gtk label set markup with mnemonic 
Set Pattern is a wrapper around gtk label set pattern 
Set Justify is a wrapper around gtk label set justify 
Set Ellipsize is a wrapper around gtk label set ellipsize 
Get Width Chars is a wrapper around gtk label get width chars 
Set Width Chars is a wrapper around gtk label set width chars 
Get Max Width Chars is a wrapper around gtk label get max width chars 
Set Max Width Chars is a wrapper around gtk label set max width chars 
Get Line Wrap is a wrapper around gtk label get line wrap 
Set Line Wrap is a wrapper around gtk label set line wrap 
Set Line Wrap Mode is a wrapper around gtk label set line wrap mode 
Get Selectable is a wrapper around gtk label get selectable 
Get Text is a wrapper around gtk label get text 
Get Justify is a wrapper around gtk label get justify 
Get Ellipsize is a wrapper around gtk label get ellipsize 
Get Current Uri is a wrapper around gtk label get current uri 
Get Track Visited Links is a wrapper around gtk label get track visited links 
Set Track Visited Links is a wrapper around gtk label set track visited links 
Get Angle is a wrapper around gtk label get angle 
Get Selection Bounds is a wrapper around gtk label get selection bounds 
Get Single Line Mode is a wrapper around gtk label get single line mode 
Set Single Line Mode is a wrapper around gtk label set single line mode 
Get Use Markup is a wrapper around gtk label get use markup 
Set Use Markup is a wrapper around gtk label set use markup 
Get Use Underline is a wrapper around gtk label get use underline 
Set Use Underline is a wrapper around gtk label set use underline 
Label New With Mnemonic is a wrapper around gtk label new with mnemonic 
Select Region is a wrapper around gtk label select region 
Set Selectable is a wrapper around gtk label set selectable 
Set Label is a wrapper around gtk label set label 
Get Label is a wrapper around gtk label get label 
Set Mnemonic Widget is a wrapper around gtk label set mnemonic widget 
export go Tick Callbacks 
native returns a pointer to the underlying GVariant Dict 
native returns a pointer to the underlying Gtk Actionable 
Set Action Name is a wrapper around gtk actionable set action name Since 
Get Action Name is a wrapper around gtk actionable set action name Since 
Set Detailed Action Name is a wrapper around gtk actionable set detailed action name Since 
 Gtk Button Button New From Icon Name is a wrapper around gtk button new from icon name 
 Gtk Grid Remove Row is a wrapper around gtk grid remove row 
Remove Column is a wrapper around gtk grid remove column 
native returns a pointer to the underlying Gtk Header Bar 
Header Bar New is a wrapper around gtk header bar new 
Set Title is a wrapper around gtk header bar set title 
Get Title is a wrapper around gtk header bar get title 
Set Subtitle is a wrapper around gtk header bar set subtitle 
Get Subtitle is a wrapper around gtk header bar get subtitle 
Set Custom Title is a wrapper around gtk header bar set custom title 
Get Custom Title is a wrapper around gtk header bar get custom title 
Pack Start is a wrapper around gtk header bar pack start 
Pack End is a wrapper around gtk header bar pack end 
Set Show Close Button is a wrapper around gtk header bar set show close button 
Get Show Close Button is a wrapper around gtk header bar get show close button 
 Gtk Label Get Lines is a wrapper around gtk label get lines 
Set Lines is a wrapper around gtk label set lines 
native returns a pointer to the underlying Gtk List Box 
List Box New is a wrapper around gtk list box new 
Prepend is a wrapper around gtk list box prepend 
Insert is a wrapper around gtk list box insert 
Select Row is a wrapper around gtk list box select row 
Get Selected Row is a wrapper around gtk list box get selected row 
Set Selection Mode is a wrapper around gtk list box set selection mode 
Get Selection Mode is a wrapper around gtk list box get selection mode 
Set Activate On Single Click is a wrapper around gtk list box set activate on single click 
Get Activate On Single Click is a wrapper around gtk list box get activate on single click 
Get Adjustment is a wrapper around gtk list box get adjustment 
Set Adjustment is a wrapper around gtk list box set adjustment 
Set Placeholder is a wrapper around gtk list box set placeholder 
Get Row At Index is a wrapper around gtk list box get row at index 
Get Row At Y is a wrapper around gtk list box get row at y 
TODO Set Header Func TODO Set Sort Func Drag Highlight Row is a wrapper around gtk list box drag highlight row 
native returns a pointer to the underlying Gtk List Box Row 
Get Header is a wrapper around gtk list box row get header 
Set Header is a wrapper around gtk list box row get header 
Get Index is a wrapper around gtk list box row get index 
native returns a pointer to the underlying Gtk Revealer 
Revealer New is a wrapper around gtk revealer new 
Get Reveal Child is a wrapper around gtk revealer get reveal child 
Set Reveal Child is a wrapper around gtk revealer set reveal child 
Get Child Revealed is a wrapper around gtk revealer get child revealed 
Get Transition Duration is a wrapper around gtk revealer get transition duration 
Set Transition Duration is a wrapper around gtk revealer set transition duration 
Get Transition Type is a wrapper around gtk revealer get transition type 
Set Transition Type is a wrapper around gtk revealer set transition type 
native returns a pointer to the underlying Gtk Search Bar 
Search Bar New is a wrapper around gtk search bar new 
Connect Entry is a wrapper around gtk search bar connect entry 
Get Search Mode is a wrapper around gtk search bar get search mode 
Set Search Mode is a wrapper around gtk search bar set search mode 
Get Show Close Button is a wrapper arounb gtk search bar get show close button 
Set Show Close Button is a wrapper around gtk search bar set show close button 
Handle Event is a wrapper around gtk search bar handle event 
native returns a pointer to the underlying Gtk Stack 
Stack New is a wrapper around gtk stack new 
Add Named is a wrapper around gtk stack add named 
Add Titled is a wrapper around gtk stack add titled 
Set Visible Child is a wrapper around gtk stack set visible child 
Get Visible Child is a wrapper around gtk stack get visible child 
Set Visible Child Name is a wrapper around gtk stack set visible child name 
Get Visible Child Name is a wrapper around gtk stack get visible child name 
Set Visible Child Full is a wrapper around gtk stack set visible child full 
Set Homogeneous is a wrapper around gtk stack set homogeneous 
Get Homogeneous is a wrapper around gtk stack get homogeneous 
Set Transition Duration is a wrapper around gtk stack set transition duration 
Get Transition Duration is a wrapper around gtk stack get transition duration 
Set Transition Type is a wrapper around gtk stack set transition type 
Get Transition Type is a wrapper around gtk stack get transition type 
Creates a binding between source property on source and target property on target Whenever the source property is changed the target property is updated using the same value 
Retrieves the GObject instance used as the source of the binding 
Retrieves the name of the property of source used as the source of the binding 
Retrieves the GObject instance used as the target of the binding 
Retrieves the name of the property of target used as the target of the binding 
Retrieves the flags passed when constructing the GBinding 
native returns a pointer to the underlying Gtk Font Chooser 
Get Font is a wrapper around gtk font chooser get font 
Set Font is a wrapper around gtk font chooser set font 
native returns a pointer to the underlying Gtk Font Button 
Font Button New is a wrapper around gtk font button new 
Font Button New With Font is a wrapper around gtk font button new with font 
g action group list actions g action group query action should only called from implementations g action group action added g action group action removed g action group action enabled changed g action group action state changed native returns a pointer to the underlying GAction Group 
Has Action is a wrapper around g action group has action 
Get Action Enabled is a wrapper around g action group get action enabled 
Get Action Parameter Type is a wrapper around g action group get action parameter type 
Get Action State Type is a wrapper around g action group get action state type 
Get Action State is a wrapper around g action group get action state 
Get Action State Hint is a wrapper around g action group get action state hint 
Change Action State is a wrapper around g action group change action state 
Activate is a wrapper around g action group activate action 
double pango gravity to rotation Pango Gravity gravity G GNUC CONST 
native returns a pointer to the underlying Gtk Widget 
Get Can Focus is a wrapper around gtk widget get can focus 
Set Can Focus is a wrapper around gtk widget set can focus 
Get Can Default is a wrapper around gtk widget get can default 
Set Can Default is a wrapper around gtk widget set can default 
Get Mapped is a wrapper around gtk widget get mapped 
Set Mapped is a wrapper around gtk widget set mapped 
Get Realized is a wrapper around gtk widget get realized 
Set Realized is a wrapper around gtk widget set realized 
Get Has Window is a wrapper around gtk widget get has window 
Set Has Window is a wrapper around gtk widget set has window 
Set No Show All is a wrapper around gtk widget set no show all 
Get No Show All is a wrapper around gtk widget get no show all 
Queue Draw Area is a wrapper aroung gtk widget queue draw area 
Native returns a pointer to the underlying Gtk Allocation 
Event is a wrapper around gtk widget event 
Set Name is a wrapper around gtk widget set name 
Get Name is a wrapper around gtk widget get name A non nil error is returned in the case that gtk widget get name returns NULL to differentiate between NULL and an empty string 
Get Sensitive is a wrapper around gtk widget get sensitive 
Is Sensitive is a wrapper around gtk widget is sensitive 
Set Sensitive is a wrapper around gtk widget set sensitive 
Get Visible is a wrapper around gtk widget get visible 
Set Visible is a wrapper around gtk widget set visible 
Set Parent is a wrapper around gtk widget set parent 
Get Parent is a wrapper around gtk widget get parent 
Set Size Request is a wrapper around gtk widget set size request 
Set Parent Window is a wrapper around gtk widget set parent window 
Get Parent Window is a wrapper around gtk widget get parent window 
Set Events is a wrapper around gtk widget set events 
Add Events is a wrapper around gtk widget add events 
Has Default is a wrapper around gtk widget has default 
Has Focus is a wrapper around gtk widget has focus 
Has Visible Focus is a wrapper around gtk widget has visible focus 
Has Grab is a wrapper around gtk widget has grab 
Is Drawable is a wrapper around gtk widget is drawable 
Is Toplevel is a wrapper around gtk widget is toplevel 
TODO jrick Gdk Event Mask func v Widget Set Device Events TODO jrick Gdk Event Mask func v Widget Get Device Events TODO jrick Gdk Event Mask func v Widget Add Device Events Set Device Enabled is a wrapper around gtk widget set device enabled 
Get Device Enabled is a wrapper around gtk widget get device enabled 
Get Toplevel is a wrapper around gtk widget get toplevel 
Get Tooltip Text is a wrapper around gtk widget get tooltip text A non nil error is returned in the case that gtk widget get tooltip text returns NULL to differentiate between NULL and an empty string 
Set Tooltip Text is a wrapper around gtk widget set tooltip text 
Get HAlign is a wrapper around gtk widget get halign 
Set HAlign is a wrapper around gtk widget set halign 
Get VAlign is a wrapper around gtk widget get valign 
Set VAlign is a wrapper around gtk widget set valign 
Get Margin Top is a wrapper around gtk widget get margin top 
Set Margin Top is a wrapper around gtk widget set margin top 
Get Margin Bottom is a wrapper around gtk widget get margin bottom 
Set Margin Bottom is a wrapper around gtk widget set margin bottom 
Get HExpand is a wrapper around gtk widget get hexpand 
Set HExpand is a wrapper around gtk widget set hexpand 
Get VExpand is a wrapper around gtk widget get vexpand 
Set VExpand is a wrapper around gtk widget set vexpand 
Translate Coordinates is a wrapper around gtk widget translate coordinates 
Set Visual is a wrapper around gtk widget set visual 
Set App Paintable is a wrapper around gtk widget set app paintable 
Get App Paintable is a wrapper around gtk widget get app paintable 
Get Allocation is a wrapper around gtk widget get allocation 
Set Allocation is a wrapper around gtk widget set allocation 
Size Allocate is a wrapper around gtk widget size allocate 
Set State Flags is a wrapper around gtk widget set state flags 
Get Window is a wrapper around gtk widget get window 
Get Preferred Height is a wrapper around gtk widget get preferred height 
Get Preferred Width is a wrapper around gtk widget get preferred width 
Get Screen is a wrapper around gtk widget get screen 
native returns a pointer to the underlying Gtk GLArea 
GLArea New is a wrapper around gtk gl area new 
Get Required Version is a wrapper around gtk gl area get required version 
Set Required Version is a wrapper around gtk gl area set required version 
Set Has Depth Buffer is a wrapper around gtk gl area set has depth buffer 
Set Has Stencil Buffer is a wrapper around gtk gl area set has stencil buffer 
Set Auto Render is a wrapper around gtk gl area set has stencil buffer 
Get Context is a wrapper around gtk gl area get context 
GError gtk gl area get error Gtk GLArea area 
native returns a pointer to the underlying Gtk Tree View 
Tree View New With Model is a wrapper around gtk tree view new with model 
Get Model is a wrapper around gtk tree view get model 
Set Model is a wrapper around gtk tree view set model 
Get Selection is a wrapper around gtk tree view get selection 
Append Column is a wrapper around gtk tree view append column 
Get Path At Pos is a wrapper around gtk tree view get path at pos 
Set Level Indentation is a wrapper around gtk tree view set level indentation 
Set Show Expanders is a wrapper around gtk tree view set show expanders 
Set Headers Visible is a wrapper around gtk tree view set headers visible 
Set Headers Clickable is a wrapper around gtk tree view set headers clickable 
Set Activate On Single Click is a wrapper around gtk tree view set activate on single click 
Remove Column is a wrapper around gtk tree view remove column 
Insert Column is a wrapper around gtk tree view insert column 
Get Column is a wrapper around gtk tree view get column 
Move Column After is a wrapper around gtk tree view move column after 
Set Expander Column is a wrapper around gtk tree view set expander column 
Get Expander Column is a wrapper around gtk tree view get expander column 
Scroll To Point is a wrapper around gtk tree view scroll to point 
Set Cursor is a wrapper around gtk tree view set cursor 
Set Cursor On Cell is a wrapper around gtk tree view set cursor on cell 
Get Cursor is a wrapper around gtk tree view get cursor 
Row Activated is a wrapper around gtk tree view row activated 
Expand To Path is a wrapper around gtk tree view expand to path 
Expand Row is a wrapper around gtk tree view expand row 
Collapse Row is a wrapper around gtk tree view collapse row 
Row Expanded is a wrapper around gtk tree view row expanded 
Set Reorderable is a wrapper around gtk tree view set reorderable 
Get Bin Window is a wrapper around gtk tree view get bin window 
Set Enable Search is a wrapper around gtk tree view set enable search 
Set Search Column is a wrapper around gtk tree view set search column 
Get Search Entry is a wrapper around gtk tree view get search entry 
Set Search Entry is a wrapper around gtk tree view set search entry 
Set Search Equal Substring Match sets Tree View to search by substring match 
Set Fixed Height Mode is a wrapper around gtk tree view set fixed height mode 
Set Hover Selection is a wrapper around gtk tree view set hover selection 
Set Hover Expand is a wrapper around gtk tree view set hover expand 
Set Rubber Banding is a wrapper around gtk tree view set rubber banding 
Set Enable Tree Lines is a wrapper around gtk tree view set enable tree lines 
Set Tooltip Column is a wrapper around gtk tree view set tooltip column 
Set Grid Lines is a wrapper around gtk tree view set grid lines 
Name is a wrapper around g type name 
Depth is a wrapper around g type depth 
Parent is a wrapper around g type parent 
go Marshal is called by the GLib runtime when a closure needs to be invoked The closure will be invoked with as many arguments as it can take from to the full amount provided by the call If the closure asks for more parameters than there are to give a warning is printed to stderr and the closure is not run export go Marshal 
g Value Slice converts a C array of GValues to a Go slice 
Idle Add adds an idle source to the default main event loop context After running once the source func will be removed from the main event loop unless f returns a single bool true This function will cause a panic when f eventually runs if the types of args do not match those of f 
Timeout Add adds an timeout source to the default main event loop context After running once the source func will be removed from the main event loop unless f returns a single bool true This function will cause a panic when f eventually runs if the types of args do not match those of f timeout is in milliseconds 
source Attach attaches a source to the default main loop context 
 Miscellaneous Utility Functions Get Home Dir is a wrapper around g get home dir 
Get User Cache Dir is a wrapper around g get user cache dir 
Get User Data Dir is a wrapper around g get user data dir 
Get User Config Dir is a wrapper around g get user config dir 
Get User Runtime Dir is a wrapper around g get user runtime dir 
Get User Special Dir is a wrapper around g get user special dir A non nil error is returned in the case that g get user special dir returns NULL to differentiate between NULL and an empty string 
native returns a pointer to the underlying GObject 
go Value converts a Object to a Go type e g Object gtk Entry It is used in go Marshal to convert generic GObject parameters to signal handlers to the actual types expected by the signal handler 
Take wraps a unsafe Pointer as a glib Object taking ownership of it This function is exported for visibility in other gotk packages and is not meant to be used by applications 
Is A is a wrapper around g type is a 
Type From Instance is a wrapper around g type from instance 
Is Floating is a wrapper around g object is floating 
Stop Emission is a wrapper around g signal stop emission by name 
Set is a wrapper around g object set However unlike g object set this function only sets one name value pair Make multiple calls to this function to set multiple properties 
Get Property Type returns the Type of a property of the underlying GObject If the property is missing it will return TYPE INVALID and an error 
Get Property is a wrapper around g object get property 
Set Property is a wrapper around g object set property 
pointer Val attempts to return an unsafe Pointer for value Not all types are understood in which case a nil Pointer is returned func pointer Val value interface unsafe Pointer var p unsafe Pointer switch v value type case bool c gbool v p unsafe Pointer c 
Handler Block is a wrapper around g signal handler block 
Handler Unblock is a wrapper around g signal handler unblock 
Handler Disconnect is a wrapper around g signal handler disconnect 
Native returns a pointer to the underlying GObject This is implemented here rather than calling Native on the embedded Object to prevent a nil pointer dereference 
Value Alloc allocates a Value and sets a runtime finalizer to call g value unset on the underlying GValue after leaving scope Value Alloc returns a non nil error if the allocation failed 
Value Init is a wrapper around g value init and allocates and initializes a new Value with the Type t A runtime finalizer is set to call g value unset on the underlying GValue after leaving scope Value Init returns a non nil error if the allocation failed 
Type is a wrapper around the G VALUE HOLDS GTYPE macro and the g value get gtype function Get Type returns TYPE INVALID if v does not hold a Type or otherwise returns the Type of v 
GValue converts a Go type to a comparable GValue GValue returns a non nil error if the conversion was unsuccessful 
Go Value converts a Value to comparable Go type Go Value returns a non nil error if the conversion was unsuccessful The returned interface must be type asserted as the actual Go representation of the Value This function is a wrapper around the many g value get functions depending on the type of the Value 
Set Bool is a wrapper around g value set boolean 
Set SChar is a wrapper around g value set schar 
Set Int is a wrapper around g value set int 
Set Int is a wrapper around g value set int 
Set UChar is a wrapper around g value set uchar 
Set UInt is a wrapper around g value set uint 
Set UInt is a wrapper around g value set uint 
Set Float is a wrapper around g value set float 
Set Double is a wrapper around g value set double 
Set String is a wrapper around g value set string 
Set Instance is a wrapper around g value set instance 
Set Pointer is a wrapper around g value set pointer 
Get Pointer is a wrapper around g value get pointer 
Get String is a wrapper around g value get string Get String returns a non nil error if g value get string returned a NULL pointer to distinguish between returning a NULL pointer and returning an empty string 
Get Application Name is a wrapper around g get application name 
Set Application Name is a wrapper around g set application name 
Init I n initializes the i n subsystem 
Local localizes a string using gettext 
Set Inverted is a wrapper around gtk level bar set inverted 
Get Inverted is a wrapper around gtk level bar get inverted 
Get NScreens is a wrapper around gdk display get n screens 
Override Font is a wrapper around gtk widget override font 
native returns a pointer to the underlying Gtk Shortcuts Section 
native returns a pointer to the underlying Gtk Shortcuts Group 
native returns a pointer to the underlying Gtk Shortcuts Shortcut 
native returns a pointer to the underlying GObject as a Gtk Native Dialog 
Run is a wrapper around gtk native dialog run 
Set Modal is a wrapper around gtk native dialog set modal 
Get Modal is a wrapper around gtk native dialog get modal 
Set Title is a wrapper around gtk native dialog set title 
Get Title is a wrapper around gtk native dialog get title 
Set Transient For is a wrapper around gtk native dialog set transient for 
Get Visible is a wrapper around gtk native dialog get visible 
native returns a pointer to the underlying GObject as a Gtk Native Dialog 
File Chooser Native Dialog New is a wrapper around gtk file chooser native new 
 File Chooser Native 
Set Accept Label is a wrapper around gtk file chooser native set accept label 
Get Accept Label is a wrapper around gtk file chooser native get accept label 
Set Cancel Label is a wrapper around gtk file chooser native set cancel label 
Get Cancel Label is a wrapper around gtk file chooser native get cancel label 
deprecated since g simple action group lookup g simple action group insert g simple action group remove g simple action group add entries See implementations in Action Map native returns a pointer to the underlying GSimple Action Group 
Simple Action Group New is a wrapper around g simple action group new 
gboolean g action parse detailed name const gchar detailed name gchar action name GVariant target value GError error gchar g action print detailed name const gchar action name GVariant target value native returns a pointer to the underlying GAction 
Action Name Is Valid is a wrapper around g action name is valid 
Get Name is a wrapper around g action get name 
Get State is a wrapper around g action get state 
Get State Hint is a wrapper around g action get state hint 
Get Parameter Type is a wrapper around g action get parameter type 
Get State Type is a wrapper around g action get state type 
Change State is a wrapper around g action change state 
Activate is a wrapper around g action activate 
Simple Action New is a wrapper around g simple action new 
Simple Action New Stateful is a wrapper around g simple action new stateful 
Set Enabled is a wrapper around g simple action set enabled 
Set State is a wrapper around g simple action set state This should only be called by the implementor of the action Users of the action should not attempt to directly modify the state property Instead they should call Change State g action change state to request the change 
Property Action New is a wrapper around g property action new 
Popup At Pointer is a wrapper for gtk menu popup at pointer on older versions it uses Popup At Mouse Cursor 
Popup At Widget is a wrapper for gtk menu popup at widget 
 Init Check is a wrapper around gtk init check and works exactly like Init only that it doesn t terminate the program if initialization fails 
native returns a pointer to the underlying Gtk Adjustment 
Adjustment New is a wrapper around gtk adjustment new 
Get Value is a wrapper around gtk adjustment get value 
Get Lower is a wrapper around gtk adjustment get lower 
Set Page Size is a wrapper around gtk adjustment set page size 
Configure is a wrapper around gtk adjustment configure 
Set Lower is a wrapper around gtk adjustment set lower 
Get Upper is a wrapper around gtk adjustment get upper 
Set Upper is a wrapper around gtk adjustment set upper 
Get Page Increment is a wrapper around gtk adjustment get page increment 
Set Page Increment is a wrapper around gtk adjustment set page increment 
Get Step Increment is a wrapper around gtk adjustment get step increment 
Set Step Increment is a wrapper around gtk adjustment set step increment 
Get Minimum Increment is a wrapper around gtk adjustment get minimum increment 
native returns a pointer to the underlying Gtk Assistant 
Assistant New is a wrapper around gtk assistant new 
Get Current Page is a wrapper around gtk assistant get current page 
Set Current Page is a wrapper around gtk assistant set current page 
Get NPages is a wrapper around gtk assistant get n pages 
Get Nth Page is a wrapper around gtk assistant get nth page 
Prepend Page is a wrapper around gtk assistant prepend page 
Append Page is a wrapper around gtk assistant append page 
Insert Page is a wrapper around gtk assistant insert page 
Remove Page is a wrapper around gtk assistant remove page 
TODO gtk assistant set forward page func Set Page Type is a wrapper around gtk assistant set page type 
Get Page Type is a wrapper around gtk assistant get page type 
Set Page Title is a wrapper around gtk assistant set page title 
Get Page Title is a wrapper around gtk assistant get page title 
Set Page Complete is a wrapper around gtk assistant set page complete 
Get Page Complete is a wrapper around gtk assistant get page complete 
Add Action Widget is a wrapper around gtk assistant add action widget 
Remove Action Widget is a wrapper around gtk assistant remove action widget 
native returns a pointer to the underlying Gtk Bin 
Get Child is a wrapper around gtk bin get child 
native returns a pointer to the underlying Gtk Builder 
Builder New is a wrapper around gtk builder new 
Builder New From File is a wrapper around gtk builder new from file 
Builder New From Resource is a wrapper around gtk builder new from resource 
Add From File is a wrapper around gtk builder add from file 
Add From Resource is a wrapper around gtk builder add from resource 
Add From String is a wrapper around gtk builder add from string 
Get Object is a wrapper around gtk builder get object The returned result is an IObject so it will need to be type asserted to the appropriate type before being used For example to get an object and type assert it as a window obj err builder Get Object window if err nil object not found return if w ok obj gtk Window ok do stuff with w here else not a gtk Window 
Connect Signals is a wrapper around gtk builder connect signals full 
native returns a pointer to the underlying Gtk Button 
Button New is a wrapper around gtk button new 
Button New With Label is a wrapper around gtk button new with label 
Set Relief is a wrapper around gtk button set relief 
Get Relief is a wrapper around gtk button get relief 
Set Label is a wrapper around gtk button set label 
Get Label is a wrapper around gtk button get label 
Set Use Underline is a wrapper around gtk button set use underline 
Get Use Underline is a wrapper around gtk button get use underline 
Set Image is a wrapper around gtk button set image 
Get Image is a wrapper around gtk button get image 
Set Image Position is a wrapper around gtk button set image position 
Get Image Position is a wrapper around gtk button get image position 
Set Always Show Image is a wrapper around gtk button set always show image 
Get Always Show Image is a wrapper around gtk button get always show image 
Get Event Window is a wrapper around gtk button get event window 
Native returns a pointer to the underlying Gtk Color Button 
Color Button New is a wrapper around gtk color button new 
Color Button New With RGBA is a wrapper around gtk color button new with rgba 
native returns a pointer to the underlying Gtk Box 
Set Orientation is a wrapper around C gtk orientable set orientation for a Gtk Box 
Box New is a wrapper around gtk box new 
Pack Start is a wrapper around gtk box pack start 
Pack End is a wrapper around gtk box pack end 
Get Homogeneous is a wrapper around gtk box get homogeneous 
Set Homogeneous is a wrapper around gtk box set homogeneous 
Get Spacing is a wrapper around gtk box get spacing 
Reorder Child is a wrapper around gtk box reorder child 
Query Child Packing is a wrapper around gtk box query child packing 
Set Child Packing is a wrapper around gtk box set child packing 
native returns a pointer to the underlying Gtk Calendar 
Calendar New is a wrapper around gtk calendar new 
Select Month is a wrapper around gtk calendar select month 
Select Day is a wrapper around gtk calendar select day 
Mark Day is a wrapper around gtk calendar mark day 
Unmark Day is a wrapper around gtk calendar unmark day 
Get Day Is Marked is a wrapper around gtk calendar get day is marked 
Get Display Options is a wrapper around gtk calendar get display options 
Set Display Options is a wrapper around gtk calendar set display options 
Get Date is a wrapper around gtk calendar get date 
TODO gtk calendar set detail func Get Detail Width Chars is a wrapper around gtk calendar get detail width chars 
Set Detail Width Chars is a wrapper around gtk calendar set detail width chars 
Get Detail Height Rows is a wrapper around gtk calendar get detail height rows 
Set Detail Height Rows is a wrapper around gtk calendar set detail height rows 
native returns a pointer to the underlying GObject as a Gtk Cell Layout 
Pack Start is a wrapper around gtk cell layout pack start 
Add Attribute is a wrapper around gtk cell layout add attribute 
native returns a pointer to the underlying Gtk Cell Renderer 
native returns a pointer to the underlying Gtk Cell Renderer Spinner 
Cell Renderer Spinner New is a wrapper around gtk cell renderer text new 
native returns a pointer to the underlying Gtk Cell Renderer Pixbuf 
Cell Renderer Pixbuf New is a wrapper around gtk cell renderer pixbuf new 
native returns a pointer to the underlying Gtk Cell Renderer Text 
Cell Renderer Text New is a wrapper around gtk cell renderer text new 
native returns a pointer to the underlying Gtk Cell Renderer Toggle 
Cell Renderer Toggle New is a wrapper around gtk cell renderer toggle new 
Set Radio is a wrapper around gtk cell renderer toggle set radio 
Get Radio is a wrapper around gtk cell renderer toggle get radio 
Set Active is a wrapper around gtk cell renderer toggle set active 
Get Active is a wrapper around gtk cell renderer toggle get active 
Set Activatable is a wrapper around gtk cell renderer toggle set activatable 
Get Activatable is a wrapper around gtk cell renderer toggle get activatable 
native returns a pointer to the underlying Gtk Check Button 
Check Button New is a wrapper around gtk check button new 
Check Button New With Label is a wrapper around gtk check button new with label 
Check Button New With Mnemonic is a wrapper around gtk check button new with mnemonic 
native returns a pointer to the underlying Gtk Check Menu Item 
Check Menu Item New is a wrapper around gtk check menu item new 
Check Menu Item New With Label is a wrapper around gtk check menu item new with label 
Get Active is a wrapper around gtk check menu item get active 
Set Active is a wrapper around gtk check menu item set active 
Get Inconsistent is a wrapper around gtk check menu item get inconsistent 
Set Inconsistent is a wrapper around gtk check menu item set inconsistent 
Set Draw As Radio is a wrapper around gtk check menu item set draw as radio 
Get Draw As Radio is a wrapper around gtk check menu item get draw as radio 
native returns a pointer to the underlying Gtk Clipboard 
Clipboard Get is a wrapper around gtk clipboard get 
Clipboard Get For Display is a wrapper around gtk clipboard get for display 
Wait Is Text Available is a wrapper around gtk clipboard wait is text available 
Wait For Text is a wrapper around gtk clipboard wait for text 
Set Text is a wrapper around gtk clipboard set text 
Wait Is Rich Text Available is a wrapper around gtk clipboard wait is rich text available 
Wait Is Uris Available is a wrapper around gtk clipboard wait is uris available 
Wait Is Image Available is a wrapper around gtk clipboard wait is image available 
Set Image is a wrapper around gtk clipboard set image 
Wait For Image is a wrapper around gtk clipboard wait for image 
Wait Is Target Available is a wrapper around gtk clipboard wait is target available 
Wait For Contents is a wrapper around gtk clipboard wait for contents 
native returns a pointer to the underlying Gtk Container 
Add is a wrapper around gtk container add 
Remove is a wrapper around gtk container remove 
TODO gtk container foreach Get Children is a wrapper around gtk container get children 
TODO gtk container get path for child Get Focus Child is a wrapper around gtk container get focus child 
Set Focus Child is a wrapper around gtk container set focus child 
Get Focus VAdjustment is a wrapper around gtk container get focus vadjustment 
Set Focus VAdjustment is a wrapper around gtk container set focus vadjustment 
Get Focus HAdjustment is a wrapper around gtk container get focus hadjustment 
Set Focus HAdjustment is a wrapper around gtk container set focus hadjustment 
Child Type is a wrapper around gtk container child type 
TODO gtk container child get valist TODO gtk container child set valist Child Notify is a wrapper around gtk container child notify 
Child Get Property is a wrapper around gtk container child get property 
Child Set Property is a wrapper around gtk container child set property 
TODO gtk container forall Get Border Width is a wrapper around gtk container get border width 
Set Border Width is a wrapper around gtk container set border width 
Propagate Draw is a wrapper around gtk container propagate draw 
Gdk Cairo Set Source Pix Buf is a wrapper around gdk cairo set source pixbuf 
native returns a pointer to the underlying Gtk Css Provider 
Css Provider New is a wrapper around gtk css provider new 
Load From Path is a wrapper around gtk css provider load from path 
Load From Data is a wrapper around gtk css provider load from data 
To String is a wrapper around gtk css provider to string 
Get Named is a wrapper around gtk css provider get named 
native returns a pointer to the underlying Gtk Dialog 
Dialog New is a wrapper around gtk dialog new 
Run is a wrapper around gtk dialog run 
Response is a wrapper around gtk dialog response 
Add Button is a wrapper around gtk dialog add button text may be either the literal button text or if using GTK or earlier a Stock type converted to a string 
Add Action Widget is a wrapper around gtk dialog add action widget 
Set Default Response is a wrapper around gtk dialog set default response 
Set Response Sensitive is a wrapper around gtk dialog set response sensitive 
Get Response For Widget is a wrapper around gtk dialog get response for widget 
Get Widget For Response is a wrapper around gtk dialog get widget for response 
Get Content Area is a wrapper around gtk dialog get content area 
native returns a pointer to the underlying Gtk Drawing Area 
Drawing Area New is a wrapper around gtk drawing area new 
native returns a pointer to the underlying GObject as a Gtk Editable 
Select Region is a wrapper around gtk editable select region 
Get Selection Bounds is a wrapper around gtk editable get selection bounds 
Insert Text is a wrapper around gtk editable insert text The returned int is the position after the inserted text 
Delete Text is a wrapper around gtk editable delete text 
Get Chars is a wrapper around gtk editable get chars 
Get Position is a wrapper around gtk editable get position 
Set Editable is a wrapper around gtk editable set editable 
Get Editable is a wrapper around gtk editable get editable 
native returns a pointer to the underlying Gtk Entry 
Entry New is a wrapper around gtk entry new 
Entry New With Buffer is a wrapper around gtk entry new with buffer 
Get Buffer is a wrapper around gtk entry get buffer 
Set Buffer is a wrapper around gtk entry set buffer 
Set Text is a wrapper around gtk entry set text 
Get Text is a wrapper around gtk entry get text 
Get Text Length is a wrapper around gtk entry get text length 
TODO jrick Gdk Rectangle func v Entry Get Text Area Set Visibility is a wrapper around gtk entry set visibility 
Set Invisible Char is a wrapper around gtk entry set invisible char 
Set Max Length is a wrapper around gtk entry set max length 
Get Activates Default is a wrapper around gtk entry get activates default 
Get Has Frame is a wrapper around gtk entry get has frame 
Get Width Chars is a wrapper around gtk entry get width chars 
Set Activates Default is a wrapper around gtk entry set activates default 
Set Width Chars is a wrapper around gtk entry set width chars 
Get Invisible Char is a wrapper around gtk entry get invisible char 
Set Alignment is a wrapper around gtk entry set alignment 
Get Alignment is a wrapper around gtk entry get alignment 
Set Placeholder Text is a wrapper around gtk entry set placeholder text 
Get Placeholder Text is a wrapper around gtk entry get placeholder text 
Set Overwrite Mode is a wrapper around gtk entry set overwrite mode 
Get Overwrite Mode is a wrapper around gtk entry get overwrite mode 
TODO jrick Pangolayout func v Entry Get Layout Get Layout Offsets is a wrapper around gtk entry get layout offsets 
Layout Index To Text Index is a wrapper around gtk entry layout index to text index 
Text Index To Layout Index is a wrapper around gtk entry text index to layout index 
TODO jrick Pando Attr List func v Entry Set Attributes TODO jrick Pando Attr List func v Entry Get Attributes Get Max Length is a wrapper around gtk entry get max length 
Get Visibility is a wrapper around gtk entry get visibility 
Set Completion is a wrapper around gtk entry set completion 
Get Completion is a wrapper around gtk entry get completion 
Set Cursor HAdjustment is a wrapper around gtk entry set cursor hadjustment 
Get Cursor HAdjustment is a wrapper around gtk entry get cursor hadjustment 
Set Progress Fraction is a wrapper around gtk entry set progress fraction 
Get Progress Fraction is a wrapper around gtk entry get progress fraction 
Set Progress Pulse Step is a wrapper around gtk entry set progress pulse step 
Get Progress Pulse Step is a wrapper around gtk entry get progress pulse step 
Set Icon From Pixbuf is a wrapper around gtk entry set icon from pixbuf 
Set Icon From Icon Name is a wrapper around gtk entry set icon from icon name 
Remove Icon is a wrapper around gtk entry set icon from icon name with a nil pointer to the icon name 
TODO jrick GIcon func v Entry Set Icon From GIcon Get Icon Storage Type is a wrapper around gtk entry get icon storage type 
TODO jrick Gdk Pixbuf func v Entry Get Icon Pixbuf Get Icon Name is a wrapper around gtk entry get icon name 
TODO jrick GIcon func v Entry Get Icon GIcon Set Icon Activatable is a wrapper around gtk entry set icon activatable 
Get Icon Activatable is a wrapper around gtk entry get icon activatable 
Set Icon Sensitive is a wrapper around gtk entry set icon sensitive 
Get Icon Sensitive is a wrapper around gtk entry get icon sensitive 
Get Icon At Pos is a wrapper around gtk entry get icon at pos 
Set Icon Tooltip Text is a wrapper around gtk entry set icon tooltip text 
Get Icon Tooltip Text is a wrapper around gtk entry get icon tooltip text 
Set Icon Tooltip Markup is a wrapper around gtk entry set icon tooltip markup 
Get Icon Tooltip Markup is a wrapper around gtk entry get icon tooltip markup 
TODO jrick Gdk Drag Action func v Entry Set Icon Drag Source Get Current Icon Drag Source is a wrapper around gtk entry get current icon drag source 
TODO jrick Gdk Rectangle func v Entry Get Icon Area Set Input Purpose is a wrapper around gtk entry set input purpose 
Get Input Purpose is a wrapper around gtk entry get input purpose 
Set Input Hints is a wrapper around gtk entry set input hints 
Get Input Hints is a wrapper around gtk entry get input hints 
native returns a pointer to the underlying Gtk Entry Buffer 
Entry Buffer New is a wrapper around gtk entry buffer new 
Get Text is a wrapper around gtk entry buffer get text A non nil error is returned in the case that gtk entry buffer get text returns NULL to differentiate between NULL and an empty string 
Set Text is a wrapper around gtk entry buffer set text 
Get Bytes is a wrapper around gtk entry buffer get bytes 
Get Length is a wrapper around gtk entry buffer get length 
Get Max Length is a wrapper around gtk entry buffer get max length 
Set Max Length is a wrapper around gtk entry buffer set max length 
Insert Text is a wrapper around gtk entry buffer insert text 
Delete Text is a wrapper around gtk entry buffer delete text 
Emit Deleted Text is a wrapper around gtk entry buffer emit deleted text 
Emit Inserted Text is a wrapper around gtk entry buffer emit inserted text 
native returns a pointer to the underlying Gtk Entry Completion 
native returns a pointer to the underlying Gtk Event Box 
Event Box New is a wrapper around gtk event box new 
Set Above Child is a wrapper around gtk event box set above child 
Get Above Child is a wrapper around gtk event box get above child 
Set Visible Window is a wrapper around gtk event box set visible window 
Get Visible Window is a wrapper around gtk event box get visible window 
native returns a pointer to the underlying Gtk Expander 
Expander New is a wrapper around gtk expander new 
Get Expanded is a wrapper around gtk expander get expanded 
Set Label is a wrapper around gtk expander set label 
Get Label is a wrapper around gtk expander get label 
Set Label Widget is a wrapper around gtk expander set label widget 
native returns a pointer to the underlying GObject as a Gtk File Chooser 
Set Filename is a wrapper around gtk file chooser set filename 
Get Filename is a wrapper around gtk file chooser get filename 
Get Filenames is a wrapper around gtk file chooser get filenames 
Get URIs is a wrapper around gtk file chooser get uris 
Set Do Overwrite Confirmation is a wrapper around gtk file chooser set do overwrite confirmation 
Get Do Overwrite Confirmation is a wrapper around gtk file chooser get do overwrite confirmation 
Set Create Folders is a wrapper around gtk file chooser set create folders 
Get Create Folders is a wrapper around gtk file chooser get create folders 
Set Current Name is a wrapper around gtk file chooser set current name 
Set Current Folder is a wrapper around gtk file chooser set current folder 
Get Current Folder is a wrapper around gtk file chooser get current folder 
Set Preview Widget is a wrapper around gtk file chooser set preview widget 
Set Preview Widget Active is a wrapper around gtk file chooser set preview widget active 
Get Preview Filename is a wrapper around gtk file chooser get preview filename 
Get URI is a wrapper around gtk file chooser get uri 
Add Filter is a wrapper around gtk file chooser add filter 
Remove Filter is a wrapper around gtk file chooser remove filter 
Set Filter is a wrapper around gtk file chooser set filter 
Add Shortcut Folder is a wrapper around gtk file chooser add shortcut folder 
Set Local Only is a wrapper around gtk file chooser set local only 
Get Local Only is a wrapper around gtk file chooser get local only 
Set Select Multiple is a wrapper around gtk file chooser set select multiple 
Get Select Multiple is a wrapper around gtk file chooser get select multiple 
native returns a pointer to the underlying Gtk File Chooser Button 
File Chooser Button New is a wrapper around gtk file chooser button new 
native returns a pointer to the underlying Gtk File Chooser Dialog 
File Chooser Dialog New With Button is a wrapper around gtk file chooser dialog new with one button 
native returns a pointer to the underlying Gtk File Chooser Widget 
File Chooser Widget New is a wrapper around gtk file chooser widget new 
native returns a pointer to the underlying GObject as a Gtk File Filter 
File Filter New is a wrapper around gtk file filter new 
Set Name is a wrapper around gtk file filter set name 
Add Pattern is a wrapper around gtk file filter add pattern 
native returns a pointer to the underlying Gtk Frame 
Frame New is a wrapper around gtk frame new 
Set Label is a wrapper around gtk frame set label 
Set Label Widget is a wrapper around gtk frame set label widget 
Set Label Align is a wrapper around gtk frame set label align 
Set Shadow Type is a wrapper around gtk frame set shadow type 
Get Label is a wrapper around gtk frame get label 
Get Label Align is a wrapper around gtk frame get label align 
Get Label Widget is a wrapper around gtk frame get label widget 
Get Shadow Type is a wrapper around gtk frame get shadow type 
native returns a pointer to the underlying Gtk Aspect Frame 
native returns a pointer to the underlying Gtk Grid 
Grid New is a wrapper around gtk grid new 
Attach is a wrapper around gtk grid attach 
Attach Next To is a wrapper around gtk grid attach next to 
Get Child At is a wrapper around gtk grid get child at 
Insert Row is a wrapper around gtk grid insert row 
Insert Column is a wrapper around gtk grid insert column 
Insert Next To is a wrapper around gtk grid insert next to 
Set Row Homogeneous is a wrapper around gtk grid set row homogeneous 
Get Row Homogeneous is a wrapper around gtk grid get row homogeneous 
Set Row Spacing is a wrapper around gtk grid set row spacing 
Get Row Spacing is a wrapper around gtk grid get row spacing 
Set Column Homogeneous is a wrapper around gtk grid set column homogeneous 
Get Column Homogeneous is a wrapper around gtk grid get column homogeneous 
Set Column Spacing is a wrapper around gtk grid set column spacing 
Get Column Spacing is a wrapper around gtk grid get column spacing 
Icon Theme Get Default is a wrapper around gtk icon theme get default 
Icon Theme Get For Screen is a wrapper around gtk icon theme get for screen 
Load Icon is a wrapper around gtk icon theme load icon 
native returns a pointer to the underlying Gtk Image 
Image New is a wrapper around gtk image new 
Image New From File is a wrapper around gtk image new from file 
Image New From Resource is a wrapper around gtk image new from resource 
Image New From Pixbuf is a wrapper around gtk image new from pixbuf 
TODO jrick Gtk Icon Set func Image New From Icon Set TODO jrick Gdk Pixbuf Animation func Image New From Animation Image New From Icon Name is a wrapper around gtk image new from icon name 
Set From File is a wrapper around gtk image set from file 
Set From Resource is a wrapper around gtk image set from resource 
Set From Fixbuf is a wrapper around gtk image set from pixbuf 
TODO jrick Gtk Icon Set func v Image Set From Icon Set TODO jrick Gdk Pixbuf Animation func v Image Set From Animation Set From Icon Name is a wrapper around gtk image set from icon name 
TODO jrick GIcon func v Image Set From GIcon Set Pixel Size is a wrapper around gtk image set pixel size 
Get Storage Type is a wrapper around gtk image get storage type 
Get Pixbuf is a wrapper around gtk image get pixbuf 
TODO jrick Gtk Icon Set func v Image Get Icon Set TODO jrick Gdk Pixbuf Animation func v Image Get Animation Get Icon Name is a wrapper around gtk image get icon name 
TODO jrick GIcon func v Image Get GIcon Get Pixel Size is a wrapper around gtk image get pixel size 
native returns a pointer to the underlying Gtk Drawing Area 
Layout New is a wrapper around gtk layout new 
Layout Put is a wrapper around gtk layout put 
Layout Move is a wrapper around gtk layout move 
Layout Set Size is a wrapper around gtk layout set size 
Layout Get Size is a wrapper around gtk layout get size 
native returns a pointer to the underlying Gtk Link Button 
Link Button New is a wrapper around gtk link button new 
Link Button New With Label is a wrapper around gtk link button new with label 
Get Uri is a wrapper around gtk link button get uri 
Set Uri is a wrapper around gtk link button set uri 
native returns a pointer to the underlying Gtk List Store 
List Store New is a wrapper around gtk list store newv 
Remove is a wrapper around gtk list store remove 
TODO jrick func v List Store Set Column Types types glib Type Set is a wrapper around gtk list store set value but provides a function similar to gtk list store set in that multiple columns may be set by one call The length of columns and values slices must match or Set will return a non nil error As an example a call to store Set iter int interface Foo Bar is functionally equivalent to calling the native C GTK function gtk list store set store iter Foo Bar 
Set Value is a wrapper around gtk list store set value 
Insert With Values is a wrapper around gtk list store insert with valuesv 
Insert Before is a wrapper around gtk list store insert before 
Insert After is a wrapper around gtk list store insert after 
Prepend is a wrapper around gtk list store prepend 
Append is a wrapper around gtk list store append 
Iter Is Valid is a wrapper around gtk list store iter is valid 
TODO jrick func v List Store Reorder new Order int Swap is a wrapper around gtk list store swap 
Move Before is a wrapper around gtk list store move before 
Move After is a wrapper around gtk list store move after 
native returns a pointer to the underlying Gtk Menu Bar 
Menu Bar New is a wrapper around gtk menu bar new 
native returns a pointer to the underlying Gtk Menu Button 
Menu Button New is a wrapper around gtk menu button new 
Set Popup is a wrapper around gtk menu button set popup 
Get Popup is a wrapper around gtk menu button get popup 
Set Menu Model is a wrapper around gtk menu button set menu model 
Get Menu Model is a wrapper around gtk menu button get menu model 
Set Direction is a wrapper around gtk menu button set direction 
Get Direction is a wrapper around gtk menu button get direction 
Set Align Widget is a wrapper around gtk menu button set align widget 
Get Align Widget is a wrapper around gtk menu button get align widget 
native returns a pointer to the underlying Gtk Menu Item 
Menu Item New is a wrapper around gtk menu item new 
Menu Item New With Label is a wrapper around gtk menu item new with label 
Set Submenu is a wrapper around gtk menu item set submenu 
Sets text on the menu item label 
Gets text on the menu item label 
native returns a pointer to the underlying Gtk Message Dialog 
Message Dialog New is a wrapper around gtk message dialog new The text is created and formatted by the format specifier and any additional arguments 
Set Markup is a wrapper around gtk message dialog set markup 
Format Secondary Text is a wrapper around gtk message dialog format secondary text 
native returns a pointer to the underlying Gtk Notebook 
Notebook New is a wrapper around gtk notebook new 
Append Page is a wrapper around gtk notebook append page 
Append Page Menu is a wrapper around gtk notebook append page menu 
Prepend Page is a wrapper around gtk notebook prepend page 
Prepend Page Menu is a wrapper around gtk notebook prepend page menu 
Insert Page is a wrapper around gtk notebook insert page 
Insert Page Menu is a wrapper around gtk notebook insert page menu 
Remove Page is a wrapper around gtk notebook remove page 
Page Num is a wrapper around gtk notebook page num 
Reorder Child is a wrapper around gtk notebook reorder child 
Set Tab Pos is a wrapper around gtk notebook set tab pos 
Set Show Tabs is a wrapper around gtk notebook set show tabs 
Set Show Border is a wrapper around gtk notebook set show border 
Get Current Page is a wrapper around gtk notebook get current page 
Get Menu Label is a wrapper around gtk notebook get menu label 
Get Nth Page is a wrapper around gtk notebook get nth page 
Get NPages is a wrapper around gtk notebook get n pages 
Set Menu Label is a wrapper around gtk notebook set menu label 
Set Menu Label Text is a wrapper around gtk notebook set menu label text 
Set Tab Label is a wrapper around gtk notebook set tab label 
Set Tab Label Text is a wrapper around gtk notebook set tab label text 
Set Tab Reorderable is a wrapper around gtk notebook set tab reorderable 
Set Tab Detachable is a wrapper around gtk notebook set tab detachable 
Get Menu Label Text is a wrapper around gtk notebook get menu label text 
Get Scrollable is a wrapper around gtk notebook get scrollable 
Get Show Border is a wrapper around gtk notebook get show border 
Get Show Tabs is a wrapper around gtk notebook get show tabs 
Get Tab Label Text is a wrapper around gtk notebook get tab label text 
Get Tab Pos is a wrapper around gtk notebook get tab pos 
Get Tab Reorderable is a wrapper around gtk notebook get tab reorderable 
Get Tab Detachable is a wrapper around gtk notebook get tab detachable 
Set Group Name is a wrapper around gtk notebook set group name 
Get Group Name is a wrapper around gtk notebook get group name 
Set Action Widget is a wrapper around gtk notebook set action widget 
Get Action Widget is a wrapper around gtk notebook get action widget 
native returns a pointer to the underlying Gtk Offscreen Window 
Offscreen Window New is a wrapper around gtk offscreen window new 
Get Surface is a wrapper around gtk offscreen window get surface The returned surface is safe to use over window resizes 
Get Pixbuf is a wrapper around gtk offscreen window get pixbuf 
native returns a pointer to the underlying GObject as a Gtk Orientable 
Get Orientation is a wrapper around gtk orientable get orientation 
Set Orientation is a wrapper around gtk orientable set orientation 
native returns a pointer to the underlying Gtk Overlay 
Overlay New is a wrapper around gtk overlay new 
Add Overlay is a wrapper around gtk overlay add overlay 
native returns a pointer to the underlying Gtk Paned 
Paned New is a wrapper around gtk paned new 
Add is a wrapper around gtk paned add 
Add is a wrapper around gtk paned add 
Pack is a wrapper around gtk paned pack 
Pack is a wrapper around gtk paned pack 
Set Position is a wrapper around gtk paned set position 
Get Child is a wrapper around gtk paned get child 
Get Child is a wrapper around gtk paned get child 
Get Handle Window is a wrapper around gtk paned get handle window 
native returns a pointer to the underlying Gtk Progress Bar 
Progress Bar New is a wrapper around gtk progress bar new 
Set Fraction is a wrapper around gtk progress bar set fraction 
Get Fraction is a wrapper around gtk progress bar get fraction 
Set Show Text is a wrapper around gtk progress bar set show text 
Get Show Text is a wrapper around gtk progress bar get show text 
Set Text is a wrapper around gtk progress bar set text 
Get Pulse Step is a wrapper around gtk progress bar get pulse step 
Set Inverted is a wrapper around gtk progress bar set inverted 
Get Inverted is a wrapper around gtk progress bar get inverted 
native returns a pointer to the underlying Gtk Radio Button 
Radio Button New is a wrapper around gtk radio button new 
Radio Button New From Widget is a wrapper around gtk radio button new from widget 
Radio Button New With Label is a wrapper around gtk radio button new with label 
Radio Button New With Label From Widget is a wrapper around gtk radio button new with label from widget 
Set Group is a wrapper around gtk radio button set group 
Get Group is a wrapper around gtk radio button get group 
Join Group is a wrapper around gtk radio button join group 
native returns a pointer to the underlying Gtk Radio Menu Item 
Radio Menu Item New is a wrapper around gtk radio menu item new 
Radio Menu Item New With Label is a wrapper around gtk radio menu item new with label 
Radio Menu Item New From Widget is a wrapper around gtk radio menu item new from widget 
Radio Menu Item New With Label From Widget is a wrapper around gtk radio menu item new with label from widget 
Set Group is a wrapper around gtk radio menu item set group 
Get Group is a wrapper around gtk radio menu item get group 
native returns a pointer to the underlying Gtk Range 
Get Value is a wrapper around gtk range get value 
Set Value is a wrapper around gtk range set value 
Set Increments is a wrapper around gtk range set increments 
Set Range is a wrapper around gtk range set range 
native returns a pointer to the underlying Gtk Recent Chooser 
native returns a pointer to the underlying Gtk Recent Manager 
native returns a pointer to the underlying Gtk Recent Filter 
Recent Filter New is a wrapper around gtk recent filter new 
native returns a pointer to the underlying Gtk Recent Manager 
Recent Manager Get Default is a wrapper around gtk recent manager get default 
Add Item is a wrapper around gtk recent manager add item 
native returns a pointer to the underlying Gtk Scale 
Scale New is a wrapper around gtk scale new 
Scale New With Range is a wrapper around gtk scale new with range 
Set Draw Value is a wrapper around gtk scale set draw value 
native returns a pointer to the underlying Gtk Scale Button 
Scale Button New is a wrapper around gtk scale button new 
Get Adjustment is a wrapper around gtk scale button get adjustment 
Get Popup is a wrapper around gtk scale button get popup 
Set Adjustment is a wrapper around gtk scale button set adjustment 
Set Value is a wrapper around gtk scale button set value 
native returns a pointer to the underlying GObject as a Gtk Scrollable 
Set HAdjustment is a wrapper around gtk scrollable set hadjustment 
Get HAdjustment is a wrapper around gtk scrollable get hadjustment 
Set VAdjustment is a wrapper around gtk scrollable set vadjustment 
Get VAdjustment is a wrapper around gtk scrollable get vadjustment 
native returns a pointer to the underlying Gtk Scrollbar 
Scrollbar New is a wrapper around gtk scrollbar new 
native returns a pointer to the underlying Gtk Scrolled Window 
Scrolled Window New is a wrapper around gtk scrolled window new 
Set Policy is a wrapper around gtk scrolled window set policy 
Get HAdjustment is a wrapper around gtk scrolled window get hadjustment 
Set HAdjustment is a wrapper around gtk scrolled window set hadjustment 
Get VAdjustment is a wrapper around gtk scrolled window get vadjustment 
Set VAdjustment is a wrapper around gtk scrolled window set vadjustment 
Get Shadow Type is a wrapper around gtk scrolled window get shadow type 
Set Shadow Type is a wrapper around gtk scrolled window set shadow type 
native returns a pointer to the underlying Gtk Search Entry 
Search Entry New is a wrapper around gtk search entry new 
native returns a pointer to the underlying Gtk Selection Data 
Get Data is a wrapper around gtk selection data get data with length It returns a slice of the correct size with the selection s data 
fixed Get Data directly from ptr 
for drag data get 
for drag begin event 
native returns a pointer to the underlying Gtk Seperator 
Separator New is a wrapper around gtk separator new 
native returns a pointer to the underlying Gtk Separator Menu Item 
Separator Menu Item New is a wrapper around gtk separator menu item new 
native returns a pointer to the underlying Gtk Separator Tool Item 
Separator Tool Item New is a wrapper around gtk separator tool item new 
Set Draw is a wrapper around gtk separator tool item set draw 
Get Draw is a wrapper around gtk separator tool item get draw 
native returns a pointer to the underlying Gtk Size Group 
Size Group New is a wrapper around gtk size group new 
native returns a pointer to the underlying Gtk Spin Button 
Configure is a wrapper around gtk spin button configure 
Spin Button New is a wrapper around gtk spin button new 
Spin Button New With Range is a wrapper around gtk spin button new with range 
Get Value As Int is a wrapper around gtk spin button get value as int 
Set Value is a wrapper around gtk spin button set value 
Get Value is a wrapper around gtk spin button get value 
Get Adjustment is a wrapper around gtk spin button get adjustment 
Set Range is a wrapper around gtk spin button set range 
native returns a pointer to the underlying Gtk Spinner 
Spinner New is a wrapper around gtk spinner new 
native returns a pointer to the underlying Gtk Statusbar 
Statusbar New is a wrapper around gtk statusbar new 
Get Context Id is a wrapper around gtk statusbar get context id 
Push is a wrapper around gtk statusbar push 
Pop is a wrapper around gtk statusbar pop 
Get Message Area is a wrapper around gtk statusbar get message area 
native returns a pointer to the underlying Gtk Switch 
Switch New is a wrapper around gtk switch new 
Get Active is a wrapper around gtk switch get active 
Set Active is a wrapper around gtk switch set active 
Target Entry New is a wrapper around gtk target entry new 
native returns a pointer to the underlying GObject as a Gtk Text Tag 
Event is a wrapper around gtk text tag event 
native returns a pointer to the underlying GObject as a Gtk Text Tag Table 
Add is a wrapper around gtk text tag table add 
Lookup is a wrapper around gtk text tag table lookup 
Remove is a wrapper around gtk text tag table remove 
native returns a pointer to the underlying Gtk Text Buffer 
Text Buffer New is a wrapper around gtk text buffer new 
Apply Tag is a wrapper around gtk text buffer apply tag 
Apply Tag By Name is a wrapper around gtk text buffer apply tag by name 
Select Range is a wrapper around gtk text buffer select range 
Create Child Anchor is a wrapper around gtk text buffer create child anchor Since it copies garbage from the stack into the padding bytes of iter iter can t be reliably reused after this call unless GODEBUG cgocheck 
Delete is a wrapper around gtk text buffer delete 
Get Iter At Offset is a wrapper around gtk text buffer get iter at offset 
Get Iter At Line is a wrapper around gtk text buffer get iter at line 
Get Start Iter is a wrapper around gtk text buffer get start iter 
Get End Iter is a wrapper around gtk text buffer get end iter 
Get Tag Table is a wrapper around gtk text buffer get tag table 
Insert is a wrapper around gtk text buffer insert 
Insert Pixbuf is a wrapper around gtk text buffer insert pixbuf 
Insert At Cursor is a wrapper around gtk text buffer insert at cursor 
Remove Tag is a wrapper around gtk text buffer remove tag 
Remove All Tags is a wrapper around gtk text buffer remove all tags 
Get Iter At Mark is a wrapper around gtk text buffer get iter at mark 
Create Mark is a wrapper around gtk text buffer create mark 
Get Mark is a wrapper around gtk text buffer get mark 
native returns a pointer to the underlying Gtk Toggle Button 
Toggle Button New is a wrapper around gtk toggle button new 
Toggle Button New With Label is a wrapper around gtk toggle button new with label 
Get Active is a wrapper around gtk toggle button get active 
Set Active is a wrapper around gtk toggle button set active 
Get Mode is a wrapper around gtk toggle button get mode 
Set Mode is a wrapper around gtk toggle button set mode 
native returns a pointer to the underlying Gtk Toolbar 
Toolbar New is a wrapper around gtk toolbar new 
Insert is a wrapper around gtk toolbar insert 
Get Item Index is a wrapper around gtk toolbar get item index 
Get NItems is a wrapper around gtk toolbar get n items 
Get Nth Item is a wrapper around gtk toolbar get nth item 
Get Drop Index is a wrapper around gtk toolbar get drop index 
Set Drop Highlight Item is a wrapper around gtk toolbar set drop highlight item 
Set Show Arrow is a wrapper around gtk toolbar set show arrow 
Get Show Arrow is a wrapper around gtk toolbar get show arrow 
Get Style is a wrapper around gtk toolbar get style 
Get Icon Size is a wrapper around gtk toolbar get icon size 
Get Relief Style is a wrapper around gtk toolbar get relief style 
Set Style is a wrapper around gtk toolbar set style 
Set Icon Size is a wrapper around gtk toolbar set icon size 
native returns a pointer to the underlying Gtk Tool Button 
Tool Button New is a wrapper around gtk tool button new 
Set Label is a wrapper around gtk tool button set label 
Get Label is a wrapper around gtk tool button get label 
Set Use Underline is a wrapper around gtk tool button set use underline 
Get Use Underline is a wrapper around gtk tool button get use underline 
Set Icon Name is a wrapper around gtk tool button set icon name 
Get Icon Name is a wrapper around gtk tool button get icon name 
Set Icon Widget is a wrapper around gtk tool button set icon widget 
Get Icon Widget is a wrapper around gtk tool button get icon widget 
Set Label Widget is a wrapper around gtk tool button set label widget 
Get Label Widget is a wrapper around gtk tool button get label widget 
native returns a pointer to the underlying Gtk Toggle Tool Button 
Toggle Tool Button New is a wrapper around gtk toggle tool button new 
Get Active is a wrapper around gtk toggle tool button get active 
Set Active is a wrapper around gtk toggle tool button set active 
native returns a pointer to the underlying Gtk Tool Item 
Tool Item New is a wrapper around gtk tool item new 
Set Homogeneous is a wrapper around gtk tool item set homogeneous 
Get Homogeneous is a wrapper around gtk tool item get homogeneous 
Get Expand is a wrapper around gtk tool item get expand 
Set Tooltip Text is a wrapper around gtk tool item set tooltip text 
Set Tooltip Markup is a wrapper around gtk tool item set tooltip markup 
Set Use Drag Window is a wrapper around gtk tool item set use drag window 
Get Use Drag Window is a wrapper around gtk tool item get use drag window 
Set Visible Horizontal is a wrapper around gtk tool item set visible horizontal 
Get Visible Horizontal is a wrapper around gtk tool item get visible horizontal 
Set Visible Vertical is a wrapper around gtk tool item set visible vertical 
Get Visible Vertical is a wrapper around gtk tool item get visible vertical 
Set Is Important is a wrapper around gtk tool item set is important 
Get Is Important is a wrapper around gtk tool item get is important 
TODO gtk tool item get ellipsize mode Get Icon Size is a wrapper around gtk tool item get icon size 
Get Orientation is a wrapper around gtk tool item get orientation 
Get Toolbar Style is a wrapper around gtk tool item get toolbar style 
Get Relief Style is a wrapper around gtk tool item get relief style 
Get Text Alignment is a wrapper around gtk tool item get text alignment 
Get Text Orientation is a wrapper around gtk tool item get text orientation 
Retrieve Proxy Menu Item is a wrapper around gtk tool item retrieve proxy menu item 
Set Proxy Menu Item is a wrapper around gtk tool item set proxy menu item 
native returns a pointer to the underlying Gtk Tree Iter 
Copy is a wrapper around gtk tree iter copy 
native returns a pointer to the underlying GObject as a Gtk Tree Model 
Get Flags is a wrapper around gtk tree model get flags 
Get NColumns is a wrapper around gtk tree model get n columns 
Get Column Type is a wrapper around gtk tree model get column type 
Get Iter is a wrapper around gtk tree model get iter 
Get Iter From String is a wrapper around gtk tree model get iter from string 
Get Iter First is a wrapper around gtk tree model get iter first 
Get Path is a wrapper around gtk tree model get path 
Get Value is a wrapper around gtk tree model get value 
Iter Has Child is a wrapper around gtk tree model iter has child 
Iter Next is a wrapper around gtk tree model iter next 
Iter Previous is a wrapper around gtk tree model iter previous 
Iter Parent is a wrapper around gtk tree model iter parent 
Iter Nth Child is a wrapper around gtk tree model iter nth child 
Iter Children is a wrapper around gtk tree model iter children 
Iter NChildren is a wrapper around gtk tree model iter n children 
Filter New is a wrapper around gtk tree model filter new 
Set Visible Column is a wrapper around gtk tree model filter set visible column 
Convert Iter To Child Iter is a wrapper around gtk tree model filter convert child iter to iter 
Convert Path To Child Path is a wrapper around gtk tree model filter convert path to child path 
Set Visible Func is a wrapper around gtk tree model filter set visible func 
Return a Tree Path from the GList 
native returns a pointer to the underlying Gtk Tree Path 
Get Indices is a wrapper around gtk tree path get indices with depth 
String is a wrapper around gtk tree path to string 
Tree Path New From String is a wrapper around gtk tree path new from string 
native returns a pointer to the underlying Gtk Tree Selection 
Get Selected is a wrapper around gtk tree selection get selected 
Select Path is a wrapper around gtk tree selection select path 
Unselect Path is a wrapper around gtk tree selection unselect path 
Get Selected Rows is a wrapper around gtk tree selection get selected rows All the elements of returned list are wrapped into gtk Tree Path values Please note that a runtime finalizer is only set on the head of the linked list and must be kept live while accessing any item in the list or the Go garbage collector will free the whole list 
Select Iter is a wrapper around gtk tree selection select iter 
Set Mode is a wrapper around gtk tree selection set mode 
Tree Row Reference New is a wrapper around gtk tree row reference new 
Get Path is a wrapper around gtk tree row reference get path 
Get Model is a wrapper around gtk tree row reference get path 
Valid is a wrapper around gtk tree row reference valid 
native returns a pointer to the underlying Gtk Tree Store 
Tree Store New is a wrapper around gtk tree store newv 
Append is a wrapper around gtk tree store append 
Insert is a wrapper around gtk tree store insert 
Set Value is a wrapper around gtk tree store set value 
Remove is a wrapper around gtk tree store remove 
Set Sort Column Id is a wrapper around gtk tree sortable set sort column id 
native returns a pointer to the underlying GObject as a Gtk Viewport 
Viewport New is a wrapper around gtk viewport new 
native returns a pointer to the underlying Gtk Volume Button 
Volume Button New is a wrapper around gtk button new 
cast takes a native GObject and casts it to the appropriate Go struct TODO change all wrap Fns to return an IObject 
Set Use ES is a wrapper around gtk gl area set use es 
Get the global non window specific settings 
native returns a pointer to the underlying Gtk Text Mark 
New Pattern From RGB is a wrapper around cairo pattern create rgb 
New Pattern From RGBA is a wrapper around cairo pattern create rgba 
New Pattern For Surface is a wrapper around cairo pattern create for surface 
New Pattern Linear is a wrapper around cairo pattern create linear 
New Pattern Radial is a wrapper around cairo pattern create radial 
native returns a pointer to the underlying cairo pattern t 
Status is a wrapper around cairo pattern status 
Add Color Stop RGB is a wrapper around cairo pattern add color stop rgb 
Add Color Stop RGBA is a wrapper around cairo pattern add color stop rgba 
Get Actions For Accel is a wrapper around gtk application get actions for accel 
Get Menu By ID is a wrapper around gtk application get menu by id 
native returns a pointer to the underlying Gtk Window 
Window New is a wrapper around gtk window new 
Set Title is a wrapper around gtk window set title 
Get Resizable is a wrapper around gtk window get resizable 
Activate Focus is a wrapper around gtk window activate focus 
Activate Default is a wrapper around gtk window activate default 
Set Modal is a wrapper around gtk window set modal 
Set Default Size is a wrapper around gtk window set default size 
Set Icon is a wrapper around gtk window set icon 
Window Set Default Icon is a wrapper around gtk window set default icon 
TODO jrick Gdk Geometry Gdk Window Hints func v Window Set Geometry Hints Set Gravity is a wrapper around gtk window set gravity 
Set Transient For is a wrapper around gtk window set transient for 
Set Hide Titlebar When Maximized is a wrapper around gtk window set hide titlebar when maximized 
Is Active is a wrapper around gtk window is active 
Has Toplevel Focus is a wrapper around gtk window has toplevel focus 
Get Focus is a wrapper around gtk window get focus 
Set Focus is a wrapper around gtk window set focus 
Get Default Widget is a wrapper around gtk window get default widget 
Set Default is a wrapper around gtk window set default 
Present With Time is a wrapper around gtk window present with time 
Set Keep Above is a wrapper around gtk window set keep above 
Set Keep Below is a wrapper around gtk window set keep below 
Set Decorated is a wrapper around gtk window set decorated 
Set Deletable is a wrapper around gtk window set deletable 
Set Type Hint is a wrapper around gtk window set type hint 
Set Skip Pager Hint is a wrapper around gtk window set skip pager hint 
Set Urgency Hint is a wrapper around gtk window set urgency hint 
Set Focus On Map is a wrapper around gtk window set focus on map 
Set Startup ID is a wrapper around gtk window set startup id 
Set Role is a wrapper around gtk window set role 
Get Decorated is a wrapper around gtk window get decorated 
Get Deletable is a wrapper around gtk window get deletable 
Get Default Size is a wrapper around gtk window get default size 
Get Destroy With Parent is a wrapper around gtk window get destroy with parent 
Get Hide Titlebar When Maximized is a wrapper around gtk window get hide titlebar when maximized 
Get Icon is a wrapper around gtk window get icon 
Get Icon Name is a wrapper around gtk window get icon name 
Get Modal is a wrapper around gtk window get modal 
Get Position is a wrapper around gtk window get position 
Get Role is a wrapper around gtk window get role 
Get Size is a wrapper around gtk window get size 
Get Title is a wrapper around gtk window get title 
Get Transient For is a wrapper around gtk window get transient for 
Get Attached To is a wrapper around gtk window get attached to 
Get Type Hint is a wrapper around gtk window get type hint 
Get Skip Taskbar Hint is a wrapper around gtk window get skip taskbar hint 
Get Urgency Hint is a wrapper around gtk window get urgency hint 
Get Accept Focus is a wrapper around gtk window get accept focus 
Get Focus On Map is a wrapper around gtk window get focus on map 
Has Group is a wrapper around gtk window has group 
Resize is a wrapper around gtk window resize 
Window Set Default Icon From File is a wrapper around gtk window set default icon from file 
Window Set Default Icon Name is a wrapper around gtk window set default icon name 
Set Icon From File is a wrapper around gtk window set icon from file 
Set Icon Name is a wrapper around gtk window set icon name 
Set Auto Startup Notification is a wrapper around gtk window set auto startup notification This doesn t seem write Might need to rethink func v Window Set Auto Startup Notification setting bool C gtk window set auto startup notification gbool setting Get Mnemonics Visible is a wrapper around gtk window get mnemonics visible 
Set Mnemonics Visible is a wrapper around gtk window get mnemonics visible 
Get Focus Visible is a wrapper around gtk window get focus visible 
Set Focus Visible is a wrapper around gtk window set focus visible 
Get Application is a wrapper around gtk window get application 
Set Application is a wrapper around gtk window set application 
Activate Key is a wrapper around gtk window activate key 
Add Mnemonic is a wrapper around gtk window add mnemonic 
Remove Mnemonic is a wrapper around gtk window remove mnemonic 
Activate Mnemonic is a wrapper around gtk window mnemonic activate 
Get Mnemonic Modifier is a wrapper around gtk window get mnemonic modifier 
Set Mnemonic Modifier is a wrapper around gtk window set mnemonic modifier 
native returns the underlying Gdk Atom 
Gdk Atom Intern is a wrapper around gdk atom intern 
native returns a pointer to the underlying Gdk Device 
Cursor New From Name is a wrapper around gdk cursor new from name 
native returns a pointer to the underlying Gdk Cursor 
native returns a pointer to the underlying Gdk Device Manager 
Get Display is a wrapper around gdk device manager get display 
native returns a pointer to the underlying Gdk Display 
Display Open is a wrapper around gdk display open 
Display Get Default is a wrapper around gdk display get default 
Get Name is a wrapper around gdk display get name 
Get Default Screen is a wrapper around gdk display get default screen 
Device Is Grabbed is a wrapper around gdk display device is grabbed 
Is Closed is a wrapper around gdk display is closed 
Get Event is a wrapper around gdk display get event 
Peek Event is a wrapper around gdk display peek event 
Put Event is a wrapper around gdk display put event 
Has Pending is a wrapper around gdk display has pending 
Set Double Click Time is a wrapper around gdk display set double click time 
Set Double Click Distance is a wrapper around gdk display set double click distance 
Supports Color Cursor is a wrapper around gdk display supports cursor color 
Supports Cursor Alpha is a wrapper around gdk display supports cursor alpha 
Get Default Cursor Size is a wrapper around gdk display get default cursor size 
Get Maximal Cursor Size is a wrapper around gdk display get maximal cursor size 
Get Default Group is a wrapper around gdk display get default group 
Supports Selection Notification is a wrapper around gdk display supports selection notification 
Request Selection Notification is a wrapper around gdk display request selection notification 
Supports Clipboard Persistence is a wrapper around gdk display supports clipboard persistence 
TODO jrick 
Supports Shapes is a wrapper around gdk display supports shapes 
Supports Input Shapes is a wrapper around gdk display supports input shapes 
Notify Startup Complete is a wrapper around gdk display notify startup complete 
 GDK Keyval Keyval From Name is a wrapper around gdk keyval from name 
native returns a pointer to the underlying Gdk Drag Context 
native returns a pointer to the underlying Gdk Event 
Event Button New From Event returns an Event Button from an Event Using widget Connect for a key related signal such as button press event results in a Event being passed as the callback s second argument The argument is actually a Event Button Event Button New From Event provides a means of creating an Event Key from the Event 
XRoot returns the x coordinate of the pointer relative to the root of the screen 
YRoot returns the y coordinate of the pointer relative to the root of the screen 
Time returns the time of the event in milliseconds 
Event Key New From Event returns an Event Key from an Event Using widget Connect for a key related signal such as key press event results in a Event being passed as the callback s second argument The argument is actually a Event Key Event Key New From Event provides a means of creating an Event Key from the Event 
Event Motion New From Event returns an Event Motion from an Event Using widget Connect for a key related signal such as button press event results in a Event being passed as the callback s second argument The argument is actually a Event Motion Event Motion New From Event provides a means of creating an Event Key from the Event 
Time returns the time of the event in milliseconds 
A bit mask representing the state of the modifier keys e g Control Shift and Alt and the pointer buttons See gdk Modifier Type constants 
Event Scroll New From Event returns an Event Scroll from an Event Using widget Connect for a key related signal such as button press event results in a Event being passed as the callback s second argument The argument is actually a Event Scroll Event Scroll New From Event provides a means of creating an Event Key from the Event 
Event Window State New From Event returns an Event Window State from an Event Using widget Connect for the window state event signal results in a Event being passed as the callback s second argument The argument is actually a Event Window State Event Window State New From Event provides a means of creating an Event Window State from the Event 
Event Configure New From Event returns an Event Configure from an Event Using widget Connect for the configure event signal results in a Event being passed as the callback s second argument The argument is actually a Event Configure Event Configure New From Event provides a means of creating an Event Configure from the Event 
Get Colorspace is a wrapper around gdk pixbuf get colorspace 
Get NChannels is a wrapper around gdk pixbuf get n channels 
Get Has Alpha is a wrapper around gdk pixbuf get has alpha 
Get Bits Per Sample is a wrapper around gdk pixbuf get bits per sample 
Get Pixels is a wrapper around gdk pixbuf get pixels with length A Go slice is used to represent the underlying Pixbuf data array one byte per channel 
Get Width is a wrapper around gdk pixbuf get width 
Get Height is a wrapper around gdk pixbuf get height 
Get Rowstride is a wrapper around gdk pixbuf get rowstride 
Get Byte Length is a wrapper around gdk pixbuf get byte length 
Get Option is a wrapper around gdk pixbuf get option ok is true if the key has an associated value 
Pixbuf New is a wrapper around gdk pixbuf new 
Pixbuf New From File is a wrapper around gdk pixbuf new from file 
Pixbuf New From File At Scale is a wrapper around gdk pixbuf new from file at scale 
Scale Simple is a wrapper around gdk pixbuf scale simple 
Rotate Simple is a wrapper around gdk pixbuf rotate simple 
Apply Embedded Orientation is a wrapper around gdk pixbuf apply embedded orientation 
Flip is a wrapper around gdk pixbuf flip 
Save JPEG is a wrapper around gdk pixbuf save Quality is a number between 
Save PNG is a wrapper around gdk pixbuf save Compression is a number between 
Pixbuf Get File Info is a wrapper around gdk pixbuf get file info TODO need to wrap the returned format to Gdk Pixbuf Format 
native returns a pointer to the underlying Gdk Pixbuf Loader 
Pixbuf Loader New is a wrapper around gdk pixbuf loader new 
Pixbuf Loader New With Type is a wrapper around gdk pixbuf loader new with type 
Write is a wrapper around gdk pixbuf loader write The function signature differs from the C equivalent to satisify the io Writer interface 
Close is a wrapper around gdk pixbuf loader close An error is returned instead of a bool like the native C function to support the io Closer interface 
Set Size is a wrapper around gdk pixbuf loader set size 
Get Pixbuf is a wrapper around gdk pixbuf loader get pixbuf 
Set Colors sets all colors values in the RGBA 
Parse is a representation of gdk rgba parse 
String is a representation of gdk rgba to string 
Set Cursor is a wrapper around gdk window set cursor 
native returns a pointer to the underlying Gdk Window 
native returns a pointer to the underlying Gtk Icon View 
Icon View New is a wrapper around gtk icon view new 
Icon View New With Model is a wrapper around gtk icon view new with model 
Set Model is a wrapper around gtk icon view set model 
Get Model is a wrapper around gtk icon view get model 
Set Text Column is a wrapper around gtk icon view set text column 
Set Markup Column is a wrapper around gtk icon view set markup column 
Set Pixbuf Column is a wrapper around gtk icon view set pixbuf column 
Get Path At Pos is a wrapper around gtk icon view get path at pos 
Get Item At Pos is a wrapper around gtk icon view get item at pos 
Convert Widget To Bin Window Coords is a wrapper around gtk icon view convert widget to bin window coords 
Set Cursor is a wrapper around gtk icon view set selection mode 
Get Cursor is a wrapper around gtk icon view get cursor 
func v Icon View Selected Foreach Set Selection Mode is a wrapper around gtk icon view set selection mode 
Set Item Orientation is a wrapper around gtk icon view set item orientation 
Set Columns is a wrapper around gtk icon view set columns 
Set Item Width is a wrapper around gtk icon view set item width 
Set Spacing is a wrapper around gtk icon view set spacing 
Set Row Spacing is a wrapper around gtk icon view set row spacing 
Set Column Spacing is a wrapper around gtk icon view set column spacing 
Set Margin is a wrapper around gtk icon view set margin 
Set Item Padding is a wrapper around gtk icon view set item padding 
Set Activate On Single Click is a wrapper around gtk icon view set activate on single click 
Get Cell Rect is a wrapper around gtk icon view get cell rect 
Select Path is a wrapper around gtk icon view select path 
Unselect Path is a wrapper around gtk icon view unselect path 
Path Is Selected is a wrapper around gtk icon view path is selected 
Get Selected Items is a wrapper around gtk icon view unselect path 
Item Activated is a wrapper around gtk icon view item activated 
Scroll To Path is a wrapper around gtk icon view scroll to path 
Get Visible Range is a wrapper around gtk icon view get visible range 
Set Tooltip Item is a wrapper around gtk icon view set tooltip item 
Set Tooltip Cell is a wrapper around gtk icon view set tooltip cell 
Get Tooltip Context is a wrapper around gtk icon view get tooltip context 
Set Tooltip Column is a wrapper around gtk icon view set tooltip column 
Get Item Row is a wrapper around gtk icon view get item row 
 func v Icon View Enable Model Drag Source 
Move To Desktop is a wrapper around gdk x window move to desktop It only works on GDK versions compiled with X support its return value can t be used if Workspace Control Supported returns false 
Paper Size New From Ipp is a wrapper around gtk paper size new from ipp 
Is IPP is a wrapper around gtk paper size is ipp 
native returns a pointer to the underlying GNotification 
Notification New is a wrapper around g notification new 
Set Title is a wrapper around g notification set title 
Set Body is a wrapper around g notification set body 
Only available from Set Priority is a wrapper around g notification set priority func v Notification Set Priority prio Notification Priority C g notification set priority v native C GNotification Priority prio Set Default Action is a wrapper around g notification set default action 
Add Button is a wrapper around g notification add button 
gtk popover new 
Get ID is a wrapper around g settings schema get id 
Get Path is a wrapper around g settings schema get path 
Has Key is a wrapper around g settings schema has key 
Connect is a wrapper around g signal connect closure f must be a function with a signaure matching the callback signature for detailed Signal user Data must either or elements which can be optionally passed to f If f takes less arguments than it is passed from the GLib runtime the extra arguments are ignored Arguments for f must be a matching Go equivalent type for the C callback or an interface type which the value may be packed in If the type is not suitable a runtime panic will occur when the signal is emitted 
Connect After is a wrapper around g signal connect closure f must be a function with a signaure matching the callback signature for detailed Signal user Data must either or elements which can be optionally passed to f If f takes less arguments than it is passed from the GLib runtime the extra arguments are ignored Arguments for f must be a matching Go equivalent type for the C callback or an interface type which the value may be packed in If the type is not suitable a runtime panic will occur when the signal is emitted The difference between Connect and Connect After is that the latter will be invoked after the default handler not before 
Closure New creates a new GClosure and adds its callback function to the internally maintained map It s exported for visibility to other gotk packages and shouldn t be used in application code 
remove Closure removes a closure from the internal closures map This is needed to prevent a leak where Go code can access the closure context along with rf and userdata even after an object has been destroyed and the GClosure is invalidated and will never run export remove Closure 
Settings Schema Source New From Directory is a wrapper around g settings schema source new from directory 
Lookup is a wrapper around g settings schema source lookup 
List Schemas is a wrapper around g settings schema source list schemas 
native returns a pointer to the underlying Gtk Color Chooser 
Get RGBA is a wrapper around gtk color chooser get rgba 
Set RGBA is a wrapper around gtk color chooser set rgba 
Set Use Alpha is a wrapper around gtk color chooser set use alpha 
Add Palette is a wrapper around gtk color chooser add palette 
native returns a pointer to the underlying Gtk Color Chooser Button 
Color Chooser Dialog New is a wrapper around gtk color chooser dialog new 
native returns a pointer to the underlying GSource 
Main Current Source is a wrapper around g main current source 
Translate is a wrapper around cairo translate 
Scale is a wrapper around cairo scale 
Rotate is a wrapper around cairo rotate 
Transform is a wrapper around cairo transform 
Set Matrix is a wrapper around cairo set matrix 
Get Matrix is a wrapper around cairo get matrix 
User To Device is a wrapper around cairo user to device 
User To Device Distance is a wrapper around cairo user to device distance 
Device To User is a wrapper around cairo device to user 
Device To User Distance is a wrapper around cairo device to user distance 
is Blocked returns a boolean value indicating whether there is a block at the position x y of the piece with the given angle 
collides returns a boolean value indicating whether the piece at x y with the given angle would collide with the field s blocks 
In returns true if x y is in the sprite and false otherwise 
Move By moves the sprite by x y 
Draw draws the sprite 
Read is implementation of io Reader s Read 
Seek is implementation of io Seeker s Seek 
Close is implementation of io Closer s Close 
Length returns the size of decoded stream in bytes 
Decode decodes MP source and returns a decoded stream Decode returns error when decoding fails or IO error happens Decode automatically resamples the stream to fit with the audio context if necessary Decode takes the ownership of src and Stream s Close function closes src 
Input Chars return printable runes read from the keyboard at the time update is called Input Chars represents the environment s locale dependent translation of keyboard input to Unicode characters Is Key Pressed is based on a mapping of device US keyboard codes to input device keys Control and modifier keys should be handled with Is Key Pressed Input Chars is concurrent safe 
Is Key Pressed returns a boolean indicating whether key is pressed Known issue On Edge browser some keys don t work well Key KPEnter and Key KPEqual are recognized as Key Enter and Key Equal Key Print Screen is only treated at keyup event Is Key Pressed is concurrent safe 
Is Mouse Button Pressed returns a boolean indicating whether mouse Button is pressed Is Mouse Button Pressed is concurrent safe Note that touch events not longer affect Is Mouse Button Pressed s result as of alpha Use Touches instead 
Gamepad Axis returns the float value of the given gamepad id s axis axis Gamepad Axis is concurrent safe Gamepad Axis always returns on mobiles 
Is Gamepad Button Pressed returns the boolean indicating the given button of the gamepad id is pressed or not Is Gamepad Button Pressed is concurrent safe The relationships between physical buttons and buttion IDs depend on environments There can be differences even between Chrome and Firefox Is Gamepad Button Pressed always returns false on mobiles 
Touch Position returns the position for the touch of the specified ID If the touch of the specified ID is not present Touch Position returns Touch Position is cuncurrent safe 
Touches is deprecated as of Use Touch IDs instead 
paeth implements the Paeth filter function as per the PNG specification 
filter Paeth applies the Paeth filter to the cdat slice cdat is the current row s data pdat is the previous row s data 
Mipmap Level returns an appropriate mipmap level for the given determinant of a geometry matrix Mipmap Level returns if det is Mipmap Level panics if det is Na N 
hide Console Window On Windows will hide the console window that is showing when compiling on Windows without specifying the ldflags Hwindowsgui flag 
operate on the accumulation buffer 
set the active program object for a program pipeline object 
specify the alpha test function 
determine if textures are loaded in texture memory 
Attaches a shader object to a program object 
delimit the boundaries of a query object 
Associates a generic vertex attribute index with a named attribute variable 
bind a named buffer object 
bind a buffer object to an indexed buffer target 
bind a range within a buffer object to an indexed buffer target 
bind one or more buffer objects to a sequence of indexed buffer targets 
bind ranges of one or more buffer objects to a sequence of indexed buffer targets 
bind a user defined varying out variable to a fragment shader color number and index 
bind a framebuffer to a framebuffer target 
bind a level of a texture to an image unit 
bind one or more named texture images to a sequence of consecutive image units 
bind a renderbuffer to a renderbuffer target 
bind a named sampler to a texturing target 
bind one or more named sampler objects to a sequence of consecutive sampler units 
bind a named texture to a texturing target 
bind an existing texture object to the specified texture unit 
bind one or more named textures to a sequence of consecutive texture units 
bind a transform feedback object 
bind a buffer to a vertex buffer bind point 
attach multiple buffer objects to a vertex array object 
draw a bitmap 
set the blend color 
set the RGB blend equation and the alpha blend equation separately 
specify pixel arithmetic 
specify pixel arithmetic for RGB and alpha components separately 
copy a block of pixels from one framebuffer object to another 
copy a block of pixels from one framebuffer object to another 
creates and initializes a buffer object s data store 
creates and initializes a buffer object s immutable data store 
Parameter client Buffer has type C GLegl Client Buffer EXT 
updates a subset of a buffer object s data store 
execute a list of display lists 
check the completeness status of a framebuffer 
check the completeness status of a framebuffer 
specify clear values for the accumulation buffer 
fill a buffer object s data store with a fixed value 
fill all or part of buffer object s data store with a fixed value 
specify clear values for the color buffers 
fill a buffer object s data store with a fixed value 
fill all or part of buffer object s data store with a fixed value 
fills all a texture image with a constant value 
fills all or part of a texture image with a constant value 
block and wait for a sync object to become signaled 
control clip coordinate to window coordinate behavior 
specify a plane against which all geometry is clipped 
cause a material color to track the current color 
define an array of colors 
specify a one dimensional texture image in a compressed format 
specify a two dimensional texture image in a compressed format 
specify a three dimensional texture image in a compressed format 
specify a one dimensional texture subimage in a compressed format 
specify a two dimensional texture subimage in a compressed format 
specify a three dimensional texture subimage in a compressed format 
specify a one dimensional texture subimage in a compressed format 
specify a two dimensional texture subimage in a compressed format 
specify a three dimensional texture subimage in a compressed format 
copy all or part of the data store of a buffer object to the data store of another buffer object 
perform a raw data copy between two images 
copy all or part of the data store of a buffer object to the data store of another buffer object 
copy pixels in the frame buffer 
copy pixels into a D texture image 
copy pixels into a D texture image 
copy a one dimensional texture subimage 
copy a two dimensional texture subimage 
copy a three dimensional texture subimage 
copy a one dimensional texture subimage 
copy a two dimensional texture subimage 
copy a three dimensional texture subimage 
create buffer objects 
create framebuffer objects 
create program pipeline objects 
create query objects 
create renderbuffer objects 
create sampler objects 
Creates a shader object 
create a stand alone program from an array of null terminated source code strings 
Parameter context has type C struct cl context Parameter event has type C struct cl event 
create texture objects 
create transform feedback objects 
create vertex array objects 
Parameter callback has type C GLDEBUGPROCAMD 
Parameter callback has type C GLDEBUGPROCARB 
Parameter callback has type C GLDEBUGPROCKHR 
control the reporting of debug messages in a debug context 
inject an application supplied message into the debug message queue 
delete named buffer objects 
delete framebuffer objects 
delete a contiguous group of display lists 
delete program pipeline objects 
delete named query objects 
delete renderbuffer objects 
delete named sampler objects 
delete named textures 
delete transform feedback objects 
delete vertex array objects 
enable or disable writing into the depth buffer 
specify mapping of depth values from normalized device coordinates to window coordinates 
specify mapping of depth values from normalized device coordinates to window coordinates for a specified viewport 
specify mapping of depth values from normalized device coordinates to window coordinates 
Detaches a shader object from a program object to which it is attached 
Enable or disable a generic vertex attribute array 
launch one or more compute work groups 
render primitives from array data 
render primitives from array data taking parameters from memory 
draw multiple instances of a range of elements with offset applied to instanced attributes 
Specifies a list of color buffers to be drawn into 
render primitives from array data 
render primitives from array data with a per element offset 
render indexed primitives from array data taking parameters from memory 
draw multiple instances of a set of elements with offset applied to instanced attributes 
render multiple instances of a set of primitives from array data with a per element offset 
render multiple instances of a set of primitives from array data with a per element offset 
write a block of pixels to the frame buffer 
render primitives from array data 
render primitives from array data with a per element offset 
render primitives using a count derived from a transform feedback object 
render multiple instances of primitives using a count derived from a transform feedback object 
render primitives using a count derived from a specifed stream of a transform feedback object 
render multiple instances of primitives using a count derived from a specifed stream of a transform feedback object 
Parameter image has type C GLegl Image OES 
Parameter image has type C GLegl Image OES 
flag edges as either boundary or nonboundary 
define an array of edge flags 
Enable or disable a generic vertex attribute array 
controls feedback mode 
create a new sync object and insert it into the GL command stream 
indicate modifications to a range of a mapped buffer 
indicate modifications to a range of a mapped buffer 
define an array of fog coordinates 
set a named parameter of a framebuffer object 
attach a renderbuffer as a logical buffer of a framebuffer object 
attach a level of a texture object as a logical buffer to the currently bound framebuffer object 
attach a single layer of a texture object as a logical buffer of a framebuffer object 
multiply the current matrix by a perspective matrix 
generate buffer object names 
generate framebuffer object names 
generate a contiguous set of empty display lists 
reserve program pipeline object names 
generate query object names 
generate renderbuffer object names 
generate sampler object names 
generate texture names 
reserve transform feedback object names 
generate vertex array object names 
retrieve information about the set of active atomic counter buffers for a program 
Returns information about an active attribute variable for the specified program object 
query the name of an active shader subroutine 
query the name of an active shader subroutine uniform 
Returns information about an active uniform variable for the specified program object 
retrieve the name of an active uniform block 
query information about an active uniform block 
query the name of an active uniform 
Returns information about several active uniform variables for the specified program object 
Returns the handles of the shader objects attached to a program object 
Returns the location of an attribute variable 
return parameters of a buffer object 
return the pointer to a mapped buffer object s data store 
returns a subset of a buffer object s data store 
return the coefficients of the specified clipping plane 
return a compressed texture image 
return a compressed texture image 
retrieve a sub region of a compressed texture image from a compressed texture object 
retrieve messages from the debug message log 
query the bindings of color indices to user defined varying out variables 
retrieve information about attachments of a bound framebuffer object 
retrieve a named parameter from a framebuffer 
retrieve information about implementation dependent support for internal formats 
retrieve the location of a sample 
return parameters of a buffer object 
return parameters of a buffer object 
return the pointer to a mapped buffer object s data store 
returns a subset of a buffer object s data store 
retrieve information about attachments of a framebuffer object 
query a named parameter of a framebuffer object 
query a named parameter of a renderbuffer object 
retrieve the label of a named object identified within a namespace 
retrieve the label of a sync object identified by a pointer 
return the address of the specified pointer 
return the polygon stipple pattern 
return a binary representation of a program object s compiled and linked executable source 
Returns the information log for a program object 
retrieve the info log string from a program pipeline object 
query the index of a named resource within a program 
query the location of a named resource within a program 
query the fragment color index of a named variable within a program 
query the name of an indexed resource within a program 
Returns a parameter from a program object 
return parameters of an indexed query object target 
return parameters of a query object 
return parameters of a query object target 
retrieve information about a bound renderbuffer object 
Returns the information log for a shader object 
retrieve the range and precision for numeric formats supported by the shader compiler 
Returns the source code string from a shader object 
Returns a parameter from a shader object 
return a string describing the current GL connection 
retrieve the index of a subroutine uniform of a given shader stage within a program 
retrieve the location of a subroutine uniform of a given shader stage within a program 
query the properties of a sync object 
return a texture image 
return a texture image 
retrieve a sub region of a texture image from a texture object 
query the state of a transform feedback object 
retrieve the index of a named uniform block 
retrieve the index of a named uniform block 
Returns the location of a uniform variable 
Returns the value of a uniform variable 
Returns the value of a uniform variable 
retrieve parameters of a vertex array object 
Return a generic vertex attribute parameter 
return the address of the specified generic vertex attribute pointer 
Return a generic vertex attribute parameter 
Return a generic vertex attribute parameter 
Return a generic vertex attribute parameter 
Return value has type C GLVULKANPROCNV 
specify implementation specific hints 
define an array of color indexes 
simultaneously specify and enable several interleaved arrays 
invalidate a region of a buffer object s data store 
invalidate the content of some or all of a framebuffer s attachments 
invalidate the content of some or all of a framebuffer s attachments 
invalidate the content of a region of some or all of a framebuffer s attachments 
invalidate the content of a region of some or all of a framebuffer s attachments 
invalidate the entirety a texture image 
invalidate a region of a texture image 
determine if a name corresponds to a buffer object 
determine if a name corresponds to a framebuffer object 
determine if a name corresponds to a display list 
Determines if a name corresponds to a program object 
determine if a name corresponds to a program pipeline object 
determine if a name corresponds to a query object 
determine if a name corresponds to a renderbuffer object 
determine if a name corresponds to a sampler object 
Determines if a name corresponds to a shader object 
determine if a name corresponds to a sync object 
determine if a name corresponds to a texture 
determine if a name corresponds to a transform feedback object 
determine if a name corresponds to a vertex array object 
specify the line stipple pattern 
map all of a buffer object s data store into the client s address space 
map all or part of a buffer object s data store into the client s address space 
map all of a buffer object s data store into the client s address space 
map all or part of a buffer object s data store into the client s address space 
render multiple sets of primitives from array data 
render multiple sets of primitives from array data taking parameters from memory 
render multiple sets of primitives by specifying indices of array data elements 
render multiple sets of primitives by specifying indices of array data elements and an index to apply to each index 
render indexed primitives from array data taking parameters from memory 
creates and initializes a buffer object s data store 
creates and initializes a buffer object s immutable data store 
Parameter client Buffer has type C GLegl Client Buffer EXT 
updates a subset of a buffer object s data store 
specify which color buffers are to be drawn into 
Specifies a list of color buffers to be drawn into 
set a named parameter of a framebuffer object 
select a color buffer source for pixels 
attach a renderbuffer as a logical buffer of a framebuffer object 
attach a single layer of a texture object as a logical buffer of a framebuffer object 
establish data storage format and dimensions of a renderbuffer object s image 
establish data storage format dimensions and sample count of a renderbuffer object s image 
create or replace a display list 
define an array of normals 
label a named object identified within a namespace 
label a a sync object identified by a pointer 
multiply the current matrix with an orthographic matrix 
specifies the parameters for patch primitives 
set pixel storage modes 
specify the pixel zoom factors 
select a polygon rasterization mode 
set the scale and units used to calculate depth values 
set the polygon stippling pattern 
set texture residence priority 
load a program object with a program binary 
specify a parameter for a program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
push a named debug group into the command stream 
record the GL time into a query object after all previous commands have reached the GL server but have not yet necessarily executed 
return the values of the current matrix 
read a block of pixels from the frame buffer 
read a block of pixels from the frame buffer 
set rasterization mode 
establish data storage format and dimensions of a renderbuffer object s image 
establish data storage format dimensions and sample count of a renderbuffer object s image 
specify multisample coverage parameters 
set the value of a sub word of the sample mask 
define the scissor box 
define the scissor box for a specific viewport 
define an array of secondary colors 
establish a buffer for selection mode values 
load pre compiled shader binaries 
Replaces the source code in a shader object 
change an active shader storage block binding 
set front and back function and reference value for stencil testing 
set front and or back function and reference value for stencil testing 
control the front and or back writing of individual bits in the stencil planes 
set front and back stencil test actions 
set front and or back stencil test actions 
attach a range of a buffer object s data store to a buffer texture object 
define an array of texture coordinates 
specify a one dimensional texture image 
specify a two dimensional texture image 
establish the data storage format dimensions and number of samples of a multisample texture s image 
specify a three dimensional texture image 
establish the data storage format dimensions and number of samples of a multisample texture s image 
simultaneously specify storage for all levels of a one dimensional texture 
simultaneously specify storage for all levels of a two dimensional or one dimensional array texture 
specify storage for a two dimensional multisample texture 
simultaneously specify storage for all levels of a three dimensional two dimensional array or cube map array texture 
specify storage for a two dimensional multisample array texture 
specify a one dimensional texture subimage 
specify a two dimensional texture subimage 
specify a three dimensional texture subimage 
attach a buffer object s data store to a buffer texture object 
attach a range of a buffer object s data store to a buffer texture object 
simultaneously specify storage for all levels of a one dimensional texture 
simultaneously specify storage for all levels of a two dimensional or one dimensional array texture 
specify storage for a two dimensional multisample texture 
simultaneously specify storage for all levels of a three dimensional two dimensional array or cube map array texture 
specify storage for a two dimensional multisample array texture 
specify a one dimensional texture subimage 
specify a two dimensional texture subimage 
specify a three dimensional texture subimage 
initialize a texture as a data alias of another texture s data store 
bind a buffer object to a transform feedback buffer object 
bind a range within a buffer object to a transform feedback buffer object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
assign a binding point to an active uniform block 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
release the mapping of a buffer object s data store into the client s address space 
release the mapping of a buffer object s data store into the client s address space 
bind stages of a program object to a program pipeline 
specify the organization of vertex arrays 
modify the rate at which generic vertex attributes advance 
configures element array buffer binding of a vertex array object 
bind a buffer to a vertex buffer bind point 
attach multiple buffer objects to a vertex array object 
associate a vertex attribute and a vertex buffer binding for a vertex array object 
specify the organization of vertex arrays 
define an array of generic vertex attribute data 
modify the rate at which generic vertex attributes advance 
define an array of vertex data 
set the viewport 
instruct the GL server to block until the specified sync object becomes signaled 
Quad Vertices returns the vertices for rendering a quad Quad Vertices is highly optimized for rendering quads and that s the most significant difference from Put Vertices 
Put Vertices puts the given dest with vertices that can be passed to Draw Triangles 
Fill fills the image with a color This affects not only the width height region but also the whole framebuffer region 
run as goroutine Will keep the desktop scale up to date This can be removed once the scale change event is implemented in GLFW 
Draw draws a given text on a given destination image dst face is the font for text rendering x y represents a dot period position Be careful that this doesn t represent left upper corner position clr is the color for text rendering Glyphs used for rendering are cached in least recently used way It is OK to call Draw with a same text and a same face at every frame in terms of performance Be careful that the passed font face is held by this package and is never released This is a known issue Draw is concurrent safe 
Run runs the game f is a function which is called at every frame The argument Image is the render target that represents the screen The screen size is based on the given values width and height A window size is based on the given values width height and scale scale is used to enlarge the screen Note that the actual screen is multiplied not only by the given scale but also by the device scale on high DPI display If you pass inverse of the device scale you can disable this automatical device scaling as a result You can get the device scale by Device Scale Factor function Run must be called on the main thread Note that Ebiten bounds the main goroutine to the main OS thread by runtime Lock OSThread Ebiten tries to call f times a second by default In other words TPS ticks per second is by default This is not related to framerate display s refresh rate f is not called when the window is in background by default This setting is configurable with Set Runnable In Background The given scale is ignored on fullscreen mode or gomobile build mode On non Gopher JS environments Run returns error when Open GL error happens audio error happens or f returns error In the case of Run returns the same error On Gopher JS Run returns immediately It is because the main goroutine cannot be blocked on Gopher JS due to the bug gopherjs gopherjs When an error happens this is shown as an error on the console The size unit is device independent pixel Don t call Run twice or more in one process 
Run Without Main Loop runs the game but don t call the loop on the main UI thread Different from Run Run Without Main Loop returns immediately Ebiten users should NOT call Run Without Main Loop Instead functions in github com hajimehoshi ebiten mobile package calls this 
Set Screen Size changes the logical size of the screen This doesn t affect the current scale of the screen Unit is device independent pixel Set Screen Size is concurrent safe 
Set Max TPS sets the maximum TPS ticks per second that represents how many updating function is called per second The initial value is If tps is Uncapped TPS TPS is uncapped and the game is updated per frame If tps is negative but not Uncapped TPS Set Max TPS panics Set Max TPS is concurrent safe 
New Board generates a new Board with giving a size 
Update updates the board state 
Move enqueues tile moving tasks 
Size returns the board size 
Draw draws the board to the given board Image 
operate on the accumulation buffer 
set the active program object for a program pipeline object 
specify the alpha test function 
determine if textures are loaded in texture memory 
Attaches a shader object to a program object 
delimit the boundaries of a query object 
Associates a generic vertex attribute index with a named attribute variable 
bind a named buffer object 
bind a buffer object to an indexed buffer target 
bind a range within a buffer object to an indexed buffer target 
bind one or more buffer objects to a sequence of indexed buffer targets 
bind ranges of one or more buffer objects to a sequence of indexed buffer targets 
bind a user defined varying out variable to a fragment shader color number and index 
bind a framebuffer to a framebuffer target 
bind a level of a texture to an image unit 
bind one or more named texture images to a sequence of consecutive image units 
bind a renderbuffer to a renderbuffer target 
bind a named sampler to a texturing target 
bind one or more named sampler objects to a sequence of consecutive sampler units 
bind a named texture to a texturing target 
bind an existing texture object to the specified texture unit 
bind one or more named textures to a sequence of consecutive texture units 
bind a transform feedback object 
bind a buffer to a vertex buffer bind point 
attach multiple buffer objects to a vertex array object 
draw a bitmap 
set the blend color 
set the RGB blend equation and the alpha blend equation separately 
specify pixel arithmetic 
specify pixel arithmetic for RGB and alpha components separately 
copy a block of pixels from one framebuffer object to another 
copy a block of pixels from one framebuffer object to another 
creates and initializes a buffer object s data store 
creates and initializes a buffer object s immutable data store 
Parameter client Buffer has type C GLegl Client Buffer EXT 
updates a subset of a buffer object s data store 
execute a list of display lists 
check the completeness status of a framebuffer 
check the completeness status of a framebuffer 
specify clear values for the accumulation buffer 
fill a buffer object s data store with a fixed value 
fill all or part of buffer object s data store with a fixed value 
specify clear values for the color buffers 
specify the clear value for the depth buffer 
specify the clear value for the depth buffer 
specify the clear value for the color index buffers 
fill a buffer object s data store with a fixed value 
fill all or part of buffer object s data store with a fixed value 
fills all a texture image with a constant value 
fills all or part of a texture image with a constant value 
block and wait for a sync object to become signaled 
control clip coordinate to window coordinate behavior 
specify a plane against which all geometry is clipped 
cause a material color to track the current color 
define an array of colors 
specify a one dimensional texture image in a compressed format 
specify a two dimensional texture image in a compressed format 
specify a three dimensional texture image in a compressed format 
specify a one dimensional texture subimage in a compressed format 
specify a three dimensional texture subimage in a compressed format 
specify a one dimensional texture subimage in a compressed format 
specify a two dimensional texture subimage in a compressed format 
specify a three dimensional texture subimage in a compressed format 
copy all or part of the data store of a buffer object to the data store of another buffer object 
perform a raw data copy between two images 
copy all or part of the data store of a buffer object to the data store of another buffer object 
copy pixels in the frame buffer 
copy pixels into a D texture image 
copy pixels into a D texture image 
copy a one dimensional texture subimage 
copy a two dimensional texture subimage 
copy a three dimensional texture subimage 
copy a one dimensional texture subimage 
copy a two dimensional texture subimage 
copy a three dimensional texture subimage 
create buffer objects 
create framebuffer objects 
Creates a program object 
create program pipeline objects 
create query objects 
create renderbuffer objects 
create sampler objects 
Creates a shader object 
create a stand alone program from an array of null terminated source code strings 
Parameter context has type C struct cl context Parameter event has type C struct cl event 
create texture objects 
create transform feedback objects 
create vertex array objects 
specify a callback to receive debugging messages from the GL Parameter callback has type C GLDEBUGPROC 
Parameter callback has type C GLDEBUGPROCAMD 
Parameter callback has type C GLDEBUGPROCARB 
Parameter callback has type C GLDEBUGPROCKHR 
control the reporting of debug messages in a debug context 
inject an application supplied message into the debug message queue 
delete named buffer objects 
delete framebuffer objects 
delete a contiguous group of display lists 
delete program pipeline objects 
delete named query objects 
delete renderbuffer objects 
delete named sampler objects 
delete named textures 
delete transform feedback objects 
delete vertex array objects 
specify mapping of depth values from normalized device coordinates to window coordinates 
specify mapping of depth values from normalized device coordinates to window coordinates for a specified viewport 
specify mapping of depth values from normalized device coordinates to window coordinates 
Detaches a shader object from a program object to which it is attached 
Enable or disable a generic vertex attribute array 
launch one or more compute work groups 
render primitives from array data 
render primitives from array data taking parameters from memory 
draw multiple instances of a range of elements with offset applied to instanced attributes 
Specifies a list of color buffers to be drawn into 
render primitives from array data 
render primitives from array data with a per element offset 
render indexed primitives from array data taking parameters from memory 
draw multiple instances of a set of elements with offset applied to instanced attributes 
render multiple instances of a set of primitives from array data with a per element offset 
render multiple instances of a set of primitives from array data with a per element offset 
write a block of pixels to the frame buffer 
render primitives from array data 
render primitives from array data with a per element offset 
render primitives using a count derived from a transform feedback object 
render multiple instances of primitives using a count derived from a transform feedback object 
render primitives using a count derived from a specifed stream of a transform feedback object 
render multiple instances of primitives using a count derived from a specifed stream of a transform feedback object 
Parameter image has type C GLegl Image OES 
Parameter image has type C GLegl Image OES 
define an array of edge flags 
Enable or disable a generic vertex attribute array 
controls feedback mode 
create a new sync object and insert it into the GL command stream 
indicate modifications to a range of a mapped buffer 
indicate modifications to a range of a mapped buffer 
define an array of fog coordinates 
set a named parameter of a framebuffer object 
attach a renderbuffer as a logical buffer of a framebuffer object 
attach a level of a texture object as a logical buffer to the currently bound framebuffer object 
attach a single layer of a texture object as a logical buffer of a framebuffer object 
multiply the current matrix by a perspective matrix 
generate buffer object names 
generate framebuffer object names 
generate a contiguous set of empty display lists 
reserve program pipeline object names 
generate query object names 
generate renderbuffer object names 
generate sampler object names 
generate texture names 
reserve transform feedback object names 
generate vertex array object names 
retrieve information about the set of active atomic counter buffers for a program 
Returns information about an active attribute variable for the specified program object 
query the name of an active shader subroutine 
query the name of an active shader subroutine uniform 
Returns information about an active uniform variable for the specified program object 
retrieve the name of an active uniform block 
query information about an active uniform block 
query the name of an active uniform 
Returns information about several active uniform variables for the specified program object 
Returns the handles of the shader objects attached to a program object 
Returns the location of an attribute variable 
return parameters of a buffer object 
return the pointer to a mapped buffer object s data store 
returns a subset of a buffer object s data store 
return the coefficients of the specified clipping plane 
return a compressed texture image 
return a compressed texture image 
retrieve a sub region of a compressed texture image from a compressed texture object 
retrieve messages from the debug message log 
return error information 
query the bindings of color indices to user defined varying out variables 
retrieve information about attachments of a bound framebuffer object 
retrieve a named parameter from a framebuffer 
check if the rendering context has not been lost due to software or hardware issues 
retrieve information about implementation dependent support for internal formats 
retrieve the location of a sample 
return parameters of a buffer object 
return parameters of a buffer object 
return the pointer to a mapped buffer object s data store 
returns a subset of a buffer object s data store 
retrieve information about attachments of a framebuffer object 
query a named parameter of a framebuffer object 
query a named parameter of a renderbuffer object 
retrieve the label of a named object identified within a namespace 
retrieve the label of a sync object identified by a pointer 
return the address of the specified pointer 
return the polygon stipple pattern 
return a binary representation of a program object s compiled and linked executable source 
Returns the information log for a program object 
retrieve the info log string from a program pipeline object 
query the index of a named resource within a program 
query the location of a named resource within a program 
query the fragment color index of a named variable within a program 
query the name of an indexed resource within a program 
Returns a parameter from a program object 
return parameters of an indexed query object target 
return parameters of a query object 
return parameters of a query object target 
retrieve information about a bound renderbuffer object 
Returns the information log for a shader object 
retrieve the range and precision for numeric formats supported by the shader compiler 
Returns the source code string from a shader object 
Returns a parameter from a shader object 
return a string describing the current GL connection 
retrieve the index of a subroutine uniform of a given shader stage within a program 
retrieve the location of a subroutine uniform of a given shader stage within a program 
query the properties of a sync object 
return a texture image 
return a texture image 
retrieve a sub region of a texture image from a texture object 
query the state of a transform feedback object 
retrieve the index of a named uniform block 
retrieve the index of a named uniform block 
Returns the location of a uniform variable 
Returns the value of a uniform variable 
Returns the value of a uniform variable 
retrieve parameters of a vertex array object 
Return a generic vertex attribute parameter 
return the address of the specified generic vertex attribute pointer 
Return a generic vertex attribute parameter 
Return a generic vertex attribute parameter 
Return a generic vertex attribute parameter 
Return value has type C GLVULKANPROCNV 
specify implementation specific hints 
define an array of color indexes 
simultaneously specify and enable several interleaved arrays 
invalidate a region of a buffer object s data store 
invalidate the content of some or all of a framebuffer s attachments 
invalidate the content of some or all of a framebuffer s attachments 
invalidate the content of a region of some or all of a framebuffer s attachments 
invalidate the content of a region of some or all of a framebuffer s attachments 
invalidate the entirety a texture image 
invalidate a region of a texture image 
determine if a name corresponds to a buffer object 
determine if a name corresponds to a framebuffer object 
determine if a name corresponds to a display list 
Determines if a name corresponds to a program object 
determine if a name corresponds to a program pipeline object 
determine if a name corresponds to a query object 
determine if a name corresponds to a renderbuffer object 
determine if a name corresponds to a sampler object 
Determines if a name corresponds to a shader object 
determine if a name corresponds to a sync object 
determine if a name corresponds to a texture 
determine if a name corresponds to a transform feedback object 
determine if a name corresponds to a vertex array object 
specify the line stipple pattern 
specify the width of rasterized lines 
map all of a buffer object s data store into the client s address space 
map all or part of a buffer object s data store into the client s address space 
map all of a buffer object s data store into the client s address space 
map all or part of a buffer object s data store into the client s address space 
render multiple sets of primitives from array data 
render multiple sets of primitives from array data taking parameters from memory 
render multiple sets of primitives by specifying indices of array data elements 
render multiple sets of primitives by specifying indices of array data elements and an index to apply to each index 
render indexed primitives from array data taking parameters from memory 
creates and initializes a buffer object s data store 
creates and initializes a buffer object s immutable data store 
Parameter client Buffer has type C GLegl Client Buffer EXT 
updates a subset of a buffer object s data store 
specify which color buffers are to be drawn into 
Specifies a list of color buffers to be drawn into 
set a named parameter of a framebuffer object 
select a color buffer source for pixels 
attach a renderbuffer as a logical buffer of a framebuffer object 
attach a single layer of a texture object as a logical buffer of a framebuffer object 
establish data storage format and dimensions of a renderbuffer object s image 
establish data storage format dimensions and sample count of a renderbuffer object s image 
create or replace a display list 
define an array of normals 
label a named object identified within a namespace 
label a a sync object identified by a pointer 
multiply the current matrix with an orthographic matrix 
place a marker in the feedback buffer 
specifies the parameters for patch primitives 
set pixel storage modes 
specify the pixel zoom factors 
specify the diameter of rasterized points 
select a polygon rasterization mode 
set the scale and units used to calculate depth values 
set the polygon stippling pattern 
set texture residence priority 
load a program object with a program binary 
specify a parameter for a program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
Specify the value of a uniform variable for a specified program object 
push a named debug group into the command stream 
record the GL time into a query object after all previous commands have reached the GL server but have not yet necessarily executed 
return the values of the current matrix 
read a block of pixels from the frame buffer 
read a block of pixels from the frame buffer 
set rasterization mode 
establish data storage format and dimensions of a renderbuffer object s image 
establish data storage format dimensions and sample count of a renderbuffer object s image 
specify multisample coverage parameters 
set the value of a sub word of the sample mask 
define the scissor box 
define the scissor box for a specific viewport 
define an array of secondary colors 
establish a buffer for selection mode values 
load pre compiled shader binaries 
Replaces the source code in a shader object 
change an active shader storage block binding 
set front and back function and reference value for stencil testing 
set front and or back function and reference value for stencil testing 
control the front and or back writing of individual bits in the stencil planes 
set front and back stencil test actions 
set front and or back stencil test actions 
attach a range of a buffer object s data store to a buffer texture object 
define an array of texture coordinates 
specify a one dimensional texture image 
specify a two dimensional texture image 
establish the data storage format dimensions and number of samples of a multisample texture s image 
establish the data storage format dimensions and number of samples of a multisample texture s image 
simultaneously specify storage for all levels of a one dimensional texture 
simultaneously specify storage for all levels of a two dimensional or one dimensional array texture 
specify storage for a two dimensional multisample texture 
simultaneously specify storage for all levels of a three dimensional two dimensional array or cube map array texture 
specify storage for a two dimensional multisample array texture 
specify a one dimensional texture subimage 
specify a two dimensional texture subimage 
specify a three dimensional texture subimage 
attach a buffer object s data store to a buffer texture object 
attach a range of a buffer object s data store to a buffer texture object 
simultaneously specify storage for all levels of a one dimensional texture 
simultaneously specify storage for all levels of a two dimensional or one dimensional array texture 
specify storage for a two dimensional multisample texture 
simultaneously specify storage for all levels of a three dimensional two dimensional array or cube map array texture 
specify storage for a two dimensional multisample array texture 
specify a one dimensional texture subimage 
specify a two dimensional texture subimage 
specify a three dimensional texture subimage 
initialize a texture as a data alias of another texture s data store 
bind a buffer object to a transform feedback buffer object 
bind a range within a buffer object to a transform feedback buffer object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
assign a binding point to an active uniform block 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
Specify the value of a uniform variable for the current program object 
release the mapping of a buffer object s data store into the client s address space 
release the mapping of a buffer object s data store into the client s address space 
bind stages of a program object to a program pipeline 
specify the organization of vertex arrays 
modify the rate at which generic vertex attributes advance 
configures element array buffer binding of a vertex array object 
bind a buffer to a vertex buffer bind point 
attach multiple buffer objects to a vertex array object 
associate a vertex attribute and a vertex buffer binding for a vertex array object 
specify the organization of vertex arrays 
define an array of generic vertex attribute data 
modify the rate at which generic vertex attributes advance 
define an array of vertex data 
set the viewport 
instruct the GL server to block until the specified sync object becomes signaled 
Init With Proc Addr Func intializes the package using the specified Open GL function pointer loading function For more cases Init should be used instead 
New Context creates a new audio context with the given sample rate The sample rate is also used for decoding MP with audio mp package or other formats as the target sample rate sample Rate should be or Other values might not work For example causes error on Safari when decoding MP Error returned by New Context is always nil as of alpha New Context panics when an audio context is already created 
Is Ready returns a boolean value indicating whether the audio is ready or not On some browsers user interaction like click or pressing keys is required to start audio 
New Player creates a new player with the given stream src s format must be linear PCM bits little endian channel stereo without a header e g RIFF header The sample rate must be same as that of the audio context The player is seekable when src is io Seeker Attempt to seek the player that is not io Seeker causes panic Note that the given src can t be shared with other Player objects New Player tries to call Seek of src to get the current position New Player returns error when the Seek returns error New Player takes the ownership of src Player s Close calls src s Close 
New Player From Bytes creates a new player with the given bytes As opposed to New Player you don t have to care if src is already used by another player or not src can be shared by multiple players The format of src should be same as noted at New Player New Player From Bytes s error is always nil as of alpha 
Close closes the stream When closing the stream owned by the player will also be closed by calling its Close This means that the source stream passed via New Player will also be closed Close returns error when closing the source returns error 
Seek seeks the position with the given offset The passed source to New Player must be io Seeker or Seek panics Seek returns error when seeking the source stream returns error 
Read presents one or more IDAT chunks as one continuous stream minus the intermediate chunk headers and footers If the PNG data looked like len IDAT xxx crc len IDAT yy crc len IEND crc then this reader presents xxxyy For well formed PNG data the decoder state immediately before the first Read call is that d r is positioned between the first IDAT and xxx and the decoder state immediately after the last Read call is that d r is positioned between yy and crc 
decode decodes the IDAT data into an image 
read Image Pass reads a single image pass sized according to the pass number 
merge Pass Into merges a single pass into a full sized image 
Decode reads a PNG image from r and returns it as an image Image The type of Image returned depends on the PNG contents 
Decode Config returns the color model and dimensions of a PNG image without decoding the entire image 
Set Element sets an element at i j 
Concat multiplies a color matrix with the other color matrix This is same as muptiplying the matrix other and the matrix c in this order 
Add is deprecated 
Scale scales the matrix by r g b a 
Translate translates the matrix by r g b a 
Change HSV changes HSV Hue Saturation Value elements hue Theta is a radian value to ratate hue saturation Scale is a value to scale saturation value Scale is a value to scale value a k a brightness This conversion uses RGB to from YCr Cb conversion 
Scan scans the current input state and assigns the given virtual gamepad button b to the current pysical pressed buttons of the gamepad 
Is Button Pressed returns a boolean value indicating whether the given virtual button b is pressed 
Name returns the pysical button s name for the given virtual button 
paint draws the brush on the given canvas image at the position x y 
Append Hook On Before Update appends a hook function that is run before the main update function every frame 
String returns a string representing the key If k is an undefined key String returns an empty string 
Debug Print draws the string str on the image on left top corner The available runes are in U to U FF which is C Controls and Basic Latin and C Controls and Latin Supplement Debug Print always returns nil as of alpha 
Debug Print At draws the string str on the image at x y position The available runes are in U to U FF which is C Controls and Basic Latin and C Controls and Latin Supplement 
Gamepad IDButton Pressed returns a gamepad ID where at least one button is pressed If no button is pressed Gamepad IDButton Pressed returns 
Read is implementation of io Reader s Read 
Seek is implementation of io Seeker s Seek Note that Seek can take long since decoding is a relatively heavy task 
Close is implementation of io Closer s Close 
decode accepts an ogg stream and returns a decorded stream 
Decode decodes Ogg Vorbis data to playable stream Decode returns error when decoding fails or IO error happens Decode automatically resamples the stream to fit with the audio context if necessary Decode takes the ownership of src and Stream s Close function closes src 
Start starts the game and returns immediately Different from ebiten Run this invokes only the game loop and not the main UI loop The unit of width height is device independent pixel dp on Android and point on i OS Start is concurrent safe Start always returns nil as of alpha 
Update Touches On Android updates the touch state on Android This should be called with on Touch Event of GLSurface View like this private double m Device Scale px To Dp converts an value in pixels to dp private double px To Dp double x if m Device Scale m Device Scale get Resources get Display Metrics density return x m Device Scale 
Update Touches On IOS updates the touch state on i OS This should be called with touch handlers of UIView Controller like this GLKView glk View return GLKView self view view With Tag void update Touches NSSet touches for UITouch touch in touches if touch view self glk View continue CGPoint location touch location In View self glk View Exported function for Update Touches On IOS Your Game Update Touches On IOS touch phase int t touch location x location y void touches Began NSSet touches with Event UIEvent event self update Touches touches void touches Moved NSSet touches with Event UIEvent event self update Touches touches void touches Ended NSSet touches with Event UIEvent event self update Touches touches void touches Cancelled NSSet touches with Event UIEvent event self update Touches touches The coodinate x y is in point Update Touches On IOS can be called even before Start is called Update Touches On IOS is concurrent safe For more details see https github com hajimehoshi ebiten wiki i OS 
Is Blocked returns a boolean value indicating whether there is a block at position x y on the field 
Move Piece To Left tries to move the piece to the left and returns the piece s next x position 
Piece Droppable returns a boolean value indicating whether the piece at x y with the given angle can drop 
Rotate Piece Right tries to rotate the piece to the right and returns the piece s next angle 
Rotate Piece Left tries to rotate the piece to the left and returns the piece s next angle 
Absorb Piece absorbs the piece at x y with the given angle into the field 
flushable returns a boolean value indicating whether there is a flushable line in the field 
flushable Line returns a boolean value indicating whether the line j is flushabled or not 
flush Line flushes the line j if possible and if the line is flushed the other lines above the line go down flush Line returns a boolean value indicating whether the line is actually flushed 
intersection calculates the intersection of given two lines 
ray Casting returns a slice of line originating from point cx cy and intersecting with objects 
square returns a float value indicating how much the given rectangle is close to a square If the given rectangle is square this return maximum value Otherwise this returns a value in 
Record Screen As GIF is deprecated as of version alpha Record Screen As GIF returns updating function with recording the screen as an animation GIF image This encodes each screen at each frame and may slows the application Here is the example to record initial frames of your game func update screen ebiten Image error func main out err os Create output gif if err nil log Fatal err defer out Close update Record Screen As GIF update out if err ebiten Run update Your game s title err nil log Fatal err 
Ptr takes a slice or pointer to a singular scalar value or the first element of an array or slice and returns its GL compatible address For example var data uint gl Tex Image D gl TEXTURE D gl UNSIGNED BYTE gl Ptr data 
Str takes a null terminated Go string and returns its GL compatible address This function reaches into Go string storage in an unsafe way so the caller must ensure the string is not garbage collected 
Go Str takes a null terminated string returned by Open GL and constructs a corresponding Go string 
Strs takes a list of Go strings with or without null termination and returns their C counterpart The returned free function must be called once you are done using the strings in order to free the memory If no strings are provided as a parameter this function will panic 
Open File opens a file and returns a stream for its data The path parts should be separated with slash on any environments Note that this doesn t work on mobiles 
Create System Default Device returns the preferred system default Metal device Reference https developer apple com documentation metal mtlcreatesystemdefaultdevice 
Copy All Devices returns all Metal devices in the system Reference https developer apple com documentation metal mtlcopyalldevices 
Supports Feature Set reports whether device d supports feature set fs Reference https developer apple com documentation metal mtldevice supportsfeatureset 
Make Library creates a new library that contains the functions stored in the specified source string Reference https developer apple com documentation metal mtldevice makelibrary 
Make Render Pipeline State creates a render pipeline state object Reference https developer apple com documentation metal mtldevice makerenderpipelinestate 
Make Buffer With Bytes allocates a new buffer of a given length and initializes its contents by copying existing data into it Reference https developer apple com documentation metal mtldevice makebuffer 
Make Buffer With Length allocates a new zero filled buffer of a given length Reference https developer apple com documentation metal mtldevice newbufferwithlength 
Make Texture creates a texture object with privately owned storage that contains texture state Reference https developer apple com documentation metal mtldevice maketexture 
Present Drawable registers a drawable presentation to occur as soon as possible Reference https developer apple com documentation metal mtlcommandbuffer presentdrawable 
Make Render Command Encoder creates an encoder object that can encode graphics rendering commands into this command buffer Reference https developer apple com documentation metal mtlcommandbuffer makerendercommandencoder 
Make Blit Command Encoder creates an encoder object that can encode memory operation blit commands into this command buffer Reference https developer apple com documentation metal mtlcommandbuffer makeblitcommandencoder 
Set Render Pipeline State sets the current render pipeline state object Reference https developer apple com documentation metal mtlrendercommandencoder setrenderpipelinestate 
Set Vertex Buffer sets a buffer for the vertex shader function at an index in the buffer argument table with an offset that specifies the start of the data Reference https developer apple com documentation metal mtlrendercommandencoder setvertexbuffer 
Set Vertex Bytes sets a block of data for the vertex function Reference https developer apple com documentation metal mtlrendercommandencoder setvertexbytes 
Set Fragment Texture sets a texture for the fragment function at an index in the texture argument table Reference https developer apple com documentation metal mtlrendercommandencoder setfragmenttexture 
Draw Primitives renders one instance of primitives using vertex data in contiguous array elements Reference https developer apple com documentation metal mtlrendercommandencoder drawprimitives 
Draw Indexed Primitives encodes a command to render one instance of primitives using an index list specified in a buffer Reference https developer apple com documentation metal mtlrendercommandencoder drawindexedprimitives 
Synchronize flushes any copy of the specified resource from its corresponding Device caches and if needed invalidates any CPU caches Reference https developer apple com documentation metal mtlblitcommandencoder synchronize 
Make Function returns a pre compiled non specialized function Reference https developer apple com documentation metal mtllibrary makefunction 
Get Bytes copies a block of pixels from the storage allocation of texture slice zero into system memory at a specified address Reference https developer apple com documentation metal mtltexture getbytes 
Replace Region copies a block of pixels from the caller s pointer into the storage allocation for slice of a texture Reference https developer apple com documentation metal mtltexture replaceregion 
Region Make D returns a D rectangular region for image or texture data Reference https developer apple com documentation metal mtlregionmake d 
Read is implementation of io Reader s Read 
Read is implementation of io Closer s Close 
Read is implementation of io Reader s Read 
Seek is implementation of io Seeker s Seek 
Close is implementation of io Closer s Close 
New World creates a new world 
init inits world with a random state 
Update game state by one tick 
Draw paints current game state 
neighbour Count calculates the Moore neighborhood of x y 
Pixel Format returns the pixel format of textures for rendering layer content Reference https developer apple com documentation quartzcore cametallayer pixelformat 
Set Device sets the Metal device responsible for the layer s drawable resources Reference https developer apple com documentation quartzcore cametallayer device 
Set Pixel Format controls the pixel format of textures for rendering layer content The pixel format for a Metal layer must be Pixel Format BGRA UNorm Pixel Format BGRA UNorm SRGB Pixel Format RGBA Float Pixel Format BGRA XR or Pixel Format BGRA XRSRGB Set Pixel Format panics for other values Reference https developer apple com documentation quartzcore cametallayer pixelformat 
Set Maximum Drawable Count controls the number of Metal drawables in the resource pool managed by Core Animation It can set to or only Set Maximum Drawable Count panics for other values Reference https developer apple com documentation quartzcore cametallayer maximumdrawablecount 
Set Display Sync Enabled controls whether the Metal layer and its drawables are synchronized with the display s refresh rate Reference https developer apple com documentation quartzcore cametallayer displaysyncenabled 
Set Drawable Size sets the size in pixels of textures for rendering layer content Reference https developer apple com documentation quartzcore cametallayer drawablesize 
Next Drawable returns a Metal drawable Reference https developer apple com documentation quartzcore cametallayer nextdrawable 
Texture returns a Metal texture object representing the drawable object s content Reference https developer apple com documentation quartzcore cametaldrawable texture 
Draw Line draws a line segment on the given destination dst Draw Line is intended to be used mainly for debugging or prototyping purpose 
Draw Rect draws a rectangle on the given destination dst Draw Rect is intended to be used mainly for debugging or prototyping purpose 
New Game generates a new Game object 
Update updates the current game state 
Draw draws the current game to the given screen 
Is Key Just Released returns a boolean value indicating whether the given key is released just in the current frame Is Key Just Released is concurrent safe 
Key Press Duration returns how long the key is pressed in frames Key Press Duration is concurrent safe 
Is Mouse Button Just Released returns a boolean value indicating whether the given mouse button is released just in the current frame Is Mouse Button Just Released is concurrent safe 
Mouse Button Press Duration returns how long the mouse button is pressed in frames Mouse Button Press Duration is concurrent safe 
Just Connected Gamepad IDs returns gamepad IDs that are connected just in the current frame Just Connected Gamepad IDs might return nil when there is no connected gamepad Just Connected Gamepad IDs is concurrent safe 
Is Gamepad Just Disconnected returns a boolean value indicating whether the gamepad of the given id is released just in the current frame Is Gamepad Just Disconnected is concurrent safe 
Is Gamepad Button Just Pressed returns a boolean value indicating whether the given gamepad button of the gamepad id is pressed just in the current frame Is Gamepad Button Just Pressed is concurrent safe 
Is Gamepad Button Just Released returns a boolean value indicating whether the given gamepad button of the gamepad id is released just in the current frame Is Gamepad Button Just Released is concurrent safe 
Gamepad Button Press Duration returns how long the gamepad button of the gamepad id is pressed in frames Gamepad Button Press Duration is concurrent safe 
Just Pressed Touch IDs returns touch IDs that are created just in the current frame Just Pressed Touch IDs might return nil when there is not touch Just Pressed Touch IDs is concurrent safe 
Is Touch Just Released returns a boolean value indicating whether the given touch is released just in the current frame Is Touch Just Released is concurrent safe 
Touch Press Duration returns how long the touch remains in frames Touch Press Duration is concurrent safe 
viewport Size must be called from the main thread 
Loop starts the main thread loop Loop must be called on the main thread 
Run calls f on the main thread Do not call this from the main thread This would block forever 
Update updates the inner clock state and returns an integer value indicating how many times the game should update based on given tps tps represents TPS ticks per second If tps is Uncapped TPS Update always returns If tps and not Uncapped TPS Update always returns Update is expected to be called per frame 
Set Layer sets v layer to l Reference https developer apple com documentation appkit nsview layer 
Set Wants Layer sets v wants Layer to wants Layer Reference https developer apple com documentation appkit nsview wantslayer 
Internal Image Size returns a nearest appropriate size as an internal image 
square fills out with square wave values with the specified volume frequency and sequence 
to Bytes returns the ch little endian bit byte sequence with the given left right sequence 
play Note plays the note at score Index of the score 
New Image From URL creates a new ebiten Image from the given URL Image decoders must be imported when using New Image From URL For example if you want to load a PNG image you d need to add image png to the import section Filter Default is used at New Imge From Image internally 
piano At returns an i th sample of piano with the given frequency 
play Note plays piano sound with the given frequency 
Move To skips the current position of the path to the given position x y without adding any strokes 
Line To adds a math Segment to the path which starts from the current position and ends to the given position x y Line To updates the current position to x y 
Draw draws the path by rendering its stroke or filling 
seek Next Frame seeks the next frame and returns the new buffer with the new position seek Next Frame also returns true when seeking is successful or false otherwise Seeking is necessary when decoding fails Safari s MP decoder can t treat IDs well 
String returns a string representation of Geo M 
Reset resets the Geo M as identity 
Apply pre multiplies a vector x y by the matrix In other words Apply calculates Geo M x y T The return value is x and y values of the result vector 
Element returns a value of a matrix at i j 
Concat multiplies a geometry matrix with the other geometry matrix This is same as muptiplying the matrix other and the matrix g in this order 
Add is deprecated as of alpha Note that this doesn t make sense as an operation for affine matrices 
Scale scales the matrix by x y 
Translate translates the matrix by tx ty 
Rotate rotates the matrix by theta The unit is radian 
Skew skews the matrix by skew X skew Y The unit is radian 
Invert inverts the matrix If g is not invertible Invert panics 
Set Element sets an element at i j 
Scale Geo is deprecated as of alpha Use Scale instead 
Translate Geo is deprecated as of alpha Use Translate instead 
Rotate Geo is deprecated as of alpha Use Rotate instead 
clamp clamps v to the range min max 
new Framebuffer From Texture creates a framebuffer from the given texture 
new Screen Framebuffer creates a framebuffer for the screen 
Returns whether or not the image is fully opaque 
An encoder is an io Writer that satisfies writes by writing PNG IDAT chunks including an byte header and byte CRC checksum per Write call Such calls should be relatively infrequent since write IDATs uses a bufio Writer This method should only be called from write IDATs via write Image No other code should treat an encoder as an io Writer 
Chooses the filter to use for encoding the current row and applies it The return value is the index of the filter and also of the row in cr that has had it applied 
Write the actual image data to one or more IDAT chunks 
This function is required because we want the zero value of Encoder Compression Level to map to zlib Default Compression 
Encode writes the Image m to w in PNG format Any Image may be encoded but images that are not image NRGBA might be encoded lossily 
Encode writes the Image m to w in PNG format 
New Image creates an empty image with the given size The returned image is cleared Note that Dispose is not called automatically 
New Screen Framebuffer Image creates a special image that framebuffer is one for the screen The returned image is cleared Note that Dispose is not called automatically 
internal Size returns the size of the internal texture 
make Stale makes the image stale 
Replace Pixels replaces the image pixels with the given pixels slice If pixels is nil Replace Pixels clears the specified reagion 
Draw Triangles draws a given image img to the image 
append Draw Triangles History appends a draw image history item to the image 
At returns a color value at x y Note that this must not be called until context is available 
make Stale If Depending On makes the image stale if the image depends on target 
read Pixels From GPU reads the pixels from GPU and resolves the image s stale state 
resolve Stale resolves the image s stale state 
depends On returns a boolean value indicating whether the image depends on target 
depending Images returns all images that is depended by the image 
has Dependency returns a boolean value indicating whether the image depends on another image 
Restore restores graphicscommand Image from the pixels using its state 
Dispose disposes the image After disposing calling the function of the image causes unexpected results 
Is Invalidated returns a boolean value indicating whether the image is invalidated If an image is invalidated GL context is lost and all the images should be restored asap 
New Image returns a new image Note that the image is not initialized yet 
Pixels returns the image s pixels Pixels might return nil when Open GL error happens 
Copy Pixels is basically same as Pixels and Replace Pixels but reading pixels from GPU is done lazily 
Pos returns the tile s current position Pos is used only at testing so far 
Next Pos returns the tile s next position Next Pos is used only at testing so far 
New Tile creates a new Tile object 
Move Tiles moves tiles in the given tiles map if possible Move Tiles returns true if there are tiles that are to move otherwise false When Move Tiles is called all tiles must not be about to move 
Update updates the tile s animation states 
Draw draws the current tile to the given board Image 
String returns a string representation of Color M 
Apply pre multiplies a vector r g b a by the matrix where r g b and a are clr s values in straight alpha format In other words Apply calculates Color M r g b a T 
Concat multiplies a color matrix with the other color matrix This is same as muptiplying the matrix other and the matrix c in this order 
Add is deprecated as of alpha Note that this doesn t make sense as an operation for affine matrices 
Scale scales the matrix by r g b a 
Change HSV changes HSV Hue Saturation Value values hue Theta is a radian value to rotate hue saturation Scale is a value to scale saturation value Scale is a value to scale value a k a brightness This conversion uses RGB to from YCr Cb conversion 
Element returns a value of a matrix at i j 
Set Element sets an element at i j 
Scale Color is deprecated as of alpha Use Scale instead 
Translate Color is deprecated as of alpha Use Translate instead 
Rotate Hue is deprecated as of alpha Use Rotate Hue member function instead 
available Filename returns a filename that is valid as a new file or directory 
New Image From File loads the file with path and returns ebiten Image and image Image Image decoders must be imported when using New Image From File For example if you want to load a PNG image you d need to add image png to the import section How to solve path depends on your environment This varies on your desktop or web browser Note that this doesn t work on mobiles For productions instead of using New Image From File it is safer to embed your resources e g with github com rakyll statik 
app Main is the main routine for gomobile build mode 
repeating Key Pressed return true when key is pressed considering the repeat state 
total Bytes returns the size in bytes for one element of the array buffer 
new Array Buffer creates Open GL s buffer object for the array buffer 
enable binds the array buffer the given program to use the array buffer 
disable stops using the array buffer 
reset resets or initializes the Open GL state 
are Same Float Array returns a boolean indicating if a and b are deeply equal 
use Program uses the program program Texture 
New Infinite Loop With Intro creates a new infinite loop stream with an intro part New Infinite Loop With Intro accepts a source stream src intro Length in bytes and loop Length in bytes 
Read is implementation of Read Seek Closer s Read 
Seek is implementation of Read Seek Closer s Seek 
Go Str takes a null terminated string returned by Open GL and constructs a corresponding Go string 
Strs takes a list of Go strings with or without null termination and returns their C counterpart The returned free function must be called once you are done using the strings in order to free the memory If no strings are provided as a parameter this function will panic 
Restore restores the images Restoring means to make all graphicscommand Image objects have their textures and framebuffers 
remove removes img from the images 
resolve Stale Images resolves stale images 
restore restores the images Restoring means to make all graphicscommand Image objects have their textures and framebuffers 
Move Forward moves the player p forward 
Rotate Right rotates the player p in the right direction 
Rotate Left rotates the player p in the left direction 
Stabilize tries to move the player in the stable position lean 
update Ground Image updates the ground image according to the current player s position 
draw Ground Image draws the ground image to the given screen image 
String returns a string representing the direction 
Vector returns a value for each axis 
Update updates the current input states 
Dir returns a currently pressed direction Dir returns false if no direction key is pressed 
Read is io Reader s Read Read fills the data with sine wave samples 
Size returns the size of the image 
Fill fills the image with a solid color When the image is disposed Fill does nothing Fill always returns nil as of alpha 
Draw Image draws the given image on the image i Draw Image accepts the options For details see the document of Draw Image Options For drawing the pixels of the argument image at the time of this call is adopted Even if the argument image is mutated after this call the drawing result is never affected When the image i is disposed Draw Image does nothing When the given image img is disposed Draw Image panics When the given image is as same as i Draw Image panics Draw Image works more efficiently as batches when the successive calls of Draw Images satisfy the below conditions All render targets are same A in A Draw Image B op Either all Color M element values are same or all the Color M have only diagonal scale elements If only Color M Scale is applied to a Color M the Color M has only diagonal elements The other Color M functions might modify the other elements All Composite Mode values are same All Filter values are same Even when all the above conditions are satisfied multiple draw commands can be used in really rare cases Ebiten images usually share an internal automatic texture atlas but when you consume the atlas or you create a huge image those images cannot be on the same texture atlas In this case draw commands are separated The texture atlas size is x so far Another case is when you use an offscreen as a render source An offscreen doesn t share the texture atlas with high probability For more performance tips see https github com hajimehoshi ebiten wiki Performance Tips Draw Image always returns nil as of alpha 
Draw Triangles draws a triangle with the specified vertices and their indices If len indices is not multiple of Draw Triangles panics If len indices is more than Max Indices Num Draw Triangles panics The rule in which Draw Triangles works effectively is same as Draw Image s When the image i is disposed Draw Triangles does nothing Internal mipmap is not used on Draw Triangles Note that this API is experimental 
Sub Image returns an image representing the portion of the image p visible through r The returned value shares pixels with the original image The returned value is always ebiten Image If the image is disposed Sub Image returns nil In the current Ebiten implementation Sub Image is available only as a rendering source 
Bounds returns the bounds of the image 
At returns the color of the image at x y At loads pixels from GPU to system memory if necessary which means that At can be slow At always returns a transparent color if the image is disposed Note that important logic should not rely on values returned by At since the returned values can include very slight differences between some machines At can t be called outside the main loop ebiten Run s updating function starts as of version alpha 
Set sets the color at x y Set loads pixels from GPU to system memory if necessary which means that Set can be slow Set can t be called outside the main loop ebiten Run s updating function starts If the image is disposed Set does nothing 
Dispose disposes the image data After disposing most of image functions do nothing and returns meaningless values Dispose is useful to save memory When the image is disposed Dipose does nothing Dipose always return nil as of alpha 
Replace Pixels replaces the pixels of the image with p The given p must represent RGBA pre multiplied alpha values len p must equal to image width image height Replace Pixels may be slow as for implementation this calls gl Tex Sub Image D When len p is not appropriate Replace Pixels panics When the image is disposed Replace Pixels does nothing Replace Pixels always returns nil as of alpha 
New Image returns an empty image If width or height is less than or more than device dependent maximum size New Image panics filter argument is just for backward compatibility If you are not sure specify Filter Default Error returned by New Image is always nil as of alpha 
make Volatile makes the image volatile A volatile image is always cleared at the start of a frame This is suitable for offscreen images that pixels are changed often Regular non volatile images need to record drawing history or read its pixels from GPU if necessary so that all the images can be restored automatically from the context lost However such recording the drawing history or reading pixels from GPU are expensive operations Volatile images can skip such oprations but the image content is cleared every frame instead When the image is disposed make Volatile does nothing 
New Image From Image creates a new image with the given image source If source s width or height is less than or more than device dependent maximum size New Image From Image panics filter argument is just for backward compatibility If you are not sure specify Filter Default Error returned by New Image From Image is always nil as of alpha 
get Cached Monitor returns a monitor for the given window x y returns false if monitor is not found get Cached Monitor must be called on the main thread 
is Fullscreen must be called from the main thread 
get Size must be called from the main thread 
get Scale must be called from the main thread 
actual Screen Scale must be called from the main thread 
set Screen Size must be called from the main thread 
force Set Screen Size must be called from the main thread 
current Monitor returns the monitor most suitable with the current window current Monitor must be called on the main thread 
Copy Image copies img to a new RGBA image Basically Copy Image just calls draw Draw If img is a paletted image an optimized copying method is used Copy Image is used only internally but it is exposed for testing 
append Vertices appends vertices to the queue 
Enqueue Draw Triangles Command enqueues a drawing image command 
Enqueue enqueues a drawing command other than a draw image command For a draw image command use Enqueue Draw Triangles Command 
Flush flushes the command queue 
Exec executes the draw Triangles Command 
Can Merge returns a boolean value indicating whether the other draw Triangles Command can be merged with the draw Triangles Command c 
Exec executes the replace Pixels Command 
Exec executes a pixels Command 
Exec executes the dispose Command 
Exec executes a new Image Command 
Exec executes a new Screen Framebuffer Image Command 
Opaque Network From Network ID looks for an opaque network via its opaque network ID As NSX support in the Terraform provider is not as of the time of this writing October this function may require some extra love in order to be functional This is in place to support using NSX with the vsphere virtual machine resource as there is no direct path from an opaque network backing to the managed object reference that represents the opaque network in v Center 
schema Host Network Policy returns schema items for resources that need to work with a Host Network Policy such as virtual switches and port groups 
expand Host Nic Failure Criteria reads certain Resource Data keys and returns a Host Nic Failure Criteria 
flatten Host Nic Failure Criteria reads various fields from a Host Nic Failure Criteria into the passed in Resource Data 
expand Host Nic Order Policy reads certain Resource Data keys and returns a Host Nic Order Policy 
flatten Host Nic Order Policy reads various fields from a Host Nic Order Policy into the passed in Resource Data 
expand Host Nic Teaming Policy reads certain Resource Data keys and returns a Host Nic Teaming Policy 
flatten Host Nic Teaming Policy reads various fields from a Host Nic Teaming Policy into the passed in Resource Data 
expand Host Network Security Policy reads certain Resource Data keys and returns a Host Network Security Policy 
flatten Host Network Security Policy reads various fields from a Host Network Security Policy into the passed in Resource Data 
expand Host Network Traffic Shaping Policy reads certain Resource Data keys and returns a Host Network Traffic Shaping Policy 
flatten Host Network Traffic Shaping Policy reads various fields from a Host Network Traffic Shaping Policy into the passed in Resource Data 
expand Host Network Policy reads certain Resource Data keys and returns a Host Network Policy 
flatten Host Network Policy reads various fields from a Host Network Policy into the passed in Resource Data 
schema Host Nas Volume Spec returns schema items for resources that need to work with a Host Nas Volume Spec 
expand Host Nas Volume Spec reads certain Resource Data keys and returns a Host Nas Volume Spec 
flatten Host Nas Volume reads various fields from a Host Nas Volume into the passed in Resource Data Note the name attribute is not set here bur rather set in flatten Datastore Summary and sourced from there 
is Nas Volume returns true if the Host File System Volume File System Type matches one of the possible filesystem types that a NAS datastore supports 
schema DVPortgroup Config Spec returns schema items for resources that need to work with a DVPortgroup Config Spec 
expand VMware DVSPortgroup Policy reads certain Resource Data keys and returns a VMware DVSPortgroup Policy 
flatten VMware DVSPortgroup Policy reads various fields from a VMware DVSPortgroup Policy into the passed in Resource Data 
expand DVPortgroup Config Spec reads certain Resource Data keys and returns a DVPortgroup Config Spec 
flatten DVPortgroup Config Info reads various fields from a DVPortgroup Config Info into the passed in Resource Data This is the flatten counterpart to expand DVPortgroup Config Spec 
expand Cluster Host Group reads certain Resource Data keys and returns a Cluster Host Group 
flatten Cluster Host Group saves a Cluster Host Group into the supplied Resource Data 
resource VSphere Compute Cluster Host Group Flatten ID makes an ID for the vsphere cluster host group resource 
resource VSphere Compute Cluster Host Group Objects handles the fetching of the cluster and group name depending on what attributes are available If the resource ID is available the data is derived from the ID If not it s derived from the compute cluster id and name attributes 
resource VSphere Compute Cluster Host Group Fetch Objects fetches the objects for a cluster host group This is currently just the cluster object as the name of the group is a static value and a pass through this is to keep its workflow consistent with other cluster dependent resources that derive from Array Update Spec that have managed object as keys such as VM and host overrides 
netif Key renders a specific network interface key for a specific resource index 
match Gateway take an IP mask and gateway and checks to see if the gateway is reachable from the IP address 
Virtual Machine Customize Schema returns the schema for VM customization 
expand Customization Global IPSettings reads certain Resource Data keys and returns a Customization Global IPSettings 
expand Customization Linux Prep reads certain Resource Data keys and returns a Customization Linux Prep 
expand Customization Gui Run Once reads certain Resource Data keys and returns a Customization Gui Run Once 
expand Customization Gui Unattended reads certain Resource Data keys and returns a Customization Gui Unattended 
expand Customization Identification reads certain Resource Data keys and returns a Customization Identification 
expand Customization User Data reads certain Resource Data keys and returns a Customization User Data 
expand Customization Sysprep reads certain Resource Data keys and returns a Customization Sysprep 
expand Customization Sysprep Text reads certain Resource Data keys and returns a Customization Sysprep Text 
expand Base Customization Identity Settings returns a Base Customization Identity Settings depending on what is defined Only one of the three types of identity settings can be specified Linux settings from linux options Windows settings from windows options and the raw Windows sysprep file via windows sysprep text 
expand Customization IPSettings IPV Address Spec reads certain Resource Data keys and returns a Customization IPSettings Ip V Address Spec 
expand Customization IPSettings reads certain Resource Data keys and returns a Customization IPSettings 
expand Slice Of Customization Adapter Mapping reads certain Resource Data keys and returns a Customization Adapter Mapping slice 
Expand Customization Spec reads certain Resource Data keys and returns a Customization Spec 
Validate Customization Spec checks the validity of the supplied customization spec It should be called during diff customization to veto invalid configs 
schema Host Virtual Switch Bond Bridge returns schema items for resources that need to work with a Host Virtual Switch Bond Bridge such as virtual switches 
expand Host Virtual Switch Beacon Config reads certain Resource Data keys and returns a Host Virtual Switch Beacon Config 
flatten Host Virtual Switch Beacon Config reads various fields from a Host Virtual Switch Beacon Config into the passed in Resource Data 
expand Link Discovery Protocol Config reads certain Resource Data keys and returns a Link Discovery Protocol Config 
flatten Link Discovery Protocol Config reads various fields from a Link Discovery Protocol Config into the passed in Resource Data 
expand Host Virtual Switch Bond Bridge reads certain Resource Data keys and returns a Host Virtual Switch Bond Bridge 
flatten Host Virtual Switch Bond Bridge reads various fields from a Host Virtual Switch Bond Bridge into the passed in Resource Data 
schema Host Virtual Switch Spec returns schema items for resources that need to work with a Host Virtual Switch Spec such as virtual switches 
expand Host Virtual Switch Spec reads certain Resource Data keys and returns a Host Virtual Switch Spec 
flatten Host Virtual Switch Spec reads various fields from a Host Virtual Switch Spec into the passed in Resource Data 
save Host Virtual Switch ID sets a special ID for a host virtual switch composed of the MOID for the concerned Host System and the virtual switch s key 
split Host Virtual Switch ID splits a vsphere host virtual switch resource ID into its counterparts the prefix the Host System ID and the virtual switch name 
virtual Switch IDs From Resource ID passes a resource s ID through split Host Virtual Switch ID 
expand Storage Drs VMConfig Info reads certain Resource Data keys and returns a Storage Drs Vm Config Info 
flatten Storage Drs Vm Config Info saves a Storage Drs Vm Config Info into the supplied Resource Data 
resource VSphere Storage Drs VMOverride Flatten ID makes an ID for the vsphere storage drs vm override resource 
resource VSphere Storage Drs VMOverride Find Entry attempts to locate an existing VM config in a Storage Pod s DRS configuration It s used by the resource s read functionality and tests nil is returned if the entry cannot be found 
resource VSphere Storage Drs VMOverride Objects handles the fetching of the datastore cluster and virtual machine depending on what attributes are available If the resource ID is available the data is derived from the ID If not it s derived from the datastore cluster id and virtual machine id attributes 
Network Interface Subresource Schema returns the schema for the disk sub resource 
New Network Interface Subresource returns a network interface subresource populated with all of the necessary fields 
Network Interface Refresh Operation processes a refresh operation for all of the disks in the resource This functions similar to Network Interface Apply Operation but nothing to change is returned all necessary values are just set and committed to state 
Network Interface Diff Operation performs operations relevant to managing the diff on network interface sub resources 
Network Interface Post Clone Operation normalizes the network interfaces on a freshly cloned virtual machine and outputs any necessary device change operations It also sets the state in advance of the post create read This differs from a regular apply operation in that a configuration is already present but we don t have any existing state which the standard virtual device operations rely pretty heavily on 
Read Network Interface Types returns a list of network interface types This is used in the VM data source to discover the types of the NIC drivers on the virtual machine The list is sorted by the order that they would be added in if a clone were to be done 
base Virtual Ethernet Card To Base Virtual Device converts a Base Virtual Ethernet Card value into a Base Virtual Device 
base Virtual Device To Base Virtual Ethernet Card converts a Base Virtual Device value into a Base Virtual Ethernet Card 
virtual Ethernet Card String prints a string representation of the ethernet device passed in 
Create creates a vsphere virtual machine network interface sub resource 
Read reads a vsphere virtual machine network interface sub resource 
Update updates a vsphere virtual machine network interface sub resource 
Delete deletes a vsphere virtual machine network interface sub resource 
Validate Diff performs any complex validation of an individual network interface sub resource that can t be done in schema alone 
assign Ethernet Card is a subset of the logic that goes into Assign Controller right now but with an unit offset of This is based on what we have observed on v Sphere in terms of reserved PCI unit numbers the first NIC automatically gets re assigned to unit number if it s not that already 
nic Unit Range calculates a range of units given a certain Virtual Device List which should be network interfaces It s used in network interface refresh logic to determine how many subresources may end up in state 
host Storage System From Host System ID locates a Host Storage System from a specified Host System managed object ID 
From UUID locates a virtual Machine by its UUID 
virtual Machine From Search Index gets the virtual machine reference via the Search Index MO and is the method used to fetch UUIDs on newer versions of v Sphere 
virtual Machine From Container View is a compatability method that is used when the version of v Sphere is too old to support using Search Index s Find By Uuid method correctly This is mainly to facilitate the ability to use From UUID to find both templates in addition to virtual machines which historically was not supported by Find By Uuid 
Properties is a convenience method that wraps fetching the Virtual Machine MO from its higher level object 
Wait For Guest IP waits for a virtual machine to have an IP address The timeout is specified in minutes If zero or a negative value is passed the waiter returns without error immediately 
Wait For Guest Net waits for a virtual machine to have routable network access This is denoted as a gateway and at least one IP address that can reach that gateway This function supports both IPv and IPv and returns the moment either stack is routable it doesn t wait for both The timeout is specified in minutes If zero or a negative value is passed the waiter returns without error immediately 
Create wraps the creation of a virtual machine and the subsequent waiting of the task A higher level virtual machine object is returned 
Clone wraps the creation of a virtual machine and the subsequent waiting of the task A higher level virtual machine object is returned 
Customize wraps the customization of a virtual machine and the subsequent waiting of the task 
Shutdown Guest wraps the graceful shutdown of a guest VM and then waiting an appropriate amount of time for the guest power state to go to powered off If the VM does not power off in the shutdown period specified by timeout in minutes an error is returned The minimum value for timeout is minute setting to a or negative value is not allowed and will just reset the timeout to the minimum 
Graceful Power Off is a meta operation that handles powering down of virtual machines A graceful shutdown is attempted first if possible VMware tools is installed and the guest state is not suspended and then if allowed a power off is forced if that fails 
Move To Folder moves a virtual machine to the specified folder 
Relocate wraps the Relocate task and the subsequent waiting for the task to complete 
MOIDFor UUID returns the managed object reference ID for a specific virtual machine UUID and returns a MOIDFor UUIDResult with the appropriate association 
UUIDFor MOID returns the managed object reference ID for a specific virtual machine MOID and returns a MOIDFor UUIDResult with the appropriate association 
MOIDs For UUIDs returns a MOIDFor UUIDResults for a list of UUIDs If one UUID cannot be found an error is returned There are no partial results returned 
UUIDs For MOIDs returns a MOIDFor UUIDResults for a list of MOIDs If one MOID cannot be found an error is returned There are no partial results returned 
UUIDs For Managed Object References returns a MOIDFor UUIDResults for a list of Managed Object References If one cannot be found an error is returned There are no partial results returned 
MOIDs returns all MOIDs in a MOIDFor UUIDResults 
Managed Object References returns all MOIDs in a MOIDFor UUIDResults as Managed Object References as type Virtual Machine 
UUIDs returns all UUIDs in a MOIDFor UUIDResults 
From Key gets a portgroup object from its key 
From MOID locates a portgroup by its managed object reference ID 
From Path gets a portgroup object from its path 
Properties is a convenience method that wraps fetching the portgroup MO from its higher level object 
Create exposes the Create DVPortgroup Task method of the Distributed Virtual Switch MO This local implementation may go away if this is exposed in the higher level object upstream 
Properties is a convenience method that wraps fetching the Datastore MO from its higher level object 
Move To Folder is a complex method that moves a datastore to a given relative datastore folder path Relative here means relative to a datacenter which is discovered from the current datastore path 
Move To Folder Relative Host System ID is a complex method that moves a datastore to a given datastore path similar to Move To Folder except the path is relative to a Host System supplied by ID instead of the datastore 
Browser returns the Host Datastore Browser for a certain datastore This is a convenience method that exists to abstract the context 
Search Datastore searches a datastore using the supplied Host Datastore Browser and a supplied path The current implementation only returns the basic information so all File Query Flags set but not any flags for specific types of files 
File Exists takes a path in the datastore and checks to see if it exists The path should be a bare path not a datastore path Globs are not allowed 
From Path returns a Virtual App via its supplied path 
From ID locates a Virtual App by its managed object reference ID 
Is VApp checks if a given managed object ID is a v App This is useful deciding if a given resource pool is a v App or a standard resource pool 
Create creates a Virtual App 
Update updates a Virtual App 
Resource IDString prints a friendly string for a resource supplied by name 
Slice Interfaces To Strings converts an interface slice to a string slice The function does not attempt to do any sanity checking and will panic if one of the items in the slice is not a string 
Slice Strings To Interfaces converts a string slice to an interface slice 
Slice Interfaces To Managed Object References converts an interface slice into a slice of Managed Object References with the type of t 
Merge Schema merges the map string schema Schema from src into dst Safety against conflicts is enforced by panicing 
Get String Ptr reads a Resource Data and returns an appropriate string for the state of the definition nil is returned if it does not exist 
Get String reads a Resource Data and returns a string This differs from Get String Ptr in that a nil value is never returned 
Set String Ptr sets a Resource Data field depending on if a string exists or not The field is not set if it s nil 
Get Bool Ptr reads a Resource Data and returns an appropriate bool for the state of the definition nil is returned if it does not exist 
Get Bool reads a Resource Data and returns a bool This differs from Get Bool Ptr in that a nil value is never returned 
Set Bool Ptr sets a Resource Data field depending on if a bool exists or not The field is not set if it s nil 
Get Bool String Ptr reads a Resource Data string field This field is handled in the following way If it s empty nil is returned The string is then sent through Parse Bool This will return a valid value for anything Parse Bool returns a value for If it s anything else an error is returned This is designed to address the current lack of HCL and Terraform to be able to distinguish between nil states and zero values properly This is a systemic issue that affects reading writing and diffing of these values These issues will eventually be addressed in HCL 
Set Bool String Ptr sets a stringified Resoruce Data bool field This is a field that is supposed to behave like a bool true false but needs to be a string to represent a nil state as well This is designed to address the current lack of HCL and Terraform to be able to distinguish between nil states and zero values properly This is a systemic issue that affects reading writing and diffing of these values These issues will eventually be addressed in HCL 
Bool String Ptr State is a state normalization function for stringified state bool pointers The function silently drops any result that can t be parsed with Parse Bool and will return an empty string for these cases This is designed to address the current lack of HCL and Terraform to be able to distinguish between nil states and zero values properly This is a systemic issue that affects reading writing and diffing of these values These issues will eventually be addressed in HCL 
Validate Bool String Ptr validates that the input value can be parsed by Parse Bool It also succeeds on empty strings This is designed to address the current lack of HCL and Terraform to be able to distinguish between nil states and zero values properly This is a systemic issue that affects reading writing and diffing of these values These issues will eventually be addressed in HCL 
Get Int Ptr reads a Resource Data and returns an appropriate int for the state of the definition nil is returned if it does not exist 
Get Int Ptr Empty Zero reads a Resource Data and returns an appropriate int for the state of the definition is returned if it does not exist 
Set Int Ptr sets a Resource Data field depending on if an int exists or not The field is not set if it s nil 
Gi BTo Byte returns n The output is returned as int if another type is needed it needs to be cast Remember that int overflows at around Gi B and uint will overflow at Gi B 
GBTo Byte returns n The output is returned as int if another type is needed it needs to be cast Remember that int overflows at GB and uint will overflow at GB 
Bool Policy converts a bool into a VMware Bool Policy value 
Get Bool Policy reads a Resource Data and returns an appropriate Bool Policy for the state of the definition nil is returned if it does not exist 
Set Bool Policy sets a Resource Data field depending on if a Bool Policy exists or not The field is not set if it s nil 
String Policy converts a string into a VMware String Policy value 
Get String Policy reads a Resource Data and returns an appropriate String Policy for the state of the definition nil is returned if it does not exist 
Set String Policy sets a Resource Data field depending on if a String Policy exists or not The field is not set if it s nil 
Long Policy converts a supported number into a VMware Long Policy value This will panic if there is no implicit conversion of the value into an int 
Get Long Policy reads a Resource Data and returns an appropriate Long Policy for the state of the definition nil is returned if it does not exist 
Set Long Policy sets a Resource Data field depending on if a Long Policy exists or not The field is not set if it s nil 
All Fields Empty checks to see if all fields in a given struct are zero values It does not recurse so finer grained checking should be done for deep accuracy when necessary It also does not dereference pointers except if the value itself is a pointer and is not nil 
De Ref returns the value pointed to by the interface if the interface is a pointer and is not nil otherwise returns nil or the direct value if it s not a pointer 
Normalize Value converts a value to something that is suitable to be set in a Resource Data and can be useful in situations where there is not access to normal helper schema functionality but you still need saved fields to behave in the same way Specifically this will run the value through De Ref to dereference any pointers first and then convert numeric primitives if necessary 
Set Batch takes a map of values and sets the appropriate top level attributes for each item attrs is a map string interface that follows a pattern in the example below err Set Batch d map string interface foo obj Foo bar obj Bar if err nil return err For best results supplied values should be or have concrete values that map to the correct values for the respective type in helper schema This is enforced by way of checking each Set call for errors If there is an error setting a particular key processing stops immediately 
Less helps implement sort Interface for Mo Ref Sorter 
Swap helps implement sort Interface for Mo Ref Sorter 
host Datastore System From Host System ID locates a Host Datastore System from a specified Host System managed object ID 
available Scsi Disk checks to make sure that a disk is available for use in a VMFS datastore and returns the Scsi Disk 
disk Spec For Create checks to make sure that a disk is available to be used to create a VMFS datastore specifically in its entirety and returns a respective Vmfs Datastore Create Spec 
disk Spec For Extend checks to make sure that a disk is available to be used to extend a VMFS datastore specifically in its entirety and returns a respective Vmfs Datastore Extend Spec if it is An error is returned if it s not 
remove Datastore is a convenience method for removing a referenced datastore 
query Vmfs Datastore Extend Options is a stop gap method that implements Query Vmfs Datastore Extend Options It will be removed once the higher level Host Datastore System object supports this method 
extend Vmfs Datastore is a stop gap method that implements Extend Vmfs Datastore It will be removed once the higher level Host Datastore System object supports this method 
resource VSphere Compute Cluster Import Set Defaults sets configuration defaults for resource attributes that are not managed by read This gives completeness for import in addition to reducing the number of post import diffs that may need to happen 
resource VSphere Compute Cluster Apply Create processes the creation part of resource VSphere Compute Cluster Create 
resource VSphere Compute Cluster Process Host Update processes any changes in host membership in the cluster Note that this has implications for interoperability with any future host resources that we may set up in Terraform This namely exists to support the fact that some cluster configuration settings depend on hosts actually existing in the cluster before they can be carried out in addition to the fact that we don t have any actual host resources at this point in time and may actually not in the future as the addition of hosts will require passwords to be supplied to Terraform which will propagate to state and have security implications Currently this process expects the hosts supplied to host system ids to be already added to v Sphere the recommended method would be to add these hosts OOB as standalone hosts to the datacenter that the cluster is being deployed to and then use the vsphere host data source to get the necessary ID to pass into the vsphere compute cluster resource Hosts moved out of the cluster will be moved to the root host folder of the datacenter the cluster belongs to This will create a Compute Resource MO for this host OOB from Terraform Conversely moving a host into a cluster removes the Compute Resource MO for that host in addition to moving any VMs into the cluster at the root cluster resource pool removing any resource pools that exist on the standalone host Hosts being removed are placed into maintenance mode It is up to the operator to determine what the implications of this are if DRS is set up correctly and sufficient resources exist placing a host into maintenance mode should migrate powered on VMs off the cluster Powered off VMs will be migrated as well leaving the host as empty as possible after it leaves the cluster The host will be taken out of maintenance mode after being removed 
resource VSphere Compute Cluster Apply Tags processes the tags step for both create and update for vsphere compute cluster 
resource VSphere Compute Cluster Read Tags reads the tags for vsphere compute cluster 
resource VSphere Compute Cluster Apply Custom Attributes processes the custom attributes step for both create and update for vsphere compute cluster 
resource VSphere Compute Cluster Read Custom Attributes reads the custom attributes for vsphere compute cluster 
resource VSphere Compute Cluster Get Cluster gets the Compute Cluster Resource from the ID in the supplied Resource Data 
resource VSphere Compute Cluster Get Cluster From Path gets the Compute Cluster Resource from a supplied path If no datacenter is supplied the path must be a full path 
resource VSphere Compute Cluster Save Datacenter saves the datacenter that the cluster is a member of for correctness on imports 
resource VSphere Compute Cluster Save Name And Path saves the name and path of a Storage Pod into the supplied Resource Data 
resource VSphere Compute Cluster Apply Name Change applies any changes to a Cluster Compute Resource s name 
resource VSphere Compute Cluster Apply Folder Change applies any changes to a Cluster Compute Resource s folder location 
resource VSphere Compute Cluster Validate Empty Cluster validates that the cluster is empty This is used to ensure a safe deletion of the cluster we do not allow deletion of clusters that still virtual machines or hosts in them 
resource VSphere Compute Cluster Delete Process Force Remove Hosts process force evacuation if the resource has been configured to do so NOTE As documented this should only be used in testing Improper use of this option can lead to service disruptions and or may fail to actually succeed depending on the resources actually in use in the cluster and specific constraints that exist in the cluster 
resource VSphere Compute Cluster Apply Delete process the removal of a cluster 
resource VSphere Compute Cluster Flatten Data saves the configuration attributes from a Cluster Compute Resource into the supplied Resource Data It also saves the root resource pool for the cluster in resource pool id Note that other functions handle other non configuration related items such as path name tags and custom attributes 
expand Cluster Config Spec Ex reads certain Resource Data keys and returns a Cluster Config Spec Ex 
flatten Cluster Config Spec Ex saves a Cluster Config Spec Ex into the supplied Resource Data 
expand Cluster Das Config Info reads certain Resource Data keys and returns a Cluster Das Config Info 
flatten Cluster Das Config Info saves a Cluster Das Config Info into the supplied Resource Data 
expand Base Cluster Das Admission Control Policy reads certain Resource Data keys and returns a Base Cluster Das Admission Control Policy 
flatten Base Cluster Das Admission Control Policy saves a Base Cluster Das Admission Control Policy into the supplied Resource Data 
expand Cluster Failover Resources Admission Control Policy reads certain Resource Data keys and returns a Cluster Failover Resources Admission Control Policy 
flatten Cluster Failover Resources Admission Control Policy saves a Cluster Failover Resources Admission Control Policy into the supplied Resource Data 
expand Cluster Failover Level Admission Control Policy reads certain Resource Data keys and returns a Cluster Failover Level Admission Control Policy 
flatten Cluster Failover Level Admission Control Policy saves a Cluster Failover Level Admission Control Policy into the supplied Resource Data 
expand Cluster Failover Host Admission Control Policy reads certain Resource Data keys and returns a Cluster Failover Host Admission Control Policy 
flatten Cluster Failover Host Admission Control Policy saves a Cluster Failover Host Admission Control Policy into the supplied Resource Data 
expand Cluster Das VMSettings reads certain Resource Data keys and returns a Cluster Das Vm Settings 
flatten Cluster Das VMSettings saves a Cluster Das Vm Settings into the supplied Resource Data 
expand Cluster VMComponent Protection Settings reads certain Resource Data keys and returns a Cluster Vm Component Protection Settings 
flatten Cluster Vm Component Protection Settings saves a Cluster Vm Component Protection Settings into the supplied Resource Data 
expand Cluster VMTools Monitoring Settings reads certain Resource Data keys and returns a Cluster Vm Tools Monitoring Settings 
flatten Cluster Vm Tools Monitoring Settings saves a Cluster Vm Tools Monitoring Settings into the supplied Resource Data 
expand Cluster Dpm Config Info reads certain Resource Data keys and returns a Cluster Dpm Config Info 
flatten Cluster Dpm Config Info saves a Cluster Dpm Config Info into the supplied Resource Data 
expand Cluster Drs Config Info reads certain Resource Data keys and returns a Cluster Drs Config Info 
flatten Cluster Drs Config Info saves a Cluster Drs Config Info into the supplied Resource Data 
expand Resource VSphere Compute Cluster Drs Advanced Options reads certain Resource Data keys and returns a Base Option Value list designed for use as DRS advanced options 
expand Cluster Infra Update Ha Config Info reads certain Resource Data keys and returns a Cluster Infra Update Ha Config Info 
flatten Cluster Infra Update Ha Config Info saves a Cluster Infra Update Ha Config Info into the supplied Resource Data 
expand Cluster Orchestration Info reads certain Resource Data keys and returns a Cluster Orchestration Info 
flatten Cluster Orchestration Info saves a Cluster Orchestration Info into the supplied Resource Data 
expand Cluster Proactive Drs Config Info reads certain Resource Data keys and returns a Cluster Proactive Drs Config Info 
flatten Cluster Proactive Drs Config Info saves a Cluster Proactive Drs Config Info into the supplied Resource Data 
resource VSphere Compute Cluster Has Cluster Config Change checks all resource keys associated with cluster configuration and not for example member hosts folder tags etc to see if there has been a change in the configuration of those keys This helper is designed to detect no ops in a cluster configuration to see if we really need to send a configure API call to v Sphere 
Properties is a convenience method that wraps fetching the Storage Pod MO from its higher level object 
Create creates a Storage Pod from a supplied folder The resulting Storage Pod is returned 
Apply DRSConfiguration takes a types Storage Drs Config Spec and applies it against the specified Storage Pod 
Rename renames a Storage Pod 
Move To Folder is a complex method that moves a Storage Pod to a given relative datastore folder path Relative here means relative to a datacenter which is discovered from the current Storage Pod path 
Has Children checks to see if a datastore cluster has any child items datastores and returns true if that is the case This is useful when checking to see if a datastore cluster is safe to delete destroying a datastore cluster in v Sphere destroys all children if at all possible including removing datastores so extra verification is necessary to prevent accidental removal 
Storage DRSEnabled checks a Storage Pod to see if Storage DRS is enabled 
Create VM creates a virtual machine on a datastore cluster via the Storage Resource Manager API It mimics our helper in the virtualmachine package in functionality returning a VM helper object on success 
Clone VM clones a virtual machine to a datastore cluster via the Storage Resource Manager API It mimics our helper in the virtualmachine package in functionality returning a VM helper object on success 
Reconfigure VM reconfigures a virtual machine via the Storage Resource Manager API applying any disk modifications that will require going through Storage DRS It mimics our helper in the virtualmachine package in functionality Note that this function will fail if there are no new disks in the spec check this first before using this function If no disk create operations are necessary use the regular Reconfigure function in the virtualmachine helper package 
Relocate VM migrates a virtual machine to a datastore cluster via the Storage Resource Manager API It mimics our helper in the virtualmachine package in functionality 
Has Disk Creation Operations is an exported function that checks a list of device changes to see if there are any disk creation operations This should be used to check if Reconfigure VM should be done through the Storage DRS API as a Reconfig operation done through SDRS without new disk operations will fail 
Is Member checks to see if a datastore is a member of the datastore cluster in question This is a pretty basic operation that checks that the parent of the datastore is the Storage Pod 
Tags Client returns the embedded REST client used for tags after determining if the connection is eligible The connection information in vim Client is valid v Center connection The provider has a connection to the CIS REST client This is true if tags Client nil This function should be used whenever possible to return the client from the provider meta variable for use to determine if it can be used at all The nil value that is returned on an unsupported connection can be considered stable behavior for read purposes on resources that need to be able to read tags if they are present You can use the snippet below in a Read call to determine if tags are supported on this connection and if they are read them from the object and save them in the resource if tags Client meta VSphere Client Tags Client tags Client nil if err read Tags For Resource tags Client obj d err nil return err 
New Config returns a new Config from a supplied Resource Data 
vim URL returns a URL to pass to the VIM SOAP client 
Client returns a new client for accessing VMWare v Sphere 
Enable Debug turns on govmomi API operation logging if appropriate settings are set on the provider 
session File is a helper that generates a unique hash of the client s URL to use as the session file name This is the same logic used as part of govmomi and is designed to be consistent so that sessions can be shared if possible between both tools 
vim Session File is takes the session file name generated by session File and then prefixes the SOAP client session path to it 
rest Session File is takes the session file name generated by session File and then prefixes the REST client session path to it 
Save Vim Client saves a client to the supplied path This facilitates re use of the session at a later date Note the logic in this function has been largely adapted from govc and is designed to be compatible with it 
Save Rest Client saves the REST client session ID to the supplied path This facilitates re use of the session at a later date 
restore Vim Client loads the saved session from disk Note that this is a helper function to Load Vim Client and should not be called directly 
read Rest Session ID reads a saved REST session ID and returns it An empty string is returned if session does not exist 
Load Vim Client loads a saved v Sphere SOAP API session from disk previously saved by Save Vim Client checking it for validity before returning it A nil client means that the session is no longer valid and should be created from scratch Note the logic in this function has been largely adapted from govc and is designed to be compatible with it if a session has already been saved with govc Terraform will attempt to use that session first 
Load Rest Client loads a saved v Sphere REST API session from disk previously saved by Save Rest Client checking it for validity before returning it If it s not valid false is returned as the third return value but the client can still be technically used for logging in by calling Login on the client 
Saved Vim Session Or New either loads a saved SOAP session from disk or creates a new one 
Saved Rest Session Or New either loads a saved REST session from disk or creates a new one 
new Virtual Machine Customization Waiter returns a new virtual Machine Customization Waiter to use to wait for customization on This should be called before the start of the customization task to be certain that completion events are not missed The timeout value is in minutes a value of less than disables the waiter and returns immediately without error 
wait waits for the customization of a supplied Virtual Machine to complete either due to success or error It does this by watching specifically for Customization Succeeded and Customization Failed events If the customization failed due to some sort of error the full formatted message is returned as an error 
select Events For Reference allows you to query events for a specific Managed Object Reference Event types can be supplied to this function via the event Types parameter This is highly recommended when you expect the list of events to be large as there is no limit on returned events 
get Datastore gets datastore object 
resource VSphere Virtual Machine Update Reconfigure With SDRS runs the reconfigure part of resource VSphere Virtual Machine Update through storage DRS It s designed to be run when a storage cluster is specified versus simply specifying datastores 
resource VSphere Virtual Machine Create Bare contains the bare metal VM deploy path The VM is returned 
resource VSphere Virtual Machine Create Bare With SDRS runs the creation part of resource VSphere Virtual Machine Create Bare through storage DRS It s designed to be run when a storage cluster is specified versus simply specifying datastores 
resource VSphere Virtual Machine Create Bare Standard performs the steps necessary during resource VSphere Virtual Machine Create Bare to create a virtual machine when a datastore cluster is not supplied 
resource VSphere Virtual Machine Create Clone contains the clone VM deploy path The VM is returned 
resource VSphere Virtual Machine Create Clone With SDRS runs the clone part of resource VSphere Virtual Machine Create Clone through storage DRS It s designed to be run when a storage cluster is specified versus simply specifying datastores 
resource VSphere Virtual Machine Rollback Create attempts to roll back a resource due to an error that happened post create that will put the VM in a state where it cannot be worked with This should only be done early on in the process namely on clone operations between when the clone actually happens and no later than after the initial post clone update is complete If the rollback fails an error is displayed prompting the user to manually delete the virtual machine before trying again 
resource VSphere Virtual Machine Update Location manages v Motion This includes the migration of a VM from one host to another or from one datastore to another storage v Motion This function is responsible for building the top level relocate spec For disks we call out to relocate functionality in the disk sub resource 
resource VSphere Virtual Machine Update Location Relocate With SDRS runs the storage v Motion part of resource VSphere Virtual Machine Update Location through storage DRS It s designed to be run when a storage cluster is specified versus simply specifying datastores 
apply Virtual Devices is used by Create and Update to build a list of virtual device changes 
expand Cluster Drs VMConfig Info reads certain Resource Data keys and returns a Cluster Dpm Host Config Info 
flatten Cluster Dpm Host Config Info saves a Cluster Dpm Host Config Info into the supplied Resource Data 
resource VSphere DPMHost Override Flatten ID makes an ID for the vsphere dpm host override resource 
resource VSphere DPMHost Override Find Entry attempts to locate an existing DRS VM config in a cluster s configuration It s used by the resource s read functionality and tests nil is returned if the entry cannot be found 
resource VSphere DPMHost Override Objects handles the fetching of the cluster and host depending on what attributes are available If the resource ID is available the data is derived from the ID If not it s derived from the compute cluster id and host system id attributes 
Define Virtual Disk args 
create Hard Disk creates a new Hard Disk 
Searches for the presence of a directory path 
diff Old New returns any elements of old that were missing in new 
diff New Old returns any elements of new that were missing in old 
process Mount Operations processes all pending mount operations by diffing old and new and adding any hosts that were not found in old The datastore is returned along with any error 
process Unmount Operations processes all pending unmount operations by diffing old and new and removing any hosts that were not found in new This operation only proceeds if the datastore field in the processor is populated 
validate Datastore does one of two things either stores the current datastore in the processor if it s missing or validates the supplied datastore with the one currently in the processor by checking if their IDs match 
is Eligible Tag Endpoint is a meta validation that is used on login to see if the connected endpoint supports the CIS REST API which we use for tags 
tag Category By Name locates a tag category by name It s used by the vsphere tag category data source and the resource importer 
tag By Name locates a tag by it supplied name and category ID Use tag Category By Name to get the tag category ID if require the category ID as well 
tags Schema returns the schema for the tags configuration attribute for each resource that needs it The key is usually tags and should be a list of tag IDs to associate with this resource 
tag Type For Object takes an object Reference and returns the tag type based on its underlying type If it s not in this list we don t support it for tagging and we return an error 
read Tags For Resource reads the tags for a given reference and saves the list in the supplied Resource Data It returns an error if there was an issue reading the tags 
diff Old New returns any elements of old that were missing in new 
diff New Old returns any elements of new that were missing in old 
diff is what diff Old New and diff New Old hand off to 
process Attach Operations processes all pending attach operations by diffing old and new and adding any IDs that were not found in old 
tags Client If Defined goes through the client validation process and returns the tags client only if there are tags defined in the supplied Resource Data This should be used to fetch the tagging REST client on resources that support tags usually closer to the beginning of a CRUD function to check to make sure it s worth proceeding with most of the operation The returned client should be checked for nil before passing it to process Tag Diff 
process Tag Diff wraps the whole tag diffing operation into a nice clean function that resources can use 
schema VMware DVSConfig Spec returns schema items for resources that need to work with a VMware DVSConfig Spec 
expand DVSContact Info reads certain Resource Data keys and returns a DVSContact Info 
flatten DVSContact Info reads various fields from a DVSContact Info into the passed in Resource Data 
expand Distributed Virtual Switch Host Member Config Spec reads certain keys from a Set object map and returns a Distributed Virtual Switch Host Member Config Spec 
flatten Distributed Virtual Switch Host Member Config Spec reads various fields from a Distributed Virtual Switch Host Member Config Spec and returns a Set object map This is the flatten counterpart to expand Distributed Virtual Switch Host Member Config Spec 
expand Slice Of Distributed Virtual Switch Host Member Config Spec expands all host entires for a VMware DVS detecting if a host spec needs to be added removed or updated as well The whole slice is returned 
flatten Slice Of Distributed Virtual Switch Host Member creates a set of all host entries for a supplied slice of Distributed Virtual Switch Host Member This is the flatten counterpart to expand Slice Of Distributed Virtual Switch Host Member Config Spec 
expand VMware Ipfix Config reads certain Resource Data keys and returns a VMware Ipfix Config 
flatten VMware Ipfix Config reads various fields from a VMware Ipfix Config into the passed in Resource Data 
schema Dvs Host Infrastructure Traffic Resource returns the respective schema keys for the various kinds of network I O control traffic classes The schema items are generated dynamically off of the list of available traffic classes for the currently supported v Sphere API Not all traffic classes may be supported across all DVS and network I O control versions 
expand Dvs Host Infrastructure Traffic Resource reads the network I O control resource data keys for the traffic class supplied by key and returns an appropriate types Dvs Host Infrastructure Traffic Resource reference This should be checked for nil to see if it should be added to the slice in the config 
flatten Dvs Host Infrastructure Traffic Resource reads various fields from a Dvs Host Infrastructure Traffic Resource and sets appropriate keys in the supplied Resource Data 
expand Slice Of Dvs Host Infrastructure Traffic Resource expands all network I O control resource entries that are currently supported in API and returns a slice of Dvs Host Infrastructure Traffic Resource 
flatten Slice Of Dvs Host Infrastructure Traffic Resource reads in the supplied network I O control allocation entries supplied via a respective DVSConfig Info field and sets the appropriate keys in the supplied Resource Data 
expand DVSName Array Uplink Port Policy reads certain Resource Data keys and returns a DVSName Array Uplink Port Policy 
flatten DVSName Array Uplink Port Policy reads various fields from a DVSName Array Uplink Port Policy into the passed in Resource Data 
expand VMware DVSConfig Spec reads certain Resource Data keys and returns a VMware DVSConfig Spec 
flatten VMware DVSConfig Info reads various fields from a VMware DVSConfig Info into the passed in Resource Data This is the flatten counterpart to expand VMware DVSConfig Spec as the configuration info from a DVS comes back as this type instead of a specific Config Spec 
schema DVSCreate Spec returns schema items for resources that need to work with a DVSCreate Spec 
expand DVSCreate Spec reads certain Resource Data keys and returns a DVSCreate Spec 
get With Restart fetches the resoruce data specified at key If the value has changed a reboot is flagged in the virtual machine by setting reboot required to true 
get Bool With Restart fetches a bool for the resource data item specified at key If the value has changed a reboot is flagged in the virtual machine by setting reboot required to true This function always returns at least false even if a value is unspecified 
schema Virtual Machine Config Spec returns schema items for resources that need to work with a Virtual Machine Config Spec 
v App Subresource Schema represents the schema for the v App sub resource This sub resource allows the customization of v App properties on cloned VMs 
expand Virtual Machine Boot Options reads certain Resource Data keys and returns a Virtual Machine Boot Options 
flatten Virtual Machine Boot Options reads various fields from a Virtual Machine Boot Options into the passed in Resource Data 
expand Virtual Machine Flag Info reads certain Resource Data keys and returns a Virtual Machine Flag Info 
flatten Virtual Machine Flag Info reads various fields from a Virtual Machine Flag Info into the passed in Resource Data 
expand Tools Config Info reads certain Resource Data keys and returns a Tools Config Info 
flatten Tools Config Info reads various fields from a Tools Config Info into the passed in Resource Data 
schema Virtual Machine Resource Allocation returns the respective schema keys for the various kinds of resource allocation settings available to a virtual machine This is an abridged version of Resource Allocation Info with only the keys present that make sense for virtual machines 
expand Virtual Machine Resource Allocation reads the VM resource allocation resource data keys for the type supplied by key and returns an appropriate types Resource Allocation Info reference 
expand Latency Sensitivity reads certain Resource Data keys and returns a Latency Sensitivity 
flatten Latency Sensitivity reads various fields from a Latency Sensitivity and sets appropriate keys in the supplied Resource Data 
flatten Virtual Machine Resource Allocation reads various fields from a Resource Allocation Info and sets appropriate keys in the supplied Resource Data 
expand Extra Config reads in all the extra config key value pairs and returns the appropriate Option Value slice We track changes to keys to determine if any have been removed from configuration if they have we add them with a nil value to ensure they are removed from extra Config on the update 
flatten Extra Config reads in the extra Config from a running virtual machine and only sets the keys in extra config that we know about This is to prevent Terraform from interfering with values that are maintained out of band by v Sphere which could lead to spurious diffs and unstable operation Note the side effect here is that Terraform cannot track manual drift that is not a part of normal v Sphere operation Removing keys that have been in configuration through at least one successful apply though are safe as removing them will add a nil value for that key in the next chnageset properly effecting its removal 
expand VApp Config reads in all the vapp key value pairs and returns the appropriate Vm Config Spec We track changes to keys to determine if any have been removed from configuration if they have we add them with an empty value to ensure they are removed from v App Config on the update 
flatten VApp Config reads in the v App Config from a running virtual machine and sets all keys in vapp 
expand CPUCount Config is a helper for expand Virtual Machine Config Spec that determines if we need to restart the VM due to a change in CPU count This is determined by the net change in CPU count and the pre update values of cpu hot add enabled and cpu hot remove enabled The pre update value is important here as while CPU hot add remove is supported while the values are enabled on the virtual machine modification of hot add remove themselves is an operation that requires a power down of the VM 
expand Memory Size Config is a helper for expand Virtual Machine Config Spec that determines if we need to restart the system to increase the amount of available memory on the system This is determined by the current or in other words the old pre update setting of memory hot add enabled 
expand Virtual Machine Config Spec reads certain Resource Data keys and returns a Virtual Machine Config Spec 
flatten Virtual Machine Config Info reads various fields from a Virtual Machine Config Info into the passed in Resource Data This is the flatten counterpart to expand Virtual Machine Config Spec 
expand Virtual Machine Config Spec Changed compares an existing Virtual Machine Config Info with a Virtual Machine Config Spec generated from existing resource data and compares them to see if there is a change The new spec It does this be creating a fake Resource Data off of the VM resource schema flattening the config info into that and then expanding both Resource Data instances and comparing the resultant Config Specs 
get Memory Reservation Locked To Max determines if the memory reservation is not set to be equal to memory If they are not equal then the memory reservation needs to be unlocked from the maximum Rather than supporting the locking reservation to max option we can set memory reservation to memory in the configuration Not supporting the option causes problems when cloning from a template that has it enabled The solution is to set it to false when needed but leave it alone when the change is not necessary 
From Path Or Default returns a Resource Pool via its supplied path 
Properties returns the Resource Pool managed object from its higher level object 
Validate Host checks to see if a Host System is a member of a Resource Pool through cluster membership or if the Host System ID matches the ID of a standalone host Compute Resource An error is returned if it is not a member of the cluster to which the resource pool belongs or if there was some sort of other error with checking This is used as an extra validation before a VM creation happens or v Motion to a specific host is attempted 
Default Devices loads a default Virtual Device List for a supplied pool and guest ID guest OS type 
OSFamily uses the resource pool s environment browser to get the OS family for a specific guest ID 
Create creates a Resource Pool 
Update updates a Resource Pool 
Move Into Resource Pool moves a virtual machine resource pool or v App into the specified Resource Pool 
Has Children checks to see if a resource pool has any child items virtual machines v Apps or resource pools and returns true if that is the case This is useful when checking to see if a resource pool is safe to delete Destroying a resource pool in v Sphere destroys all children if at all possible so extra verification is necessary to prevent accidental removal 
expand Cluster Das VMConfig Info reads certain Resource Data keys and returns a Cluster Das Vm Config Info 
flatten Cluster Das Vm Config Info saves a Cluster Das Vm Config Info into the supplied Resource Data 
resource VSphere HAVMOverride Flatten ID makes an ID for the vsphere ha vm override resource 
resource VSphere HAVMOverride Find Entry attempts to locate an existing VM specific HA config in a cluster s configuration It s used by the resource s read functionality and tests nil is returned if the entry cannot be found 
resource VSphere HAVMOverride Objects handles the fetching of the cluster and virtual machine depending on what attributes are available If the resource ID is available the data is derived from the ID If not it s derived from the compute cluster id and virtual machine id attributes 
schema Host Port Group Spec returns schema items for resources that need to work with Host Port Group Spec such as port groups 
expand Host Port Group Spec reads certain Resource Data keys and returns a Host Port Group Spec 
flatten Host Port Group Spec reads various fields from a Host Port Group Spec into the passed in Resource Data 
calculate Computed Policy is a utility function to compute a map of state attributes for the port group s effective policy It uses a bit of a roundabout way to set the attributes but allows us to utilize our functional deep reading helpers to perform this task versus having to re write code This function relies a bit on some of the lower level utility functionality of helper schema so it may need to change in the future 
calculate Ports is a utility function that returns a set of port data 
port Group Port Schema returns a sub schema for a port group s connected ports 
save Host Port Group ID sets a special ID for a host virtual switch composed of the MOID for the concerned Host System and the port group s key 
split Host Port Group ID splits a vsphere host port group resource ID into its counterparts the prefix the Host System ID and the port group name 
port Group IDs From Resource ID passes a resource s ID through split Host Port Group ID 
Base From Path returns a Base Compute Resource for a given path 
Base From Reference returns a Base Compute Resource for a given managed object reference 
Base Properties returns the base level Compute Resource managed object for a Base Compute Resource an interface that any base level Compute Resource and derivative object implements Note that this does not return any cluster level attributes 
Base Properties From Reference combines Base From Reference and Base Properties to get a base level Compute Resource managed object for a specific managed object reference 
Default Devices From Reference fetches the default virtual device list for a specific compute resource from a supplied managed object reference 
OSFamily uses the compute resource s environment browser to get the OS family for a specific guest ID 
Environment Browser From Reference loads an environment browser for the specific compute resource reference The reference can be either a standalone host or cluster As an added safety feature if the compute resource properties come back with an unset environment Browser attribute this function will return an error This is to protect against cases where this may come up such as licensing issues or clusters without hosts 
Reconfigure reconfigures any Base Compute Resource that uses a Base Compute Resource Config Spec as configuration example standalone hosts or clusters Modify is always set 
Has Children checks to see if a compute resource has any child items hosts and virtual machines and returns true if that is the case This is useful when checking to see if a compute cluster is safe to delete destroying a compute resource in v Sphere destroys all children if at all possible including removing hosts and virtual machines so extra verification is necessary to prevent accidental removal 
Properties is a convenience method that wraps fetching the Cluster Compute Resource MO from its higher level object 
Create creates a Cluster Compute Resource in a supplied folder The resulting Cluster Compute Resource is returned 
Move To Folder is a complex method that moves a Cluster Compute Resource to a given relative compute folder path Relative here means relative to a datacenter which is discovered from the current Cluster Compute Resource path 
Reconfigure reconfigures a cluster This just gets dispatched to computeresource as both methods are the same 
Delete destroys a Cluster Compute Resource 
Is Member checks to see if a host is a member of the compute cluster in question This is a pretty basic operation that checks that the parent of the compute is the Cluster Compute Resource 
Move Hosts Into moves all of the supplied hosts into the cluster All virtual machines are moved to the cluster s root resource pool and any resource pools on the host itself are deleted 
Move Hosts Out Of moves a supplied list of hosts out of the specified cluster The host is moved to the root host folder for the datacenter that the cluster is in The host is placed into maintenance mode with evacuate flagged on ensuring that as many VMs as possible are moved out of the host before removing it from the cluster The effectiveness of this operation is dictated by the cluster s DRS settings which also affects if this means that the task will block and require manual intervention The supplied timeout is passed to the maintenance mode operations and represents the timeout in seconds Individual hosts are taken out of maintenance mode after its operation is complete 
schema VMware DVSPort Setting returns schema items for resources that need to work with a VMware DVSPort Setting 
expand Vmware Distributed Virtual Switch Vlan IDSpec reads certain Resource Data keys and returns a Vmware Distributed Virtual Switch Vlan Id Spec 
flatten Vmware Distributed Virtual Switch Vlan IDSpec reads various fields from a Vmware Distributed Virtual Switch Vlan Id Spec into the passed in Resource Data 
expand Vmware Distributed Virtual Switch Trunk Vlan Spec reads certain Resource Data keys and returns a Vmware Distributed Virtual Switch Trunk Vlan Spec 
flatten Vmware Distributed Virtual Switch Trunk Vlan Spec reads various fields from a Vmware Distributed Virtual Switch Trunk Vlan Spec into the passed in Resource Data 
expand Vmware Distributed Virtual Switch Pvlan Spec reads certain Resource Data keys and returns a Vmware Distributed Virtual Switch Pvlan Spec 
flatten Vmware Distributed Virtual Switch Pvlan Spec reads various fields from a Vmware Distributed Virtual Switch Pvlan Spec into the passed in Resource Data 
expand Base Vmware Distributed Virtual Switch Vlan Spec reads certain Resource Data keys and returns a Base Vmware Distributed Virtual Switch Vlan Spec 
flatten Base Vmware Distributed Virtual Switch Vlan Spec reads various fields from a Base Vmware Distributed Virtual Switch Vlan Spec into the passed in Resource Data 
expand DVSFailure Criteria reads certain Resource Data keys and returns a DVSFailure Criteria 
flatten DVSFailure Criteria reads various fields from a DVSFailure Criteria into the passed in Resource Data 
expand VMware Uplink Port Order Policy reads certain Resource Data keys and returns a VMware Uplink Port Order Policy 
flatten VMware Uplink Port Order Policy reads various fields from a VMware Uplink Port Order Policy into the passed in Resource Data 
expand Vmware Uplink Port Teaming Policy reads certain Resource Data keys and returns a Vmware Uplink Port Teaming Policy 
flatten Vmware Uplink Port Teaming Policy reads various fields from a Vmware Uplink Port Teaming Policy into the passed in Resource Data 
expand DVSSecurity Policy reads certain Resource Data keys and returns a DVSSecurity Policy 
flatten DVSSecurity Policy reads various fields from a DVSSecurity Policy into the passed in Resource Data 
expand VMware Uplink Lacp Policy reads certain Resource Data keys and returns a VMware Uplink Lacp Policy 
flatten VMware Uplink Lacp Policy reads various fields from a VMware Uplink Lacp Policy into the passed in Resource Data 
expand DVSTraffic Shaping Policy Ingress reads certain Resource Data keys and returns a DVSTraffic Shaping Policy for ingress traffic 
flatten DVSTraffic Shaping Policy Ingress reads various fields from the DVSTraffic Shaping Policy ingress policy into the passed in Resource Data 
expand VMware DVSPort Setting reads certain Resource Data keys and returns a VMware DVSPort Setting 
flatten VMware DVSPort Setting reads various fields from a VMware DVSPort Setting into the passed in Resource Data 
expand Cluster Drs VMConfig Info reads certain Resource Data keys and returns a Cluster Drs Vm Config Info 
flatten Cluster Drs Vm Config Info saves a Cluster Drs Vm Config Info into the supplied Resource Data 
resource VSphere DRSVMOverride Parse ID parses an ID for the vsphere drs vm override and outputs its parts 
resource VSphere DRSVMOverride Find Entry attempts to locate an existing DRS VM config in a cluster s configuration It s used by the resource s read functionality and tests nil is returned if the entry cannot be found 
resource VSphere DRSVMOverride Objects handles the fetching of the cluster and virtual machine depending on what attributes are available If the resource ID is available the data is derived from the ID If not it s derived from the compute cluster id and virtual machine id attributes 
schema Virtual Machine Guest Info returns schema items for the relevant parts of Guest Info that vsphere virtual machine tracks mostly guest information 
build And Select Guest IPs builds a list of IP addresses known to VMware tools From this list it selects the first IP address it seems that s associated with a default gateway first IPv and then IPv if criteria can t be satisfied and sets that as the default ip address and also the IP address used for provisioning The full list of IP addresses is saved to guest ip addresses 
resource VSphere Compute Cluster VMAnti Affinity Rule Flatten ID makes an ID for the vsphere compute cluster vm anti affinity rule resource 
resource VSphere Compute Cluster VMAnti Affinity Rule Objects handles the fetching of the cluster and rule key depending on what attributes are available If the resource ID is available the data is derived from the ID If not only the cluster is retrieved from compute cluster id is returned for the key 
schema Datastore Summary returns schema items for resources that need to work with a Datastore Summary 
flatten Datastore Summary reads various fields from a Datastore Summary into the passed in Resource Data 
resource VSphere Datastore Apply Folder Or Storage Cluster Path returns a path to a folder or a datastore cluster depending on what has been selected in the resource 
resource VSphere Datastore Read Folder Or Storage Cluster Path checks the inventory path of the supplied datastore and checks to see if it is a normal folder or if it s a datastore cluster and saves the attributes accordingly 
Cdrom Subresource Schema represents the schema for the cdrom sub resource 
New Cdrom Subresource returns a subresource populated with all of the necessary fields 
Cdrom Apply Operation processes an apply operation for all disks in the resource The function takes the root resource s Resource Data the provider connection and the device list as known to v Sphere at the start of this operation All disk operations are carried out with both the complete updated Virtual Device List and the complete list of changes returned as a slice of Base Virtual Device Config Spec 
Cdrom Refresh Operation processes a refresh operation for all of the disks in the resource This functions similar to Cdrom Apply Operation but nothing to change is returned all necessary values are just set and committed to state 
Cdrom Diff Operation performs operations relevant to managing the diff on cdrom sub resources 
Validate Diff performs any complex validation of an individual cdrom sub resource that can t be done in schema alone 
Create creates a vsphere virtual machine cdrom sub resource 
Read reads a vsphere virtual machine cdrom sub resource 
Update updates a vsphere virtual machine cdrom sub resource 
Delete deletes a vsphere virtual machine cdrom sub resource 
map Cdrom takes a Cdrom Subresource and attaches either a client device or a datastore ISO 
Verify VApp Transport validates that all the required components are included in the virtual machine configuration if v App properties are set 
verify VApp Cdrom Iso takes Virtual Cdrom and determines if it is needed for v App ISO transport It does this by first checking if it has an ISO inserted that matches the v App ISO naming pattern If it does then the next step is to see if v App ISO transport is supported on the VM If both of those conditions are met then the CDROM is considered in use for v App transport 
Datastore Path From String is a convenience method that returns a fully populated Datastore Path from a string containing a datastore path A flag indicating a successful parsing is also returned 
Is Vmdk Datastore Path ensures that a string can be parsed as a datastore path pointing to a virtual disk This only checks the validity of the path not whether or not the file exists 
Move moves a virtual disk from one location to another The move is not forced src Path needs to be a datastore path ie datastore vm vm vmdk however the destination path dst Path can be a simple path if it is the source datastore is used and dst DC is ignored Further if dst Path has no directory the directory of src Path is used dst DC can be nil if the destination datastore is in the same datacenter The new datastore path is returned along with any error to avoid the need to re calculate the path separately 
Query Disk Type queries the disk type of the specified virtual disk 
Delete deletes the virtual disk at the specified datastore path 
soap Fault extracts the SOAP fault from an error fault if it exists Check the returned boolean value to see if you have a Soap Fault 
vim Soap Fault extracts the VIM fault Check the returned boolean value to see if you have a fault which will need to be further asserted into the error that you are looking for 
task Fault extracts the task fault from a supplied task Error Check the returned boolean value to see if the fault was extracted correctly after which you will need to do further checking 
Is Managed Object Not Found Error checks an error to see if it s of the Managed Object Not Found type 
is Not Found Error checks an error to see if it s of the Not Found Error type Note this is different from the other not found faults and is an error type in its own right Use Is Any Not Found Error to check for any not found type 
Is Any Not Found Error checks to see if the fault is of any not found error type that we track 
Is Resource In Use Error checks an error to see if it s of the Resource In Use type 
is Concurrent Access Error checks an error to see if it s of the Concurrent Access type 
Rename Object renames a MO and tracks the task to make sure it completes 
Vim Validate Virtual Center ensures that the client is connected to v Center This is a lower level method that does not take the wrapped client from the higher level govmomi object and can be used to facilitate validation when it s not available 
parse Version creates a new VSphere Version from a parsed version string and build number 
parse Version From About Info returns a populated VSphere Version from an About Info data object This function panics if it cannot parse the version correctly as given our source of truth is a valid About Info object such an error is indicative of a major issue with our version parsing logic 
Parse Version From Client returns a populated VSphere Version from a client connection 
String implements stringer for VSphere Version 
Product Equal returns true if this version s product name is the same as the supplied version s name 
older Version checks the major minor patch part of the version to see it s older than the version supplied in other This is broken off from the main test so that it can be checked in Newer before the build number is compared 
Older returns true if this version s product is the same and composite of the version and build numbers are older than the supplied version s information 
Equal returns true if the version is equal to the supplied version 
expand Cluster VMGroup reads certain Resource Data keys and returns a Cluster Vm Group 
flatten Cluster Vm Group saves a Cluster Vm Group into the supplied Resource Data 
resource VSphere Compute Cluster VMGroup Find Entry attempts to locate an existing VM group config in a cluster s configuration It s used by the resource s read functionality and tests nil is returned if the entry cannot be found 
resource VSphere Compute Cluster VMGroup Objects handles the fetching of the cluster and group name depending on what attributes are available If the resource ID is available the data is derived from the ID If not it s derived from the compute cluster id and name attributes 
resource VSphere Compute Cluster VMGroup Fetch Objects fetches the objects for a cluster VM group This is currently just the cluster object as the name of the group is a static value and a pass through this is to keep its workflow consistent with other cluster dependent resources that derive from Array Update Spec that have managed object as keys such as VM and host overrides 
resource VSphere Resource Pool Apply Tags processes the tags step for both create and update for vsphere resource pool 
resource VSphere Resource Pool Read Tags reads the tags for vsphere resource pool 
expand Cluster Affinity Rule Spec reads certain Resource Data keys and returns a Cluster Affinity Rule Spec 
flatten Cluster Affinity Rule Spec saves a Cluster Affinity Rule Spec into the supplied Resource Data 
resource VSphere Compute Cluster VMAffinity Rule Find Entry attempts to locate an existing VM affinity rule in a cluster s configuration by key It s used by the resource s read functionality and tests nil is returned if the entry cannot be found 
resource VSphere Compute Cluster VMAffinity Rule Objects handles the fetching of the cluster and rule key depending on what attributes are available If the resource ID is available the data is derived from the ID If not only the cluster is retrieved from compute cluster id is returned for the key 
Config Schema returns the schema for custom attribute configuration for each resource that needs it The key should be set to the Config Key constant and should be a map of custom attribute ids to values 
Read From Resource reads the custom attributes from an object and saves the data into the supplied Resource Data TODO Add error handling and reporting to this method 
Virtual Machine Clone Schema represents the schema for the VM clone sub resource This is a workflow for vsphere virtual machine that facilitates the creation of a virtual machine through cloning from an existing template Customization is nested here even though it exists in its own workflow 
Validate Virtual Machine Clone does pre creation validation of a virtual machine s configuration to make sure it s suitable for use in cloning This includes but is not limited to checking to make sure that the disks in the new VM configuration line up with the configuration in the existing template and checking to make sure that the VM has a single snapshot we can use in the even that linked clones are enabled 
validate Clone Snapshots checks a VM to make sure it has a single snapshot with no children to make sure there is no ambiguity when selecting a snapshot for linked clones 
Expand Virtual Machine Clone Spec creates a clone spec for an existing virtual machine The clone spec built by this function for the clone contains the target datastore the source snapshot in the event of linked clones and a relocate spec that contains the new locations and configuration details of the new virtual disks 
Reference Properties is a convenience method that wraps fetching the Network MO from a Network Reference Note that regardless of the network type this only fetches the Network MO and not any of the extended properties of that network 
Properties gets the properties for a specific Network By itself the Network type usually represents a standard port group in v Center it has been set up on a host or a set of hosts and is usually configured via through an appropriate Host Network System v Center however groups up these networks and displays them as a single network that VM can use across hosts facilitating HA and v Motion for VMs that use standard port groups versus DVS port groups Hence the Network object is mainly a read only MO and is only useful for checking some very base level attributes While other network MOs extend the base network object such as DV port groups and opaque networks this only works with the base object only Refer to functions more specific to the MO to get a fully extended property set for the extended objects if you are dealing with those object types 
System Or Default returns a Host System from a specific host name and datacenter If the user is connecting over ESXi the default host system is used 
Properties is a convenience method that wraps fetching the Host System MO from its higher level object 
Resource Pool is a convenience method that wraps fetching the host system s root resource pool 
host System Name From ID returns the name of a host via its its managed object reference ID 
Name Or ID is a convenience method mainly for helping displaying friendly errors where space is important it displays either the host name or the ID if there was an error fetching it 
Enter Maintenance Mode puts a host into maintenance mode If evacuate is set to true all powered off VMs will be removed from the host or the task will block until this is the case depending on whether or not DRS is on or off for the host s cluster This parameter is ignored on direct ESXi 
Exit Maintenance Mode takes a host out of maintenance mode 
dvs From UUID gets a DVS object from its UUID 
dvs From Path gets a DVS object from its path 
dvs Properties is a convenience method that wraps fetching the DVS MO from its higher level object 
upgrade DVS upgrades a DVS to a specific version Downgrades are not supported and will result in an error This should be checked before running this function 
update DVSConfiguration contains the atomic update wait operation for a DVS 
enable DVSNetwork Resource Management exposes the Enable Network Resource Management method of the Distributed Virtual Switch MO This local implementation may go away if this is exposed in the higher level object upstream 
resource VSphere Datastore Cluster VMAnti Affinity Rule Flatten ID makes an ID for the vsphere datastore cluster vm anti affinity rule resource 
resource VSphere Datastore Cluster VMAnti Affinity Rule Find Entry attempts to locate an existing VM anti affinity rule in a datastore cluster s configuration by key It s used by the resource s read functionality and tests nil is returned if the entry cannot be found 
resource VSphere Datastore Cluster VMAnti Affinity Rule Find Entry By Name attempts to locate an existing VM anti affinity rule in a datastore cluster s configuration by name It differs from the standard resource VSphere Datastore Cluster VMAnti Affinity Rule Find Entry in that we don t allow missing entries as it s designed to be used in places where we don t want to allow for missing entries such as during creation and import 
resource VSphere Datastore Cluster VMAnti Affinity Rule Objects handles the fetching of the cluster and rule key depending on what attributes are available If the resource ID is available the data is derived from the ID If not only the cluster is retrieved from datastore cluster id is returned for the key 
resource VSphere Datastore Cluster VMAnti Affinity Rule Fetch Objects fetches the objects for a cluster rule This is currently just the cluster object as the rule key a static value and a pass through this is to keep its workflow consistent with other cluster dependent resources that derive from Array Update Spec that have managed object as keys such as VM and host overrides 
resource VSphere Datastore Cluster VMAnti Affinity Rule Apply SDRSConfig Spec applying a SDRS config spec for the vsphere datastore cluster vm anti affinity rule resource This is wrapped to abstract the fact that we are deriving the client from the Storage Pod This is because helper workflows that have been created more recently ie cluster helpers do this and more than likely the storagepod helper will do it eventually as well If there is ever an issue with this it can be changed here There should be no issue though as govmomi Client is mainly just vim Client with some additional session helper bits that is not normally needed during normal operation 
resource VSphere Datastore Cluster VMAnti Affinity Rule Validate Rule VMCount ensures that the VM count in the anti affinity rule at any point in time before it s created or updated is a length of at least This validation is necessary as a rule of only VM here is a no op and ultimately will result in a broken resource the rule will not exist after creation or example Unfortunately this needs to happen at apply time right now due to issues with TF core and how it processes lists when values are computed Once these issues are fixed with TF core the validation here should be removed and moved to schema 
controller Type To Class converts a controller type to a specific short form controller class namely for use with working with IDs 
subresource Schema is a map string schema Schema of common schema fields This includes the internal id field which is used as a unique ID for the lifecycle of this resource 
Addr returns the resource address for this subresource 
Set sets the specified key value pair in the subresource 
Has Change checks to see if there has been a change in the resource data since the last update Note that this operation may only be useful during update operations depending on subresource specific workflow 
Get Change gets the old and new values for the value specified by key 
Get With Restart checks to see if a field has been modified returns the new value and sets restart if it has changed 
Get With Veto returns the value specified by key but returns an error if it has changed The intention here is to block changes to the resource in a fashion that would otherwise result in forcing a new resource 
Set Restart sets reboot required in the global Resource Data The key is only required for logging 
Hash calculates a set hash for the current data If you want a hash for error reporting a device address it s probably a good idea to run this at the beginning of a run as any set calls will change the value this ultimately calculates 
compute Dev Addr handles the logic for Save Dev IDs and allows it to be used outside of a subresource 
Save Dev IDs saves the device s current key and also the device address The latter is a computed schema field that contains the controller type the controller s bus number and the device s unit number on that controller This helps locate the device when the key is in flux such as when devices are just being created 
split Dev Addr splits an device addres into its inparticular parts and asserts that we have all the correct data 
find Virtual Device In List Controller Select Func returns a function that can be used with Virtual Device List Select to locate a controller device based on the criteria that we have laid out 
find Virtual Device In List Device Select Func returns a function that can be used with Virtual Device List Select to locate a virtual device based on its controller device key and the unit number on the device 
find Controller For Device locates a controller via its virtual device 
Find Virtual Device By Addr locates the subresource s virtual device in the supplied Virtual Device List by its device address 
Find Virtual Device will attempt to find an address by its device key if it is otherwise it will attempt to locate it by its device address 
String prints out the device sub resource s information including the ID at time of instantiation the short name of the disk and the current device key and address 
swap SCSIDevice swaps out the supplied controller for a new one of the supplied controller type Any connected devices are re connected at the same device units on the new device A list of changes is returned 
Normalize SCSIBus checks the SCSI controllers on the virtual machine and either creates them if they don t exist or migrates them to the specified controller type Devices are migrated to the new controller appropriately A spec slice is returned with the changes The first number of slots specified by count are normalized by this function Any others are left unchanged 
set SCSIBus Sharing takes a Base Virtual SCSIController sets the sharing mode and applies that change to the Virtual Device List 
create SCSIController creates a new SCSI controller of the specified type and sharing mode 
Read SCSIBus Type checks the SCSI bus state and returns a device type depending on if all controllers are one specific kind or not Only the first number of controllers specified by count are checked 
Read SCSIBus Sharing checks the SCSI bus sharing and returns a sharing type depending on if all controllers are one specific kind or not Only the first number of controllers specified by count are checked 
get SCSIController picks a SCSI controller at the specific bus number supplied 
Controller For Create Update wraps the controller selection logic to make it easier to use in create or update operations If the controller type is a SCSI device the bus number is searched as well 
apply Device Change applies a pending types Base Virtual Device Config Spec to a working set to either add remove or update devices so that the working Virtual Device List is as up to date as possible 
Device List String pretty prints each device in a virtual device list used for logging purposes and what not 
Device Change String pretty prints a slice of Virtual Device Config Spec 
subresource List String takes a list of sub resources and pretty prints the key and device address 
scsi Controller List String pretty prints a slice of SCSI controllers 
Append Device Change Spec appends unique copies of the supplied device change operations and appends them to spec The resulting list is returned The object of this function is to provide deep copies of each virtual device to the spec as they looked like when the append operation was called helping facilitate multiple update operations to the same device in a single reconfigure call 
expand Cluster Dependency Rule Info reads certain Resource Data keys and returns a Cluster Dependency Rule Info 
flatten Cluster Dependency Rule Info saves a Cluster Dependency Rule Info into the supplied Resource Data 
resource VSphere Compute Cluster VMDependency Rule Parse ID parses an ID for the vsphere compute cluster vm dependency rule and outputs its parts 
resource VSphere Compute Cluster VMDependency Rule Objects handles the fetching of the cluster and rule key depending on what attributes are available If the resource ID is available the data is derived from the ID If not only the cluster is retrieved from compute cluster id is returned for the key 
resource VSphere Compute Cluster VMDependency Rule Fetch Objects fetches the objects for a cluster rule This is currently just the cluster object as the rule key a static value and a pass through this is to keep its workflow consistent with other cluster dependent resources that derive from Array Update Spec that have managed object as keys such as VM and host overrides 
Provider returns a terraform Resource Provider 
resource VSphere Datastore Cluster Apply Create processes the creation part of resource VSphere Datastore Cluster Create 
resource VSphere Datastore Cluster Apply Tags processes the tags step for both create and update for vsphere datastore cluster 
resource VSphere Datastore Cluster Read Tags reads the tags for vsphere datastore cluster 
resource VSphere Datastore Cluster Apply Custom Attributes processes the custom attributes step for both create and update for vsphere datastore cluster 
resource VSphere Datastore Cluster Read Custom Attributes reads the custom attributes for vsphere datastore cluster 
resource VSphere Datastore Cluster Apply SDRSConfig applies the SDRS configuration to a datastore cluster 
resource VSphere Datastore Cluster Has SDRSConfig Change checks all resource keys associated with storage DRS to see if there has been a change in the configuration of those keys This helper is designed to detect no ops in a SDRS configuration to see if we really need to send a configure API call to v Sphere 
resource VSphere Datastore Cluster Get Pod gets the Storage Pod from the ID in the supplied Resource Data 
resource VSphere Datastore Cluster Get Pod From Path gets the Storage Pod from a supplied path If no datacenter is supplied the path must be a full path 
resource VSphere Datastore Cluster Save Name And Path saves the name and path of a Storage Pod into the supplied Resource Data 
resource VSphere Datastore Cluster Apply Name Change applies any changes to a Storage Pod s name 
resource VSphere Datastore Cluster Apply Folder Change applies any changes to a Storage Pod s folder location 
resource VSphere Datastore Cluster Validate Empty Cluster validates that the datastore cluster is empty This is used to ensure a safe deletion of the cluster we do not allow deletion of clusters that still have datastores in them 
resource VSphere Datastore Cluster Apply Delete process the removal of a datastore cluster 
resource VSphere Datastore Cluster Flatten SDRSData saves the DRS attributes from a Storage Pod into the supplied Resource Data Note that other functions handle non SDRS related items such as path name tags and custom attributes 
expand Storage Drs Pod Config Spec reads certain Resource Data keys and returns a Storage Drs Pod Config Spec 
flatten Storage Drs Pod Config Info saves a Storage Drs Pod Config Info into the supplied Resource Data 
expand Storage Drs Automation Config reads certain Resource Data keys and returns a Storage Drs Automation Config 
flatten Storage Drs Automation Config saves a Storage Drs Automation Config into the supplied Resource Data 
expand Storage Drs Io Load Balance Config reads certain Resource Data keys and returns a Storage Drs Io Load Balance Config 
flatten Storage Drs Io Load Balance Config saves a Storage Drs Io Load Balance Config into the supplied Resource Data 
expand Storage Drs Space Load Balance Config reads certain Resource Data keys and returns a Storage Drs Space Load Balance Config 
flatten Storage Drs Space Load Balance Config saves a Storage Drs Space Load Balance Config into the supplied Resource Data 
expand Storage Drs Option Spec reads certain Resource Data keys and returns a Storage Drs Option Spec 
flatten Storage Drs Option Spec saves a Storage Drs Option Spec into the supplied Resource Data 
resource VSphere Folder Migrate State is the master state migration function for the vsphere folder resource 
resource VSphere Folder Migrate State V migrates the state of the vsphere folder from version to version 
get Datacenter gets the higher level datacenter object for the datacenter name supplied by dc The default datacenter is denoted by using an empty string When working with ESXi directly the default datacenter is always selected 
datacenter From ID locates a Datacenter by its managed object reference ID 
Disk Subresource Schema represents the schema for the disk sub resource 
New Disk Subresource returns a subresource populated with all of the necessary fields 
Disk Apply Operation processes an apply operation for all disks in the resource The function takes the root resource s Resource Data the provider connection and the device list as known to v Sphere at the start of this operation All disk operations are carried out with both the complete updated Virtual Device List and the complete list of changes returned as a slice of Base Virtual Device Config Spec 
disk Apply Operation Delete is an inner loop helper for disk deletion operations 
disk Apply Operation Create Update is an inner loop helper for disk creation and update operations 
Disk Refresh Operation processes a refresh operation for all of the disks in the resource This functions similar to Disk Apply Operation but nothing to change is returned all necessary values are just set and committed to state 
Disk Destroy Operation process the destroy operation for virtual disks Disks are the only real operation that require special destroy logic and that s because we want to check to make sure that we detach any disks that need to be simply detached not deleted before we destroy the entire virtual machine as that would take those disks with it 
Disk Diff Operation performs operations relevant to managing the diff on disk sub resources Most importantly this works to prevent spurious diffs by extrapolating the correct correlation between the old and new sets using the name as a primary key and then normalizing the two diffs so that computed data is properly set The following validation operations are also carried out on the set as a whole Ensuring all names are unique across the set Ensuring that at least one element in the set has a unit number of 
Disk Clone Validate Operation takes the Virtual Device List which should come from a source VM or template and validates the following There are at least as many disks defined in the configuration as there are in the source VM or template All disks survive a disk sub resource read operation This function is meant to be called during diff customization It is a subset of the normal refresh behaviour as we don t worry about checking existing state 
Disk Migrate Relocate Operation assembles the Virtual Machine Relocate Spec Disk Locator slice for a virtual machine migration operation otherwise known as storage v Motion 
Disk Clone Relocate Operation assembles the Virtual Machine Relocate Spec Disk Locator slice for a virtual machine clone operation This differs from a regular storage v Motion in that we have no existing devices in the resource to work off of the disks in the source virtual machine is our source of truth These disks are assigned to our disk sub resources in config and the relocate specs are generated off of the backing data defined in config taking on these filenames when cloned After the clone is complete natural re configuration happens to bring the disk configurations fully in sync with what is defined 
Disk Post Clone Operation normalizes the virtual disks on a freshly cloned virtual machine and outputs any necessary device change operations It also sets the state in advance of the post create read This differs from a regular apply operation in that a configuration is already present but we don t have any existing state which the standard virtual device operations rely pretty heavily on 
Disk Import Operation validates the disk configuration of the virtual machine s Virtual Device List to ensure it will be imported properly and also saves device addresses into state for disks defined in config Both the imported device list is sorted by the device s unit number on the SCSI bus 
Read Disk Attrs For Data Source returns select attributes from the list of disks on a virtual machine This is used in the VM data source to discover specific options of all of the disks on the virtual machine sorted by the order that they would be added in if a clone were to be done 
Create creates a vsphere virtual machine disk sub resource 
Read reads a vsphere virtual machine disk sub resource and commits the data to the new Data layer 
Update updates a vsphere virtual machine disk sub resource 
Delete deletes a vsphere virtual machine disk sub resource 
Diff Existing validates and normalizes the fields for an existing disk sub resource It handles carrying over existing values so this should not be used on disks that have not been successfully matched up between current and old diffs 
Diff General performs complex validation of an individual disk sub resource that can t be done in schema alone Should be run on new and existing disks 
normalize Disk Datastore normalizes the datastore id field in a disk sub resource If the VM has a datastore cluster defined it checks to make sure the datastore in the current state of the disk is a member of the currently defined datastore cluster and if it is not it marks the disk as computed so that it can be migrated back to the datastore cluster on the next update 
validate Storage Relocate Diff validates certain storage v Motion diffs to make sure they are functional These mainly have to do with limitations associated with our tracking of virtual disks via their names The current limitations are Externally attached virtual disks are not allowed to be v Motioned Disks must match the v Sphere naming convention where the first disk is named VMNAME vmdk and all other disks are named VMNAME INDEX vmdk This is a validation we use for cloning as well Any VM that has been created by a linked clone is blocked from storage v Motion full stop TODO Once we have solved the disk tracking issue and are no longer tracking disks via their file names the only restriction that should remain is for externally attached disks That restriction will go away once we figure out a strategy for handling when said disks have been moved OOB of the VM workflow 
Relocate produces a Virtual Machine Relocate Spec Disk Locator for this resource and is used for both cloning and storage v Motion 
String prints out the disk sub resource s information including the ID at time of instantiation the path of the disk and the current device key and address 
expand Disk Settings sets appropriate fields on an existing disk this is used during Create and Update to set attributes to those found in configuration 
create Disk performs all of the logic for a base virtual disk creation 
assign Disk takes a unit number and assigns it correctly to a controller on the SCSI bus An error is returned if the assigned unit number is taken 
find Controller Info determines the normalized unit number for the disk device based on the SCSI controller and unit number it s connected to The controller is also returned 
disk Relocate List String pretty prints a list of Virtual Machine Relocate Spec Disk Locator 
disk Relocate String prints out information from a Virtual Machine Relocate Spec Disk Locator in a friendly way The format depends on whether or not a backing has been defined 
Less helps implement sort Interface for virtual Device List Sorter A Base Virtual Device is less than another device if its controller s bus number and unit number combination are earlier in the order than the other 
Swap helps implement sort Interface for virtual Device List Sorter 
Less helps implement sort Interface for virtual Disk Subresource Sorter 
Swap helps implement sort Interface for virtual Disk Subresource Sorter 
datastore Path Has Base is a helper to check if a datastore path s file matches a supplied file name 
Select Disks looks for disks that Terraform is supposed to manage count is the number of controllers that Terraform is managing and serves as an upper limit count of the SCSI bus number for a controller that eligible disks need to be attached to 
disk Label Or Name is a helper method that returns the unique label for a disk either its label or name An error is returned if both are defined TODO This method will be removed in future releases 
disk Path Or Name is a helper method that returns the path for a disk either its path attribute or name as a fallback TODO This method will be removed in future releases 
find Virtual Disk locates a virtual disk by it UUID or by its device address if UUID is missing The device address search is only used if fallback is true this is so that we can distinguish situations where it should be used such as a read versus situations where it should never be used such as an update or delete 
disk Capacity In Gi B reports the supplied disk s capacity by first checking Capacity In Bytes and then falling back to Capacity In KB if that value is unavailable This helps correct some situations where the former value s data gets cleared which seems to happen on upgrades 
host Network System From Host System locates a Host Network System from a specified Host System 
host Network System From Host System ID locates a Host Network System from a specified Host System managed object ID 
host VSwitch From Name locates a virtual switch on the supplied Host Network System by name 
host Port Group From Name locates a port group on the supplied Host Network System by name 
network Object From Host System locates the network object in v Center for a specific Host System and network name It does this by searching for all networks in the folder hierarchy that match the given network name for the Host System s managed object reference ID This match is returned if nothing is found an error is given 
resource VSphere License Update check for change in labels of the key and updates them 
is Key Present iterates over the Info List to check if the license is present or not 
Update Label provides a wrapper around the Update Label data objects 
Decode Error tries to find a specific error which occurs when an invalid key is passed to the server 
resource VSphere VApp Container Apply Tags processes the tags step for both create and update for vsphere vapp container 
resource VSphere VApp Container Read Tags reads the tags for vsphere vapp container 
expand Cluster VMHost Rule Info reads certain Resource Data keys and returns a Cluster Vm Host Rule Info 
flatten Cluster VMHost Rule Info saves a Cluster Vm Host Rule Info into the supplied Resource Data 
resource VSphere Compute Cluster VMHost Rule Find Entry By Name attempts to locate an existing VM host rule in a cluster s configuration by name It differs from the standard resource VSphere Compute Cluster VMHost Rule Find Entry in that we don t allow missing entries as it s designed to be used in places where we don t want to allow for missing entries such as during creation and import 
resource VSphere Compute Cluster VMHost Rule Objects handles the fetching of the cluster and rule key depending on what attributes are available If the resource ID is available the data is derived from the ID If not only the cluster is retrieved from compute cluster id is returned for the key 
resource VSphere Virtual Machine Migrate State is the master state migration function for the vsphere virtual machine resource 
migrate VSphere Virtual Machine State V migrates the state of the vsphere virtual machine from version to version 
migrate VSphere Virtual Machine State V migrates the state of the vsphere virtual machine from version to version 
New Environment Browser initializes a new Environment Browser based off the supplied managed object reference 
Default Devices loads a satisfactory default device list for the optionally supplied host and descriptor key The result is returned as a higher level Virtual Device List object This can be used as an initial Virtual Device List when building a device list and Virtual Device Config Spec list for new virtual machines Appropriate options for key can be loaded by running Query Config Option Descriptor which will return a list of Virtual Machine Config Option Descriptor which will contain the appropriate key for the virtual machine version needed If no key is supplied the results generally reflect the most recent VM hardware version 
OSFamily fetches the operating system family for the supplied guest ID 
Query Config Option Descriptor returns a list the list of Config Option keys available on the environment that this browser targets The keys can be used as query options for Default Devices and other functions facilitating the specification of results specific to a certain VM version 
Root From Datacenter returns the root path for the particle from the given datacenter s inventory path 
Path From Datacenter returns the combined result of Root From Datacenter plus a relative path for a given particle and datacenter object 
Split Datacenter is a convenience method that splits out the datacenter path from the supplied path for the particle 
Split Relative Folder is a convenience method that returns the parent folder for the result of Split Relative on the supplied path This is generally useful to get the folder for a managed entity versus getting a full relative path If you want that use Split Relative instead 
New Root From Path takes the datacenter path for a specific entity and then appends the new particle supplied 
Path From New Root takes the datacenter path for a specific entity and then appends the new particle supplied with the new relative path As an example consider a supplied host path dc host cluster esxi and a supplied datastore folder relative path of foo bar This function will split off the datacenter section of the path dc and combine it with the datastore folder with the proper delimiter The resulting path will be dc datastore foo bar 
datacenter Path From Host System ID returns the datacenter section of a Host System s inventory path 
datastore Root Path From Host System ID returns the root datastore folder path for a specific host system ID 
From Absolute Path returns an object Folder from a given absolute path If no such folder is found an appropriate error will be returned 
folder From Object returns an object Folder from a given object of specific types and relative path of a type defined in folder Type If no such folder is found an appropriate error will be returned The list of supported object types will grow as the provider supports more resources 
Datastore Folder From Object returns an object Folder from a given object and relative datastore folder path If no such folder is found of if it is not a datastore folder an appropriate error will be returned 
Host Folder From Object returns an object Folder from a given object and relative host folder path If no such folder is found or if it is not a host folder an appropriate error will be returned 
Virtual Machine Folder From Object returns an object Folder from a given object and relative datastore folder path If no such folder is found or if it is not a VM folder an appropriate error will be returned 
network Folder From Object returns an object Folder from a given object and relative network folder path If no such folder is found of if it is not a network folder an appropriate error will be returned 
validate Datastore Folder checks to make sure the folder is a datastore folder and returns it if it is or an error if it isn t 
validate Host Folder checks to make sure the folder is a host folder and returns it if it is or an error if it isn t 
validate Virtual Machine Folder checks to make sure the folder is a VM folder and returns it if it is or an error if it isn t 
validate Network Folder checks to make sure the folder is a network folder and returns it if it is or an error if it isn t 
Normalize Path is a Schema State Func that normalizes a folder path 
Move Object To moves a object by reference into a folder 
From Path takes a relative folder path an object type and an optional supplied datacenter and returns the respective object Folder if it exists The datacenter supplied in dc cannot be nil if the folder type supplied by ft is something else other than VSphere Folder Type Datacenter 
Parent From Path takes a relative object path usually a folder an object type and an optional supplied datacenter and returns the parent object Folder if it exists The datacenter supplied in dc cannot be nil if the folder type supplied by ft is something else other than VSphere Folder Type Datacenter 
Properties is a convenience method that wraps fetching the Folder MO from its higher level object 
Find Type returns a proper VSphere Folder Type for a folder object by checking its child type 
Has Children checks to see if a folder has any child items and returns true if that is the case This is useful when checking to see if a folder is safe to delete destroying a folder in v Sphere destroys all children if at all possible including removing virtual machines so extra verification is necessary to prevent accidental removal 
To Server List Query formats a List Opts into a query string 
Addrs function 
Index returns the first index of the target string t or if no match is found 
Any returns true if one of the strings in the slice satisfies the predicate f 
client returns an authenticated HTTP client for use with GCE 
lookup Project retrieves the project name from the metadata of the current node 
lookup Zones retrieves the zones of the project and filters them by pattern 
lookup Addrs retrieves the private ip addresses of all instances in a given project and zone which have a matching tag value 
New creates a new discover client with the given options 
With User Agent allows specifying a custom user agent option to send with requests when the underlying client library supports it 
With Providers allows specifying your own set of providers 
Names returns the names of the configured providers 
Help describes the format of the configuration string for address discovery and the various provider specific options 
Addrs discovers ip addresses of nodes that match the given filter criteria The config string must have the format provider xxx key val key val where the keys and values are provider specific The values are URL encoded 
String formats a config map into the key val key val understood by Parse The order of the keys is stable 
Pod Addrs extracts the addresses from a list of pods This is a separate method so that we can unit test this without having to setup complicated K S cluster scenarios It shouldn t generally be called externally 
pod Port extracts the proper port for the address from the given pod for a non empty annotation Pre condition annotation is non empty 
args Or Env allows you to pick an environmental variable for a setting if the arg is not set 
Addrs returns discovered addresses for the m DNS package 
set Log sets the logger 
discover Err prints out a friendly error heading for the top level discovery errors It should only be used in the Addrs method 
value Or Env provides a way of suppling configuration values through environment variables Defined values always take priority 
vim URL returns a URL to pass to the VIM SOAP client 
new VSphere Client returns a new v Sphere Client after setting up the necessary connections 
new Vim Session connects the VIM SOAP API client connection 
new Rest Session connects to the v Sphere REST API endpoint necessary for tags 
Addrs implements the Provider interface for the vsphere package 
tag IDFrom Name helps convert the tag and category names into the final ID used for discovery 
tag Category By Name converts a tag category name into its ID 
tag By Name converts a tag name into its ID 
virtual Machine IPs For Tag is a higher level wrapper that calls out to functions to fetch all of the virtual machines matching a certain tag ID and then gets all of the IP addresses for those virtual machines 
virtual Machines For Tag discovers all of the virtual machines that match a specific tag ID and returns their higher level helper objects 
ip Addrs For Virtual Machines takes a set of virtual machines and returns a consolidated list of IP addresses for all of the VMs 
virtual Machine From MOID locates a virtual machine by its managed object reference ID 
virtual Machine Properties is a convenience method that wraps fetching the Virtual Machine MO from its higher level object It takes a list of property keys to fetch Keeping the property set small can sometimes result in significant performance improvements 
build And Select Guest IPs builds a list of IP addresses known to VMware tools skipping local and auto configuration addresses The builder is non discriminate and is only deterministic to the order that it discovers addresses in VMware tools 
skip IPAddr defines the set of criteria that build And Select Guest IPs uses to check to see if it needs to skip an IP address 
virtual Machine Names is a helper method that returns all the names for a list of virtual machines comma separated 
validate And Wrap Handler makes sure a handler is a callable function it panics if not When the handler is also potential to be any built in inject Fast Invoker it wraps the handler automatically to have some performance gain 
validate And Wrap Handlers preforms validation and wrapping for each input handler It accepts an optional wrapper function to perform custom wrapping on handlers 
New With Logger creates a bare bones Macaron instance Use this method if you want to have full control over the middleware that is used You can specify logger output writer with this function 
Classic creates a classic Macaron with some basic default middleware macaron Logger macaron Recovery and macaron Static 
Handlers sets the entire middleware stack with the given Handlers This will clear any current middleware handlers and panics if any of the handlers is not a callable function 
Action sets the handler that will be called after all the middleware has been invoked This is set to macaron Router in a macaron Classic 
Use adds a middleware Handler to the stack and panics if the handler is not a callable func Middleware Handlers are invoked in the order that they are added 
Serve HTTP is the HTTP Entry point for a Macaron instance Useful if you want to control your own HTTP server Be aware that none of middleware will run without registering any router 
Run the http server Listening on os Get Env PORT or by default 
Set URLPrefix sets URL prefix of router layer so that it support suburl 
Set Config sets data sources for configuration 
String reads and returns content of request body in string 
Remote Addr returns more real IP address 
HTML renders the HTML with default template set 
HTMLSet renders the HTML with given template set name 
Query querys form parameter 
Query Trim querys and trims spaces form parameter 
Query Strings returns a list of results by given query name 
Query Escape returns escapred query result 
Query Bool returns query result in bool type 
Query Int returns query result in int type 
Query Int returns query result in int type 
Query Float returns query result in float type 
Params returns value of given param name e g ctx Params uid or ctx Params uid 
Set Params sets value of param with given name 
Params Escape returns escapred params result e g ctx Params Escape uname 
Params Int returns params result in int type e g ctx Params Int uid 
Params Int returns params result in int type e g ctx Params Int uid 
Params Float returns params result in int type e g ctx Params Float uid 
Get File returns information about user upload file by given form field name 
Save To File reads a file from request by field name and saves to given path 
Set Cookie sets given cookie value to response header FIXME IE support http golanghome com post reply 
Get Cookie returns given cookie value from request header 
Get Cookie Int returns cookie result in int type 
Get Cookie Int returns cookie result in int type 
Get Cookie Float returns cookie result in float type 
Set Secure Cookie sets given cookie value to response header with default secret string 
Get Secure Cookie returns given cookie value from request header with default secret string 
Set Super Secure Cookie sets given cookie value to response header with secret string 
Get Super Secure Cookie returns given cookie value from request header with secret string 
Serve Content serves given content to response 
Serve File Content serves given file as content to response 
Serve File serves given file to response 
Change Static Path changes static path from old to new one 
get Next Wildcard tries to find next wildcard and update pattern with corresponding regexp 
get Raw Pattern removes all regexp but keeps wildcards for building URL path 
URLPath build path part of URL by given pair values 
New Route Map initializes and returns a new route Map 
get Leaf returns Leaf object if a route has been registered 
add adds new route to route tree map 
Name sets name of route 
handle adds new route to the router tree 
Handle registers a new request handle with the given pattern method and handlers 
Get is a shortcut for r Handle GET pattern handlers 
Patch is a shortcut for r Handle PATCH pattern handlers 
Route is a shortcut for same handlers but different HTTP methods Example m Route GET POST h 
Combo returns a combo router 
Not Found configurates http Handler Func which is called when no matching route is found If it is not set http Not Found is used Be sure to set response code in your handler 
Internal Server Error configurates handler which is called when route handler returns error If it is not set default handler is used Be sure to set response code in your handler 
URLFor builds path part of URL by given pair values 
Name sets name of Combo Router route 
New Response Writer creates a Response Writer that wraps an http Response Writer 
Logger returns a middleware handler that logs the request as it goes in and the response as it goes out 
New Tpl File cerates new template file with given name and data 
New Template File System creates new template file system with given options 
New Template Set initializes a new empty template set 
Generate ETag generates an ETag based on size filename and file modification time 
Populate is a short hand for populating a graph with the given incomplete object values 
String representation suitable for human consumption 
Provide objects to the Graph The Object documentation describes the impact of various fields 
Populate the incomplete Objects 
Objects returns all known objects named as well as unnamed The returned elements are not in a stable order 
new Pub Sub returns a Pub Sub receiver Optionally accepts a client to allow for injecting the fake for tests If client is nil a real client connection to the google pubsub service will be attempted 
Stat sends pubsub receiver s internal stats to specified callback 
acquire Gzip Reader retrieves a possibly pre initialized gzip Reader from the package gzip Pool sync Pool This reduces memory allocation overhead by re using gzip Readers 
Addr returns binded socket address For bind port in tests 
Collect cache metrics 
Listen bind port Receive messages and send to out channel 
New App instance 
configure loads config from config file schemas conf aggregation conf 
Parse Config loads config from config file schemas conf aggregation conf 
Reload Config reloads some settings from config 
Stop all socket listeners 
Start starts 
Loop 
Addr returns binded socket address For bind port in tests 
Marshal Text marshals offset It s used to handle two special cases newest and oldest 
Unmarshal Text unmarshals text to offset It handles newest and oldest oterwise fallbacks to time Parse Duration 
Marshal Text converts internal enum like representation of protocol to a text 
Unmarshal Text converts text from config file to a enum 
Unmarshal Text from TOML 
New Options returns Options struct filled with default values 
Stat sends kafka receiver s internal stats to specified callback 
Addr returns binded socket address For bind port in tests 
Listen bind port Receive messages and send to out channel 
With Protocol marshal options to toml unmarshal to map string interface and add protocol key to them 
Creates a new cache instance 
Set Write Strategy 
Set Max Size of cache 
Collect cache metrics 
hash function 
Get Shard returns shard under given key 
Sets the given value under the specified key 
Pop removes an element from the map and returns it 
Stop Func 
Parse Carbonlink Request from pickle encoded data 
New Carbonlink Listener create new instance of Carbonlink Listener 
Addr returns binded socket address For bind port in tests 
Listen bind port Receive messages and send to out channel 
One Point create Points instance with single point 
Now Point create One Point with now timestamp 
Copy returns copy of object 
Parse Text parse text protocol Point host Point value n 
Append point 
Add value timestamp pair to points 
Eq points check 
New Config 
Print Default Config 
Read Config 
Match finds the schema for metric or returns false if none found 
Parse Retention Defs parses retention definitions into a Retentions structure 
Read Whisper Schemas reads and parses a storage schemas conf file and returns a sorted schemas structure see https graphite readthedocs io en config carbon html storage schemas conf 
Dump Stop implements gracefully stop Start writing all new data to xlogs Stop cache worker Dump all cache to file Stop listeners Close xlogs Exit application 
Restore From File read and parse data from single file 
Restore From Dir cache and input dumps from disk to memory 
Restore from dump path 
Get Stat provides needed subset of File Info plus Real Size Atime if any and Ctime if any 
Root creates new test directory 
Addr returns binded socket address For bind port in tests 
Listen bind port Receive messages and send to out channel 
Remove key from queue 
New Whisper create instance of Whisper 
Set Workers count 
Stat callback 
Start worker 
New Whisper Aggregation create instance of Whisper Aggregation 
Read Whisper Aggregation 
Match find schema for metric 
old version for benchmarks only 
Collect metrics 
as in https github com graphite project carbon blob master lib carbon util py 
Create Integration PD creates new Pager Duty Integrations Use this if you want to setup the integration for the first time or to add more services schedules 
Update Integration PD updates the Pager Duty Integration This will replace the existing values with the new values 
Get Integration PD gets all the Pager Duty Integrations from the system 
Create Integration Slack creates new Slack Integrations Use this if you want to setup the integration for the first time or to add more channels 
Update Integration Slack updates the Slack Integration This will replace the existing values with the new values 
Get Integration Slack gets all the Slack Integrations from the system 
Create Integration AWS adds a new AWS Account in the AWS Integrations Use this if you want to setup the integration for the first time or to add more accounts 
Get Integration AWS gets all the AWS Accounts in the AWS Integrations from Datadog 
Delete Integration AWS removes a specific AWS Account from the AWS Integration 
List Integration GCP gets all Google Cloud Platform Integrations 
Create Integration GCP creates a new Google Cloud Platform Integration 
Update Integration GCP updates a Google Cloud Platform Integration 
Delete Integration GCP deletes a Google Cloud Platform Integration 
Get Dashboard List returns a single dashboard list created on this account 
Get Dashboard Lists returns a list of all dashboard lists created on this account 
Create Dashboard List returns a single dashboard list created on this account 
Update Dashboard List returns a single dashboard list created on this account 
Get Dashboard List Items fetches the dashboard list s dashboard definitions 
Add Dashboard List Items adds dashboards to an existing dashboard list Any items already in the list are ignored not added twice 
Snapshot creates an image from a graph and returns the URL of the image 
Generic function for snapshots use map string string to create url Values instead of pre defined params 
Unmarshal JSON is a Custom Unmarshal for Precision T The Datadog API can return int number but a string type or something like or string 
Search Hosts searches through the hosts facet returning matching hostnames 
Search Metrics searches through the metrics facet returning matching ones 
Create Alert adds a new alert to the system This returns a pointer to an Alert so you can pass that to Update Alert later if needed 
Update Alert takes an alert that was previously retrieved through some method and sends it back to the server 
Get Alert retrieves an alert by identifier 
Get Alerts returns a slice of all alerts 
Create Comment adds a new comment to the system 
Create Related Comment adds a new comment but lets you specify the related identifier for the comment 
Edit Comment changes the message and possibly handle of a particular comment 
Create Monitor adds a new monitor to the system This returns a pointer to a monitor so you can pass that to Update Monitor later if needed 
Update Monitor takes a monitor that was previously retrieved through some method and sends it back to the server 
Get Monitor retrieves a monitor by identifier 
Get Monitors By Name retrieves monitors by name 
Get Monitors By Tags retrieves monitors by a slice of tags 
Get Monitors returns a slice of all monitors 
Get Synthetics Locations get all test locations 
Get Synthetics Browser Devices get all test devices for browser 
Get Bool is a helper routine that returns a boolean representing if a value was set and if so dereferences the pointer to it 
Get Int Ok is a helper routine that returns a boolean representing if a value was set and if so dereferences the pointer to it 
Get String Ok is a helper routine that returns a boolean representing if a value was set and if so dereferences the pointer to it 
Get Json Number Ok is a helper routine that returns a boolean representing if a value was set and if so dereferences the pointer to it 
Get Precision is a helper routine that returns a boolean representing if a value was set and if so dereferences the pointer to it 
Get String Id is a helper routine that allows screenboards and timeboards to be retrieved by either the legacy numerical format or the new string format It returns the id as is if it is a string converts it to a string if it is an integer It return an error if the type is neither string or an integer 
Unmarshal JSON is a Custom Unmarshal for Yaxis Min Yaxis Max If the datadog API returns auto for min or max then we should set Yaxis min or Yaxis max to nil respectively 
Get Dashboard returns a single dashboard created on this account 
Get Dashboards returns a list of all dashboards created on this account 
Create Dashboard creates a new dashboard when given a Dashboard struct Note that the Id Resource Url and similar elements are not used in creation 
Update Dashboard in essence takes a Dashboard struct and persists it back to the server Use this if you ve updated your local and need to push it back 
Invite Users takes a slice of email addresses and sends invitations to them 
Create User creates an user account for an email address 
Get Users returns all user or an error if not found 
Get User returns the user that match a handle or an error if not found 
Update User updates a user with the content of user and returns an error if the update failed 
Delete User deletes a user and returns an error if deletion failed 
Get Board returns a single dashboard created on this account 
Delete Board deletes a dashboard by the identifier 
Create Board creates a new dashboard when given a Board struct 
Update Board takes a Board struct and persists it back to the server Use this if you ve updated your local and need to push it back 
New Client returns a new datadog Client which can be used to access the API methods The expected argument is the API key 
Set Keys changes the value of api Key and app Key 
Validate checks if the API and application keys are valid 
Unmarshal JSON is a Custom Unmarshal for Board Widget If first tries to unmarshal the data in a light struct that allows to get the widget type Then based on the widget type it will try to unmarshal the data using the corresponding widget struct 
Mute Host mutes all monitors for the given host 
Unmute Host unmutes all monitors for the given host 
Get Creator returns the Creator field if non nil zero value otherwise 
Get Creator Ok returns a tuple with the Creator field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Creator returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Get Id Ok returns a tuple with the Id field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Id returns a boolean if a field has been set 
Get Message returns the Message field if non nil zero value otherwise 
Get Message Ok returns a tuple with the Message field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Message returns a boolean if a field has been set 
Get Name returns the Name field if non nil zero value otherwise 
Get Name Ok returns a tuple with the Name field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Name returns a boolean if a field has been set 
Get Notify No Data returns the Notify No Data field if non nil zero value otherwise 
Get Notify No Data Ok returns a tuple with the Notify No Data field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Notify No Data returns a boolean if a field has been set 
Get Query returns the Query field if non nil zero value otherwise 
Get Query Ok returns a tuple with the Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Query returns a boolean if a field has been set 
Get Silenced returns the Silenced field if non nil zero value otherwise 
Get Silenced Ok returns a tuple with the Silenced field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Silenced returns a boolean if a field has been set 
Get State returns the State field if non nil zero value otherwise 
Get State Ok returns a tuple with the State field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has State returns a boolean if a field has been set 
Get Alert Id returns the Alert Id field if non nil zero value otherwise 
Has Alert Id returns a boolean if a field has been set 
Get Time returns the Time field if non nil zero value otherwise 
Get Time Ok returns a tuple with the Time field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Time returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Get Title Ok returns a tuple with the Title field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title returns a boolean if a field has been set 
Get Title Align returns the Title Align field if non nil zero value otherwise 
Get Title Align Ok returns a tuple with the Title Align field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Align returns a boolean if a field has been set 
Get Title Size returns the Title Size field if non nil zero value otherwise 
Get Title Size Ok returns a tuple with the Title Size field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Size returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Get Type Ok returns a tuple with the Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Type returns a boolean if a field has been set 
Get Viz Type returns the Viz Type field if non nil zero value otherwise 
Get Viz Type Ok returns a tuple with the Viz Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Viz Type returns a boolean if a field has been set 
Get Alert Id returns the Alert Id field if non nil zero value otherwise 
Get Alert Id Ok returns a tuple with the Alert Id field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Alert Id returns a boolean if a field has been set 
Get Precision returns the Precision field if non nil zero value otherwise 
Get Precision Ok returns a tuple with the Precision field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Precision returns a boolean if a field has been set 
Get Text Align returns the Text Align field if non nil zero value otherwise 
Get Text Align Ok returns a tuple with the Text Align field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Text Align returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Has Title returns a boolean if a field has been set 
Get Title Align returns the Title Align field if non nil zero value otherwise 
Has Title Align returns a boolean if a field has been set 
Get Title Size returns the Title Size field if non nil zero value otherwise 
Has Title Size returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Unit returns the Unit field if non nil zero value otherwise 
Get Unit Ok returns a tuple with the Unit field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Unit returns a boolean if a field has been set 
Get Created returns the Created field if non nil zero value otherwise 
Get Created Ok returns a tuple with the Created field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Created returns a boolean if a field has been set 
Get Created By returns the Created By field if non nil zero value otherwise 
Get Created By Ok returns a tuple with the Created By field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Created By returns a boolean if a field has been set 
Get Key returns the Key field if non nil zero value otherwise 
Get Key Ok returns a tuple with the Key field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Key returns a boolean if a field has been set 
Get Name returns the Name field if non nil zero value otherwise 
Has Name returns a boolean if a field has been set 
Get Aggregation returns the Aggregation field if non nil zero value otherwise 
Get Aggregation Ok returns a tuple with the Aggregation field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Aggregation returns a boolean if a field has been set 
Get Facet returns the Facet field if non nil zero value otherwise 
Has Facet returns a boolean if a field has been set 
Get Interval returns the Interval field if non nil zero value otherwise 
Get Interval Ok returns a tuple with the Interval field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Interval returns a boolean if a field has been set 
Get Facet returns the Facet field if non nil zero value otherwise 
Get Facet Ok returns a tuple with the Facet field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Facet returns a boolean if a field has been set 
Get Limit returns the Limit field if non nil zero value otherwise 
Get Limit Ok returns a tuple with the Limit field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Limit returns a boolean if a field has been set 
Get Sort returns the Sort field if non nil zero value otherwise 
Get Sort Ok returns a tuple with the Sort field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Sort returns a boolean if a field has been set 
Get Aggregation returns the Aggregation field if non nil zero value otherwise 
Has Aggregation returns a boolean if a field has been set 
Get Facet returns the Facet field if non nil zero value otherwise 
Has Facet returns a boolean if a field has been set 
Get Order returns the Order field if non nil zero value otherwise 
Get Order Ok returns a tuple with the Order field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Order returns a boolean if a field has been set 
Get Query returns the Query field if non nil zero value otherwise 
Has Query returns a boolean if a field has been set 
Get Author Handle returns the Author Handle field if non nil zero value otherwise 
Get Author Handle Ok returns a tuple with the Author Handle field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Author Handle returns a boolean if a field has been set 
Get Created At returns the Created At field if non nil zero value otherwise 
Get Created At Ok returns a tuple with the Created At field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Created At returns a boolean if a field has been set 
Get Description returns the Description field if non nil zero value otherwise 
Get Description Ok returns a tuple with the Description field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Description returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Get Id Ok returns a tuple with the Id field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Id returns a boolean if a field has been set 
Get Is Read Only returns the Is Read Only field if non nil zero value otherwise 
Get Is Read Only Ok returns a tuple with the Is Read Only field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Is Read Only returns a boolean if a field has been set 
Get Layout Type returns the Layout Type field if non nil zero value otherwise 
Get Layout Type Ok returns a tuple with the Layout Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Layout Type returns a boolean if a field has been set 
Get Modified At returns the Modified At field if non nil zero value otherwise 
Get Modified At Ok returns a tuple with the Modified At field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Modified At returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Get Title Ok returns a tuple with the Title field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title returns a boolean if a field has been set 
Get Url returns the Url field if non nil zero value otherwise 
Get Url Ok returns a tuple with the Url field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Url returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Get Id Ok returns a tuple with the Id field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Id returns a boolean if a field has been set 
Get Layout returns the Layout field if non nil zero value otherwise 
Get Layout Ok returns a tuple with the Layout field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Layout returns a boolean if a field has been set 
Get Time returns the Time field if non nil zero value otherwise 
Has Time returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Has Title returns a boolean if a field has been set 
Get Title Align returns the Title Align field if non nil zero value otherwise 
Has Title Align returns a boolean if a field has been set 
Get Title Size returns the Title Size field if non nil zero value otherwise 
Has Title Size returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Apm Query returns the Apm Query field if non nil zero value otherwise 
Get Apm Query Ok returns a tuple with the Apm Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Apm Query returns a boolean if a field has been set 
Get Change Type returns the Change Type field if non nil zero value otherwise 
Get Change Type Ok returns a tuple with the Change Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Change Type returns a boolean if a field has been set 
Get Compare To returns the Compare To field if non nil zero value otherwise 
Get Compare To Ok returns a tuple with the Compare To field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Compare To returns a boolean if a field has been set 
Get Increase Good returns the Increase Good field if non nil zero value otherwise 
Get Increase Good Ok returns a tuple with the Increase Good field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Increase Good returns a boolean if a field has been set 
Get Log Query returns the Log Query field if non nil zero value otherwise 
Get Log Query Ok returns a tuple with the Log Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Log Query returns a boolean if a field has been set 
Get Metric Query returns the Metric Query field if non nil zero value otherwise 
Get Metric Query Ok returns a tuple with the Metric Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Metric Query returns a boolean if a field has been set 
Get Order By returns the Order By field if non nil zero value otherwise 
Get Order By Ok returns a tuple with the Order By field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Order By returns a boolean if a field has been set 
Get Order Dir returns the Order Dir field if non nil zero value otherwise 
Get Order Dir Ok returns a tuple with the Order Dir field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Order Dir returns a boolean if a field has been set 
Get Process Query returns the Process Query field if non nil zero value otherwise 
Get Process Query Ok returns a tuple with the Process Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Process Query returns a boolean if a field has been set 
Get Show Present returns the Show Present field if non nil zero value otherwise 
Get Show Present Ok returns a tuple with the Show Present field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Show Present returns a boolean if a field has been set 
Get Account returns the Account field if non nil zero value otherwise 
Get Account Ok returns a tuple with the Account field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Account returns a boolean if a field has been set 
Get Channel Name returns the Channel Name field if non nil zero value otherwise 
Get Channel Name Ok returns a tuple with the Channel Name field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Channel Name returns a boolean if a field has been set 
Get Transfer All User Comments returns the Transfer All User Comments field if non nil zero value otherwise 
Get Transfer All User Comments Ok returns a tuple with the Transfer All User Comments field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Transfer All User Comments returns a boolean if a field has been set 
Get Check returns the Check field if non nil zero value otherwise 
Get Host Name returns the Host Name field if non nil zero value otherwise 
Get Host Name Ok returns a tuple with the Host Name field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Host Name returns a boolean if a field has been set 
Get Message returns the Message field if non nil zero value otherwise 
Has Message returns a boolean if a field has been set 
Get Status returns the Status field if non nil zero value otherwise 
Get Status Ok returns a tuple with the Status field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Status returns a boolean if a field has been set 
Get Timestamp returns the Timestamp field if non nil zero value otherwise 
Get Timestamp Ok returns a tuple with the Timestamp field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Timestamp returns a boolean if a field has been set 
Get Check Ok returns a tuple with the Check field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Check returns a boolean if a field has been set 
Get Group returns the Group field if non nil zero value otherwise 
Get Group Ok returns a tuple with the Group field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Group returns a boolean if a field has been set 
Get Grouping returns the Grouping field if non nil zero value otherwise 
Get Grouping Ok returns a tuple with the Grouping field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Grouping returns a boolean if a field has been set 
Get Time returns the Time field if non nil zero value otherwise 
Get Time Ok returns a tuple with the Time field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Time returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Get Title Ok returns a tuple with the Title field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title returns a boolean if a field has been set 
Get Title Align returns the Title Align field if non nil zero value otherwise 
Get Title Align Ok returns a tuple with the Title Align field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Align returns a boolean if a field has been set 
Get Title Size returns the Title Size field if non nil zero value otherwise 
Get Title Size Ok returns a tuple with the Title Size field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Size returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Get Type Ok returns a tuple with the Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Type returns a boolean if a field has been set 
Get Handle returns the Handle field if non nil zero value otherwise 
Get Handle Ok returns a tuple with the Handle field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Handle returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Get Id Ok returns a tuple with the Id field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Id returns a boolean if a field has been set 
Get Message returns the Message field if non nil zero value otherwise 
Get Message Ok returns a tuple with the Message field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Message returns a boolean if a field has been set 
Get Related Id returns the Related Id field if non nil zero value otherwise 
Get Related Id Ok returns a tuple with the Related Id field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Related Id returns a boolean if a field has been set 
Get Resource returns the Resource field if non nil zero value otherwise 
Get Resource Ok returns a tuple with the Resource field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Resource returns a boolean if a field has been set 
Get Url returns the Url field if non nil zero value otherwise 
Get Url Ok returns a tuple with the Url field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Url returns a boolean if a field has been set 
Get Color returns the Color field if non nil zero value otherwise 
Get Color Ok returns a tuple with the Color field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Color returns a boolean if a field has been set 
Get Comparator returns the Comparator field if non nil zero value otherwise 
Get Comparator Ok returns a tuple with the Comparator field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Comparator returns a boolean if a field has been set 
Get Image URL returns the Image URL field if non nil zero value otherwise 
Get Image URLOk returns a tuple with the Image URL field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Image URL returns a boolean if a field has been set 
Get Invert returns the Invert field if non nil zero value otherwise 
Get Invert Ok returns a tuple with the Invert field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Invert returns a boolean if a field has been set 
Get Palette returns the Palette field if non nil zero value otherwise 
Get Palette Ok returns a tuple with the Palette field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Palette returns a boolean if a field has been set 
Get Value returns the Value field if non nil zero value otherwise 
Get Value Ok returns a tuple with the Value field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Value returns a boolean if a field has been set 
Get Access Role returns the Access Role field if non nil zero value otherwise 
Get Access Role Ok returns a tuple with the Access Role field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Access Role returns a boolean if a field has been set 
Get Disabled returns the Disabled field if non nil zero value otherwise 
Get Disabled Ok returns a tuple with the Disabled field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Disabled returns a boolean if a field has been set 
Get Email returns the Email field if non nil zero value otherwise 
Get Email Ok returns a tuple with the Email field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Email returns a boolean if a field has been set 
Get Handle returns the Handle field if non nil zero value otherwise 
Has Handle returns a boolean if a field has been set 
Get Icon returns the Icon field if non nil zero value otherwise 
Get Icon Ok returns a tuple with the Icon field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Icon returns a boolean if a field has been set 
Get Is Admin returns the Is Admin field if non nil zero value otherwise 
Get Is Admin Ok returns a tuple with the Is Admin field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Is Admin returns a boolean if a field has been set 
Get Name returns the Name field if non nil zero value otherwise 
Has Name returns a boolean if a field has been set 
Get Role returns the Role field if non nil zero value otherwise 
Get Role Ok returns a tuple with the Role field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Role returns a boolean if a field has been set 
Get Verified returns the Verified field if non nil zero value otherwise 
Get Verified Ok returns a tuple with the Verified field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Verified returns a boolean if a field has been set 
Get Email returns the Email field if non nil zero value otherwise 
Has Email returns a boolean if a field has been set 
Get Handle returns the Handle field if non nil zero value otherwise 
Has Handle returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Has Id returns a boolean if a field has been set 
Get Name returns the Name field if non nil zero value otherwise 
Get Name Ok returns a tuple with the Name field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Name returns a boolean if a field has been set 
Get Description returns the Description field if non nil zero value otherwise 
Has Description returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Has Id returns a boolean if a field has been set 
Get New Id returns the New Id field if non nil zero value otherwise 
Get New Id Ok returns a tuple with the New Id field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has New Id returns a boolean if a field has been set 
Get Read Only returns the Read Only field if non nil zero value otherwise 
Get Read Only Ok returns a tuple with the Read Only field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Read Only returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Has Title returns a boolean if a field has been set 
Get Comparator returns the Comparator field if non nil zero value otherwise 
Get Comparator Ok returns a tuple with the Comparator field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Comparator returns a boolean if a field has been set 
Get Custom Bg Color returns the Custom Bg Color field if non nil zero value otherwise 
Get Custom Bg Color Ok returns a tuple with the Custom Bg Color field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Custom Bg Color returns a boolean if a field has been set 
Get Custom Fg Color returns the Custom Fg Color field if non nil zero value otherwise 
Get Custom Fg Color Ok returns a tuple with the Custom Fg Color field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Custom Fg Color returns a boolean if a field has been set 
Get Custom Image Url returns the Custom Image Url field if non nil zero value otherwise 
Get Custom Image Url Ok returns a tuple with the Custom Image Url field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Custom Image Url returns a boolean if a field has been set 
Get Inverted returns the Inverted field if non nil zero value otherwise 
Get Inverted Ok returns a tuple with the Inverted field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Inverted returns a boolean if a field has been set 
Get Palette returns the Palette field if non nil zero value otherwise 
Get Palette Ok returns a tuple with the Palette field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Palette returns a boolean if a field has been set 
Get Value returns the Value field if non nil zero value otherwise 
Get Value Ok returns a tuple with the Value field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Value returns a boolean if a field has been set 
Get Dashboard Count returns the Dashboard Count field if non nil zero value otherwise 
Get Dashboard Count Ok returns a tuple with the Dashboard Count field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Dashboard Count returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Get Id Ok returns a tuple with the Id field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Id returns a boolean if a field has been set 
Get Name returns the Name field if non nil zero value otherwise 
Get Name Ok returns a tuple with the Name field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Name returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Has Id returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Created returns the Created field if non nil zero value otherwise 
Get Created Ok returns a tuple with the Created field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Created returns a boolean if a field has been set 
Get Created By returns the Created By field if non nil zero value otherwise 
Get Created By Ok returns a tuple with the Created By field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Created By returns a boolean if a field has been set 
Get Description returns the Description field if non nil zero value otherwise 
Get Description Ok returns a tuple with the Description field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Description returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Has Id returns a boolean if a field has been set 
Get Modified returns the Modified field if non nil zero value otherwise 
Get Modified Ok returns a tuple with the Modified field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Modified returns a boolean if a field has been set 
Get Read Only returns the Read Only field if non nil zero value otherwise 
Get Read Only Ok returns a tuple with the Read Only field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Read Only returns a boolean if a field has been set 
Get Resource returns the Resource field if non nil zero value otherwise 
Get Resource Ok returns a tuple with the Resource field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Resource returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Get Title Ok returns a tuple with the Title field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title returns a boolean if a field has been set 
Get Time returns the Time field if non nil zero value otherwise 
Get Time Ok returns a tuple with the Time field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Time returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Has Title returns a boolean if a field has been set 
Get Title Align returns the Title Align field if non nil zero value otherwise 
Get Title Align Ok returns a tuple with the Title Align field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Align returns a boolean if a field has been set 
Get Title Size returns the Title Size field if non nil zero value otherwise 
Get Title Size Ok returns a tuple with the Title Size field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Size returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Get Type Ok returns a tuple with the Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Type returns a boolean if a field has been set 
Get Apm Query returns the Apm Query field if non nil zero value otherwise 
Get Apm Query Ok returns a tuple with the Apm Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Apm Query returns a boolean if a field has been set 
Get Log Query returns the Log Query field if non nil zero value otherwise 
Get Log Query Ok returns a tuple with the Log Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Log Query returns a boolean if a field has been set 
Get Metric Query returns the Metric Query field if non nil zero value otherwise 
Get Metric Query Ok returns a tuple with the Metric Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Metric Query returns a boolean if a field has been set 
Get Process Query returns the Process Query field if non nil zero value otherwise 
Get Process Query Ok returns a tuple with the Process Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Process Query returns a boolean if a field has been set 
Get Style returns the Style field if non nil zero value otherwise 
Get Style Ok returns a tuple with the Style field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Style returns a boolean if a field has been set 
Get Active returns the Active field if non nil zero value otherwise 
Get Active Ok returns a tuple with the Active field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Active returns a boolean if a field has been set 
Get Canceled returns the Canceled field if non nil zero value otherwise 
Get Canceled Ok returns a tuple with the Canceled field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Canceled returns a boolean if a field has been set 
Get Disabled returns the Disabled field if non nil zero value otherwise 
Get Disabled Ok returns a tuple with the Disabled field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Disabled returns a boolean if a field has been set 
Get End returns the End field if non nil zero value otherwise 
Get End Ok returns a tuple with the End field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has End returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Has Id returns a boolean if a field has been set 
Get Message returns the Message field if non nil zero value otherwise 
Get Message Ok returns a tuple with the Message field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Message returns a boolean if a field has been set 
Get Monitor Id returns the Monitor Id field if non nil zero value otherwise 
Get Monitor Id Ok returns a tuple with the Monitor Id field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Monitor Id returns a boolean if a field has been set 
Get Parent Id returns the Parent Id field if non nil zero value otherwise 
Get Parent Id Ok returns a tuple with the Parent Id field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Parent Id returns a boolean if a field has been set 
Get Recurrence returns the Recurrence field if non nil zero value otherwise 
Get Recurrence Ok returns a tuple with the Recurrence field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Recurrence returns a boolean if a field has been set 
Get Start returns the Start field if non nil zero value otherwise 
Get Start Ok returns a tuple with the Start field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Start returns a boolean if a field has been set 
Get Timezone returns the Timezone field if non nil zero value otherwise 
Get Timezone Ok returns a tuple with the Timezone field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Timezone returns a boolean if a field has been set 
Get Aggregation returns the Aggregation field if non nil zero value otherwise 
Get Aggregation Ok returns a tuple with the Aggregation field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Aggregation returns a boolean if a field has been set 
Get Alert Type returns the Alert Type field if non nil zero value otherwise 
Get Alert Type Ok returns a tuple with the Alert Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Alert Type returns a boolean if a field has been set 
Get Event Type returns the Event Type field if non nil zero value otherwise 
Get Event Type Ok returns a tuple with the Event Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Event Type returns a boolean if a field has been set 
Get Host returns the Host field if non nil zero value otherwise 
Get Host Ok returns a tuple with the Host field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Host returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Get Id Ok returns a tuple with the Id field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Id returns a boolean if a field has been set 
Get Priority returns the Priority field if non nil zero value otherwise 
Get Priority Ok returns a tuple with the Priority field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Priority returns a boolean if a field has been set 
Get Resource returns the Resource field if non nil zero value otherwise 
Get Resource Ok returns a tuple with the Resource field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Resource returns a boolean if a field has been set 
Get Source Type returns the Source Type field if non nil zero value otherwise 
Get Source Type Ok returns a tuple with the Source Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Source Type returns a boolean if a field has been set 
Get Text returns the Text field if non nil zero value otherwise 
Get Text Ok returns a tuple with the Text field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Text returns a boolean if a field has been set 
Get Time returns the Time field if non nil zero value otherwise 
Get Time Ok returns a tuple with the Time field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Time returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Has Title returns a boolean if a field has been set 
Get Url returns the Url field if non nil zero value otherwise 
Get Url Ok returns a tuple with the Url field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Url returns a boolean if a field has been set 
Get Event Size returns the Event Size field if non nil zero value otherwise 
Get Event Size Ok returns a tuple with the Event Size field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Event Size returns a boolean if a field has been set 
Get Query returns the Query field if non nil zero value otherwise 
Get Query Ok returns a tuple with the Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Query returns a boolean if a field has been set 
Get Time returns the Time field if non nil zero value otherwise 
Get Time Ok returns a tuple with the Time field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Time returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Get Title Ok returns a tuple with the Title field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title returns a boolean if a field has been set 
Get Title Align returns the Title Align field if non nil zero value otherwise 
Get Title Align Ok returns a tuple with the Title Align field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Align returns a boolean if a field has been set 
Get Title Size returns the Title Size field if non nil zero value otherwise 
Get Title Size Ok returns a tuple with the Title Size field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Size returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Get Type Ok returns a tuple with the Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Type returns a boolean if a field has been set 
Get Query returns the Query field if non nil zero value otherwise 
Has Query returns a boolean if a field has been set 
Get Time returns the Time field if non nil zero value otherwise 
Has Time returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Has Title returns a boolean if a field has been set 
Get Title Align returns the Title Align field if non nil zero value otherwise 
Has Title Align returns a boolean if a field has been set 
Get Title Size returns the Title Size field if non nil zero value otherwise 
Has Title Size returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Color returns the Color field if non nil zero value otherwise 
Get Color Ok returns a tuple with the Color field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Color returns a boolean if a field has been set 
Get Font Size returns the Font Size field if non nil zero value otherwise 
Get Font Size Ok returns a tuple with the Font Size field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Font Size returns a boolean if a field has been set 
Get Text returns the Text field if non nil zero value otherwise 
Get Text Ok returns a tuple with the Text field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Text returns a boolean if a field has been set 
Get Text Align returns the Text Align field if non nil zero value otherwise 
Get Text Align Ok returns a tuple with the Text Align field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Text Align returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Get Type Ok returns a tuple with the Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Type returns a boolean if a field has been set 
Get Definition returns the Definition field if non nil zero value otherwise 
Get Definition Ok returns a tuple with the Definition field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Definition returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Get Title Ok returns a tuple with the Title field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title returns a boolean if a field has been set 
Get Autoscale returns the Autoscale field if non nil zero value otherwise 
Get Autoscale Ok returns a tuple with the Autoscale field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Autoscale returns a boolean if a field has been set 
Get Custom Unit returns the Custom Unit field if non nil zero value otherwise 
Get Custom Unit Ok returns a tuple with the Custom Unit field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Custom Unit returns a boolean if a field has been set 
Get Include No Metric Hosts returns the Include No Metric Hosts field if non nil zero value otherwise 
Get Include No Metric Hosts Ok returns a tuple with the Include No Metric Hosts field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Include No Metric Hosts returns a boolean if a field has been set 
Get Include Ungrouped Hosts returns the Include Ungrouped Hosts field if non nil zero value otherwise 
Get Include Ungrouped Hosts Ok returns a tuple with the Include Ungrouped Hosts field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Include Ungrouped Hosts returns a boolean if a field has been set 
Get Node Type returns the Node Type field if non nil zero value otherwise 
Get Node Type Ok returns a tuple with the Node Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Node Type returns a boolean if a field has been set 
Get Precision returns the Precision field if non nil zero value otherwise 
Get Precision Ok returns a tuple with the Precision field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Precision returns a boolean if a field has been set 
Get Style returns the Style field if non nil zero value otherwise 
Get Style Ok returns a tuple with the Style field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Style returns a boolean if a field has been set 
Get Text Align returns the Text Align field if non nil zero value otherwise 
Get Text Align Ok returns a tuple with the Text Align field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Text Align returns a boolean if a field has been set 
Get Viz returns the Viz field if non nil zero value otherwise 
Get Viz Ok returns a tuple with the Viz field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Viz returns a boolean if a field has been set 
Get Label returns the Label field if non nil zero value otherwise 
Get Label Ok returns a tuple with the Label field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Label returns a boolean if a field has been set 
Get Max returns the Max field if non nil zero value otherwise 
Get Max Ok returns a tuple with the Max field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Max returns a boolean if a field has been set 
Get Min returns the Min field if non nil zero value otherwise 
Get Min Ok returns a tuple with the Min field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Min returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Val returns the Val field if non nil zero value otherwise 
Get Val Ok returns a tuple with the Val field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Val returns a boolean if a field has been set 
Get Value returns the Value field if non nil zero value otherwise 
Get Value Ok returns a tuple with the Value field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Value returns a boolean if a field has been set 
Get Aggregator returns the Aggregator field if non nil zero value otherwise 
Get Aggregator Ok returns a tuple with the Aggregator field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Aggregator returns a boolean if a field has been set 
Get Change Type returns the Change Type field if non nil zero value otherwise 
Get Change Type Ok returns a tuple with the Change Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Change Type returns a boolean if a field has been set 
Get Compare To returns the Compare To field if non nil zero value otherwise 
Get Compare To Ok returns a tuple with the Compare To field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Compare To returns a boolean if a field has been set 
Get Extra Col returns the Extra Col field if non nil zero value otherwise 
Get Extra Col Ok returns a tuple with the Extra Col field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Extra Col returns a boolean if a field has been set 
Get Increase Good returns the Increase Good field if non nil zero value otherwise 
Get Increase Good Ok returns a tuple with the Increase Good field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Increase Good returns a boolean if a field has been set 
Get Order By returns the Order By field if non nil zero value otherwise 
Get Order By Ok returns a tuple with the Order By field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Order By returns a boolean if a field has been set 
Get Order Direction returns the Order Direction field if non nil zero value otherwise 
Get Order Direction Ok returns a tuple with the Order Direction field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Order Direction returns a boolean if a field has been set 
Get Query returns the Query field if non nil zero value otherwise 
Has Query returns a boolean if a field has been set 
Get Stacked returns the Stacked field if non nil zero value otherwise 
Get Stacked Ok returns a tuple with the Stacked field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Stacked returns a boolean if a field has been set 
Get Style returns the Style field if non nil zero value otherwise 
Get Style Ok returns a tuple with the Style field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Style returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Get Type Ok returns a tuple with the Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Type returns a boolean if a field has been set 
Get Palette returns the Palette field if non nil zero value otherwise 
Get Palette Ok returns a tuple with the Palette field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Palette returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Width returns the Width field if non nil zero value otherwise 
Get Width Ok returns a tuple with the Width field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Width returns a boolean if a field has been set 
Get Query returns the Query field if non nil zero value otherwise 
Get Query Ok returns a tuple with the Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Query returns a boolean if a field has been set 
Get Last No Data Ts returns the Last No Data Ts field if non nil zero value otherwise 
Get Last No Data Ts Ok returns a tuple with the Last No Data Ts field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Last No Data Ts returns a boolean if a field has been set 
Get Last Notified Ts returns the Last Notified Ts field if non nil zero value otherwise 
Get Last Notified Ts Ok returns a tuple with the Last Notified Ts field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Last Notified Ts returns a boolean if a field has been set 
Get Last Resolved Ts returns the Last Resolved Ts field if non nil zero value otherwise 
Get Last Resolved Ts Ok returns a tuple with the Last Resolved Ts field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Last Resolved Ts returns a boolean if a field has been set 
Get Last Triggered Ts returns the Last Triggered Ts field if non nil zero value otherwise 
Get Last Triggered Ts Ok returns a tuple with the Last Triggered Ts field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Last Triggered Ts returns a boolean if a field has been set 
Get Name returns the Name field if non nil zero value otherwise 
Get Name Ok returns a tuple with the Name field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Name returns a boolean if a field has been set 
Get Status returns the Status field if non nil zero value otherwise 
Get Status Ok returns a tuple with the Status field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Status returns a boolean if a field has been set 
Get Triggering Value returns the Triggering Value field if non nil zero value otherwise 
Get Triggering Value Ok returns a tuple with the Triggering Value field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Triggering Value returns a boolean if a field has been set 
Get Layout Type returns the Layout Type field if non nil zero value otherwise 
Get Layout Type Ok returns a tuple with the Layout Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Layout Type returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Has Title returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Time returns the Time field if non nil zero value otherwise 
Get Time Ok returns a tuple with the Time field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Time returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Get Title Ok returns a tuple with the Title field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title returns a boolean if a field has been set 
Get Title Align returns the Title Align field if non nil zero value otherwise 
Has Title Align returns a boolean if a field has been set 
Get Title Size returns the Title Size field if non nil zero value otherwise 
Has Title Size returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Get Type Ok returns a tuple with the Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Type returns a boolean if a field has been set 
Get Yaxis returns the Yaxis field if non nil zero value otherwise 
Get Yaxis Ok returns a tuple with the Yaxis field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Yaxis returns a boolean if a field has been set 
Get Apm Query returns the Apm Query field if non nil zero value otherwise 
Has Apm Query returns a boolean if a field has been set 
Get Log Query returns the Log Query field if non nil zero value otherwise 
Get Log Query Ok returns a tuple with the Log Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Log Query returns a boolean if a field has been set 
Get Metric Query returns the Metric Query field if non nil zero value otherwise 
Has Metric Query returns a boolean if a field has been set 
Get Process Query returns the Process Query field if non nil zero value otherwise 
Get Process Query Ok returns a tuple with the Process Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Process Query returns a boolean if a field has been set 
Get Style returns the Style field if non nil zero value otherwise 
Get Style Ok returns a tuple with the Style field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Style returns a boolean if a field has been set 
Get End Time returns the End Time field if non nil zero value otherwise 
Get End Time Ok returns a tuple with the End Time field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has End Time returns a boolean if a field has been set 
Get Message returns the Message field if non nil zero value otherwise 
Get Message Ok returns a tuple with the Message field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Message returns a boolean if a field has been set 
Get Override returns the Override field if non nil zero value otherwise 
Get Override Ok returns a tuple with the Override field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Override returns a boolean if a field has been set 
Get Node Type returns the Node Type field if non nil zero value otherwise 
Get Node Type Ok returns a tuple with the Node Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Node Type returns a boolean if a field has been set 
Get No Group Hosts returns the No Group Hosts field if non nil zero value otherwise 
Get No Group Hosts Ok returns a tuple with the No Group Hosts field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has No Group Hosts returns a boolean if a field has been set 
Get No Metric Hosts returns the No Metric Hosts field if non nil zero value otherwise 
Get No Metric Hosts Ok returns a tuple with the No Metric Hosts field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has No Metric Hosts returns a boolean if a field has been set 
Get Requests returns the Requests field if non nil zero value otherwise 
Get Requests Ok returns a tuple with the Requests field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Requests returns a boolean if a field has been set 
Get Style returns the Style field if non nil zero value otherwise 
Get Style Ok returns a tuple with the Style field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Style returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Has Title returns a boolean if a field has been set 
Get Title Align returns the Title Align field if non nil zero value otherwise 
Get Title Align Ok returns a tuple with the Title Align field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Align returns a boolean if a field has been set 
Get Title Size returns the Title Size field if non nil zero value otherwise 
Get Title Size Ok returns a tuple with the Title Size field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Size returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Apm Query returns the Apm Query field if non nil zero value otherwise 
Get Apm Query Ok returns a tuple with the Apm Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Apm Query returns a boolean if a field has been set 
Get Log Query returns the Log Query field if non nil zero value otherwise 
Has Log Query returns a boolean if a field has been set 
Get Metric Query returns the Metric Query field if non nil zero value otherwise 
Get Metric Query Ok returns a tuple with the Metric Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Metric Query returns a boolean if a field has been set 
Get Process Query returns the Process Query field if non nil zero value otherwise 
Has Process Query returns a boolean if a field has been set 
Get Fill returns the Fill field if non nil zero value otherwise 
Get Fill Ok returns a tuple with the Fill field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Fill returns a boolean if a field has been set 
Get Size returns the Size field if non nil zero value otherwise 
Get Size Ok returns a tuple with the Size field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Size returns a boolean if a field has been set 
Get Fill Max returns the Fill Max field if non nil zero value otherwise 
Get Fill Max Ok returns a tuple with the Fill Max field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Fill Max returns a boolean if a field has been set 
Get Fill Min returns the Fill Min field if non nil zero value otherwise 
Get Fill Min Ok returns a tuple with the Fill Min field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Fill Min returns a boolean if a field has been set 
Get Palette returns the Palette field if non nil zero value otherwise 
Get Palette Ok returns a tuple with the Palette field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Palette returns a boolean if a field has been set 
Get Palette Flip returns the Palette Flip field if non nil zero value otherwise 
Get Palette Flip Ok returns a tuple with the Palette Flip field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Palette Flip returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Get Type Ok returns a tuple with the Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Type returns a boolean if a field has been set 
Get Url returns the Url field if non nil zero value otherwise 
Has Url returns a boolean if a field has been set 
Get Margin returns the Margin field if non nil zero value otherwise 
Get Margin Ok returns a tuple with the Margin field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Margin returns a boolean if a field has been set 
Get Sizing returns the Sizing field if non nil zero value otherwise 
Get Sizing Ok returns a tuple with the Sizing field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Sizing returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Url returns the Url field if non nil zero value otherwise 
Get Url Ok returns a tuple with the Url field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Url returns a boolean if a field has been set 
Get Account ID returns the Account ID field if non nil zero value otherwise 
Has Account ID returns a boolean if a field has been set 
Get Role Name returns the Role Name field if non nil zero value otherwise 
Get Role Name Ok returns a tuple with the Role Name field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Role Name returns a boolean if a field has been set 
Get Account ID returns the Account ID field if non nil zero value otherwise 
Get Account IDOk returns a tuple with the Account ID field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Account ID returns a boolean if a field has been set 
Get Role Name returns the Role Name field if non nil zero value otherwise 
Has Role Name returns a boolean if a field has been set 
Get Client Email returns the Client Email field if non nil zero value otherwise 
Has Client Email returns a boolean if a field has been set 
Get Host Filters returns the Host Filters field if non nil zero value otherwise 
Has Host Filters returns a boolean if a field has been set 
Get Project ID returns the Project ID field if non nil zero value otherwise 
Has Project ID returns a boolean if a field has been set 
Get Auth Provider X Cert URL returns the Auth Provider X Cert URL field if non nil zero value otherwise 
Get Auth Provider X Cert URLOk returns a tuple with the Auth Provider X Cert URL field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Auth Provider X Cert URL returns a boolean if a field has been set 
Get Auth URI returns the Auth URI field if non nil zero value otherwise 
Get Auth URIOk returns a tuple with the Auth URI field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Auth URI returns a boolean if a field has been set 
Get Client Email returns the Client Email field if non nil zero value otherwise 
Has Client Email returns a boolean if a field has been set 
Get Client ID returns the Client ID field if non nil zero value otherwise 
Get Client IDOk returns a tuple with the Client ID field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Client ID returns a boolean if a field has been set 
Get Client X Cert URL returns the Client X Cert URL field if non nil zero value otherwise 
Get Client X Cert URLOk returns a tuple with the Client X Cert URL field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Client X Cert URL returns a boolean if a field has been set 
Get Host Filters returns the Host Filters field if non nil zero value otherwise 
Get Host Filters Ok returns a tuple with the Host Filters field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Host Filters returns a boolean if a field has been set 
Get Private Key returns the Private Key field if non nil zero value otherwise 
Get Private Key Ok returns a tuple with the Private Key field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Private Key returns a boolean if a field has been set 
Get Private Key ID returns the Private Key ID field if non nil zero value otherwise 
Get Private Key IDOk returns a tuple with the Private Key ID field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Private Key ID returns a boolean if a field has been set 
Get Project ID returns the Project ID field if non nil zero value otherwise 
Has Project ID returns a boolean if a field has been set 
Get Token URI returns the Token URI field if non nil zero value otherwise 
Get Token URIOk returns a tuple with the Token URI field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Token URI returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Client Email returns the Client Email field if non nil zero value otherwise 
Get Client Email Ok returns a tuple with the Client Email field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Client Email returns a boolean if a field has been set 
Get Project ID returns the Project ID field if non nil zero value otherwise 
Has Project ID returns a boolean if a field has been set 
Get Client Email returns the Client Email field if non nil zero value otherwise 
Has Client Email returns a boolean if a field has been set 
Get Host Filters returns the Host Filters field if non nil zero value otherwise 
Has Host Filters returns a boolean if a field has been set 
Get Project ID returns the Project ID field if non nil zero value otherwise 
Get Project IDOk returns a tuple with the Project ID field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Project ID returns a boolean if a field has been set 
Get APIToken returns the APIToken field if non nil zero value otherwise 
Get APIToken Ok returns a tuple with the APIToken field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has APIToken returns a boolean if a field has been set 
Get Subdomain returns the Subdomain field if non nil zero value otherwise 
Get Subdomain Ok returns a tuple with the Subdomain field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Subdomain returns a boolean if a field has been set 
Get APIToken returns the APIToken field if non nil zero value otherwise 
Has APIToken returns a boolean if a field has been set 
Get Run Check returns the Run Check field if non nil zero value otherwise 
Get Run Check Ok returns a tuple with the Run Check field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Run Check returns a boolean if a field has been set 
Get Subdomain returns the Subdomain field if non nil zero value otherwise 
Has Subdomain returns a boolean if a field has been set 
Get Run Check returns the Run Check field if non nil zero value otherwise 
Get Run Check Ok returns a tuple with the Run Check field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Run Check returns a boolean if a field has been set 
Get ID returns the ID field if non nil zero value otherwise 
Get IDOk returns a tuple with the ID field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has ID returns a boolean if a field has been set 
Get Name returns the Name field if non nil zero value otherwise 
Get Name Ok returns a tuple with the Name field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Name returns a boolean if a field has been set 
Get Logset returns the Logset field if non nil zero value otherwise 
Get Logset Ok returns a tuple with the Logset field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Logset returns a boolean if a field has been set 
Get Query returns the Query field if non nil zero value otherwise 
Get Query Ok returns a tuple with the Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Query returns a boolean if a field has been set 
Get Time returns the Time field if non nil zero value otherwise 
Get Time Ok returns a tuple with the Time field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Time returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Get Title Ok returns a tuple with the Title field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title returns a boolean if a field has been set 
Get Title Align returns the Title Align field if non nil zero value otherwise 
Get Title Align Ok returns a tuple with the Title Align field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Align returns a boolean if a field has been set 
Get Title Size returns the Title Size field if non nil zero value otherwise 
Get Title Size Ok returns a tuple with the Title Size field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Size returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Get Type Ok returns a tuple with the Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Type returns a boolean if a field has been set 
Get Color Preference returns the Color Preference field if non nil zero value otherwise 
Get Color Preference Ok returns a tuple with the Color Preference field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Color Preference returns a boolean if a field has been set 
Get Count returns the Count field if non nil zero value otherwise 
Get Count Ok returns a tuple with the Count field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Count returns a boolean if a field has been set 
Get Display Format returns the Display Format field if non nil zero value otherwise 
Get Display Format Ok returns a tuple with the Display Format field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Display Format returns a boolean if a field has been set 
Get Hide Zero Counts returns the Hide Zero Counts field if non nil zero value otherwise 
Get Hide Zero Counts Ok returns a tuple with the Hide Zero Counts field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Hide Zero Counts returns a boolean if a field has been set 
Get Query returns the Query field if non nil zero value otherwise 
Get Query Ok returns a tuple with the Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Query returns a boolean if a field has been set 
Get Sort returns the Sort field if non nil zero value otherwise 
Get Sort Ok returns a tuple with the Sort field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Sort returns a boolean if a field has been set 
Get Start returns the Start field if non nil zero value otherwise 
Get Start Ok returns a tuple with the Start field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Start returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Get Title Ok returns a tuple with the Title field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title returns a boolean if a field has been set 
Get Title Align returns the Title Align field if non nil zero value otherwise 
Get Title Align Ok returns a tuple with the Title Align field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Align returns a boolean if a field has been set 
Get Title Size returns the Title Size field if non nil zero value otherwise 
Get Title Size Ok returns a tuple with the Title Size field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Size returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Get Type Ok returns a tuple with the Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Type returns a boolean if a field has been set 
Get Host returns the Host field if non nil zero value otherwise 
Get Host Ok returns a tuple with the Host field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Host returns a boolean if a field has been set 
Get Metric returns the Metric field if non nil zero value otherwise 
Get Metric Ok returns a tuple with the Metric field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Metric returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Unit returns the Unit field if non nil zero value otherwise 
Has Unit returns a boolean if a field has been set 
Get Description returns the Description field if non nil zero value otherwise 
Get Description Ok returns a tuple with the Description field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Description returns a boolean if a field has been set 
Get Per Unit returns the Per Unit field if non nil zero value otherwise 
Get Per Unit Ok returns a tuple with the Per Unit field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Per Unit returns a boolean if a field has been set 
Get Short Name returns the Short Name field if non nil zero value otherwise 
Get Short Name Ok returns a tuple with the Short Name field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Short Name returns a boolean if a field has been set 
Get Statsd Interval returns the Statsd Interval field if non nil zero value otherwise 
Get Statsd Interval Ok returns a tuple with the Statsd Interval field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Statsd Interval returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Unit returns the Unit field if non nil zero value otherwise 
Get Unit Ok returns a tuple with the Unit field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Unit returns a boolean if a field has been set 
Get Creator returns the Creator field if non nil zero value otherwise 
Get Creator Ok returns a tuple with the Creator field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Creator returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Get Id Ok returns a tuple with the Id field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Id returns a boolean if a field has been set 
Get Message returns the Message field if non nil zero value otherwise 
Get Message Ok returns a tuple with the Message field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Message returns a boolean if a field has been set 
Get Name returns the Name field if non nil zero value otherwise 
Get Name Ok returns a tuple with the Name field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Name returns a boolean if a field has been set 
Get Options returns the Options field if non nil zero value otherwise 
Get Options Ok returns a tuple with the Options field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Options returns a boolean if a field has been set 
Get Overall State returns the Overall State field if non nil zero value otherwise 
Get Overall State Ok returns a tuple with the Overall State field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Overall State returns a boolean if a field has been set 
Get Overall State Modified returns the Overall State Modified field if non nil zero value otherwise 
Get Overall State Modified Ok returns a tuple with the Overall State Modified field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Overall State Modified returns a boolean if a field has been set 
Get Query returns the Query field if non nil zero value otherwise 
Has Query returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Background Color returns the Background Color field if non nil zero value otherwise 
Get Background Color Ok returns a tuple with the Background Color field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Background Color returns a boolean if a field has been set 
Get Content returns the Content field if non nil zero value otherwise 
Get Content Ok returns a tuple with the Content field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Content returns a boolean if a field has been set 
Get Font Size returns the Font Size field if non nil zero value otherwise 
Get Font Size Ok returns a tuple with the Font Size field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Font Size returns a boolean if a field has been set 
Get Show Tick returns the Show Tick field if non nil zero value otherwise 
Get Show Tick Ok returns a tuple with the Show Tick field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Show Tick returns a boolean if a field has been set 
Get Text Align returns the Text Align field if non nil zero value otherwise 
Get Text Align Ok returns a tuple with the Text Align field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Text Align returns a boolean if a field has been set 
Get Tick Edge returns the Tick Edge field if non nil zero value otherwise 
Get Tick Edge Ok returns a tuple with the Tick Edge field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Tick Edge returns a boolean if a field has been set 
Get Tick Pos returns the Tick Pos field if non nil zero value otherwise 
Get Tick Pos Ok returns a tuple with the Tick Pos field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Tick Pos returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Get Type Ok returns a tuple with the Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Type returns a boolean if a field has been set 
Get Enable Logs Sample returns the Enable Logs Sample field if non nil zero value otherwise 
Get Enable Logs Sample Ok returns a tuple with the Enable Logs Sample field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Enable Logs Sample returns a boolean if a field has been set 
Get Escalation Message returns the Escalation Message field if non nil zero value otherwise 
Get Escalation Message Ok returns a tuple with the Escalation Message field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Escalation Message returns a boolean if a field has been set 
Get Evaluation Delay returns the Evaluation Delay field if non nil zero value otherwise 
Get Evaluation Delay Ok returns a tuple with the Evaluation Delay field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Evaluation Delay returns a boolean if a field has been set 
Get Include Tags returns the Include Tags field if non nil zero value otherwise 
Get Include Tags Ok returns a tuple with the Include Tags field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Include Tags returns a boolean if a field has been set 
Get Locked returns the Locked field if non nil zero value otherwise 
Get Locked Ok returns a tuple with the Locked field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Locked returns a boolean if a field has been set 
Get New Host Delay returns the New Host Delay field if non nil zero value otherwise 
Get New Host Delay Ok returns a tuple with the New Host Delay field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has New Host Delay returns a boolean if a field has been set 
Get Notify Audit returns the Notify Audit field if non nil zero value otherwise 
Get Notify Audit Ok returns a tuple with the Notify Audit field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Notify Audit returns a boolean if a field has been set 
Get Notify No Data returns the Notify No Data field if non nil zero value otherwise 
Get Notify No Data Ok returns a tuple with the Notify No Data field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Notify No Data returns a boolean if a field has been set 
Get Query Config returns the Query Config field if non nil zero value otherwise 
Get Query Config Ok returns a tuple with the Query Config field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Query Config returns a boolean if a field has been set 
Get Renotify Interval returns the Renotify Interval field if non nil zero value otherwise 
Get Renotify Interval Ok returns a tuple with the Renotify Interval field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Renotify Interval returns a boolean if a field has been set 
Get Require Full Window returns the Require Full Window field if non nil zero value otherwise 
Get Require Full Window Ok returns a tuple with the Require Full Window field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Require Full Window returns a boolean if a field has been set 
Get Thresholds returns the Thresholds field if non nil zero value otherwise 
Get Thresholds Ok returns a tuple with the Thresholds field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Thresholds returns a boolean if a field has been set 
Get Threshold Windows returns the Threshold Windows field if non nil zero value otherwise 
Get Threshold Windows Ok returns a tuple with the Threshold Windows field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Threshold Windows returns a boolean if a field has been set 
Get Timeout H returns the Timeout H field if non nil zero value otherwise 
Get Timeout HOk returns a tuple with the Timeout H field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Timeout H returns a boolean if a field has been set 
Get Count returns the Count field if non nil zero value otherwise 
Get Count Ok returns a tuple with the Count field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Count returns a boolean if a field has been set 
Get Sort returns the Sort field if non nil zero value otherwise 
Get Sort Ok returns a tuple with the Sort field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Sort returns a boolean if a field has been set 
Get Start returns the Start field if non nil zero value otherwise 
Get Start Ok returns a tuple with the Start field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Start returns a boolean if a field has been set 
Get Text returns the Text field if non nil zero value otherwise 
Has Text returns a boolean if a field has been set 
Get Name returns the Name field if non nil zero value otherwise 
Get Name Ok returns a tuple with the Name field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Name returns a boolean if a field has been set 
Get Seconds returns the Seconds field if non nil zero value otherwise 
Get Seconds Ok returns a tuple with the Seconds field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Seconds returns a boolean if a field has been set 
Get Text returns the Text field if non nil zero value otherwise 
Get Text Ok returns a tuple with the Text field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Text returns a boolean if a field has been set 
Get Unit returns the Unit field if non nil zero value otherwise 
Get Unit Ok returns a tuple with the Unit field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Unit returns a boolean if a field has been set 
Get Value returns the Value field if non nil zero value otherwise 
Get Value Ok returns a tuple with the Value field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Value returns a boolean if a field has been set 
Get Log Set returns the Log Set field if non nil zero value otherwise 
Get Log Set Ok returns a tuple with the Log Set field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Log Set returns a boolean if a field has been set 
Get Query Is Failed returns the Query Is Failed field if non nil zero value otherwise 
Get Query Is Failed Ok returns a tuple with the Query Is Failed field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Query Is Failed returns a boolean if a field has been set 
Get Query String returns the Query String field if non nil zero value otherwise 
Get Query String Ok returns a tuple with the Query String field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Query String returns a boolean if a field has been set 
Get Time Range returns the Time Range field if non nil zero value otherwise 
Get Time Range Ok returns a tuple with the Time Range field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Time Range returns a boolean if a field has been set 
Get Autoscale returns the Autoscale field if non nil zero value otherwise 
Get Autoscale Ok returns a tuple with the Autoscale field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Autoscale returns a boolean if a field has been set 
Get Custom Unit returns the Custom Unit field if non nil zero value otherwise 
Get Custom Unit Ok returns a tuple with the Custom Unit field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Custom Unit returns a boolean if a field has been set 
Get Precision returns the Precision field if non nil zero value otherwise 
Get Precision Ok returns a tuple with the Precision field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Precision returns a boolean if a field has been set 
Get Text Align returns the Text Align field if non nil zero value otherwise 
Get Text Align Ok returns a tuple with the Text Align field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Text Align returns a boolean if a field has been set 
Get Time returns the Time field if non nil zero value otherwise 
Get Time Ok returns a tuple with the Time field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Time returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Get Title Ok returns a tuple with the Title field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title returns a boolean if a field has been set 
Get Title Align returns the Title Align field if non nil zero value otherwise 
Get Title Align Ok returns a tuple with the Title Align field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Align returns a boolean if a field has been set 
Get Title Size returns the Title Size field if non nil zero value otherwise 
Get Title Size Ok returns a tuple with the Title Size field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Size returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Get Type Ok returns a tuple with the Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Type returns a boolean if a field has been set 
Get Aggregator returns the Aggregator field if non nil zero value otherwise 
Get Aggregator Ok returns a tuple with the Aggregator field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Aggregator returns a boolean if a field has been set 
Get Apm Query returns the Apm Query field if non nil zero value otherwise 
Get Apm Query Ok returns a tuple with the Apm Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Apm Query returns a boolean if a field has been set 
Get Log Query returns the Log Query field if non nil zero value otherwise 
Get Log Query Ok returns a tuple with the Log Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Log Query returns a boolean if a field has been set 
Get Metric Query returns the Metric Query field if non nil zero value otherwise 
Get Metric Query Ok returns a tuple with the Metric Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Metric Query returns a boolean if a field has been set 
Get Process Query returns the Process Query field if non nil zero value otherwise 
Get Process Query Ok returns a tuple with the Process Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Process Query returns a boolean if a field has been set 
Get Period returns the Period field if non nil zero value otherwise 
Get Period Ok returns a tuple with the Period field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Period returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Get Type Ok returns a tuple with the Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Type returns a boolean if a field has been set 
Get Until Date returns the Until Date field if non nil zero value otherwise 
Get Until Date Ok returns a tuple with the Until Date field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Until Date returns a boolean if a field has been set 
Get Until Occurrences returns the Until Occurrences field if non nil zero value otherwise 
Get Until Occurrences Ok returns a tuple with the Until Occurrences field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Until Occurrences returns a boolean if a field has been set 
Get APIKey returns the APIKey field if non nil zero value otherwise 
Get APIKey Ok returns a tuple with the APIKey field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has APIKey returns a boolean if a field has been set 
Get Comment returns the Comment field if non nil zero value otherwise 
Get Comment Ok returns a tuple with the Comment field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Comment returns a boolean if a field has been set 
Get Dashboard returns the Dashboard field if non nil zero value otherwise 
Get Dashboard Ok returns a tuple with the Dashboard field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Dashboard returns a boolean if a field has been set 
Get Resource returns the Resource field if non nil zero value otherwise 
Get Resource Ok returns a tuple with the Resource field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Resource returns a boolean if a field has been set 
Get Url returns the Url field if non nil zero value otherwise 
Get Url Ok returns a tuple with the Url field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Url returns a boolean if a field has been set 
Get Event returns the Event field if non nil zero value otherwise 
Get Event Ok returns a tuple with the Event field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Event returns a boolean if a field has been set 
Get Tags returns the Tags field if non nil zero value otherwise 
Get Tags Ok returns a tuple with the Tags field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Tags returns a boolean if a field has been set 
Get Color returns the Color field if non nil zero value otherwise 
Get Color Ok returns a tuple with the Color field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Color returns a boolean if a field has been set 
Get Threshold returns the Threshold field if non nil zero value otherwise 
Get Threshold Ok returns a tuple with the Threshold field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Threshold returns a boolean if a field has been set 
Get Timeframe returns the Timeframe field if non nil zero value otherwise 
Get Timeframe Ok returns a tuple with the Timeframe field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Timeframe returns a boolean if a field has been set 
Get Requests returns the Requests field if non nil zero value otherwise 
Get Requests Ok returns a tuple with the Requests field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Requests returns a boolean if a field has been set 
Get Time returns the Time field if non nil zero value otherwise 
Get Time Ok returns a tuple with the Time field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Time returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Has Title returns a boolean if a field has been set 
Get Title Align returns the Title Align field if non nil zero value otherwise 
Get Title Align Ok returns a tuple with the Title Align field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Align returns a boolean if a field has been set 
Get Title Size returns the Title Size field if non nil zero value otherwise 
Get Title Size Ok returns a tuple with the Title Size field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Size returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Get Type Ok returns a tuple with the Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Type returns a boolean if a field has been set 
Get Xaxis returns the Xaxis field if non nil zero value otherwise 
Get Xaxis Ok returns a tuple with the Xaxis field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Xaxis returns a boolean if a field has been set 
Get Yaxis returns the Yaxis field if non nil zero value otherwise 
Get Yaxis Ok returns a tuple with the Yaxis field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Yaxis returns a boolean if a field has been set 
Get Aggregator returns the Aggregator field if non nil zero value otherwise 
Get Aggregator Ok returns a tuple with the Aggregator field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Aggregator returns a boolean if a field has been set 
Get Apm Query returns the Apm Query field if non nil zero value otherwise 
Get Apm Query Ok returns a tuple with the Apm Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Apm Query returns a boolean if a field has been set 
Get Log Query returns the Log Query field if non nil zero value otherwise 
Get Log Query Ok returns a tuple with the Log Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Log Query returns a boolean if a field has been set 
Get Metric Query returns the Metric Query field if non nil zero value otherwise 
Get Metric Query Ok returns a tuple with the Metric Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Metric Query returns a boolean if a field has been set 
Get Process Query returns the Process Query field if non nil zero value otherwise 
Get Process Query Ok returns a tuple with the Process Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Process Query returns a boolean if a field has been set 
Get X returns the X field if non nil zero value otherwise 
Get XOk returns a tuple with the X field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has X returns a boolean if a field has been set 
Get Y returns the Y field if non nil zero value otherwise 
Get YOk returns a tuple with the Y field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Y returns a boolean if a field has been set 
Get Height returns the Height field if non nil zero value otherwise 
Get Height Ok returns a tuple with the Height field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Height returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Has Id returns a boolean if a field has been set 
Get New Id returns the New Id field if non nil zero value otherwise 
Get New Id Ok returns a tuple with the New Id field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has New Id returns a boolean if a field has been set 
Get Read Only returns the Read Only field if non nil zero value otherwise 
Get Read Only Ok returns a tuple with the Read Only field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Read Only returns a boolean if a field has been set 
Get Shared returns the Shared field if non nil zero value otherwise 
Get Shared Ok returns a tuple with the Shared field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Shared returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Get Title Ok returns a tuple with the Title field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title returns a boolean if a field has been set 
Get Width returns the Width field if non nil zero value otherwise 
Get Width Ok returns a tuple with the Width field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Width returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Has Id returns a boolean if a field has been set 
Get Resource returns the Resource field if non nil zero value otherwise 
Get Resource Ok returns a tuple with the Resource field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Resource returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Has Title returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Has Id returns a boolean if a field has been set 
Get Aggr returns the Aggr field if non nil zero value otherwise 
Get Aggr Ok returns a tuple with the Aggr field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Aggr returns a boolean if a field has been set 
Get Display Name returns the Display Name field if non nil zero value otherwise 
Get Display Name Ok returns a tuple with the Display Name field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Display Name returns a boolean if a field has been set 
Get End returns the End field if non nil zero value otherwise 
Get End Ok returns a tuple with the End field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has End returns a boolean if a field has been set 
Get Expression returns the Expression field if non nil zero value otherwise 
Get Expression Ok returns a tuple with the Expression field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Expression returns a boolean if a field has been set 
Get Interval returns the Interval field if non nil zero value otherwise 
Get Interval Ok returns a tuple with the Interval field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Interval returns a boolean if a field has been set 
Get Length returns the Length field if non nil zero value otherwise 
Get Length Ok returns a tuple with the Length field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Length returns a boolean if a field has been set 
Get Metric returns the Metric field if non nil zero value otherwise 
Get Metric Ok returns a tuple with the Metric field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Metric returns a boolean if a field has been set 
Get Scope returns the Scope field if non nil zero value otherwise 
Get Scope Ok returns a tuple with the Scope field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Scope returns a boolean if a field has been set 
Get Start returns the Start field if non nil zero value otherwise 
Get Start Ok returns a tuple with the Start field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Start returns a boolean if a field has been set 
Get Units returns the Units field if non nil zero value otherwise 
Get Units Ok returns a tuple with the Units field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Units returns a boolean if a field has been set 
Get Account returns the Account field if non nil zero value otherwise 
Get Account Ok returns a tuple with the Account field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Account returns a boolean if a field has been set 
Get Url returns the Url field if non nil zero value otherwise 
Get Url Ok returns a tuple with the Url field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Url returns a boolean if a field has been set 
Get Service Key returns the Service Key field if non nil zero value otherwise 
Has Service Key returns a boolean if a field has been set 
Get Service Name returns the Service Name field if non nil zero value otherwise 
Get Service Name Ok returns a tuple with the Service Name field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Service Name returns a boolean if a field has been set 
Get Service Key returns the Service Key field if non nil zero value otherwise 
Get Service Key Ok returns a tuple with the Service Key field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Service Key returns a boolean if a field has been set 
Get Service Name returns the Service Name field if non nil zero value otherwise 
Has Service Name returns a boolean if a field has been set 
Get Fill Max returns the Fill Max field if non nil zero value otherwise 
Get Fill Max Ok returns a tuple with the Fill Max field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Fill Max returns a boolean if a field has been set 
Get Fill Min returns the Fill Min field if non nil zero value otherwise 
Get Fill Min Ok returns a tuple with the Fill Min field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Fill Min returns a boolean if a field has been set 
Get Palette returns the Palette field if non nil zero value otherwise 
Get Palette Ok returns a tuple with the Palette field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Palette returns a boolean if a field has been set 
Get Palette Flip returns the Palette Flip field if non nil zero value otherwise 
Get Palette Flip Ok returns a tuple with the Palette Flip field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Palette Flip returns a boolean if a field has been set 
Get Operator returns the Operator field if non nil zero value otherwise 
Get Operator Ok returns a tuple with the Operator field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Operator returns a boolean if a field has been set 
Get Property returns the Property field if non nil zero value otherwise 
Get Property Ok returns a tuple with the Property field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Property returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Request returns the Request field if non nil zero value otherwise 
Get Request Ok returns a tuple with the Request field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Request returns a boolean if a field has been set 
Get Height returns the Height field if non nil zero value otherwise 
Has Height returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Get Id Ok returns a tuple with the Id field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Id returns a boolean if a field has been set 
Get Is Landscape returns the Is Landscape field if non nil zero value otherwise 
Get Is Landscape Ok returns a tuple with the Is Landscape field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Is Landscape returns a boolean if a field has been set 
Get Is Mobile returns the Is Mobile field if non nil zero value otherwise 
Get Is Mobile Ok returns a tuple with the Is Mobile field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Is Mobile returns a boolean if a field has been set 
Get Name returns the Name field if non nil zero value otherwise 
Get Name Ok returns a tuple with the Name field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Name returns a boolean if a field has been set 
Get User Agent returns the User Agent field if non nil zero value otherwise 
Get User Agent Ok returns a tuple with the User Agent field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has User Agent returns a boolean if a field has been set 
Get Width returns the Width field if non nil zero value otherwise 
Has Width returns a boolean if a field has been set 
Get Display Name returns the Display Name field if non nil zero value otherwise 
Has Display Name returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Has Id returns a boolean if a field has been set 
Get Is Landscape returns the Is Landscape field if non nil zero value otherwise 
Get Is Landscape Ok returns a tuple with the Is Landscape field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Is Landscape returns a boolean if a field has been set 
Get Name returns the Name field if non nil zero value otherwise 
Has Name returns a boolean if a field has been set 
Get Region returns the Region field if non nil zero value otherwise 
Get Region Ok returns a tuple with the Region field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Region returns a boolean if a field has been set 
Get Follow Redirects returns the Follow Redirects field if non nil zero value otherwise 
Get Follow Redirects Ok returns a tuple with the Follow Redirects field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Follow Redirects returns a boolean if a field has been set 
Get Min Failure Duration returns the Min Failure Duration field if non nil zero value otherwise 
Get Min Failure Duration Ok returns a tuple with the Min Failure Duration field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Min Failure Duration returns a boolean if a field has been set 
Get Min Location Failed returns the Min Location Failed field if non nil zero value otherwise 
Get Min Location Failed Ok returns a tuple with the Min Location Failed field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Min Location Failed returns a boolean if a field has been set 
Get Tick Every returns the Tick Every field if non nil zero value otherwise 
Get Tick Every Ok returns a tuple with the Tick Every field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Tick Every returns a boolean if a field has been set 
Get Body returns the Body field if non nil zero value otherwise 
Get Body Ok returns a tuple with the Body field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Body returns a boolean if a field has been set 
Get Method returns the Method field if non nil zero value otherwise 
Get Method Ok returns a tuple with the Method field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Method returns a boolean if a field has been set 
Get Timeout returns the Timeout field if non nil zero value otherwise 
Get Timeout Ok returns a tuple with the Timeout field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Timeout returns a boolean if a field has been set 
Get Url returns the Url field if non nil zero value otherwise 
Has Url returns a boolean if a field has been set 
Get Config returns the Config field if non nil zero value otherwise 
Get Config Ok returns a tuple with the Config field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Config returns a boolean if a field has been set 
Get Created At returns the Created At field if non nil zero value otherwise 
Get Created At Ok returns a tuple with the Created At field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Created At returns a boolean if a field has been set 
Get Created By returns the Created By field if non nil zero value otherwise 
Get Created By Ok returns a tuple with the Created By field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Created By returns a boolean if a field has been set 
Get Deleted At returns the Deleted At field if non nil zero value otherwise 
Get Deleted At Ok returns a tuple with the Deleted At field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Deleted At returns a boolean if a field has been set 
Get Message returns the Message field if non nil zero value otherwise 
Get Message Ok returns a tuple with the Message field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Message returns a boolean if a field has been set 
Get Modified At returns the Modified At field if non nil zero value otherwise 
Get Modified At Ok returns a tuple with the Modified At field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Modified At returns a boolean if a field has been set 
Get Modified By returns the Modified By field if non nil zero value otherwise 
Get Modified By Ok returns a tuple with the Modified By field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Modified By returns a boolean if a field has been set 
Get Monitor Status returns the Monitor Status field if non nil zero value otherwise 
Get Monitor Status Ok returns a tuple with the Monitor Status field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Monitor Status returns a boolean if a field has been set 
Get Name returns the Name field if non nil zero value otherwise 
Has Name returns a boolean if a field has been set 
Get Options returns the Options field if non nil zero value otherwise 
Get Options Ok returns a tuple with the Options field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Options returns a boolean if a field has been set 
Get Public Id returns the Public Id field if non nil zero value otherwise 
Get Public Id Ok returns a tuple with the Public Id field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Public Id returns a boolean if a field has been set 
Get Status returns the Status field if non nil zero value otherwise 
Get Status Ok returns a tuple with the Status field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Status returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Email returns the Email field if non nil zero value otherwise 
Get Email Ok returns a tuple with the Email field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Email returns a boolean if a field has been set 
Get Handle returns the Handle field if non nil zero value otherwise 
Get Handle Ok returns a tuple with the Handle field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Handle returns a boolean if a field has been set 
Get Id returns the Id field if non nil zero value otherwise 
Get Id Ok returns a tuple with the Id field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Id returns a boolean if a field has been set 
Get Name returns the Name field if non nil zero value otherwise 
Has Name returns a boolean if a field has been set 
Get Default returns the Default field if non nil zero value otherwise 
Get Default Ok returns a tuple with the Default field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Default returns a boolean if a field has been set 
Get Name returns the Name field if non nil zero value otherwise 
Get Name Ok returns a tuple with the Name field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Name returns a boolean if a field has been set 
Get Prefix returns the Prefix field if non nil zero value otherwise 
Get Prefix Ok returns a tuple with the Prefix field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Prefix returns a boolean if a field has been set 
Get Critical returns the Critical field if non nil zero value otherwise 
Get Critical Ok returns a tuple with the Critical field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Critical returns a boolean if a field has been set 
Get Critical Recovery returns the Critical Recovery field if non nil zero value otherwise 
Get Critical Recovery Ok returns a tuple with the Critical Recovery field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Critical Recovery returns a boolean if a field has been set 
Get Ok returns the Ok field if non nil zero value otherwise 
Get Ok Ok returns a tuple with the Ok field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Ok returns a boolean if a field has been set 
Get Period returns the Period field if non nil zero value otherwise 
Get Period Ok returns a tuple with the Period field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Period returns a boolean if a field has been set 
Get Time Aggregator returns the Time Aggregator field if non nil zero value otherwise 
Get Time Aggregator Ok returns a tuple with the Time Aggregator field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Time Aggregator returns a boolean if a field has been set 
Get Unknown returns the Unknown field if non nil zero value otherwise 
Get Unknown Ok returns a tuple with the Unknown field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Unknown returns a boolean if a field has been set 
Get Warning returns the Warning field if non nil zero value otherwise 
Get Warning Ok returns a tuple with the Warning field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Warning returns a boolean if a field has been set 
Get Warning Recovery returns the Warning Recovery field if non nil zero value otherwise 
Get Warning Recovery Ok returns a tuple with the Warning Recovery field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Warning Recovery returns a boolean if a field has been set 
Get Recovery Window returns the Recovery Window field if non nil zero value otherwise 
Get Recovery Window Ok returns a tuple with the Recovery Window field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Recovery Window returns a boolean if a field has been set 
Get Trigger Window returns the Trigger Window field if non nil zero value otherwise 
Get Trigger Window Ok returns a tuple with the Trigger Window field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Trigger Window returns a boolean if a field has been set 
Get Autoscale returns the Autoscale field if non nil zero value otherwise 
Get Autoscale Ok returns a tuple with the Autoscale field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Autoscale returns a boolean if a field has been set 
Get Custom Unit returns the Custom Unit field if non nil zero value otherwise 
Get Custom Unit Ok returns a tuple with the Custom Unit field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Custom Unit returns a boolean if a field has been set 
Get Node Type returns the Node Type field if non nil zero value otherwise 
Get Node Type Ok returns a tuple with the Node Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Node Type returns a boolean if a field has been set 
Get No Group Hosts returns the No Group Hosts field if non nil zero value otherwise 
Get No Group Hosts Ok returns a tuple with the No Group Hosts field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has No Group Hosts returns a boolean if a field has been set 
Get No Metric Hosts returns the No Metric Hosts field if non nil zero value otherwise 
Get No Metric Hosts Ok returns a tuple with the No Metric Hosts field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has No Metric Hosts returns a boolean if a field has been set 
Get Precision returns the Precision field if non nil zero value otherwise 
Get Precision Ok returns a tuple with the Precision field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Precision returns a boolean if a field has been set 
Get Style returns the Style field if non nil zero value otherwise 
Get Style Ok returns a tuple with the Style field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Style returns a boolean if a field has been set 
Get Text Align returns the Text Align field if non nil zero value otherwise 
Get Text Align Ok returns a tuple with the Text Align field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Text Align returns a boolean if a field has been set 
Get Viz returns the Viz field if non nil zero value otherwise 
Get Viz Ok returns a tuple with the Viz field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Viz returns a boolean if a field has been set 
Get Query returns the Query field if non nil zero value otherwise 
Get Query Ok returns a tuple with the Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Query returns a boolean if a field has been set 
Get Label returns the Label field if non nil zero value otherwise 
Get Label Ok returns a tuple with the Label field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Label returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Value returns the Value field if non nil zero value otherwise 
Get Value Ok returns a tuple with the Value field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Value returns a boolean if a field has been set 
Get Aggregator returns the Aggregator field if non nil zero value otherwise 
Get Aggregator Ok returns a tuple with the Aggregator field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Aggregator returns a boolean if a field has been set 
Get Change Type returns the Change Type field if non nil zero value otherwise 
Get Change Type Ok returns a tuple with the Change Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Change Type returns a boolean if a field has been set 
Get Compare To returns the Compare To field if non nil zero value otherwise 
Get Compare To Ok returns a tuple with the Compare To field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Compare To returns a boolean if a field has been set 
Get Extra Col returns the Extra Col field if non nil zero value otherwise 
Get Extra Col Ok returns a tuple with the Extra Col field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Extra Col returns a boolean if a field has been set 
Get Increase Good returns the Increase Good field if non nil zero value otherwise 
Get Increase Good Ok returns a tuple with the Increase Good field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Increase Good returns a boolean if a field has been set 
Get Limit returns the Limit field if non nil zero value otherwise 
Get Limit Ok returns a tuple with the Limit field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Limit returns a boolean if a field has been set 
Get Metric returns the Metric field if non nil zero value otherwise 
Get Metric Ok returns a tuple with the Metric field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Metric returns a boolean if a field has been set 
Get Order By returns the Order By field if non nil zero value otherwise 
Get Order By Ok returns a tuple with the Order By field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Order By returns a boolean if a field has been set 
Get Order Dir returns the Order Dir field if non nil zero value otherwise 
Get Order Dir Ok returns a tuple with the Order Dir field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Order Dir returns a boolean if a field has been set 
Get Query returns the Query field if non nil zero value otherwise 
Has Query returns a boolean if a field has been set 
Get Query Type returns the Query Type field if non nil zero value otherwise 
Get Query Type Ok returns a tuple with the Query Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Query Type returns a boolean if a field has been set 
Get Style returns the Style field if non nil zero value otherwise 
Get Style Ok returns a tuple with the Style field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Style returns a boolean if a field has been set 
Get Text Filter returns the Text Filter field if non nil zero value otherwise 
Get Text Filter Ok returns a tuple with the Text Filter field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Text Filter returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Palette returns the Palette field if non nil zero value otherwise 
Get Palette Ok returns a tuple with the Palette field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Palette returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Width returns the Width field if non nil zero value otherwise 
Get Width Ok returns a tuple with the Width field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Width returns a boolean if a field has been set 
Get Fill Max returns the Fill Max field if non nil zero value otherwise 
Get Fill Max Ok returns a tuple with the Fill Max field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Fill Max returns a boolean if a field has been set 
Get Fill Min returns the Fill Min field if non nil zero value otherwise 
Get Fill Min Ok returns a tuple with the Fill Min field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Fill Min returns a boolean if a field has been set 
Get Palette returns the Palette field if non nil zero value otherwise 
Has Palette returns a boolean if a field has been set 
Get Palette Flip returns the Palette Flip field if non nil zero value otherwise 
Get Palette Flip Ok returns a tuple with the Palette Flip field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Palette Flip returns a boolean if a field has been set 
Get Live Span returns the Live Span field if non nil zero value otherwise 
Get Live Span Ok returns a tuple with the Live Span field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Live Span returns a boolean if a field has been set 
Get From returns the From field if non nil zero value otherwise 
Get From Ok returns a tuple with the From field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has From returns a boolean if a field has been set 
Get Live returns the Live field if non nil zero value otherwise 
Get Live Ok returns a tuple with the Live field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Live returns a boolean if a field has been set 
Get To returns the To field if non nil zero value otherwise 
Get To Ok returns a tuple with the To field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has To returns a boolean if a field has been set 
Get Legend Size returns the Legend Size field if non nil zero value otherwise 
Get Legend Size Ok returns a tuple with the Legend Size field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Legend Size returns a boolean if a field has been set 
Get Show Legend returns the Show Legend field if non nil zero value otherwise 
Get Show Legend Ok returns a tuple with the Show Legend field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Show Legend returns a boolean if a field has been set 
Get Time returns the Time field if non nil zero value otherwise 
Has Time returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Get Title Ok returns a tuple with the Title field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title returns a boolean if a field has been set 
Get Title Align returns the Title Align field if non nil zero value otherwise 
Has Title Align returns a boolean if a field has been set 
Get Title Size returns the Title Size field if non nil zero value otherwise 
Get Title Size Ok returns a tuple with the Title Size field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Size returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Yaxis returns the Yaxis field if non nil zero value otherwise 
Get Yaxis Ok returns a tuple with the Yaxis field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Yaxis returns a boolean if a field has been set 
Get Apm Query returns the Apm Query field if non nil zero value otherwise 
Has Apm Query returns a boolean if a field has been set 
Get Display Type returns the Display Type field if non nil zero value otherwise 
Get Display Type Ok returns a tuple with the Display Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Display Type returns a boolean if a field has been set 
Get Log Query returns the Log Query field if non nil zero value otherwise 
Get Log Query Ok returns a tuple with the Log Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Log Query returns a boolean if a field has been set 
Get Metric Query returns the Metric Query field if non nil zero value otherwise 
Get Metric Query Ok returns a tuple with the Metric Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Metric Query returns a boolean if a field has been set 
Get Process Query returns the Process Query field if non nil zero value otherwise 
Get Process Query Ok returns a tuple with the Process Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Process Query returns a boolean if a field has been set 
Get Style returns the Style field if non nil zero value otherwise 
Get Style Ok returns a tuple with the Style field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Style returns a boolean if a field has been set 
Get Line Type returns the Line Type field if non nil zero value otherwise 
Get Line Type Ok returns a tuple with the Line Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Line Type returns a boolean if a field has been set 
Get Line Width returns the Line Width field if non nil zero value otherwise 
Get Line Width Ok returns a tuple with the Line Width field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Line Width returns a boolean if a field has been set 
Get Palette returns the Palette field if non nil zero value otherwise 
Has Palette returns a boolean if a field has been set 
Get New Status returns the New Status field if non nil zero value otherwise 
Get New Status Ok returns a tuple with the New Status field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has New Status returns a boolean if a field has been set 
Get Time returns the Time field if non nil zero value otherwise 
Has Time returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Has Title returns a boolean if a field has been set 
Get Title Align returns the Title Align field if non nil zero value otherwise 
Has Title Align returns a boolean if a field has been set 
Get Title Size returns the Title Size field if non nil zero value otherwise 
Has Title Size returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Has Type returns a boolean if a field has been set 
Get Apm Query returns the Apm Query field if non nil zero value otherwise 
Get Apm Query Ok returns a tuple with the Apm Query field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Apm Query returns a boolean if a field has been set 
Get Log Query returns the Log Query field if non nil zero value otherwise 
Has Log Query returns a boolean if a field has been set 
Get Metric Query returns the Metric Query field if non nil zero value otherwise 
Has Metric Query returns a boolean if a field has been set 
Get Process Query returns the Process Query field if non nil zero value otherwise 
Has Process Query returns a boolean if a field has been set 
Get Style returns the Style field if non nil zero value otherwise 
Get Style Ok returns a tuple with the Style field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Style returns a boolean if a field has been set 
Get Display Format returns the Display Format field if non nil zero value otherwise 
Get Display Format Ok returns a tuple with the Display Format field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Display Format returns a boolean if a field has been set 
Get Env returns the Env field if non nil zero value otherwise 
Get Env Ok returns a tuple with the Env field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Env returns a boolean if a field has been set 
Get Service returns the Service field if non nil zero value otherwise 
Get Service Ok returns a tuple with the Service field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Service returns a boolean if a field has been set 
Get Show Breakdown returns the Show Breakdown field if non nil zero value otherwise 
Get Show Breakdown Ok returns a tuple with the Show Breakdown field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Show Breakdown returns a boolean if a field has been set 
Get Show Distribution returns the Show Distribution field if non nil zero value otherwise 
Get Show Distribution Ok returns a tuple with the Show Distribution field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Show Distribution returns a boolean if a field has been set 
Get Show Errors returns the Show Errors field if non nil zero value otherwise 
Get Show Errors Ok returns a tuple with the Show Errors field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Show Errors returns a boolean if a field has been set 
Get Show Hits returns the Show Hits field if non nil zero value otherwise 
Get Show Hits Ok returns a tuple with the Show Hits field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Show Hits returns a boolean if a field has been set 
Get Show Latency returns the Show Latency field if non nil zero value otherwise 
Get Show Latency Ok returns a tuple with the Show Latency field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Show Latency returns a boolean if a field has been set 
Get Show Resource List returns the Show Resource List field if non nil zero value otherwise 
Get Show Resource List Ok returns a tuple with the Show Resource List field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Show Resource List returns a boolean if a field has been set 
Get Size Format returns the Size Format field if non nil zero value otherwise 
Get Size Format Ok returns a tuple with the Size Format field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Size Format returns a boolean if a field has been set 
Get Span Name returns the Span Name field if non nil zero value otherwise 
Get Span Name Ok returns a tuple with the Span Name field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Span Name returns a boolean if a field has been set 
Get Time returns the Time field if non nil zero value otherwise 
Get Time Ok returns a tuple with the Time field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Time returns a boolean if a field has been set 
Get Title returns the Title field if non nil zero value otherwise 
Has Title returns a boolean if a field has been set 
Get Title Align returns the Title Align field if non nil zero value otherwise 
Get Title Align Ok returns a tuple with the Title Align field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Title Align returns a boolean if a field has been set 
Get Title Size returns the Title Size field if non nil zero value otherwise 
Has Title Size returns a boolean if a field has been set 
Get Type returns the Type field if non nil zero value otherwise 
Get Type Ok returns a tuple with the Type field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Type returns a boolean if a field has been set 
Get From Ts returns the From Ts field if non nil zero value otherwise 
Get From Ts Ok returns a tuple with the From Ts field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has From Ts returns a boolean if a field has been set 
Get To Ts returns the To Ts field if non nil zero value otherwise 
Get To Ts Ok returns a tuple with the To Ts field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has To Ts returns a boolean if a field has been set 
Get Value returns the Value field if non nil zero value otherwise 
Get Value Ok returns a tuple with the Value field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Value returns a boolean if a field has been set 
Get Access Role returns the Access Role field if non nil zero value otherwise 
Get Access Role Ok returns a tuple with the Access Role field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Access Role returns a boolean if a field has been set 
Get Disabled returns the Disabled field if non nil zero value otherwise 
Get Disabled Ok returns a tuple with the Disabled field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Disabled returns a boolean if a field has been set 
Get Email Ok returns a tuple with the Email field if it s non nil zero value otherwise and a boolean to check if the value has been set 
Has Email returns a boolean if a field has been set 
Get Handle returns the Handle field if non nil zero value otherwise 
Get Handle Ok returns a tuple with the Handle field if it s non nil zero value otherwise and a boolean to check if the value has been set 
