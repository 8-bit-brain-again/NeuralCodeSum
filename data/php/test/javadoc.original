Auto generated seed file 
Get the administrator role create it if it does not exists 
Get or create user 
Delete a Menu Item for a given BREAD 
Auto generate Categories Translations 
Auto generate Data Types Translations 
Auto generate Pages Translations 
Auto generate Menus Translations 
Return the Highest Order Menu Item 
Auto generated seed file 
Check if user has an associated permission 
Create a default index name 
Run the migrations 
Reverse the migrations 
handle 
Execute the console command 
Auto generated seed file 
Check if User has a Role s associated 
 param string file 
 param bool basename 
Run the database seeds 
Create a Menu Item for a given BREAD 
Run the migrations 
Run the migrations 
Run the migrations 
Run the migrations 
POST BR E AD 
Update the table 
Updates the table 
Get the table diff to rename columns 
Get the table diff to rename columns and indexes 
Get columns that were renamed 
Get indexes that were renamed 
Method for returning specific thumbnail for model 
Generate thumbnail URL 
Auto generated seed file 
Check if user has an associated permission 
POST BR E AD 
Determine if the given user can change a user a role 
Get a collection of the dashboard widgets 
abstract public static function register Custom Type Options 
Prepare menu translations 
Save changes made to the translator attributes 
Determine if the given model can be viewed by the user 
Auto generated seed file 
Register the application services 
Run the migrations 
Create BREAD 
Store BREAD 
Edit BREAD 
Update BREAD 
Delete BREAD 
Add Relationship 
Get Relationship Field 
Handle password fields 
Store new database table 
Edit database table 
Update database table 
Show table 
Destroy table 
Treat this method as a controller action Return view or other content to display 
Run the migrations 
Reverse the migrations 
Build the URL to sort data type by this field 
 param Illuminate Http Uploaded File file param path 
Auto generated seed file 
Display menu 
Handle an incoming request 
Auto generated seed file 
Check if this model can translate 
Load translations relation 
This scope eager loads the translations for the default and the fallback locale only We can use this as a shortcut to improve performance in our application 
Get a single translated attribute 
Get entries filtered by translated value 
Save translations 
 param string table Name 
Describes given table 
Reverse the migrations 
Auto generated seed file 
Run the migrations 
Create Permission for a given BREAD 
Register the application services 
Bootstrap the application services 
Add storage symlink alert 
Register the commands accessible from the Console 
 
 
 
POST BR E AD 
 
POST BRE A D Store data 
 
Remove translations images and files related to a BREAD item 
Delete all images related to a BREAD item 
Order BREAD items 
Get BREAD relations data 
Replace relationships keys for labels and create READ links if a slug is provided 
Auto generated seed file 
Run the migrations 
Add Soft Delete to the given stub 
Validates bread POST request 
Get fields having validation rules in proper format 
Auto generated seed file 
Revoke an OAuth access token or refresh token This method will revoke the current access token if a token isn t provided 
Verifies an id token and returns the authenticated api Login Ticket Throws an exception if the id token is not valid The audience parameter can be used to control which id tokens are accepted By default the id token must have been issued to this OAuth client 
Retrieve and cache a certificates file 
are PEM encoded certificates 
phpseclib calls phpinfo by default which requires special whitelisting in the App Engine VM environment This function sets constants to bypass the need for phpseclib to check phpinfo 
TODO This function needs simplifying 
Parse expand request parameters and create a fully qualified request uri 
Attempt to exchange a code for an valid authentication token Helper wrapped around the OAuth implementation 
Fetches a fresh access token with a given assertion token 
Fetches a fresh OAuth access token with the given refresh token 
Create a URL to obtain user authorization The authorization endpoint allows the user to first authenticate and then grant deny the access request 
Adds auth listeners to the HTTP client based on the credentials set in the Google API Client object 
Returns if the access token is expired 
If plus login is included in the list of requested scopes you can use this method to define types of app activities that your app will write You can find a list of available types here link https developers google com api moment types 
Revoke an OAuth access token or refresh token This method will revoke the current access token if a token isn t provided 
Verify an id token This method will verify the current id token if one isn t provided 
This functions adds a scope to be requested as part of the OAuth flow Will append any scopes not previously requested to the scope parameter A single string will be treated as a scope to request An array of strings will each be appended 
Helper method to execute deferred HTTP requests 
Set the auth config from new or deprecated JSON config This structure should match the file downloaded from the Download JSON button on in the Google Developer Console 
create a default google auth object 
Runs the task and if applicable automatically retries when errors occur 
Runs a task once if possible This is useful for bypassing the run loop 
Gets the delay in seconds for the current backoff period 
Gets the number of times the associated task can be retried 
Send the next part of the file to upload 
Sends a PUT Request to google drive and parses the response setting the appropiate variables from the response 
Valid upload types resumable UPLOAD RESUMABLE TYPE media UPLOAD MEDIA TYPE multipart UPLOAD MULTIPART TYPE 
Used by the IO lib and also the batch processing 
This function finds the first matching block and executes the replacement It then calls itself to find subsequent blocks if any 
Return the type of a passed in value 
Utility function that merges multiple combine calls for multi key templates 
Utility function to encode and trim values 
Executes a Psr Http Message Request Interface and if applicable automatically retries when errors occur 
Executes a Psr Http Message Request Interface 
Decode an HTTP Response 
Initialize this object s properties from an array 
Create a simplified object suitable for straightforward conversion to JSON This is relatively expensive due to the usage of reflection but shouldn t be called a whole lot and is the most straightforward way to filter 
Handle different types of values primarily other objects and map and array data types 
If there is an internal name mapping use that 
Returns true only if the array is associative 
Builds out a default http handler for the installed version of guzzle 
Find config php either user defined or from standard location 
Define core constants that have not been user defined in config php 
Check if we emulate prepare statements and set bool flag accordingly 
Die with an error message 
Return SQL queries performed 
Extends Aura Sql Profiler add Profile to log queries in our YOURLS logger 
Format PDO statement with bind values replacement 
 Converts an array to an xml string 
 Transform an XML string to associative array XML Parser Functions 
Sets up the translated strings and object properties 
Global variables are deprecated For backwards compatibility only 
Read all options from DB at once return bool 
Get option value from DB or from cache if available Return value or default if not found 
Update add if doesn t exist an option to DB 
Add an option to the DB 
Delete option from DB 
Registers a new constraint with the system Constraints are used by the routes as placeholders for regular expressions to make defining the routes more human friendly 
Sets the default namespace to use for Controllers when no other namespace has been specified 
Sets the default controller to use when no other controller has been specified 
Sets the default method to call on the controller when no other method has been set in the route 
Will attempt to discover any additional routes either through the local PSR namespaces or through selected Composer packages 
Sets the default constraint to be used in the system Typically for use with the resource method 
Returns the raw array of available routes 
Returns one or all routes options 
A shortcut method to add a number of routes at a single time It does not allow any options to be set on the route or to define the method used 
Adds a temporary redirect from one route to another Used for redirecting traffic from old non existing routes to the new moved routes 
Determines if the route is a redirecting route 
Grabs the HTTP status code from a redirecting Route 
Group a series of routes under a single URL segment This is handy for grouping items into an admin area like 
Creates a collections of HTTP verb based routes for a controller 
Specifies a single route to match for multiple HTTP Verbs 
Specifies a route that is only available to OPTIONS requests 
Limits the routes to a specified ENVIRONMENT or they won t run 
Attempts to look up a route based on it s destination 
Returns the filter that should be applied for a single route along with any parameters it might have Parameters are found by splitting the parameter name on a colon to separate the filter name from the parameter list and the splitting the result on commas So 
Given a 
Does the heavy lifting of creating an actual route You must specify the request method s that this route will work for They can be separated by a pipe character if there is more than one 
Compares the subdomain s passed in against the current subdomain on this page request 
Examines the HTTP HOST to get a best match for the subdomain It won t be perfect but should work for our needs 
Reset the routes so that a Feature Test Case can provide the explicit ones needed for it 
Catches any uncaught errors and exceptions including most Fatal errors Yay PHP Will log the error display it if display errors is on and fire an event that allows custom actions to be taken at this point 
Even in PHP some errors make it through to the error Handler so convert these to Exceptions and let the exception handler log it and display it 
Checks to see if any errors have happened during shutdown that need to be caught and handle them 
Determines the view to display based on the exception thrown whether an HTTP or CLI request etc 
Given an exception and status code will display the error to the client 
Gathers the variables that will be made available to the view 
Determines the HTTP status code and the exit status code for this request 
Describes memory usage in real world units Intended for use with memory get usage etc 
Creates a syntax highlighted version of a PHP file 
Open 
Read 
Write 
Close 
Destroy 
Get lock 
Release lock 
Alpha with spaces 
Compares value against a regular expression pattern 
Checks for a correctly formatted email address 
Validate a comma separated list of email addresses 
Validate an IP address 
Checks a URL to ensure it s formed correctly 
Checks for a valid date and matches a given date format 
Drop database 
ALTER TABLE 
Process column 
Field attribute AUTO INCREMENT 
Prepares the query against the database and saves the connection info necessary to execute the query later 
Takes a new set of data and runs it against the currently prepared query Upon success will return a Results object 
For Uploaded file move 
Verifies that a credit card number is valid and matches the known formats for a wide number of credit card types This does not verify that the card is a valid card only that the number is formatted correctly 
Checks the given number to see if the number passing a Luhn check 
Move a file 
Moves the Zend Escaper files into our base repo so that it s available for packaged releases where the users don t user Composer 
Moves the Kint file into our base repo so that it s available for packaged releases where the users don t user Composer 
Initialize the session container and starts up the session 
Does a full stop of the session 
Configuration 
Configure session ID length 
Handle temporary variables 
Sets user data into the session 
Get user data that has been set in the session 
Push new value onto session value that is array 
Remove one or more session properties 
Sets data into the session that will only last for a single request Perfect for use with single use status update messages 
Retrieve one or more items of flash data from the session 
Mark a session property or properties as flashdata 
Retrieve all of the keys for session data marked as flashdata 
Sets new data into the session and marks it as temporary data with a set lifespan 
Returns either a single piece of tempdata or all temp data currently in the session 
Mark one of more pieces of data as being temporary meaning that it has a set lifespan within the session 
Unmarks temporary data in the session effectively removing its lifespan and allowing it to live as long as the session does 
Retrieve the keys of all session data that have been marked as temporary data 
Takes care of setting the cookie on the client side Extracted for testing reasons 
Restricts the number of requests made by a single IP address within a set number of seconds 
Attempts to determine the best mime type for the given file extension 
Attempts to determine the best file extension for a given mime type 
Sets the URI to redirect to and optionally the HTTP status code to use If no code is provided it will be automatically determined 
Sets the URI to redirect to but as a reverse routed or named route instead of a raw URI 
Helper function to return to previous page 
Specifies that the current GET and POST arrays should be packaged up with the response It will then be available via the old helper function 
Adds a key and message to the session as Flashdata 
Runs through all of the filters for the specified uri and position 
Runs through our list of filters provided by the configuration object to get them ready for use including getting uri masks to proper regex removing those we can from the possibilities based on HTTP method etc 
Adds a new alias to the config file MUST be called prior to initialize Intended for use within routes files 
Ensures that a specific filter is on and enabled for the current request 
Returns the arguments for a specified key or all 
 
 
 
Handles logging the message If the handler returns false then execution of handlers will stop Any handlers that have not run yet will not be run 
Converts the object to display nicely in the Chrome Logger UI 
Attaches the header and the content to the passed in request object 
CREATE TABLE attributes 
ALTER TABLE 
Process column 
Process indexes 
Handles setting up the locale perhaps auto detecting through content negotiation 
Sets the locale string for this request 
Attempts to detect if the current connection is secure through a few different methods 
Fetch an item from the REQUEST object This is the simplest way to grab data from the request object and can be used in lieu of the other get methods in most cases 
A convenience method that grabs the raw input stream and decodes the JSON into an array 
Fetch an item from GET data 
Fetch an item from POST 
Fetch an item from POST data with fallback to GET 
Fetch an item from GET data with fallback to POST 
Fetch an item from the COOKIE array 
Attempts to get old Input data that has been flashed to the session with redirect with input It first checks for the data in the old POST data then the old GET data and finally check for dot arrays 
Returns an array of all files that have been uploaded with this request Each file is represented by an Uploaded File instance 
Retrieves a single file by the name of the input field used to upload it 
Sets up our URI object based on the information we have This is either provided by the user in the base URL Config setting or determined from the environment as needed 
Based on the URIProtocol Config setting will attempt to detect the path portion of the current URI 
Provides a convenient way to work with the Negotiate class for content negotiation 
Will parse the REQUEST URI and automatically detect the URI from it fixing the query string if necessary 
Parse QUERY STRING 
Remove relative directory and multi slashes 
Open 
Read 
Write 
Close 
Destroy 
Get lock 
Release lock 
Prepares the query against the database and saves the connection info necessary to execute the query later 
Takes a new set of data and runs it against the currently prepared query Upon success will return a Results object 
Child classes should implement this to return the timeline data formatted for correct usage 
Connect to the database 
Returns a string containing the version of the database being used 
Smart Escape String 
Platform dependant string escape 
Generates a platform specific query string so that the column names can be fetched 
Returns an array of objects with field data 
Returns an array of objects with index data 
Returns an array of objects with Foreign key data 
Insert ID 
Build a DSN from the provided parameters 
A Factory method to return the appropriate formatter for the given mime type 
Checks if Honeypot field is empty if not then the requester is a bot 
Attach a honeypot to the current response 
Handles the actual resizing of the image 
Crops the image 
Handles the rotation of an image resource Doesn t save the image but replaces the current resource 
Flattens transparencies default white background 
Flips an image along it s vertical or horizontal axis 
Get GD version 
Handles all of the grunt work of resizing etc 
Saves any changes that have been made to file If no new filename is provided the existing image is overwritten otherwise a copy of the file is made at target 
Get Image Resource 
Handler specific method for overlaying text on an image 
Runs all of the migrations in reverse order until they have all been un applied 
Create database 
Drop database 
Add Key 
Add Field 
Add Foreign Key 
Foreign Key Drop 
Create Table 
Create Table 
CREATE TABLE attributes 
Drop Table 
Drop Table 
Rename Table 
Column Add 
Column Drop 
ALTER TABLE 
Process fields 
Field attribute UNSIGNED 
Field attribute DEFAULT 
Field attribute AUTO INCREMENT 
Process primary keys 
Process indexes 
Process foreign keys 
Reset 
Sets the current locale to use when performing string lookups 
Parses the language string for a file loads the file if necessary getting the line 
Parses the language string which should include the filename as the first segment separated by period 
Advanced message formatting 
Loads a language file in the current locale If return is true will return the file s contents otherwise will merge with the existing language lines 
A simple method for including files that can be overridden during testing 
Adds a new base uri value Can be either a URI class or a simple string 
Adds a new valid endpoint for a form s action Can be either a URI class or a simple string 
Adds a new valid endpoint for a form s action Can be either a URI class or a simple string 
Adds a new valid endpoint for a form s action Can be either a URI class or a simple string 
Adds a new valid endpoint for a form s action Can be either a URI class or a simple string 
Adds a new valid endpoint for a form s action Can be either a URI class or a simple string 
Adds a new resource that should allow embedding the resource using frame iframe object embed or applet 
Adds a new valid endpoint for valid image sources Can be either a URI class or a simple string 
Adds a new valid endpoint for valid video and audio Can be either a URI class or a simple string 
Adds a new valid endpoint for manifest sources Can be either a URI class or simple string 
Adds a new valid endpoint for Flash and other plugin sources Can be either a URI class or a simple string 
Limits the types of plugins that can be used Can be either a URI class or a simple string 
specifies an HTML sandbox policy that the user agent applies to the protected resource 
Adds a new valid endpoint for javascript file sources Can be either a URI class or a simple string 
Adds a new valid endpoint for CSS file sources Can be either a URI class or a simple string 
DRY method to add an string or array to a class property 
Scans the body of the request message and replaces any nonce placeholders with actual nonces that we ll then add to our headers 
Based on the current state of the elements will add the appropriate Content Security Policy and Content Security Policy Report Only headers with their values to the response object 
Adds a directive and it s options to the appropriate header The values array might have options that are geared toward either the regular or the report Only header since it s viable to have both simultaneously 
Prepares the query against the database and saves the connection info necessary to execute the query later 
Takes a new set of data and runs it against the currently prepared query Upon success will return a Results object 
Replaces the placeholders with etc parameters for use within the prepared query 
Gets the Collector s title 
Clean Path 
Ensures the data has been collected 
 param string library param null params param integer ttl param string null cache Name 
Parses the params attribute If an array returns untouched If a string it should be in the format key value key value It will be split and returned as an array 
Given the library string attempts to determine the class and method to call 
Retrieve the results of the query Typically an array of individual data rows which can be either an array an object or a custom class name 
Returns the results as an array of custom objects 
Returns the results as an array of arrays 
Returns the results as an array of objects 
Wrapper object to return a row as either an array an object or a custom class 
Returns a row as a custom class instance 
Returns a single row from the results as an array 
Returns a single row from the results as an object 
Assigns an item into a particular column slot 
Returns the first row of the current results 
Returns the last row of the current results 
Returns the next row of the current results 
Returns an unbuffered row and move the pointer to the next row 
Determines the best content type to use based on the supported types the application says it supports and the types requested by the client 
Determines the best charset to use based on the supported types the application says it supports and the types requested by the client 
Determines the best encoding type to use based on the supported types the application says it supports and the types requested by the client 
Does the grunt work of comparing any of the app supported values against a given Accept header string 
Parses an Accept header into it s multiple values 
Match maker 
Checks two Accept values with matching values to see if their params are the same 
Compares the types subtypes of an acceptable Media type and the supported string 
Generates an array of column names in the result set 
Generates an array of objects representing field meta data 
Frees the current result 
Runs the current command discovered on the CLI 
Displays basic information about the Console 
Handles creating and displaying the 
Creates simple Next Previous links instead of full pagination 
Allows for a simple manual form of pagination where all of the data is provided by the user The URL is the current URI 
Does the actual work of displaying the view file Used internally by links simple Links and make Links 
Stores a set of pagination data for later display Most commonly used by the model to automate the process 
Sets the path that an aliased group of links will use 
Returns the total number of pages 
Returns the number of the current page of results 
Tells whether this group of results has any more pages of results 
Returns the last page if we have a total that we can calculate with 
Returns the URI for a specific page for the specified group 
Returns the full URI to the next page of results or null 
Returns the full URL to the previous page of results or null 
Returns the number of results per page that should be shown 
Returns an array with details about the results including total per page current page last page next url prev url from to Does not include the actual data This data is suitable for adding a data object to with the result set and converting to JSON 
Ensures that an array exists for the group specified 
Returns the number of years of difference between the two 
Returns the number of months difference between the two dates 
Returns the number of weeks difference between the two dates 
Returns the number of days difference between the two dates 
Returns the number of hours difference between the two dates 
Returns the number of minutes difference between the two dates 
Returns the number of seconds difference between the two dates 
Convert the time to human readable format 
Parses the connection binds and returns an instance of the driver ready to go 
Creates a new Forge instance for the current database type 
Takes an array of key value pairs and sets them as class properties using any set Camel Cased Property methods that may or may not exist 
General method that will return all public and protected values of this entity as an array All values are accessed through the get magic method so will have any casts etc applied to them 
Converts the properties of this class into an array Unlike to Array this will not cast the data or use any magic accessors It simply returns the raw data for use when saving to the model etc 
Checks a property to see if it has changed since the entity was created 
Returns true if a property exists names key or a getter method exists named like for get 
Checks the datamap to see if this column name is being mapped and returns the mapped name if any or the original name 
Converts the given string timestamp Date Time Time instance into a Code Igniter I n Time object 
Provides the ability to cast an item as a specific data type Add at the beginning of type i e string to get NULL instead of casting value if value null 
Cast as JSON 
Should the application auto discover the requested resources 
Fetches the row of database from this table with a primary key matching id 
Fetches the column of database from this table 
Works with the current Query Builder instance to return all results while optionally limiting them 
Returns the first row of the result set Will take any previous Query Builder calls into account when determining the result set 
Captures the builder s set method so that we can validate the data here This allows it to be used with any of the other builder methods and still get validated data like replace 
A convenience method that will attempt to determine whether the data should be inserted or updated Will work with either an array or object When using with custom class objects you must ensure that the class will provide access to the class variables even if through a magic method 
Takes a class an returns an array of it s public and protected properties as an array suitable for use in creates and updates 
Inserts data into the current table If an object is provided it will attempt to convert it to an array 
Compiles batch insert strings and runs the queries validating each row prior 
Updates a single record in this table If an object is provided it will attempt to convert it into an array 
Update Batch 
Deletes a single record from this table where id matches the table s primary Key 
Permanently deletes all rows that have been marked as deleted through soft deletes deleted 
Works with the find methods to return only the rows that have been deleted 
Replace 
Loops over records in batches allowing you to operate on them Works with this builder to get the Compiled select to determine the rows to operate on 
Works with this builder to get the Compiled Select to operate on Expects a GET variable page that specifies the page of results to display 
Provides a shared instance of the Query Builder 
Ensures that only the fields that are allowed to be updated are in the data array 
A utility function to allow child models to use the type of date time format that they prefer This is primarily used for setting created at and updated at values but can be used by inheriting classes 
Grabs the last error s that occurred If data was validated it will first check for errors there otherwise will try to grab the last error from the Database connection 
Validate the data against the validation rules or the validation group specified in the class property validation Rules 
Removes any rules that apply to fields that have not been set currently so that rules don t block updating when only updating a partial row 
Replace any placeholders within the rules with the values that match the key of any properties being set For example if we had the following data array 
Returns the model s defined validation rules so that they can be used elsewhere if needed 
Override count All Results to account for soft deleted accounts 
A simple event trigger for Model Events that allows additional data manipulation within the model Specifically intended for usage by child models this can be used to format data save load related classes etc 
Sends an HTTP request to the specified url If this is a relative URL it will be merged with this base URI to form a complete URL 
Set the HTTP Authentication 
Set form data to be sent 
Sets the correct settings based on the options array passed in 
If the url is a relative URL will attempt to create a full URL by prepending this base URI to it 
Get the request method Overrides the Request class method since users expect a different answer here 
Fires the actual c URL request 
Takes all headers current part of this request and adds them to the c URL request 
Apply method 
Apply body 
Parses the header retrieved from the c URL response into our Response object 
Set CURL options 
Does the actual work of initializing c URL setting the options and grabbing the output 
Creates a new migration file with the current timestamp 
Handles logging the message If the handler returns false then execution of handlers will stop Any handlers that have not run yet will not be run 
Migrate to a schema version 
Sets the APP NAMESPACE schema to current Version in migration config file 
Retrieves list of available migration scripts for one namespace 
checks if the list of available migration scripts list are consistent if sequential check if no gaps and check if all consistent with migrations table if downgrading if timestamp check if consistent with migrations table if downgrading 
Grabs the full migration history from the database 
Extracts the migration class name from a filename 
Retrieves current schema version 
Stores the current schema version 
Removes a single history 
Ensures that we have created our migrations table in the database 
Runs the validation process returning true false determining whether validation was successful or not 
Check runs the validation process returning true or false determining whether validation was successful or not 
Runs all of rules against field until one fails or all of them have been processed If one fails it adds the error to this errors and moves on to the next so that we can collect all of the first errors 
Takes a Request object and grabs the input data to use from its array values 
Sets an individual rule and custom error messages for a single field 
Stores the rules that should be used to validate the items Rules should be an array formatted like 
Get rule group 
Set rule group 
Returns the rendered HTML of the errors as defined in template 
Displays a single error in formatted HTML as defined in the template view 
Loads all of the rulesets classes that have been defined in the Config Validation and stores them locally so we can use them 
Loads custom rule groups if set into the current rules 
Returns the error s for a specified field or empty string if not set 
Returns the array of errors that were encountered during a run call The array should be in the following format 
Sets the error for a specific field Used by custom validation methods 
Attempts to find the appropriate error message 
Split rules string by pipe operator 
Resets the class to a blank slate Should be called whenever you need to process more than one array 
Takes the given data and formats it 
A recursive method to convert an array into a valid XML string 
Logs with an arbitrary level 
Replaces any placeholders in the message with variables from the context as well as a few special items like 
Determines the current file line that the log method was called from by analyzing the backtrace 
Cleans the paths of filenames by replacing APPPATH SYSTEMPATH FCPATH with the actual var i e 
Sets and overwrites any current URI information 
Retrieve the authority component of the URI 
Retrieve the user information component of the URI 
Retrieve the query string 
Returns the value of a specific segment of the URI path 
Set the value of a specific segment of the URI path Allows to set only existing segments or add new one 
Builds a representation of the string from the component parts 
Parses the given string an saves the appropriate authority pieces 
Sets the scheme for this URI 
Sets the user Info Authority portion of the URI 
Sets the port portion of the URI 
Sets the path portion of the URI 
Sets the path portion of the URI based on segments 
Sets the query portion of the URI while attempting to clean the various parts of the query keys and values 
Checks the value to see if it has been urlencoded and decodes it if so The urlencode check is not perfect but should catch most cases 
Split a query value into it s key value elements if both are present 
Adds a single new element to the query vars 
Filters the query variables so that only the keys passed in are kept The rest are removed from the object 
Encodes any dangerous characters and removes dot segments While dot segments have valid uses according to the spec this URI class does not allow them 
Saves our parts from a parse url call 
Combines one URI string with this one based on the rules set out in RFC Section 
Given paths will merge them according to rules set out in RFC Section 
Used when resolving and merging paths to correctly interpret and remove single and double dot segments from the path per RFC Section 
Displays the help for the spark cli script itself 
Appends a value to the list of values for this header If the header is a single value string it will be converted to an array 
Prepends a value to the list of values for this header If the header is a single value string it will be converted to an array 
Retrieves a comma separated string of the values for a single header 
Returns a URL to the previous page The previous page is NOT the page before the current page but is the page just before the first page 
Returns a URL to the next page The next page is NOT the page after the current page but is the page that follows the last page 
Returns the URI of the first page 
Returns the URI of the last page 
Returns the URI of the current page 
Returns an array of links that should be displayed Each link is represented by another array containing of the URI the link should go to the title number of the link and a boolean value representing whether this link is active or not 
Updates the first and last pages based on surround Count which is the number of links surrounding the active page to show 
Starts a timer running 
Stops a running timer 
Returns the duration of a recorded timer 
Returns the array of timers with the duration pre calculated for you 
Initializes the database connection settings 
Add a table alias to our list 
Orchestrates a query against the database Queries must use Database Statement objects to store the query and build it This method works with the cache 
Performs a basic query against the database No binding or caching is performed nor are transactions handled Simply takes a raw query string and returns the database specific result id 
Start Transaction 
Complete Transaction 
Begin Transaction 
Commit Transaction 
Rollback Transaction 
Returns an instance of the query builder for this connection 
Creates a prepared statement with the database that can then be used to execute multiple statements against Within the closure you would build the query in any normal way though the Query Builder is the expected manner 
Protect Identifiers 
Escape the SQL Identifiers 
Smart Escape String 
Escape String 
This function enables you to call PHP database functions that are not natively included in Code Igniter in a platform independent manner 
Returns an array of table names 
Determine if a particular table exists 
Determine if a particular field exists 
Returns an object with field data 
Returns an object with key data 
Returns an object with foreign key data 
Retrieve an environment specific configuration setting 
Provides external libraries a simple way to register one or more options into a config file 
Attempts to fetch an item from the cache store 
Saves an item to the cache store 
Deletes a specific item from the cache store 
Performs atomic decrementation of a raw stored value 
Returns detailed information about the specific item in the cache 
Does the heavy lifting of actually retrieving the file and verifying it s age 
Writes a file to disk or returns false if not successful 
Delete Files 
Get Directory File Information 
Get File Info 
Returns the data of this collector to be formatted in the toolbar 
Handles some basic app and environment setup 
Launch the application 
Handles the main request logic and fires the controller 
Start the Benchmark 
Get our Request object either Incoming Request or CLIRequest and set the server protocol based on the information provided by the server 
Get our Response object and set some default values including the HTTP protocol version and a default successful response 
Force Secure Site Access If the config value force Global Secure Requests is true will enforce that all requests to this site are made through HTTPS Will redirect the user to the current page with HTTPS as well as set the HTTP Strict Transport Security header for those browsers that support it 
Determines if a response has been cached for the given URI 
Caches the full response from the current request Used for full page caching for very high performance 
Generates the cache name to use for our full page caching 
Replaces the memory usage and elapsed time tags 
Try to Route It As it sounds like works with the router to match a route against the current URI If the route is a redirect route will also handle the redirect 
Determines the path to use for us to try to route to based on user input set Path or the CLI Incoming Request path 
Now that everything has been setup this method attempts to run the controller method and make the script go If it s not able to will show the appropriate Page Not Found error 
Instantiates the controller class 
Runs the controller allowing for remap methods to function 
Displays a Page Not Found error If set will try to call the Override controller method that was set in routing config 
Gathers the script output from the buffer replaces some execution time tag in the output and displays the debug toolbar if required 
If we have a session object to use store the current URI as the previous URI This is called just prior to sending the response to the client and will make it available next request 
Modifies the Request Object to use a different method if a POST variable called method is found 
Attempts to create the desired cache handler based upon the 
Select 
SELECT MAX MIN AVG SUM 
Determines the alias name based on the table 
From 
JOIN 
WHERE 
OR WHERE 
WHERE HAVING 
WHERE IN 
WHERE NOT IN 
Internal WHERE IN 
OR LIKE 
Internal LIKE 
Platform independent LIKE statement builder 
Starts a query group 
Ends a query group 
Group get type 
GROUP BY 
HAVING 
OR HAVING 
ORDER BY 
LIMIT 
Sets the OFFSET value 
LIMIT string 
The set function 
Returns the previously set data alternatively resetting it if needed 
Get SELECT query string 
Returns a finalized compiled query string with the bindings inserted and prefixes swapped out 
Get 
Count All query 
Count All Results query 
Get Where 
Insert Batch 
Insert batch statement 
The set Insert Batch function Allows key value pairs to be set for batch inserts 
Get INSERT query string 
Insert 
Insert statement 
Replace 
Replace statement 
Get UPDATE query string 
UPDATE 
Update statement 
Update Batch 
Update Batch statement 
The set Update Batch function Allows key value pairs to be set for batch updating 
Empty Table 
Truncate 
Get DELETE query string 
Delete 
Decrements a numeric column by the specified value 
Delete statement 
Track Aliases 
Compile the SELECT statement 
Compile WHERE HAVING statements 
Compile GROUP BY 
Compile ORDER BY 
Object to Array 
Object to Array 
Is literal 
Resets the query builder values Called by the get function 
Returns the SQL string operator 
Stores a bind value after ensuring that it s unique While it might be nicer to have named keys for our binds array with PHP we get a huge memory performance gain with indexed arrays instead so lets take advantage of that here 
Returns all the data required by Debug Bar 
Called within the view to display the timeline itself 
Returns a sorted array of timeline data arrays from the collectors 
Returns an array of data from all of the modules that should be displayed in the Vars tab 
Rounds a number to the nearest incremental value 
 
Format output 
Makes a copy of itself to the new location If no filename is provided it will use the existing filename 
Get image properties 
Open 
Read 
Write 
Destroy 
Garbage Collector 
 
Releases the lock if any 
Returns the data of this collector to be formatted in the toolbar 
Attaches Honeypot template to response 
Prepares the template by adding label content and field name 
Replace statement 
Generates an array of column names in the result set 
Generates an array of objects representing field meta data 
Frees the current result 
Returns the result set as an object 
Set columns Takes a one dimensional array as input and creates a multi dimensional array with a depth equal to the number of columns This allows a single array with many elements to be displayed in a table that has a fixed column count 
Prep Args 
Generate the table 
Clears the table arrays Useful if multiple tables are being generated 
Set table data from a database result object 
Set table data from an array 
Compile Template 
Takes care of any handler specific setup that must be done 
Attempts to fetch an item from the cache store 
Saves an item to the cache store 
Deletes a specific item from the cache store 
Performs atomic incrementation of a raw stored value 
Returns detailed information about the specific item in the cache 
Move the uploaded file to a new location 
create file target path if the set path does not exist 
Get error string 
Save the uploaded file to a new location 
Creates a new migration file with the current timestamp 
Verifies that name is the name of a valid uploaded file 
Verifies if the file s size in Kilobytes is no larger than the parameter 
Uses the mime config file to determine if a file is considered an image which for our purposes basically means that it s a raster image or svg 
Checks to see if an uploaded file s mime type matches one in the parameter 
Checks an uploaded file to verify that the dimensions are within a specified allowable dimension 
Child classes should implement this to return the timeline data formatted for correct usage 
Returns the data of this collector to be formatted in the toolbar 
Gets the user s IP address 
Validate an IP address 
Fetch an item from the SERVER array 
Fetch an item from the ENV array 
Fetches one or more items from a global like cookies get post etc Can optionally filter the input when you retrieve it by passing in a filter 
Saves a copy of the current state of one of several PHP globals so we can retrieve them later 
Migrates the database up or down to get to the specified version 
Returns the options as a string suitable for passing along on the CLI to other commands 
Parses the command line it was called from and collects all options and valid segments 
Reads an existing database table and collects all of the information needed to recreate this table 
Called after from Table and any actions like drop Column etc to finalize the action It creates a temp table creates the new table with modifications and copies the data over to the new table 
Modifies a field including changing data type renaming etc 
Creates the new table based on our current fields 
Copies data from our old table to the new one taking care map data correctly based on any columns that have been renamed 
Converts fields retrieved from the database to the format needed for creating fields with Forge 
Converts keys retrieved from the database to the format needed to create later 
Attempts to drop all indexes and constraints from the database for this table 
CSRF Verify 
CSRF Set Cookie 
Sets the CSRF Hash and cookie 
Sanitize Filename 
Returns a new Time instance with the timezone set 
Returns a new Time instance while parsing a datetime string 
Return a new time with the time set to midnight 
Returns an instance set to midnight yesterday morning 
Returns an instance set to midnight tomorrow morning 
Returns a new instance based on the year month and day If any of those three are left empty will default to the current value 
Returns a new instance with the date set to today and the time set to the values passed in 
Returns a new instance with the date time values individually set 
Provides a replacement for Date Time s own create From Format function that provides more flexible time Zone handling 
Returns a new instance with the datetime set based on the provided UNIX timestamp 
Takes an instance of Date Time and returns an instance of Time with it s same values 
Converts the current instance to a mutable Date Time object 
Returns the age in years from the current date and now 
Are we in daylight savings time currently 
Sets the month of the year 
Sets the day of the month 
Sets the hour of the day hour cycle 
Sets the minute of the hour 
Sets the second of the minute 
Helper method to do the heavy lifting of the set X methods 
Returns a new instance with the date set to the new timestamp 
Returns the localized value of this instance in format 
Determines if the datetime passed in is equal to the current instance Equal in this case means that they represent the same moment in time and are not required to be in the same timezone as both times are converted to UTC and compared that way 
Ensures that the times are identical taking timezone into account 
Determines if the current instance s time is before test Time after converting to UTC 
Returns a text string that is easily readable that describes how long ago or how long from now a date is like 
 param test Time param string null timezone 
Returns a Time instance with the timezone converted to UTC 
Check a time string to see if it includes a relative date like next Tuesday 
Callback function for preg replace callback that applies Javascript escaping to all matches 
Callback function for preg replace callback that applies CSS escaping to all matches 
Converts a string to UTF from the base encoding The base encoding is set via this class constructor 
Converts a string from UTF to the base encoding The base encoding is set via this class constructor 
Takes care of any handler specific setup that must be done 
Attempts to fetch an item from the cache store 
Saves an item to the cache store 
Performs atomic incrementation of a raw stored value 
Performs atomic decrementation of a raw stored value 
Returns detailed information about the specific item in the cache 
Attempts to get a single file from the collection of uploaded files 
Checks whether an uploaded file with name file ID exists in this request 
Taking information from the FILES array it creates an instance of Uploaded File for each one saving the results to this files 
Given a file array will create Uploaded File instances Will loop over an array and create objects for each 
Reformats the odd FILES array into something much more like we would expect with each object having its own array 
Navigate through a array looking for a particular index 
Displays the help for the spark cli script itself 
Takes care of any handler specific setup that must be done 
Attempts to fetch an item from the cache store 
Saves an item to the cache store 
Deletes a specific item from the cache store 
Performs atomic incrementation of a raw stored value 
Returns detailed information about the specific item in the cache 
set download for binary string 
set download for file 
get content length 
Set content type by guessing mime type from file extension 
get download filename 
get Content Disposition Header string 
 
 
set header for file download 
output download file text 
output download text by file 
We map all un routed CLI methods through this function so we have the chance to look for a Command first 
 param array params 
Actually runs the command 
Scans all Commands directories and prepares a list of each command with it s group and file 
Creates the default 
Returns a new instance of the Database Seeder 
Runs all of the migrations in reverse order until they have all been un applied 
To migrate all namespaces to the latest migration 
Adds a test to run 
Runs through all of the tests that have been added recording time to execute the desired number of iterations and the approximate memory usage used during those iterations 
Get results 
Sets the raw query string to use for this statement 
Returns the final processed query string after binding etal has been performed 
Records the execution time of the statement using microtime true for it s start and end values If no end value is present will use the current time to determine total duration 
Returns the start time in seconds with microseconds 
Returns the duration of this query during execution or null if the query has not been executed yet 
Stores the error description that happened for this query 
Swaps out one table prefix for a new one 
Escapes and inserts any binds into the final Query String object 
Match bindings 
Match bindings 
Constructor 
Handles auto loading helper files 
A shortcut to performing validation on input data If validation is not successful a errors property will be set on this class 
Reads in the configuration array described above and stores the valid parts that we ll need 
Register the loader with the SPL autoloader stack 
Registers namespaces with the autoloader 
Get namespaces with prefixes as keys and paths as values 
Loads the class file for a given class name 
Loads the class file for a given class name 
Attempts to load the class from common locations in previous version of Code Igniter namely app Libraries and app Models 
A central way to require a file is loaded Split out primarily for testing purposes 
Sanitizes a filename replacing spaces with dashes 
Locates all PSR compatible namespaces from Composer 
Formats a date into the given format 
Given a string or Date Time object will return the date modified by the given value Returns the value as a unix timestamp 
Returns an excerpt of the given string 
Highlights a given phrase within the text using mark mark tags 
Returns the value displayed in a localized manner 
Returns the value displayed as a currency string 
Returns a string with all instances of newline character n converted to an HTML br tag 
Takes a body of text and uses the auto typography method to turn it into prettier easier to read prose 
Rounds a given value in one of ways 
The main entry point will load the env file and process it so that we end up with all settings in the PHP environment vars i e getenv ENV and SERVER 
Sets the variable into the environment Will parse the string first to look for name value pattern ensure that nested variables are handled and strip it of single and double quotes 
Parses for assignment cleans the name and value and ensures that nested variables are handled 
Strips quotes from the environment variable value 
Resolve the nested variables 
Connect to the database 
Select a specific database table to use 
Returns a string containing the version of the database being used 
Executes the query against the database 
Prep the query 
Platform dependant string escape 
Generates the SQL for listing tables in a platform dependent manner 
Returns an array of objects with field data 
Returns an array of objects with index data 
Returns the last error code and message 
Commit Transaction 
Rollback Transaction 
Connect to the database 
Returns a string containing the version of the database being used 
Execute the query 
Generates the SQL for listing tables in a platform dependent manner 
Generates a platform specific query string so that the column names can be fetched 
Fetch Field Names 
Returns an array of objects with field data 
Returns an array of objects with index data 
Returns an array of objects with Foreign key data 
The cache class provides a simple way to store and retrieve complex data for later 
The CLI Request class provides for ways to interact with a command line request 
The CURL Request class acts as a simple HTTP client for interacting with other servers typically through APIs 
The Exceptions class holds the methods that handle 
Filters allow you to run tasks before and or after a controller is executed During before filters the request can be modified and actions taken based on the request while after filters can act on or modify the response itself before it is sent to the client 
The Honeypot provides a secret input on forms that bots should NOT fill in providing an additional safeguard when accepting user input 
Acts as a factory for Image Handler classes and returns an instance of the handler Used like Services image with File path rotate save 
Responsible for loading the language string translations 
The Logger class is a PSR compatible Logging class that supports multiple handlers that process the actual logging 
 param Code Igniter Config Base Config config param Code Igniter Database Connection Interface db param boolean get Shared 
The Negotiate class provides the content negotiation features for working the request to determine correct language encoding charset and more 
 param mixed config param Code Igniter View Renderer Interface view param boolean get Shared 
The Parser is a simple template parser 
The Request class models an HTTP request 
The Response class models an HTTP response 
The Redirect class provides nice way of working with redirects 
The Router class uses a Route Collection s array of routes and determines the correct Controller and Method to execute 
The Security class provides a few handy tools for keeping the site secure most notably the CSRF protection tools 
 param Config App config param boolean get Shared 
 param Config Toolbar config param boolean get Shared 
The URI class provides a way to model and manipulate URIs 
The Validation class provides tools for validating input data 
Migrates us up or down to the version specified as current Version in the migrations config file 
Internal method to force removal of a cookie by the client when session destroy is called 
Displays the help for the spark cli script itself 
Displays the commands on the CLI 
Pads our string out so that all titles are the same length to nicely line up descriptions 
List databases 
Optimize Table 
Optimize Database 
Generate CSV from a query result object 
Generate XML data from a query result object 
Database Backup 
Can be used by a command to run other commands 
A simple method to display an error with line file in child commands 
show Help include usage arguments description options 
Get pad for key value array output 
Loads the specified seeder and runs it 
The value does not match another field in data 
Returns true if str is val characters long val one multiple values 
Greater than 
Value should be within an array of values 
Checks the database to see if the given value is unique Can ignore a single record by field value to make it useful during record updates 
Less than 
Equal to or Less than 
Returns true if str is val or fewer characters in length 
Returns true if str is at least val length 
Required 
The field is required when any of the other required fields are present in the data 
The field is required when all of the other fields are present in the data but not required 
Generates an array of column names in the result set 
Generates an array of objects representing field meta data 
Frees the current result 
 param string null uri 
Returns the Override settings from the Collection If the override is a string will split to controller index array 
Compares the uri string against the routes that the Route Collection class defined for us attempting to find a match This method will modify this controller etal as needed 
Attempts to match a URI path against Controllers and directories found in APPPATH Controllers to find a matching route 
Attempts to validate the URI request and determine the controller path 
Sets the sub directory that the controller is in 
Set request route 
Sets the default controller based on the info set in the Route Collection 
ORDER BY 
Replace 
Delete 
Update statement 
Delete statement 
Retrieve the file size 
Retrieve the media type of the file SHOULD not use information from the FILES array but should use other methods to more accurately determine the type of file like finfo or mime content type 
Moves a file to a new location 
Returns the destination path for the move operation where overwriting is not expected 
The static method used during Events to collect data 
Returns timeline data formatted for the toolbar 
Returns the data of this collector to be formatted in the toolbar 
Attempts to locate a file by examining the name for a namespace and looking through the PSR namespaced files that we know about 
Examines a file and returns the fully qualified domain name 
Searches through all of the defined namespaces looking for a file Returns an array of all found locations for the defined file 
Ensures a extension is at the end of a filename 
 param string null prefix 
Find the qualified name of a file according to the namespace of the first matched namespace path 
Scans the defined namespaces returning a list of all files that are contained within the subpath specified by path 
Scans the provided namespace returning a list of all files that are contained within the subpath specified by path 
Checks the application folder to see if the file can be found Only for use with filenames that DO NOT include namespacing 
Builds the output based upon a file name and any data that has already been set 
Builds the output based upon a string and any data that has already been set Cache does not apply because there is no key 
Extract first bit of a long string and add ellipsis 
Sets several pieces of view data at once 
Sets a single piece of view data 
Renders a section s contents 
Used within layout views to include additional views 
Logs performance data for rendering a view 
Sets another image for this handler to work on Keeps us from needing to continually instantiate the handler 
Make the image resource object if needed 
Resize the image 
Crops the image to the desired height and width If one of the height width values is not provided that value will be set the appropriate value based on offsets and image dimensions 
Rotates the image on the current canvas 
Flattens transparencies default white background 
Flips an image either horizontally or vertically 
Overlays a string of text over the image 
Reads the EXIF information from the image and modifies the orientation so that displays correctly in the browser This is especially an issue with images taken by smartphones who always store the image up right but set the orientation flag to display it correctly 
Retrieve the EXIF information from the image if possible Returns an array of the information or null if nothing can be found 
Combine cropping and resizing into a single command 
Based on the position will determine the correct x y coords to crop the desired portion from the image 
Re proportion Image Width Height 
Attempts to fetch an item from the cache store 
Saves an item to the cache store 
Performs atomic incrementation of a raw stored value 
Performs atomic decrementation of a raw stored value 
Returns detailed information about the specific item in the cache 
Run the server 
Parse a template 
Parse a String 
Sets several pieces of view data at once In the Parser we need to store the context here so that the variable is correctly handled within the parsing itself and contexts including raw are respected 
Parse a template 
Parse a single key value extracting it 
Parse a tag pair 
Extracts noparse blocks inserting a hash in its place so that those blocks of the page are not touched by parsing 
Re inserts the noparsed contents back into the template 
Parses any conditionals in the code removing blocks that don t pass so we don t try to parse it later 
Over ride the substitution field delimiters 
Handles replacing a pseudo variable with the actual content Will double check for escaping brackets 
Callback used during parse to apply any filters to the value 
Checks the placeholder the view provided to see if we need to provide any autoescaping 
Given a set of filters will apply each of the filters in turn to replace and return the modified string 
Scans the template for any parser plugins and attempts to execute them Plugins are notated based on opening and closing braces 
Makes a new plugin available during the parsing of the template 
Converts an object to an array respecting any to Array methods on an object 
Handles the rotation of an image resource Doesn t save the image but replaces the current resource 
Flattens transparencies 
Flips an image along it s vertical or horizontal axis 
Handles all of the grunt work of resizing etc 
Saves any changes that have been made to file If no new filename is provided the existing image is overwritten otherwise a copy of the file is made at target 
Create Image Resource 
 param string text param array options 
Handler specific method for overlaying text on an image 
Constructor 
Populates the headers array with any headers the get Server knows about 
Returns a single header object If multiple headers with the same name exist then will return an array of header objects 
Determines whether a header exists 
Retrieves a comma separated string of the values for a single header 
Sets a header and it s value 
Removes a header from the list of headers we track 
Adds an additional header value to any headers that accept multiple values i e are an array or implement Array Access 
Adds an additional header value to any headers that accept multiple values i e are an array or implement Array Access 
Sets the HTTP protocol version 
Takes a header name in any case and returns the normal case version of the header 
Prepares the query against the database and saves the connection info necessary to execute the query later 
Takes a new set of data and runs it against the currently prepared query Upon success will return a Results object 
 param array params 
 param array params 
 param array params 
Displays the help for the spark cli script itself 
Open 
Read 
Write 
Close 
Destroy 
Garbage Collector 
Configure Session ID regular expression 
Return an instance with the specified status code and optionally reason phrase 
Gets the response response phrase associated with the status code 
Set the Link Header 
Sets the Content Type header for this response with the mime type and optionally the charset 
Returns the current body converted to JSON is it isn t already 
Retrieves the current body into XML and returns it 
Handles conversion of the of the data into the appropriate format and sets the correct Content Type header for our response 
A shortcut method that allows the developer to set all of the cache control headers in one method call 
Sends the output to the browser 
Sends the headers of this HTTP request to the browser 
Perform a redirect to a new URL in two flavors header or location 
Set a cookie 
Checks to see if the Response has a specified cookie or not 
Returns the cookie 
Sets a cookie to be deleted when the response is sent 
Actually sets the cookies 
Force a download 
Create new configuration instances or return a shared instance 
Find configuration class and create instance 
Returns a shared instance of any of the class services 
The Autoloader class is the central class that handles our spl autoload register method and helper methods 
The file locator provides utility methods for looking for non classes within namespaced folders as well as convenience methods for loading helpers and libraries 
Reset shared instances and mocks for testing 
Inject mock object for testing 
Will scan all psr namespaces registered with system to look for new Config Services files Caches a copy of each one then looks for the service method in each returning an instance of the service if available 
Get input from the shell using readline or the standard STDIN 
Asks the user for input 
Validate one prompt field at a time 
Outputs a string to the CLI without any surrounding newlines Useful for showing repeating elements on a single line 
Outputs an error to the CLI using STDERR instead of STDOUT 
Waits a certain number of seconds optionally showing a wait message and waiting for a key press 
Returns the given text with the correct color codes for a foreground and optionally a background color 
Get the number of characters in string having encoded characters and ignores styles set by the color function 
Displays a progress bar on the CLI You must call it repeatedly to update it Set this Step false to erase the progress bar 
Takes a string and writes it to the command line wrapping to a maximum width If no maximum width is specified will wrap to the window s max width 
Parses the command line it was called from and collects all options and valid segments 
Gets a single command line option Returns TRUE if the option exists but doesn t have a value and is simply acting as a flag 
Returns the options as a string suitable for passing along on the CLI to other commands 
Returns a well formatted table 
Provides a single simple method to return an API response formatted to match the requested format with proper content type and status code 
Used for generic failures that no custom methods exist for 
Used after successfully creating a new resource 
Used after a resource has been successfully deleted 
Used when the client is either didn t send authorization information or had bad authorization credentials User is encouraged to try again with the proper information 
Used when there is a server error 
Handles formatting a response Currently makes some heavy assumptions and needs updating 
Do whatever processing this filter needs to do By default it should not return anything during normal execution However when an abnormal state is found it should return an instance of Code Igniter HTTP Response If it does script execution will end and that Response will be sent back to the client allowing for error pages redirects etc 
Ensures that we have a events file ready 
Registers an action to happen on an event The action can be any sort of callable 
Runs through all subscribed methods running them one at a time until either a All subscribers have finished or b a method returns false at which point execution of subscribers stops 
Returns an array of listeners for a single event They are sorted by priority 
Removes a single listener from an event 
Is Browser 
Is Robot 
Is Mobile 
Is this a referral from another site 
Set the Platform 
Set the Browser 
Set the Robot 
Set the Mobile Device 
ALTER TABLE 
Process column 
Field attribute TYPE 
Drop Table 
Takes the given data and formats it 
Auto Typography 
Format Characters 
Format Newlines 
 param msg 
 
 
 
 
 param url param string method param array options param bool retry 
initialize config 
show qr Code on console 
init qr Code style 
 Username 
 
 username 
 emoji 
 
 
format XML for Content 
 EMOJI 
make a heartbeat every minutes 
handle a sync from wechat 
 
log the message 
 
get uuid 
show a login qr Code 
waiting user to login 
login wechat 
store config to cache 
init 
before init success 
after init success 
open wechat status notify 
download multimedia 
get a resource through api 
download resource to a default path 
 param username param file 
 
 cookie ticket 
 multipart 
Bootstrap the given application 
check if got a new message 
get a message 
generate a sync key 
print in terminal 
print message 
 
 
 
 
send a text message 
 username 
 
 
 
 
 
 group 
 nickname 
 
fetch all contacts through api 
create and save contacts to collections 
fetch group members 
store group members 
report while exception 
Handle an uncaught exception from the application 
Exception that make vbot couldn t work 
Handle the PHP shutdown event 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 param mixed claims 
 
Raises an exception when the key type is not the expected type 
 
 
 
 
 
 
 
 
 
Splits the JWT string into an array 
Parses the header from a string 
Parses the claim set from a string 
Returns the signature from given data 
 
 
 
 
 
 
 
Handle an incoming request 
Handle an incoming request 
Execute the console command 
Negotiates language with the user s browser through the Accept Language HTTP header or the user s host address Language codes are generally in the form ll for a language spoken in only one country or ll CC for a language spoken in a particular country For example U S English is en US while British English is en UK Portuguese as spoken in Portugal is pt PT while Brazilian Portuguese is pt BR 
Return all the accepted languages from the browser 
Cache the routes separately for each locale 
Boot a fresh copy of the application and get the routes 
Build the route cache file 
Register the service provider 
Registers app bindings and aliases 
Registers route caching commands 
Handle an incoming request 
Set and return current locale 
Returns an URL adapted to locale 
Returns an URL adapted to the route name and the locale given 
Return an array of all supported Locales 
Return an array of all supported Locales but in the order the user has specified in the config file Useful for the language selector 
Returns current locale direction 
Returns current language 
Returns current regional 
Check if Locale exists on the supported locales array 
Change route attributes for the ones in the attributes array 
Translate routes and save them to the translated routes array used in the localize route filter 
Returns the translation key for a given path 
Returns the translated route for the path and the url given 
Returns the translated route for an url and the attributes given and a locale 
Create an url from the uri 
Extract attributes for current url 
Normalize attributes gotten from request parameters 
Load the cached routes for the application 
Returns the path to the cached routes file for a given locale 
Handle an incoming request 
Execute the console command 
Boot a fresh copy of the application and get the routes 
Handle an incoming request 
 param mixed payloads 
System is unusable 
Action must be taken immediately 
Critical conditions 
Runtime errors that do not require immediate action but should typically be logged and monitored 
Exceptional occurrences that are not errors 
Logs with an arbitrary level 
process Request 
 param mixed record Set 
Read from the socket at most len bytes 
Write to the socket 
 param mixed payloads 
 return mixed 
encode message set N B Message Sets are not preceded by an int like other array elements in the protocol 
 param string string message 
encode signal part 
encode signal topic 
decode produce topic pair response 
decode produce partition pair response 
 param mixed bool data 
 param mixed data 
 param mixed payloads 
 param mixed payloads 
 param mixed record Set 
 param mixed payloads 
 return mixed 
 return mixed 
decode message set N B Message Sets are not preceded by an int like other array elements in the protocol 
decode message N B Message Sets are not preceded by an int like other array elements in the protocol 
 param mixed values 
 param mixed payloads 
 param mixed values 
start consumer 
FIXME remove it when we implement dependency injection 
Encapsulation of stream socket client 
Encapsulation of stream select 
Read from the socket at most len bytes 
Write to the socket 
 param mixed payloads 
 param mixed payloads 
 param mixed values 
 param mixed values 
Unpack a bit integer as big endian long 
check unpack bit is valid 
Determines if the computer currently running this code is big endian or little endian 
Converts a signed short bits from little endian to big endian 
Get kafka api version according to specify kafka broker version 
Get kafka api text 
 return mixed 
 param mixed null options 
 return mixed 
 param mixed payloads 
 param mixed values 
 param mixed values 
 param mixed payloads 
Store a before middleware route and a handling function to be executed when accessed using one of the specified methods 
Store a route and a handling function to be executed when accessed using one of the specified methods 
Mounts a collection of callbacks onto a base route 
Get the request method used taking overrides into account 
Execute the router Loop all defined before middleware s and routes and execute the handling function if a match was found 
Return server base Path and define it if isn t defined 
Maps a URL pattern to a callback function 
Routes the current request 
Gets the current route 
Checks if a URL matches the route pattern Also parses named parameters in the URL 
Dispatches an event 
Gets an assigned callback 
Clears an event If no name is given all events are removed 
Executes a chain of method filters 
Executes a callback function 
Calls a function 
Invokes a method 
Initialize request properties 
Gets the body of the request 
Gets the request method 
Gets the real remote IP address 
Parse query parameters from a URL 
Sets the HTTP status of the response 
Adds a header to the response 
Sets caching headers for the response 
Sends HTTP headers 
Sends a HTTP response 
Initializes the framework 
Custom error handler Converts errors into exceptions 
Custom exception handler Logs exceptions 
Maps a callback to a framework method 
Registers a class to a framework method 
Gets a variable 
Unsets a variable If no key is passed in clear all variables 
Starts the framework 
Stops the framework and outputs the current response 
Routes a URL to a callback function 
Stops processing and returns a given response 
Sends an HTTP response for any errors 
Redirects the current request to another URL 
Renders a template 
Sends a JSON response 
Sends a JSONP response 
Handles ETag HTTP caching 
Handles last modified HTTP caching 
Registers a class 
Loads a registered class 
Gets a single instance of a class 
Gets a new instance of a class 
Starts stops autoloader 
Autoloads classes 
Adds a directory for autoloading classes 
Renders a template 
Gets the output of a template 
Gets the full path to a template file 
Runs analyze 
Check if graph contains cycle 
Get depth of node 
Get depth of node 
Get average height of graph 
 param Node from param Node to 
 param Config config 
Collapses array into a one dimensional one by imploding nested keys with 
Find files in path 
Traverse node and return if node has not been visited yet 
 param Config config 
 param string filename 
 param Node Node Stmt Class Node Stmt Interface node 
Get the list of all root nodes 
Returns the requirements defined in the composer dist json file 
Returns the installed packages from the composer lock file 
Advance progress bar 
Clear console 
Detects ANSI support 
Processes this test when one of its tokens is encountered 
Merge custom functions provided via a custom ruleset with the defaults if we haven t already 
Returns an array of tokens this test wants to listen for 
Processes this test when one of its tokens is encountered 
Process the parameters of a matched function 
Process the function if no parameters were found 
Process comments to find the plugin theme headers 
Examine an individual token in a larger comment for plugin theme headers 
Processes this test when one of its tokens is encountered 
Set sniff properties and hand off to child class for processing of the token 
Initialize the class for the current process 
Add a PHPCS message to the output stack as either a warning or an error 
Add a fixable PHPCS message to the output stack as either a warning or an error 
Add a PHPCS message to the output stack as either a warning or an error 
Transform the name of a PHP construct function variable etc to one in snake case 
Merge a pre set array with a ruleset provided array 
Get the last pointer in a line 
Overrule the minimum supported Word Press version with a command line config value 
Find whitelisting comment 
Check if this variable is being assigned a value 
Check if this token has an associated nonce check 
Check if a token is inside of an isset empty or array key exists statement 
Check if a particular token is a static or non static call to a class method or property 
Check if a particular token is prefixed with a namespace 
Check if a token is part of a parameter for a function call to a select list of functions 
Check if something is only being sanitized 
Check if something is being casted to a safe value 
Check if something is being sanitized 
Get the index keys of an array variable 
Get the index key of an array variable 
Check if the existence of a variable is validated with isset empty array key exists or key exists 
Check whether a variable is being compared to another value 
Check if a token is inside of an array value comparison function 
Check what type of use statement a token is part of 
Get the interpolated variable names from a string 
Strip variables from an arbitrary double quoted heredoc string 
Checks if a function call has parameters 
Count the number of parameters a function call has been passed 
Get information on all parameters passed to a function call 
Get information on a specific parameter passed to a function call 
Find the array opener closer based on a T ARRAY or T OPEN SHORT ARRAY token 
Determine the namespace name an arbitrary token lives in 
Get the complete namespace name for a namespace declaration 
Check whether a T CONST token is a class constant declaration 
Check whether a T VARIABLE token is a class property declaration 
Check whether the direct wrapping scope of a token is within a limited set of acceptable tokens 
Checks whether this is a call to a wpdb method that we want to sniff 
Determine whether an arbitrary T STRING token is the use of a global constant 
Determine if a variable is in the as key value part of a foreach condition 
Processes this test when one of its tokens is encountered 
Process the parameters of a matched function 
Prepare the punctuation regular expression 
Transform an arbitrary string to lowercase and replace punctuation and spaces with underscores 
Transform a complex string which may contain variable extrapolation 
Groups of classes to restrict 
Process a matched token 
Process the parameters of a matched function 
Process the parameter of a matched function 
Process the parameters of a matched function 
Processes this test when one of its tokens is encountered 
Process an arbitrary T STRING token to determine whether it is one of the target constants 
Process the parameters of a matched define function call 
Processes this test when one of its tokens is encountered 
Retrieve a regex snippet to recognize and remember quotes based on the quote style used in the original string if any 
Analyse a sprintf query wrapper to see if it contains a specific code pattern to deal correctly with IN queries 
Analyse an implode function call to see if it contains a specific code pattern to dynamically create placeholders 
Processes this test when one of its tokens is encountered 
Process the parameter of a matched function 
Process the parameters of a matched function 
Returns an array of tokens this test wants to listen for 
Processes this test when one of its tokens is encountered 
Retrieve a list of misspellings based on an array of matched variations on the target word 
Processes this test when one of its tokens is encountered 
Callback to process each confirmed key to check value 
Returns an array of tokens this test wants to listen for 
Processes this test when one of its tokens is encountered 
Processes this test when one of its tokens is encountered 
Processes the tokens outside the scope 
Processes the tokens within the scope 
Processes this test when one of its tokens is encountered 
Pass config data to PHPCS 
Get the tab width as passed to PHPCS from the command line or the ruleset 
Check whether the ignore annotations option has been used 
Processes this test when one of its tokens is encountered 
Returns an array of tokens this test wants to listen for 
Processes this test when one of its tokens is encountered 
Returns an array of tokens this test wants to listen for 
Returns an array of tokens this test wants to listen for 
Processes this test when one of its tokens is encountered 
Check that defined global variables are prefixed 
Check that global variables imported into a function scope using a global statement are not being overruled 
Add the error 
Processes this test when one of its tokens is encountered 
Groups of functions to restrict 
Process a matched token 
Processes this test when one of its tokens is encountered 
Set up the regular expressions for each group 
Processes this test when one of its tokens is encountered 
Verify is the current token is a function call 
Verify if the current token is one of the targetted functions 
Process a matched token 
Returns an array of tokens this test wants to listen for 
Groups of functions to restrict 
Processes this test when one of its tokens is encountered 
Handle variable variables defined in the global namespace 
Check that defined global variables are prefixed 
Process the parameters of a matched function 
Check if a function class constant variable name is prefixed with one of the expected prefixes 
Check if a variable name might need a prefix 
Validate an array of prefixes as passed through a custom property or via the command line 
Record the potential prefix metric 
Cache the groups 
Processes this test when one of its tokens is encountered 
Processes this test when one of its tokens is encountered 
Process a single line array 
Process a multi line array 
Validate that a valid value has been received for the align Multiline Items property 
Processes this test when one of its tokens is encountered 
Processes this test when one of its tokens is encountered 
Processes this test when one of its tokens is encountered 
Merge custom functions provided via a custom ruleset with the defaults if we haven t already 
Processes this test when one of its tokens is encountered 
Process a single line array 
Process a multi line array 
Process a matched token 
Determine based on the raw parameter value whether a file parameter points to a local data stream 
Processes this test when one of its tokens is encountered 
Processes this test when one of its tokens is encountered 
Merge custom functions provided via a custom ruleset with the defaults if we haven t already 
Returns an array of tokens this test wants to listen for 
Processes this test when one of its tokens is encountered 
Process the parameters of a matched function 
Processes this test when one of its tokens is encountered 
Merge custom functions provided via a custom ruleset with the defaults if we haven t already 
Process a matched token 
Processes this test when one of its tokens is encountered 
Processes class member variables 
Processes the variable found within a double quoted string 
Merge a custom whitelist provided via a custom ruleset with the predefined whitelist if we haven t already 
Process the parameters of a matched function 
Returns an array of tokens this test wants to listen for 
Processes this test when one of its tokens is encountered 
Should the token be ignored 
Determine the line indentation whitespace 
Create an indentation string 
Throw an error and fix incorrect array alignment 
Fix incorrect array alignment 
Processes this test when one of its tokens is encountered 
Returns an array of tokens this test wants to listen for 
Process the parameters of a matched function 
Determine if a range has a falsy value 
Processes this test when one of its tokens is encountered 
Process a matched token 
Check if supplied tokens represent a translation text string literal 
Check for inconsistencies between single and plural arguments 
Check the string itself for problems 
Check for the presence of a translators comment if one of the text strings contains a placeholder 
Returns an array of tokens this test wants to listen for 
Processes this test when one of its tokens is encountered 
Processes this test when one of its tokens is encountered 
Determine if we have a valid classname for the target token 
Verify if the current token is one of the targetted classes 
See if the classname was found in a namespaced file and if so add the namespace to the classname 
Registers the tokens that this sniff wants to listen for 
Processes this test when one of its tokens is encountered 
Unserializes and executes a closure 
Listens amqp queue and runs new jobs 
Opens connection and channel 
Gets a single message from SQS queue and sets the visibility to reserve message 
Listens amqp queue and runs new jobs 
Opens connection and channel 
Closes connection and channel 
 
Listens queue and runs each job 
Validates the namespace 
Pushes job into queue 
Unserializes 
Listens file queue and runs new jobs It can be used as daemon process 
Executes a job The command is internal and used to isolate a job execution Manual usage is not provided 
Handles message using child process 
Runs all jobs from queue 
Info about queue status 
Info about queue status 
Info about queue status 
Listens queue and runs each job 
Clears the queue 
Removes a job by ID 
Takes one message from waiting list and reserves it for handling 
Moves expired messages into waiting list 
Converts the closure to a job object 
Listens queue and runs each job 
Clears the queue 
Removes a job by ID 
Deletes message by ID 
Runs worker 
Provides public access for handle Message 
Sets signal handlers 
Checks signals state 
Info about queue status 
Listens queue and runs each job 
Removes a job by ID 
Checks exit signals Used mainly by yii queue Queue to check whether job execution loop can be continued 
Clears the queue 
Removes a job by ID 
Reserves message for execute 
Deletes reserved message 
Reads the entire document 
parse Get Elements parses everything in the current sub tree and returns a an array of elements 
Parses all elements below the current element 
Reads all text below the current element and returns this as a string 
Parses the current XML element 
Grabs all the attributes from the current element and returns them as a key value array 
Returns the function that should be used to parse the element identified by it s clark notation name 
Create a new context 
Restore the previous context 
Returns a fresh xml writer 
Parses a document in full 
Parses a document in full and specify what the expected root element name is 
Generates an XML document in one go 
Map an xml element to a PHP class 
Writes a value object 
Parses a clark notation string and returns the namespace and element name components 
The xml Serialize metod is called during xml writing 
The deserialize method is called during xml parsing 
The xml Serialize metod is called during xml writing 
This method is called during xml parsing 
Opens a new element 
Write a full element tag and it s contents 
Writes a list of attributes 
Writes a new attribute 
Register the application services 
Return all relations from a fully qualified model class name 
 
Validate the job name 
Validate the command 
 
Transform a Cron Jon into a Shell Job 
 
 
 
 
 
Sets the current span in scope until the returned callable is called It is a programming error to drop or never close the result 
 
 
 
Completes and reports the span 
Creates a new trace If there is an existing trace use link new Child Trace Context instead 
Makes the given span the current span and returns the closer that exits that scope The span provided will be returned by link current Span until the return value is closed 
Returns the current span in scope or null if there isn t one 
This creates a new span based on parameters extracted from an incoming request This will always result in a new span If no trace identifiers were extracted a span will be created based on the implicit context in the same manner as link next Span 
Converts the context as is to a Span object 
 
 
Starts the span with an implicit timestamp 
Sets the string name for the logical operation this span represents 
The kind of span is optional When set it affects how a span is reported For example if the kind is link Zipkin Kind SERVER the span s start timestamp is implicitly annotated as sr and that plus its duration as ss 
Tags give your span context for search viewing and analysis For example a key your app version would let you lookup spans by version A tag link Zipkin Tags SQL QUERY isn t searchable but it can help in debugging when viewing a trace 
Associates an event that explains latency with the current system time 
For a client span this would be the server s address 
Like link finish except with a given timestamp in microseconds 
 inheritdoc 
 inheritdoc 
Generates a new CSRF token 
Generates a new CSRF token and attaches it to the Request Object 
Get token from storage 
Get the most recent key pair from storage 
Remove the oldest tokens from the storage array so that there are never more than storage Limit tokens in the array 
Quickly create an already configured sanitizer using the default builder 
Set attributes from a DOM node to a sanitized node 
Read the value of a DOMNode attribute 
Bootstrap the application services 
Register the application services 
Handle an incoming request 
Finds the default entity to display when the backend index is not defined explicitly 
Finds the default menu item to display when browsing the backend index 
Finds the first menu item whose default option is true if any It looks for the option both in the first level items and in the submenu items 
Processes the backend config to define the URL or the route params to use as the default backend homepage when none is defined explicitly Note we store the route params instead of generating the URL because the router service cannot be used inside a compiler pass 
 
 
It returns the short type name of the given FQCN If the type name is not found it returns the given value 
 
 
 
 param array entity Config param string search Query param int page param int max Results param string sort Field param string sort Direction 
 entity Config properties stores the raw metadata provided by Doctrine This method adds some other options needed for Easy Admin backends This is required because entity Config properties will be used as the fields of the views that don t define their fields 
Completes the configuration of each field property with the metadata provided by Doctrine for each entity property 
Resolves from type options of field 
Returns the date time datetime number format for the given field according to its type and the default formats defined for the backend 
 
 Route name easyadmin 
Utility method which initializes the configuration of the entity on which the user is performing the action 
The method that returns the values displayed by an autocomplete field based on the user s input 
The method that is executed when the user performs a list action on an entity 
The method that is executed when the user performs a edit action on an entity 
The method that is executed when the user performs a show action on an entity 
The method that is executed when the user performs a new action on an entity 
The method that is executed when the user performs a delete action to remove any entity 
The method that is executed when the user performs a query on an entity 
The method that is executed when the user performs a batch action to any entity 
It updates the value of some property of some entity to the new given value 
Performs a database query to get all the records related to the given entity It supports pagination and field sorting 
Creates Query Builder instance for all the records 
Performs a database query based on the search query provided by the user It supports pagination and field sorting 
Creates Query Builder instance for search query 
Creates the form builder of the form used to create or edit the given entity 
Retrieves the list of form options before sending them to the form builder This allows adding dynamic logic to the default form options 
Creates the form object used to create or edit the given entity 
Creates the form used to delete an entity It must be a form because the deletion of the entity are always performed with the DELETE HTTP method which requires a form to work in the current browsers 
Given a method name pattern it looks for the customized version of that method based on the entity name and executes it If the custom method does not exist it executes the regular method 
Generates the backend homepage and redirects to it 
 
Exchange default admin controller by custom entity admin controller 
 
 
 
 param object string entity param string action param array parameters 
 param string class 
 
 
Determines the template used to render each backend element This is not trivial because templates can depend on the entity displayed and they define an advanced override mechanism 
Determines the templates used to render each backend element when no entity configuration is available It s similar to process Entity Templates but it doesn t take into account the details of each entity This is needed for example when an exception is triggered and no entity configuration is available to know which template should be rendered 
Determines the template used to render each backend element This is not trivial because templates can depend on the entity displayed and they define an advanced override mechanism 
Normalizes the different shortcut notations of the menu config to simplify further processing 
 
 
 
 
 
Returns the entire configuration of the given entity 
 param object string entity param string action param array parameters 
Renders the value stored in a property field of the given entity This function contains a lot of code protections to avoid errors when the property doesn t exist or its value is not accessible This ensures that the function never generates a warning or error message when calling it 
Checks whether the given action is enabled for the given entity 
Returns the full action configuration for the given entity and view 
Returns the actions configured for each item displayed in the given view This method is needed because some actions are displayed globally for the entire view e g new action in list view 
 Copied from the official Text Twig extension 
Remove this filter when the Symfony s requirement is equal or greater than and use the built in trans filter instead with a count parameter 
 
Creates a Doctrine ORM paginator for the given query builder 
 
 
 
It processes the given backend configuration to generate the fully processed configuration used in the application 
Adds to the request some attributes with useful information such as the current entity and the selected item if any 
Looks for the object that corresponds to the selected id of the current entity 
 param Exception exception param int status Code param array headers 
 
 
 
Returns a closure normalizing the form html attributes 
 
Takes the entity metadata introspected via Doctrine and completes its contents to simplify data processing for the rest of the application 
Transforms the different action configuration formats into a normalized and expanded format These are the two simple formats allowed 
Transforms the different batch action configuration formats into a normalized and expanded format These are the two simple formats allowed 
If the user overrides the configuration of a default action they usually define just the options they want to change For example actions delete list just to redefine the order actions name list label Listing just to redefine the label 
Actions can be added removed globally in the edit list new show views of the backend and locally in each of the configured entities Local config always wins over the global config e g if backend removes delete action in the list view but some action explicitly adds delete in its list view then that entity shows the delete action and the others don t 
Batch actions can be added removed globally in the list view of the backend and locally in each of the configured entities Local config always wins over the global config e g if backend removes delete action in the list view but some action explicitly adds delete in its list view then that entity shows the delete action and the others don t 
Returns the default configuration for all the built in actions of the given view including the actions which are not enabled by default for that view e g the show action for the list view 
Returns the built in actions defined by Easy Admin for the given view This allows to provide some nice defaults for backends that don t define their own actions 
Deal with form constraint violations This method has to be executed with a negative priority to make sure that the validation process is done 
 
 param Request request 
It dumps the contents of the given variable It tries several dumpers in turn Var Dumper component Yaml dump etc and if none is available it falls back to PHP s var export 
Finds the values of the given entity which match the query provided 
 
This method allows to define the entity configuration is several files Without this Symfony doesn t merge correctly the entities config key defined in different files 
Transforms the two simple configuration formats into the full expanded configuration This allows to reuse the same method to process any of the different configuration formats 
The name of the entity is included in the URLs of the backend to define the entity used to perform the operations Obviously the entity name must be unique to identify entities unequivocally 
By default the entity name is used as its label showed in buttons the main menu etc unless the entity config defines the label option 
Process the configuration of the form view if any to complete the configuration of the edit and new views 
Normalizes the view configuration when some of them doesn t define any configuration 
Fields can be defined using two different formats 
Normalizes the configuration of the special elements that forms may include to create advanced designs such as dividers and fieldsets 
It processes the optional controller config option to check if the given controller exists it doesn t matter if it s a normal controller or if it s defined as a service 
Merges the form configuration recursively from the form view to the edit and new views It processes the configuration of the form fields in a special way to keep all their configuration and allow overriding and removing of fields 
The edit and new views can remove fields defined in the form view by defining fields with a dash at the beginning of its name e g property name to remove the name property 
Creates the query builder used to get all the records displayed by the list view 
Creates the query builder used to get the results of the search query performed by the user in the search view 
Checking if the field name contains a is not enough to decide if it s a Doctrine association This also happens when using embedded classes so the embedded Classes property from Doctrine class metadata must be checked too 
This method takes care of the views that don t define their fields In those cases we just use the entity Config properties information and we filter some fields to improve the user experience for default config 
This methods makes some minor tweaks in fields configuration to improve the user experience 
This method resolves the page title inheritance when some global view list edit etc defines a global title for all entities that can be overridden individually by each entity 
This method resolves the max results inheritance when some global view list show etc defines a global value for all entities that can be overridden individually by each entity 
This method processes the optional sort config that the list and search views can define to override the default id DESC sorting applied to their contents 
Returns the list of excluded field names for the given view 
Filters a list of fields excluding the given list of field names and field types 
 
 
 
 
run a command it is support windows 
truncate 
alter table view 
delete or drop 
HELP 
EXPLAIN 
KILL 
KILL QUERY 
BEGIN 
COMMIT 
CALL 
DESCRIBE or desc or DELETE 
DESCRIBE desc 
INSERT 
REPLACE 
ROLLBACK 
SAVEPOINT 
SELECT 
SHOW 
START 
UPDATE USE 
this is for the String 
My Sql 
 
 
 
 
 
 param Binary Packet bin 
connect 
mysql 
 
send 
recv 
close 
 code abc code 
 code AS abc code 
 offset expect Value 
 json 
 
 
 
 
 
 
 
 
 
Worker Start 
 
 
 
 model 
 
 
 
 param array conns Config 
 
 
 
 
 
 
 
 
 pop 
 
 param object 
Builds a logger Closure to be called from inside the Provider to update the command line 
 
 
 
 
Log exception if logger defined for persister belonging to the current listener otherwise re throw 
 
 
Builds Type Config objects for each type 
 
Should return all configuration available from the data source 
 param string type Name 
Gets all registered providers 
Gets all providers for an index 
Gets the provider for an index and type 
Adds knp paging sort to query 
 
 param Result result param string show Field param string show Source param string show Id param string explain 
Builds mappings for an entire index 
Builds mappings for an entire index template 
Builds mappings for a single type 
Fixes any properties and applies basic defaults for any field that does not have required options 
 
 param persister Id param persister Class 
Logs a query 
 
 param int page param Pager Interface pager param Object Persister Interface object Persister param array options 
 param provider Id param provider Class 
Transforms an object to an elastica document with just the identifier set 
Returns the number of results 
 
 
Returns the paginated results 
Delete all template indexes 
Gets an index by its name 
Gets the persister for an index and type 
Recreates an index populates its types and refreshes the index 
Deletes remaps an index type populates it and refreshes the index 
Refreshes an index 
Transforms an object into an elastica object having the required keys 
transform a nested document or an object property into an array of Elastica Document 
Attempts to convert any type to a string or an array of strings 
Transforms the given object to an elastica document 
Fetch objects for theses identifier values 
Retrieves a query builder to be used for querying by identifiers 
 
 param persister Id param persister Class 
 
 
 
 param query param null int limit param array options 
 
 
 
 
 param query param null int limit param array options 
Gets an index template by its name 
 
 
Deletes and recreates all indexes 
Deletes and recreates the named index If populating creates a new index with a randomised name for an alias to be set after population 
Deletes and recreates a mapping type for the named index 
Switching aliases 
 param string name 
Loads the configured indexes 
Loads the configured indexes 
Loads the configured index finders 
Loads the configured types 
Loads the optional provider and finder for a type 
Creates and loads an Elastica To Model Transformer 
Creates and loads a Model To Elastica Transformer for an index type 
Creates and loads an object persister for a type 
Loads a pager provider for a type 
Loads doctrine listeners to handle indexing of new or updated objects 
Map Elastica to Doctrine events for the current driver 
Loads a Type specific Finder 
Loads the index manager 
Load index template manager 
Makes sure a specific driver has been loaded 
Loads and configures the serializer prototype 
Creates a default manager alias for defined default manager or the first loaded driver 
Generates the configuration tree 
Returns the array node used for dynamic templates 
Returns the array node used for types 
Returns the array node used for id 
Returns the array node used for source 
Returns the array node used for routing 
Returns the array node used for parent 
Returns the array node used for all 
Adds the configuration for the clients key 
Adds the configuration for the indexes key 
Adds the configuration for the index templates key 
Transforms an array of elastica objects into an array of model objects fetched from the doctrine repository 
 
Fetch objects for theses identifier values 
Return whether the object is indexable with respect to the callback 
Builds and initialises a callback 
Processes a string expression into an Expression 
Retreives a cached callback or creates a new callback if one is not found 
Returns the variable name to be used to access the object when using the Expression Language component to parse and evaluate an expression 
 param string index Name 
 
Sets the randomised root name for an index 
Switches an index to become the new target for an alias Only applies for indexes that are set to use aliases 
Builds an Elastic Search request to rename or create an alias 
Cleans up an index when we encounter a failure to rename the alias 
Delete an index 
Close an index 
Returns the name of a single index that an alias points to or throws an exception if there is more than one 
 
 param string name 
Log the query if we have an instance of Elastica Logger 
 param mixed query param int limit param array options 
 param mixed query param int limit param array options 
Looks for new objects that should be indexed 
Looks for objects being updated that should be indexed or removed from the index 
Delete objects pre Remove instead of post Remove so that we have access to the id Because this is called pre Remove first check that the entity is managed by Doctrine 
Persist scheduled objects to Elastic Search After persisting clear the scheduled queue to prevent multiple data updates when using multiple flush calls 
Record the specified identifier to delete Do not need to entire object 
Checks if the object is indexable or not 
Returns custom repository if one specified otherwise returns a basic repository 
Fetch objects for theses identifier values 
Creates an elastica document with the id of the doctrine object as id 
Return repository for entity 
 param type Name 
Make a new Hashids client 
Register the factory class 
 
 inherit Doc 
 inheritdoc 
 
 
 inherit Doc 
 inherit Doc 
 
 
 
 
 
 
 
 
 
 inherit Doc 
 
 
 
 param array params 
Verify if the hash of the given parameter is correct 
 param array fields 
 param array params 
 param array params 
 inherit Doc 
 inheritdoc 
 inherit Doc 
 inherit Doc 
 
 
 inherit Doc 
 
 
 inherit Doc 
 inherit Doc 
 param array fields 
 inherit Doc 
 
 
 inherit Doc 
 
 
 param string url param array fields 
 inherit Doc 
 
 
 
 param string name param Gateway Interface array gateway 
 param string name param Gateway Factory Interface callable gateway Factory 
 param string name param array config 
 param Http Request Verifier Interface callable null http Request Verifier 
 param Token Factory Interface callable null token Factory 
 param Generic Token Factory Interface callable null token Factory 
 param Gateway Factory Interface callable null core Gateway Factory 
 param array config 
 param Storage Interface token Storage param Storage Registry Interface storage Registry 
 param Token Factory Interface token Factory param string paths 
 param Storage Interface token Storage 
 param array gateways param array storages param array gateway Factories 
 param Gateway Factory Interface core Gateway Factory 
 param Gateway Factory Interface core Gateway Factory 
 deprecated since will be removed in 
 param Gateway Factory Interface core Gateway Factory 
 param array default Config 
 
 
 param object model 
 inherit Doc 
 
 param string gateway Factory Or Root Class 
 
 inherit Doc 
 
 
 
 
 param array parameters 
 param array parameters 
 param array parameters 
 param array parameters 
 inheritdoc 
 param string path param array parameters 
 
 
 
 
 param Gateway Config Interface gateway Config 
 inherit Doc 
 inherit Doc 
 inherit Doc 
 param Storage Interface token Storage param Storage Registry Interface storage Registry 
Solution BMCreate Button 
Require TRANSACTIONID 
 param array fields 
 
 
 param string value param string mask Symbol param int show Last 
 param Closure function param int max Retry 
 
 
 
 param object model 
 inherit Doc 
 inherit Doc 
 
 
 
 
 inherit Doc 
 
 
 
 
 
 
 
 
 
 
 
 inherit Doc 
 inherit Doc 
 
 param object model 
 
 deprecated since and will be removed in x 
 
 inherit Doc 
 param mixed value param bool short Class 
 inheritdoc 
 
 inherit Doc 
Create a Guzzle client 
 inherit Doc 
 param Array Object config 
 
 
 inherit Doc 
 
 inherit Doc 
 inherit Doc 
 
 
 inherit Doc 
 
 
 link http www payexpim com technical reference pxorder initialize 
 link http www payexpim com technical reference pxorder complete 
 link http www payexpim com technical reference pxorder check 
 
 
 
 
 
 
 inheritdoc 
 param array fields 
 param array fields 
 
 inheritdoc 
 inherit Doc 
 param Reply Interface reply 
 inherit Doc 
 inherit Doc 
 
 
 inherit Doc 
 
 
 inherit Doc 
 inherit Doc 
 
 
 
 
 
 
 
 inherit Doc 
 inherit Doc 
 
 
 inherit Doc 
 inherit Doc 
 
 
 inherit Doc 
 
 link http www payexpim com technical reference pxrecurring pxrecurring start 
 link http www payexpim com technical reference pxrecurring pxrecurring stop 
 link http www payexpim com technical reference pxrecurring pxrecurring stop 
 param array fields 
 inherit Doc 
 param Extension Interface extension param bool force Prepend 
 
 
 
 inheritdoc 
 inherit Doc 
 inherit Doc 
 
 
 param Http Uri uri param array query 
 param Request Interface request param Response Interface response 
 param array fields 
 
 
 
 
 param Payum Core Action Action Interface action param mixed request 
 param mixed request 
 param Payum Core Action Action Interface action param mixed request 
 param request 
 
 inherit Doc 
 inherit Doc 
 inherit Doc 
 
 
 param array Traversable input 
 param array Traversable input 
 param array required param boolean throw On Invalid 
 param array required param boolean throw On Invalid 
 
 
 experimental 
 
 
 
 
 
 
 
 param string name 
 param array default Config param Gateway Factory Interface core Gateway Factory 
 inherit Doc 
 
 
 inherit Doc 
 
 
 
 
 inherit Doc 
 
 
 param string operation param array parameters param string service Wsdl 
 param array parameters param array parameters Keys 
 param array input Result 
 inherit Doc 
Require PAYMENTREQUEST AMT 
Require TOKEN 
Require STARTDATE 
Require PAYMENTREQUEST AMT PAYMENTREQUEST PAYMENTACTION PAYERID TOKEN 
 param array fields 
 param array fields 
 param array fields 
 param array fields 
Require PAYERID TOKEN 
Require AMT PAYMENTACTION REFERENCEID 
Require AUTHORIZATIONID AMT COMPLETETYPE 
Require AUTHORIZATIONID 
 param string token param array query 
 
 
 
 param mixed api param bool force Prepend 
 param Action Action Interface action param bool force Prepend 
 param Payum Core Extension Extension Interface extension param bool force Prepend 
 
 param mixed request 
 
 param array fields 
 param transaction Id 
 param array fields 
 
Validate a set of options and return a new and shiny Parameter Bag 
Validate a set of options and return a new and shiny Parameter Bag 
Adds a cookie to the current cookie jar 
Adds Cookie headers to the supplied request 
Processes Set Cookie headers from a request response pair 
Removes expired cookies 
Create an unique identifier for the cookie Two cookies with the same identifier may have different values 
Add a single HTTP header line 
Add HTTP headers The input array is all the header lines from the HTTP message Optionally including the status line 
Populates uri method and entity Body used to generate the Authentication header using the specified request object Appends the Authentication header if it is present and has been able to be calculated 
Passes the returned server headers to parse Server Headers to check if any authentication variables need to be set Inteprets the returned status code and attempts authentication if status is Authentication Required by resending the last request with an Authentication header 
Sets the options to be used by this class 
Returns either the current value of client Nonce or generates a new value if client Nonce is null Also increments nonce Count 
Calculates the value of HA according to RFC and RFC 
Calculates the value of HA according to RFC and RFC 
Returns the full Authentication header for use in authenticating the client with either Digest or Basic authentication 
Calculates the value of response according to RFC and RFC 
Returns the Quality of Protection to be used when authenticating with the server 
Calculates the hash for a given value using the algorithm specified by the server 
Parses the Authentication Info header received from the server and calls the relevant setter method on each variable received 
Parses a string of name value pairs separated by commas and returns and array with the name as the index 
Parses the server headers received and checks for WWW Authenticate and Authentication Info headers Calls parse Www Authenticate Header and parse Authentication Info Header respectively if either of these headers are present 
Parses the WWW Authenticate header received from the server and calls the relevant setter method on each variable received 
Sets the hashing algorithm to be used Currently only uses MD specified by either MD or MD sess RFCs are currently in draft stage for the proposal of SHA and SHA Support will be added once the RFC leaves the draft stage 
Sets authentication method to be used Options are Digest and Basic If the server and the client are unable to authenticate using Digest then the RFCs state that the server should attempt to authenticate the client using Basic authentication This ensures that we adhere to that behaviour This does however create the possibilty of a downgrade attack so it may be an idea to add a way of disabling this functionality as Basic authentication is trivial to decrypt and exposes the username password to a man in the middle attack 
Sets the HTTP method being used for the request 
Sets the acceptable value s for the quality of protection used by the server Supported values are auth and auth int TODO This method should give precedence to using qop auth int first as this offers integrity protection 
If a string contains quotation marks at either end this function will strip them Otherwise it will remain unchanged 
Adds parameters to the existing ones 
Convert from Buzz style headers to PSR style 
Convert from PSR style headers to Buzz style 
Converts a request into an array for stream context create 
Populates the supplied response with the response for the supplied request 
This is a blocking function call 
See if any connection is ready to be processed 
Create a multi curl handle and add some properties to it 
Loop over the queue and make sure every item request is initialized ie got a handle 
If we got no requests in the queue do a clean up to save some memory 
Returns true if the current cookie matches the supplied request 
Returns true of the current cookie has expired 
Returns true if the current cookie matches the supplied domain 
Returns true if the current cookie matches the supplied path 
Populates the current cookie with data from the supplied Set Cookie header 
Release a c Url resource This function is from Guzzle 
Prepares a c URL resource to send a request 
Sets options on a c URL resource based on a request 
 param resource curl 
Send a PSR request 
Records an entry in the journal 
Add a page object to the output 
Save the image to given filename triggers image creation 
Send image to client either inline or as download triggers image creation 
Get the raw Image contents triggers Image creation 
Set options 
Run the Command to create the tmp image file 
Add a page object to the output 
Add a cover page object to the output 
Add a TOC object to the output 
Save the PDF to given filename triggers PDF creation 
Send PDF to client either inline or as download triggers PDF creation 
Get the raw PDF contents triggers PDF creation 
Set global option s 
Run the Command to create the tmp PDF file 
This method creates a temporary file if the passed argument is neither a File instance or URL nor contains XML or HTML and is also not a valid file name 
 param array args args to add to the command These can be Special argument input will not get prepended with input cover 
Creates object from parsed Response 
Converts this object to array with XML tags 
Create a Guzzle client for future usage 
Create a middleware stack with given middleware 
Send the requests concurrently Number of concurrency can be modified by inserting a new key value pair with the key number of concurrency into the request Options of service Options Return only the promise 
Create the request to be sent 
Create promise of sending HTTP request with the specified parameters 
Generate the request options using the given service options and stored information 
Creates the promise to send the context 
Throws Service Exception if the received status code is not expected 
Adds HTTP POST parameter to the specified 
Groups set of values into one value separated with Resources SEPARATOR 
Adds metadata elements to headers array 
Adds the header that indicates the location mode to the response header 
Validates if properties is valid or not 
Gets property value and if the property name is not found return null 
Sets property value 
Sets entity property 
Creates new entity property 
Checks if the entity object is valid or not Valid means the partition and row key exists for this entity along with the timestamp 
Creates Get Table Result from HTTP response body 
Computes the authorization signature for blob and queue shared key 
Returns authorization header to be included in the request 
Computes canonicalized headers for headers array 
Computes canonicalized resources from URL using Table formar 
Computes canonicalized resources from URL 
Adds authentication header to the request headers 
Converts this signed identifiers to XML representation 
Construct the signed identifiers from a given parsed XML in array representation 
Add a signed identifier to the ACL 
Remove the signed identifier with given ID 
Sets the batch operations 
Adds operation to the batch operations 
Adds insert Entity operation 
Adds delete Entity operation 
Creates Copy File Result object from parsed response header 
Creates Queue Message object from parsed XML response of List Messages 
Creates Queue Message object from parsed XML response of Peek Messages 
Creates Queue Message object from parsed XML response of create Message 
Initializes static members of the class 
Returns a Storage Service Settings with development storage credentials using the specified proxy Uri 
Gets a Storage Service Settings object that references the development storage account 
Gets the default service endpoint using the specified protocol and account name 
Creates Storage Service Settings object given endpoints uri 
Creates a Storage Service Settings object from the given connection string 
Creates a Storage Service Settings object from the given connection string Note this is only for AAD connection string it should at least contain the account name 
Given array of MIME parts in raw string this function converts them into MIME representation 
Parses given mime HTTP response body into array Each array element represents a change set result 
Creates List Shares Result object from parsed XML response 
Sets shares 
This function will be invoked after the request is sent if the promise is fulfilled 
This function will be executed after the request is sent if the promise is rejected 
This function does the real retry job 
Apply and operation between two filters 
Apply or operation on the passed filers 
Apply eq operation on the passed filers 
Apply ne operation on the passed filers 
Apply ge operation on the passed filers 
Apply gt operation on the passed filers 
Apply lt operation on the passed filers 
Apply le operation on the passed filers 
Adds authentication header to the request headers 
Create an instance using the response headers from the API call 
Setter for location 
Serialize an object with specified root element name 
Unserializes given serialized string to array 
Creates Peek Messages Result object from parsed XML response 
Create Get Entity Result object from HTTP response parts 
Builds a table service object it accepts the following options 
Creates contexts for batch operations 
Creates operation context for the API 
Creates MIME part body for batch API 
Constructs HTTP call context for delete Entity API 
Constructs HTTP call context for update Entity merge Entity insert Or Replace Entity and insert Or Merge Entity 
Constructs HTTP call context for insert Entity API 
Constructs URI path for entity 
Creates a promie that does the actual work for update and merge entity APIs 
Builds filter expression 
Builds filter expression 
Adds query object to the query parameter array 
Encodes OData URI values 
Creates promise to query the tables in the given storage account 
Creates new table in the storage account 
Creates promise to create new table in the storage account 
Gets the table 
Creates the promise to get the table 
Deletes the specified table and any data it contains 
Creates promise to delete the specified table and any data it contains 
Quries entities for the given table name 
Inserts new entity to the table 
Inserts new entity to the table 
Updates an existing entity or inserts a new entity if it does not exist in the table 
Creates promise to update an existing entity or inserts a new entity if it does not exist in the table 
Replaces an existing entity or inserts a new entity if it does not exist in the table 
Creates a promise to replace an existing entity or inserts a new entity if it does not exist in the table 
Updates an existing entity in a table The Update Entity operation replaces the entire entity and can be used to remove properties 
Creates promise to update an existing entity in a table The Update Entity operation replaces the entire entity and can be used to remove properties 
Updates an existing entity by updating the entity s properties This operation does not replace the existing entity as the update Entity operation does 
Creates promise to update an existing entity by updating the entity s properties This operation does not replace the existing entity as the update Entity operation does 
Deletes an existing entity in a table 
Creates promise to delete an existing entity in a table 
Gets table entity 
Creates promise to get table entity 
Does batch of operations on the table service 
Creates promise that does batch of operations on the table service 
Gets the access control list ACL 
Creates the promise to gets the access control list ACL 
Sets the ACL 
Creates promise to set the ACL 
Create an instance using the response headers from the API call 
Logs var to file 
Creates List Directories And Files Result object from parsed XML response 
Sets Directories 
Sets files 
Creates a Directory object using the parsed array 
Creates Update Entity Result from HTTP response headers 
Sets query Params 
Sets status Codes 
Adds or sets header pair 
Adds or sets header pair 
Removes header from the HTTP request headers 
Adds or sets query parameter pair 
Adds or sets query parameter pair 
Add an entry to history 
This function will be invoked after the request is sent if the promise is fulfilled 
This function will be executed after the request is sent if the promise is rejected 
Append the new entry to saved file path 
Creates new Query Tables Result object 
Creates List Messages Result object from parsed XML response 
Sets queue Messages field 
Creates an instance with given response array 
Initializes the connection string source providers 
Throws exception if the object is not of the specified class type 
Throws an exception if the string is not of a valid hostname 
Throws exception if the string is not of a valid uri 
Throws exception if the object is not of the specified class type 
Validate if method exists in object 
Validate if string is date formatted 
Validate if the provided array has key throw exception otherwise 
Constructs the range string according to the set start and end 
Builds a queue service object it accepts the following options 
Builds a queue service object it accepts the following options 
Creates promise to list all queues in the storage account 
Clears all messages from the queue 
Adds a message to the queue and optionally sets a visibility timeout for the message 
Creates promise to add a message to the queue and optionally sets a visibility timeout for the message 
Creates a new queue under the storage account 
Creates promise to create a new queue under the storage account 
Deletes a specified message from the queue 
Creates promise to delete a specified message from the queue 
Deletes a queue 
Creates promise to delete a queue 
Returns queue properties including user defined metadata 
Creates promise to return queue properties including user defined metadata 
Lists all messages in the queue 
Creates promise to list all messages in the queue 
Retrieves a message from the front of the queue without changing the message visibility 
Creates promise to retrieve a message from the front of the queue without changing the message visibility 
Sets user defined metadata on the queue To delete queue metadata call this API without specifying any metadata in metadata 
Creates promise to set user defined metadata on the queue To delete queue metadata call this API without specifying any metadata in metadata 
Updates the visibility timeout of a message and or the message contents 
Creates promise to update the visibility timeout of a message and or the message contents 
Gets the access control list ACL 
Creates the promise to gets the access control list ACL 
Sets the ACL 
Creates promise to set the ACL 
Generates a shared access signature at the account level 
Validates and sanitizes the signed service parameter 
Validates and sanitizes the signed resource type parameter 
Validates and sanitizes the signed permissions parameter 
Validates and sanitizes the signed protocol parameter 
Removes duplicate characters from a string 
Generate the canonical resource using the given account name service type and resource 
Converts this current object to XML representation 
Error message to be parsed 
Gets the request ID of the failure 
Gets the Date of the failure 
Sets middlewares 
Validate if the given middleware is of callable or IMiddleware 
Creates an instance with given response array 
Parses the connection string into a collection of key value pairs 
Parses the connection string 
Generates an invalid connection string exception with the detailed error message 
Extracts key at the current position 
Extracts the string until the given quotation mark 
Skips specified operator 
Parses the given array into signed identifiers 
Creates List File Ranges Result object from parsed response and headers in array representation 
Sets ranges 
Creates object from parsed Response 
Add the provided headers the date then sign the request using the authentication scheme and return it 
Parses the connection string and then validate that the parsed keys belong to the valid Setting Keys 
Creates a setting value condition using the passed predicate 
Creates a setting value condition that validates it is one of the passed valid values 
Tests to see if a given list of settings matches a set of filters exactly 
Adds authentication header to the request headers 
Creates File Properties object from parsed response in array representation of http headers 
Sets entity next row key 
Sets entity next partition key 
Sets next Table Name 
Converts the type to string if it s empty and validates the type 
Validates that the value associated with the EDM type is valid 
Serializes EDM value into proper value for sending it to Windows Azure 
Serializes EDM value into proper value to be used in query 
Converts the value into its proper type 
Check if the type belongs to valid header types 
Creates Service Properties object from parsed XML response 
Converts this object to array with XML tags 
Gets the array that contains all the CORSes 
Converts this current object to XML representation 
Initializes the default sources 
Constructs array of tables from HTTP response body 
Constructs JSON representation for entity 
Constructs array of entities from HTTP response body 
Validates if param Name is already defined 
Sets start 
Validate the permission against its corresponding allowed permissions 
Converts this current object to XML representation 
Validates if type is already defined 
Builds a file service object it accepts the following options 
Creates URI path for file or share 
Helper method to create promise for get Share Properties API call 
Helper method to create promise for set Share Properties API call 
Creates promise to write range of bytes more than MB to a file 
Create a promise to return a list of the shares under the specified account 
Creates a new share in the given storage account 
Creates promise to create a new share in the given storage account 
Deletes a share in the given storage account 
Returns all properties and metadata on the share 
Sets quota of the share 
Creates promise to set quota the share 
Returns only user defined metadata for the specified share 
Updates metadata of the share 
Creates promise to update metadata headers on the share 
Gets the access control list ACL for the share 
Creates the promise to get the access control list ACL for the share 
Sets the ACL and any share level access policies for the share 
Creates promise to set the ACL and any share level access policies for the share 
Get the statistics related to the share 
Get the statistics related to the share 
List directories and files under specified path 
Creates promise to list directories and files under specified path 
Creates a new directory in the given share and path 
Creates a promise to create a new directory in the given share and path 
Deletes a directory in the given share and path 
Gets a directory s properties from the given share and path 
Creates promise to get a directory s properties from the given share and path 
Gets a directory s metadata from the given share and path 
Sets a directory s metadata from the given share and path 
Create a new file 
Creates promise to create a new file 
Deletes a file in the given share and path 
Creates a promise to delete a new file in the given share and path 
Reads or downloads a file from the server including its metadata and properties 
Creates promise to read or download a file from the server including its metadata and properties 
Gets a file s properties from the given share and path 
Creates promise to get a file s properties from the given share and path 
Sets properties on the file 
Creates promise to set properties on the file 
Gets a file s metadata from the given share and path 
Sets a file s metadata from the given share and path 
Creates promise to set a file s metadata from the given share and path 
Writes range of bytes to a file Range can be at most MB in length 
Creates promise to write range of bytes to a file Range can be at most MB in length 
Creates a file from a provided content 
Creates a promise to create a file from a provided content 
Clears range of bytes of a file If the specified range is not byte aligned the operation will write zeros to the start or end of the range that is not byte aligned and free the rest of the range inside that is byte aligned 
Creates promise to clear range of bytes of a file If the specified range is not byte aligned the operation will write zeros to the start or end of the range that is not byte aligned and free the rest of the range inside that is byte aligned 
Lists range of bytes of a file 
Creates promise to list range of bytes of a file 
Informs server to copy file from source Path to path To copy a file to another file within the same storage account you may use Shared Key to authenticate the source file If you are copying a file from another storage account or if you are copying a blob from the same storage account or another storage account then you must authenticate the source file or blob using a shared access signature If the source is a public blob no authentication is required to perform the copy operation Here are some examples of source object URLs https myaccount file core windows net myshare mydirectorypath myfile https myaccount blob core windows net mycontainer myblob sastoken 
Creates promise to inform server to copy file from source Path to path 
Abort a file copy operation 
Creates promise to abort a file copy operation 
Sets operation type 
Adds or sets parameter for the operation 
Creates a array of responses from the batch response body 
Compares between two responses by Content ID header 
Creates Batch Result object 
Converts a Simple XML object to an Array recursively ensuring all sub elements are arrays as well 
Takes an array and produces XML based on it 
Gets the attributes of a specified object if get attributes method is exposed 
Serialize an object with specified root element name 
Serializes given array The array indices must be string to use them as as element name 
Create an instance with parsed XML response with CORS root 
Converts this object to array with XML tags 
Creates promise to get the properties of the service 
Sets the properties of the service 
Creates the promise to set the properties of the service 
Creates promise that retrieves statistics related to replication for the service The operation will only be sent to secondary location endpoint 
Creates List Queues Result object from parsed XML response 
Sets queues 
Parse secondary endpoint url string from a primary endpoint url 
Adds the given key value pair into array if the value doesn t satisfy empty 
Converts a Simple XML object to an Array recursively ensuring all sub elements are arrays as well 
Serializes given array into xml The array indices must be string to use them as XML tags 
Takes an array and produces XML based on it 
Converts string into boolean value 
Converts a given date string into Date Time object 
Generate ISO compliant date string in UTC time zone 
Converts a string to a Date Time object Returns false on failure 
Returns the specified value of the key passed from array and in case that this key doesn t exist the default value is returned The key matching is done in a case insensitive manner 
Returns a string representation of a version GUID which uses random numbers There are reserved bits and the GUIDs have this format xxxxxxxx xxxx xxx a b xxx xxxxxxxxxxxx where x is a hexadecimal digit a f 
Takes a string and return if it ends with the specified character string 
Get id from entity object or string If entity is object than validate type and return entity method If entity is string than return this string 
Convert base number to decimal number 
To evaluate if the stream is larger than a certain size To restore the stream it has to be seekable so will return true if the stream is not seekable param Stream stream The stream to be evaluated param int size The size if the string is larger than 
Append the content to file param string path The file to append to param string content The content to append 
Check if all the bytes are zero 
Append the delimiter to the string The delimiter will not be added if the string already ends with this delimiter 
Static function used to determine if the request is performed against secondary endpoint 
Gets the location value from the headers 
Calculates the content MD which is base encoded This should be align with the server calculated MD 
Creates object from parsed Response 
Validate if the resource type is for the class 
Creates an instance with the given response headers 
Create the retry handler for the Guzzle client according to the given attributes 
Create the retry decider for the retry handler It will return a callable that accepts the number of retries the request the response and the exception and return the decision for a retry 
Decide if the given status code indicate the request should be retried 
Adds optional query parameter 
Adds optional header 
Creates Get File Result from get File call 
Create an instance using the response headers from the API call 
Serialize a message to a string The message object must be either a type of Exception or have following methods implemented get Headers get Protocol Version get Uri get Method get Status Code get Reason Phrase 
Serialize the request type that implemented the following methods get Headers get Protocol Version get Uri get Method 
Serialize the response type that implemented the following methods get Headers get Protocol Version get Status Code get Reason Phrase 
Serialize the message headers 
Serialize the request exception 
Creates Create Message Result object from parsed XML response 
Create Insert Entity Result object from HTTP response parts 
Creates new Query Entities Result instance 
Convert a http headers array into an uniformed format for further process 
Creates object from parsed Response 
Creates a File object using the parsed array 
Apply the middlewares to the handler 
Overrides Fractal s getter for available includes 
Overrides Fractal s method for including a relation 
Resolve scoped includes for the given scope 
Set the error code and message 
Add additional data to the error 
Set the error serializer 
Get the serialized response output 
Make a resource from the given data and transformer and set the resource key 
Manually set the cursor on the resource 
Manually set the paginator on the resource 
Include relations to the transform 
Exclude relations from the transform 
Filter fields to output using sparse fieldsets 
Set the serializer 
Transform and serialize the data and return the transformed array 
Prepare requested relations for the transformation 
Filter out relations that have been explicitly excluded using the without method 
Eager load all requested relations except the ones defined as an include method in the transformers We also strip away any parameters from the relation name and normalize relations by swapping null constraints to empty closures 
Make a Fractal paginator adapter from a Laravel paginator 
Make a Fractal paginator adapter from a Laravel paginator 
Format pagination data 
Format cursor data 
Merge includes into data 
Register a transformable to resource key binding 
Resolve a resource key from the given data 
Resolve a transformable item from the given data 
Resolve a transformer from a class name string 
Render an exception into an HTTP response 
Make an error array from the given error code and message 
Transform the given resource and serialize the data with the given serializer 
Parse the transformation options 
Parse the fieldsets for Fractal 
Parse the given fieldset and append any related resource keys 
Resolve included segments that are a direct child to the given resource key 
Build a successful response 
Build an error response 
Register a message mapped to an error code 
Resolve a message from the given error code 
Clean the data in the given array 
Register a transformable to transformer binding 
Resolve a transformer 
Resolve a transformer from the given data 
Resolve a transformer from the transformable element 
Register the service provider 
Register Laravel bindings 
Register Lumen bindings 
Decorate response factories 
Register serializer bindings 
Register error bindings 
Register Fractal bindings 
Register transformer bindings 
Register pagination bindings 
Register pagination bindings 
Register transformation bindings 
Bootstrap the Laravel application 
Set the paginator s underlying collection 
Build the class with the given name 
Get the fully qualified model class name 
Format the error data 
Get a list of whitelisted relations that are requested including nested relations 
Get a list of default relations including nested relations 
Get nested relations from transformers resolved from the available parameter that also occur in the requested parameter 
Extract available root relations from the given list of relations 
Extract all nested relations under a given identifier 
Wrap the identifier of each relation of the given list of nested relations with the parent relation identifier using dot notation 
Normalize relations to force an identifier constraint transformer structure 
Map over a list of relations with the identifier constraint transformer structure 
Applies any query constraints defined in the transformer to the list of relaations 
Resolve a query constraint for a given relation identifier 
Resolve a relation from a model instance and an identifier 
Resolve a list of transformers from a list of relations mapped to transformers 
Make a resource 
Include a related resource 
Include a related resource from a model and cache the resource type for following calls 
Indicates if the resource should be cached 
Make resource from the given data 
Make resource from the given resource 
Instatiate a new resource instance 
Indicates if the data belongs to a collection resource 
Resolve a transformer 
Resolve a resource key 
Decorate the response with the given decorator 
Respond with a successful response 
Normalize the data for a resource 
Normalize a relationship 
Set resource data for the transformation 
Convert an exception to another exception 
Convert a default exception to an API exception 
Render an error response from an API exception 
Build a successful response 
Build an error response 
Generate a JSON response 
Generate a JSON response 
Make a new transformation to transform data without serializing 
Generate a JSON response 
Configure the terminal to work with Cli Menu 
Add multiple Items to the menu 
Set Items of the menu 
Set the selected pointer to the first selectable item 
Adds a custom control mapping 
Removes a custom control mapping 
Display menu and capture input 
Move the selection in a given direction up down 
Move the selection in a given direction left right 
Retrieve the item the user actually selected 
Execute the current item 
If true we clear the whole terminal screen useful for example when reducing the width of the menu to not leave leftovers of the previous wider menu 
Draw the menu to STDOUT 
Draw a menu item 
Close the menu 
Select default item 
The output text for the item 
Is there an item with this index and can it be selected 
Set the item index which should be selected If the item does not exist then throw an exception 
Get the currently selected item if no items are selectable then throw an exception 
The output text for the item 
Minimal multi byte wordwrap implementation which also takes break length into consideration 
The output text for the item 
Generates the ansi escape sequence to set the colours 
Calculate the contents width 
Get padding for right had side of content 
Shorthand function to set all borders values at once 
Flash a message on top of the menu which disappears on any keystroke 
Calculate the co ordinates to write the messages 
Write an empty row 
Write some text at a particular column 
The output text for the item 
Set the raw string of text 
Calculate the length of the art 
Simple function to transform a bit colours colour code to one of the default colors available in the terminal 
Check if colour exists If it s a colours code and terminal doesn t support it returns a fallback value 
Display confirmation with a button with the given text 
The output text for the item 
 
 
 
 cookie key 
Build and configure an Elasticsearch client 
Register the application services 
Retrieve or build the named connection 
Make a new connection 
Get the configuration for a named connection 
Compresses the input byte array into stream 
This is an immutable function 
Test whether a given option has been seen 
Define additional command line arguments These are appended to those defined when the constructor was called 
Define full set of command line arguments These replace any currently defined 
Define multiple configuration options from an associative array These are not program options but properties to configure the behavior of Zend Console Getopt 
Define one configuration option as a key value pair These are not program options but properties to configure the behavior of Zend Console Getopt 
Define additional option rules These are appended to the rules defined when the constructor was called 
Return the current set of options and parameters seen as a string 
Return the current set of options and parameters seen as an array of canonical options and parameters 
Return the current set of options and parameters seen in Json format 
Return the current set of options and parameters seen in XML format 
Return the state of the option seen on the command line of the current application invocation 
Return a useful option reference formatted for display in an error message 
Define aliases for options 
Define help messages for options 
Parse command line arguments and find both long and short options 
Parse command line arguments for a single long option A long option is preceded by a double character Long options may not be clustered 
Parse command line arguments for short options Short options are those preceded by a single character Short options may be clustered 
Parse command line arguments for a single option 
Return true if the parameter is in a valid format for the option flag Throw an exception in most other cases 
Define legal options using the gnu style format 
Define legal options using the Zend style format 
Return the completed signed Authorization Header 
Sign the Request based on the URL OAuth values and query parameters It follows the spec mentioned at here https oauth wp api org docs basics Signing html For Quick Books online the Body only have two format JSON or test Do not include them in the authorization parts 
Prepare the base String for OAuth to sign 
Helper method to format the HTTP method 
A helper method to decide which query parameters to be included When we append OAuth parts to the existed query Parameters We don t add body for Query in the signature part POST parameters should only be included in the signature if they are of content type application x www form urlencoded as with a form submission 
Sign the base String with HMAC SHA 
Set a random nonce for the signature 
Add all OAuth query paraemters to the signature string string 
Get SQL query specified by object s members 
A static factory to create Http Client 
This is an immutable function 
Gets the log destination folder 
Logs the Platform Request to Disk 
Verifies if operation is available for some entity 
Prepare DOM 
Prepare service class reflection 
Return WSDL as XML string 
Get QName style for given type param string type Type name 
Add xsd import tag to XML schema before any childs added 
Get path to schema in schemas Path with target Namespace ns 
Convert relative paths in XMLSchema s imports and includes to URLs using location 
Return class XML namespace taken from xml Namespace doc 
Check if schema XML Schema file belongs to ns 
Copy given file to public Schema Path 
Compose URL of kind schema host port 
get class vars fix order 
Cast numeric empty value to string 
Logs messages depending on the ids trace level 
Reads the configuration from the config file and converts it to custom config objects which the end developer will use to get or set the properties 
Initializes API Entity Rules 
Initializes operation contrtol list 
Initializes operation contrtol list 
Returns array in a Operation Control List rules format from XML 
Initialize OAuth Settings from Simple XML Reading from SDK config or specific file rightnow the default OAuth module is OAuth 
Initialize Compression Serialization format Settings from Simple XML Reading from SDK config 
Initialize Base URL and log Settings from Simple XML Reading from SDK config 
Gets the List of entity value with particular key 
Clean a POPO class name like IPPClass to be an IPP v Entity name like Class Add clean Class Name to it 
This is an immutable function 
Check the response for any errors it might indicate Will throw an exception if API response indicates an error Will throw an exception if it has a problem determining success or error 
Check the response for any errors it might indicate Will throw an exception if API response indicates an error Will throw an exception if it has a problem determining success or error 
Validates the input string is a well formatted xml string 
Verifies current settigns 
Get all Webhooks Service Class under Webhooks Service directory 
When given a Wehbooks Service name check if the given class name is defined on the Wehbooks Service directory 
Pre assumption the input array must be a map at the beginning no matter it is at beginning or at a recursive call Otherwise the reflection class won t know what the object name is for the list 
Set Options 
Return array of options suitable for using with Soap Server constructor 
Set SOAP version 
Check for valid URN 
Set classmap 
Attach a function as a server method 
Attach a class to a server 
Attach an object to a server 
Return a server definition array 
Set server persistence 
Set request 
Get Soap Server object 
Handle a request 
Deregister a fault exception from the fault exception stack 
Generate a server fault 
Throw PHP errors as Soap Faults 
Return the OAuth Access Token Obj from the login helper 
Return the Client ID for the App 
Return the Client Secret for the App 
Return the Scope for the App 
Return the redirect Uri for the App 
Return the state for the App 
Step of OAuth protocol Return the OAuth Authorization URL 
Step of OAuth protocol After you get authorization code use this method to exchange an access token with it 
Get a new access token based on the refresh token 
Revoke an OAuth access token or refresh token 
Provide OAuth token generation for OAuth token This function currently is not available on QUick Books Online yet 
Parse the JSON Body to store the information to an OAuth Access Token 
A helper function to check Null value 
Generate Authorization Header based on Client ID and Client Serect 
Generate header for refresh Token 
Handle possible errors and react 
Support json last error msg in PHP 
Converts std Class objects into object with specified type It tries to learn type from JSON responce 
Serializes the specified entity 
The input will always be an asscoiate array So we will judge based on this two situration 
De Serializes the specified action entity type 
Add a complex type by recursivly using all the class properties fetched via Reflection 
Ger WSDL file contents 
Add bindings to WSDL 
Add port type 
Add XML Schema types 
Add operations to binding 
Add Port operations 
Return true if given type is local false in case the type is not from xsd or tns namespaces 
Add SOAP messages 
Return method input output 
Add SOAP Service 
Get QName style for given type param string type Type name 
Add xsd import tag to XML schema before any childs added 
 todo Check this method 
Return target namespace for given DOMXPath object 
Return array of namespaces of the document 
Save generated classes to directory 
Load imports 
Load includes in XML Schema 
Convert XSD to XML suitable for further processing 
Save PHP files to directory structure 
Return generated PHP source code That s where we generate bindings code 
Resolve short namespace param string ns Short namespace 
Convert XML URI to PHP complient namespace 
Set the base URL associated with this Acess Token 
Return the number of seconds for refresh token The implementation of Quickbooks Online OAuth always return an seconds refresh token This method is not useful now 
Return the number of seconds for access token The implementation of Quickbooks Online OAuth always return an one hour access token This method is not useful 
Return the refresh Token 
Return the access Token 
Update an access token after creating a new access token or making a refresh tokan API call 
This is an immutable function 
Add an Array Of Type based on the xsd complex Type syntax if type is detected in return value doc comment 
This is an immutable function 
Marshall a POPO object to XML presumably for inclusion on an IPP v API call 
Marshall a POPO object to be XML 
Unmarshall XML into a POPO object presumably the XML came from an IPP v API call 
Parse an XML string into an array of IPPIntuit Entity objects 
Clean a POPO class name like IPPClass to be an IPP v Entity name like Class 
De Serializes the specified action entity type 
set options for curl 
Set the curl TLS Version and check if TLS is supported 
Get info from a curl reference from the type Mainly used after execute use type CURLINFO HEADER OUT for header and type CURLINFO HTTP CODE for http code 
Handles Exception thrown to the user 
Returns value of var from text It also returns last part class name of path like value 
Verifies type and creates entity object 
Returns order list of possible valid names of object type 
Finilizes created metadata description with few more info 
Unmarshal XML string to corresponding PHP binding 
Bind XML file to model param string xml XML source param object model PHP Model to bind to 
Gets the serializer mechanism using the service context and the depending on the request and response 
TO DO Rewrite Late Hao Checks whether the reponse is null or empty and throws communication exception 
Gets the compression mechanism using the service context and the depending on the request and response 
Gets the Request Response Logging mechanism 
Connect a complex type to a given strategy 
Return default strategy of this composite 
Return specific strategy or the default strategy of this type 
Create a complex type based on a strategy 
Create reflection based on class name 
Collect comments for defined properties It will be used to extract meta data 
Creates new instance of target class with specified values It also adjusts any nested type based on suplied metadata 
Converts object values into domain model entities This function is array compatible version of 
Creates instance of specified type and returns it as result 
Returns true if value can be converted into domain model instance 
Converts value into domain model object 
Returns metadata description of property from model 
Set the corresponding settings for the data Service based on Service Context 
Set the Sync Rest Handler for the Data Service If the client Name changed the underlying Client that Sync Rest Handler used will also changed 
PHP SDK currently only support XML for Object Serialization and Deserialization except for Report Service 
PHP SDK currently only support XML for Object Serialization and Deserialization except for Report Service 
Set a new directory for request and response log 
Set a new Minor Version 
Disable the logging function 
Enable the logging function 
The client Name can be either curl guzzle or guzzlehttp 
New Static function for static Reading from Config or Passing Array The config needs to include 
After the Service Context is complete also set the Login Helper based on the Service Context 
Update the OAuth Token that will be used for API calls later 
Setups serializers objects for responces and requests based on service context 
Marshall a POPO object to XML presumably for inclusion on an IPP v API call 
Decorate an IPP v Entity name like Class to be a POPO class name like IPPClass 
Clean a POPO class name like IPPClass to be an IPP v Entity name like Class 
Using the entity and uri to generate Request Response will parsed It will store any Error Code in xx to xx level 
Updates an entity under the specified realm The realm must be set in the context 
The Read request You can either pass an object that contains the Id that you want to read or pass the Entity Name and the Id Before v it supports the read of Company Info and Preferences After v it DOES NOT support read of Company Info or Preferences Please use get Company Info or get Company Preferences method instead Only use this one to do READ request with ID 
Creates an entity under the specified realm The realm must be set in the context 
Deletes an entity under the specified realm The realm must be set in the context 
Uploads an attachment to an Entity on Quick Books Online For security reason text file is not supported for uploading 
Returns PDF for entities which can be downloaded as PDF param IPPIntuit Entity entity param Directory a writable directory for the PDF to be saved return boolean throws Ids Exception Sdk Exception 
Sends entity by email for entities that have this operation 
Retrieves specified entities based passed page number and page size and query 
Append the Pagination Data to the Query string if it is not appended 
Retrieves all entities by name 
Returns List of entities changed after certain time 
Serializes oblect into specified format 
Returns post request depends on configuration and entity rule json Only 
Wraps and returns Request Parameters object 
Methods provides workaround to successfully process Tax Service response 
Returns PDF filename based on entity type and id 
Saves exported e g check Download PDF entity into file according to strategy in settings 
Simple verification for entities which can be returned as PDF 
Creates new batch 
Parse input date time string into unix timestamp 
Checks if input string is a valid timestamp or not 
Verifies input and returns unix timestamp 
Get the Company Information 
Get the actual ID string value of either an IPPid object or an Id string 
Returns current rules for what operation is supported and what is not for Quick Books Online API entity 
A helper method to get Access Token Key People may have a typo on the key name 
A helper method to get Refresh Token Key People may have a typo on the key name 
A helper method to get redirect URL People may have a typo on the key name 
Writes content into temporary file It always creates new temp file Use get Temp Path to retrieve actual path This method doesn t delete the file after script termination 
Writes content into temporary file and returns open handler to it The temporary file is removed when closed e g by calling fclose or there are no more references e g variables or with script termination 
Moves file from temp location to specified folder and name 
Creates filename based on name and prefix It generates uniqid like string if name is ommited 
This is an immutable function 
generate Error from OAuth Exception 
Based on the HTTP Response body set the Intuit Error elements 
Check if the format is standard Intuit Response format This is to prevent Intuit Return random Structured Error 
This is an immutable function 
This is an immutable function 
Do not parse the response Just set it as it is 
Parse the response from different http client response and set the Intuit response 
This is used to set the detailed error coming from Quick Books Online detail 
Parse the raw Http Response Header to associated array to be consumered It will also store the Content Type of the response 
Find the headers for response find the Content type header and intuit tid header and set it 
Find the headers for response find the intuit tid header and set it 
This is an immutable function 
Get App Menu 
Reconnect generates a new OAuth access token and invalidates the OAuth access token used in the request thereby extending the life span by six months 
Set a new uri for this WSDL 
Set a strategy for complex type detection and handling 
Add a link http www w org TR wsdl messages message element to the WSDL 
Add a link http www w org TR wsdl porttypes port Type element to the WSDL 
Add an link http www w org TR wsdl request response operation element to a port Type element 
Add a link http www w org TR wsdl bindings binding element to WSDL 
Add an operation to a binding element 
Add a link http www w org TR wsdl soap binding SOAP binding element to a Binding element 
Add a link http www w org TR wsdl soap operation SOAP operation to an operation element 
Add a link http www w org TR wsdl services service element to the WSDL 
Add a documentation element to any element in the WSDL 
Add WSDL Types element 
Add a complex type name that is part of this WSDL and can be used in signatures 
Echo the WSDL as XML 
This function makes sure a complex types section and schema additions are set 
Add a link http www w org TR wsdl types types data type definition 
Parse an xsd element represented as an array into a DOMElement 
Add an xsd element represented as an array to the schema 
This is an immutable function 
Configure the OAuth or OAuth values from a passed array 
Check if passed array has mininum required fields 
When user passing the URL from Code Sometimes they forget to add at the end of string Add it for them 
Gets the base Uri for a QBO user 
Currently the Object serailziation and deserilization only supports XML format 
Currently the Object serailziation and deserilization only supports XML format To be Supported Currently it is only a place holder 
Disable Log the request and response to disk 
Set a new Location for Log instead of the default Location 
Update OAuth Access Token with the new Token Value 
Logs messages depending on the ids trace level 
Returns array of PHP classes 
Return class properties from array with indent specified 
Return doc Block 
This is an immutable function 
Return the result of the Request if there is no error If the Batch request is Query the result will be an array of items If the Batch request is create update or ddelete it will be the entity 
Set the location at which the WSDL file will be availabe 
Return the current Uri that the SOAP WSDL Service will be located at 
Set Binding soap binding style 
Detect and return the current script name without parameters 
Set the strategy that handles functions and classes that are added AFTER this call 
Set the Class the SOAP server will use 
Add a Single or Multiple Functions to the WSDL 
Add a function to the WSDL document 
Proxy to WSDL dump function 
This is an immutable function 
Update the Service Context of the request 
Sending an request to Quick Books Online based on the Request parameters body and URI 
The API call to generate OAuth signatures and make API call 
Get OAuth Authroization Header based on Query Parameters Base URL 
The OAuth API call 
Get OAuth Authroization Header based on OAuth Access Token 
Set the Common Headers for PHP SDK It is used in all HTTP Request param String Authorization Header The authorization Header param String request Uri The request URI param String Content Type The content type param String request Body The request Body 
Log API Reponse to the Log directory that user specified 
Log API Request to the Log directory that user specified 
Parse a String xml to DOM structure for easy read 
This step is required since the configuration settings might have been changed 
Based on the request determine the URL Endpoint 
Append Minor Version to the URI 
Check The HTTP MEthod from the request Parameters make sure it is either GET or POST 
Get the query parameters from the complete URL used for sign signature for OAuth 
Accept anything if content type is not XML or Json 
A helper function to convert Query to Array 
Returns the response by calling REST service deprecated on Version Need to refactor Hao 
Using the token to encrypt payload and compare with sig 
Encrypt the payload based on hash algorithm and verifier Token 
This is an immutable function 
Gets the Intuit Batch Response with the specified id 
Adds the specified query 
Adds the specified query 
Removes batchitem with the specified batchitem id 
Use this function to do Batch Request instead of Execute 
Helper function for store the error message and code from Fault returned from Quick Books Online 
Prepare Ids Exception out of Fault object 
process batch item response 
Set Options 
Return array of options suitable for using with Soap Client constructor 
Set SOAP version 
Set classmap 
Set encoding 
Set URI 
Set Location 
Set request style 
Set message encoding method 
Set proxy port 
Set HTTPS client certificate path 
Set Stream Context 
Set the string to use in User Agent header 
Do request proxy method 
Initialize SOAP Client object 
Add SOAP input header 
Return a list of available functions 
Return a list of SOAP types 
Add an unbounded Array Of Type based on the xsd sequence syntax if type is detected in return value doc comment 
Return the Array Of or simple type name based on the singular xsdtype and the nesting level 
Append the complex type definition to the WSDL via the context access 
Prepare WSDL DOM model 
Extract types from WSDL 
Add operations to bindings 
Add operations to port 
Add message 
Create ref element 
Create an element with complex type 
Create simple element 
Resolve short namespace to long or return the same code if not found 
Parse Doc comments 
Test if an array is an associate array 
Convert the pay Load of webhook to object 
use Token to verifier the payload is sent from Intuit 
A helper reflection class to assign object to Target Object 
A helper to check if a key is a complex type of an Object 
Set the Target Object with the Val converted in Object 
Set the Target Object with the Val converted in Object 
Find the Method by given parameter on Facade Helper php Class 
Construct an IPPReference Type based on passed Array or String If it is passed as an array handle it If it is passed as a String Construct an array and put the String on the value If it is passed as an obj compare it with IPPReference Type and return the object 
If passed params is array the first element of Array is used in IPPid If passed params is not an array the the value is used for Ippid If passed params is an obj the the value is simply returned 
Override the content from Object B to Object A Don t use array merge here As the NUll Value will be overriden as well Remove the empty check For integer or string that is it needs to be passed and set 
 Common Helper Methods 
The error during HTTP HTTPS call For example the certificate expired The server respond time out It has nothing to do with the status code returned from server 
Get headers for the Quci Kbooks Online Response 
Set the SSL certifcate path and corresponding varaibles for c URL 
Convert an Array to Curl Headers 
Mimics 
Delegate to add Error 
 
Allow only specific classes 
Delegated from add Error 
Order matters 
Supports both relative and absolute file path They differ for PHP CS Fixer and PHP Code Sniffer 
Needs to run in the start of the life cycle since the rest of workflow uses it 
For tests 
For tests 
Run the migrations 
Reverse the migrations 
Set the name attribute on the model 
Scope to find tags by name 
Boot the trait 
Attach one or multiple tags to the model 
Detach one or multiple tags from the model 
Add one tag to the model 
Remove one tag from the model 
Determine if a given tag is attached to the model 
Query scope for models that have all of the given tags 
Query scope for models that have any tag 
Query scope for models that do not have all of the given tags 
Query scope for models that does not have have any tags 
 param Builder query param string join Type 
Rename one the tags for the called class 
Get the most popular tags for the called class 
Returns the Related Pivot Key Name with the table alias 
Returns the Foreign Pivot Key Name with the table alias 
Create a new alias to use on scopes to be able to combine many scopes 
Find an existing tag or create a new one by name 
Convert a delimited string into an array of tag strings 
Return an array of tag models for the given normalized tags 
Build a delimited string from a model s tags 
Build a simple array of a model s tags 
Get all Tags for the given class or all classes 
Get all Tags that are unused by any model 
Get the most popular tags optionally limited and or filtered by class 
Rename tags across all or only one model 
Get the qualified table name for the Tag model 
Get the qualified table name for the Tag model s pivot table 
Translates the human readable names into the payload ones and saves them along with the values 
Build URL which is sent to Google Analytics 
Prepares all the Single Parameters to be sent to GA 
Prepares compound parameters inside collections to be sent to GA 
Replaces a placeholder for the index passed 
Gets the debug response Returns empty array if no response found 
Gets the full endpoint to GA 
Sends a hit to GA The hit will contain in the payload all the parameters added before 
Build the options array for the http client based on the Analytics object options 
Build and returns URL used to send to Google Analytics 
Validates the minimum required parameters for every GA hit are being sent 
Sets a parameter action to the value specified by the method call 
Sets the value for a parameter 
Adds an item to a compund parameter collection 
Gets the value for a parameter 
Gets the index value from the arguments 
Gets the fully qualified name for a parameter 
Sends request to Google Analytics 
Parse the given options and fill missing fields with default values 
Gets the human readable items for the parameter 
Register the service provider 
Set a custom supported card brand with a regular expression to match it 
Set the credit card year 
Validate this credit card If the card is invalid Invalid Credit Card Exception is thrown 
Returns a masked credit card number with only the last chars visible 
Credit Card Brand 
Get raw data for a track on the credit card magnetic strip based on the pattern for track or 
Split the full name in the first and last name 
Sets the card billing name 
Sets the card shipping name 
Get the cardholder s birthday 
Sets the cardholder s birthday 
Initialize the object with parameters 
Set a single parameter 
Sets the card 
Validates and returns the formatted amount 
Sets the payment amount as integer 
Sets the payment currency code 
Get the payment currency number 
Get the number of decimal places in the payment currency 
Format an amount for the payment currency 
Replace the contents of this bag with the specified items 
Add an item to the bag 
Validate that the current Response is a valid redirect 
Convert a string to camel Case Strings already in camel Case will not be harmed 
Validate a card number according to the Luhn algorithm 
Resolve a gateway class to a short name 
Resolve a short gateway name to a full namespaced gateway class 
Get the raw data array for this message The format of this varies from gateway to gateway but will usually be either an associative array or a Simple XMLElement 
Get the raw data array for this message The format of this varies from gateway to gateway but will usually be either an associative array or a Simple XMLElement 
Send the request with specified data 
Get the raw data array for this message The format of this varies from gateway to gateway but will usually be either an associative array or a Simple XMLElement 
Get the raw data array for this message The format of this varies from gateway to gateway but will usually be either an associative array or a Simple XMLElement 
Get the raw data array for this message The format of this varies from gateway to gateway but will usually be either an associative array or a Simple XMLElement 
Get the raw data array for this message The format of this varies from gateway to gateway but will usually be either an associative array or a Simple XMLElement 
Send the request with specified data 
Get the raw data array for this message The format of this varies from gateway to gateway but will usually be either an associative array or a Simple XMLElement 
Send the request with specified data 
Get the raw data array for this message The format of this varies from gateway to gateway but will usually be either an associative array or a Simple XMLElement 
Send the request with specified data 
This method alters the query to return a clean set of object with a working set of Object 
 param string name 
Returns the model s metadata holding the fully qualified property and the last property name 
 param string class 
Retrieve either an Identity Function IDENTITY u assoc or a state field u name 
 param string type 
Get pager by pager Type 
Generates the configuration tree 
For the record the alias value is provided by the association method and the entity join method so the field value is not used here 
 param Proxy Query Interface Query Builder query Builder param string alias param mixed data 
 param string base Class param string property Full Name 
For the record the alias value is provided by the association method and the entity join method so the field value is not used here 
Retrieve the parent alias for given alias Root alias for direct association or entity joined alias for association depth 
 param int type 
 param string type 
Get an IDS object by Name i e get a customer by the Quick Books Name field 
Add an IDS object via IPP 
Update an object within IDS Quick Books 
Find a record by ID number 
Set an error message 
Authenticate against a Quick Books SOAP server 
Tell and optionally set whether or not this item is currently for Sale and Purchase 
Tell and optionall set whether or not this item is currently for Sale or Purchase 
Set the application id of the parent client 
Set the credit card information for this customer 
Get credit card information for this customer 
Add a new sales receipt to IDS Quick Books 
Get a customer by ID 
Add a new class to Quick Books 
Set the primary key for the related record within your own application for the Check 
Generate a GUID 
Get an employee by ID 
Create an instance of a driver class from a DSN connection string or a connection resource 
Set the signature method 
Sign an OAuth request and return the signing data auth string URL etc 
 Pull the private key ID from the certificate privatekeyid openssl get privatekey cert 
 key request urlencode consumer secret request urlencode token secret signature base encode hash hmac sha base string key true 
Set the primary key for the related record within your own application for the Check 
Catch and handle a error from Quick Books 
Example of a login success hook implemented as an object method 
Tell whether or not a specific element is repeatable 
Tell whether or not an element exists 
Re order an array to match the schema order 
Call a callback function 
Call an object method callback object instance method 
Call a static method of a class and return the result 
Tell what type of callback this is a function an object instance method a static method etc 
Call a hook function object method static method 
Get a customer by ID 
Get a customer by name 
Delete a customer from IDS Quick Books 
Connect to the database 
Query the database 
Map a default SQL table name to a My SQL table name 
Set the customer Application ID auto replaced by the API with a List ID 
Set the class application ID 
Get an shipping address as an array or a specific portion of the address as a string 
Get the billing address 
Set the application ID for the shipping method 
Set the application ID for the payment method 
Connect to the database 
Query the database 
Override for the default SQL generation functions My SQL specific field generation function 
Map a default SQL table name to a My SQL table name 
 iv null mode null 
Add a child tag another node to this tag 
Recursive helper function get child at location 
Add a child XML node at a particular path 
Get an array of child nodes for this XML node 
Remove an attribute from the XML node 
Resursive helper function for converting to XML 
Get an array represtation of this XML node 
Helper function for converting to an array mapping paths to tag values 
Save this XML node structure as an XML file 
Save the XML node structure as a JSON document 
Shorten a string to a specific length by truncating or abbreviating the string 
Cast a value to ensure that it will fit in a particular field within Quick Books 
Decode a UTF string to an entity encoded string 
Parse a DSN style connection string 
Mask certain sensitive data from occuring in output logs 
Write a message to the log via the back end driver 
Extract the request ID attribute from an XML stream 
Parse a request ID string into it s action and ident parts 
Create an instance of a driver class from a DSN connection string or a connection resource 
Convert a time interval to a number of seconds i e hour hours minutes etc 
Check if a given IP address lies within a CIDR range 
Check if a given remote address IP address is allowed based on allow and deny arrays 
Create a user for the Quick Books Web Connector SOAP server 
Disable a user for the Quick Books Web Connector SOAP server 
Generate a unique hash from a bunch of variables 
Create a mapping between a Quick Books object and an object in your own database application 
Alias of 
Tell whether or not a given object has a List ID or Txn ID associated with it 
Initialize the backend driver 
Tell whether or not a driver has been initialized 
Tell if a pattern matches a string or not Windows compatible version of www php net fnmatch 
List all of the Quick Books object types supported by the framework 
Convert a Quick Books action to a Quick Books object type i e QUICKBOOKS ADD CUSTOMER gets converted to QUICKBOOKS OBJECT CUSTOMER 
Generate a GUID 
Try to guess the queueing priority for this action 
List all of the Quick Books actions the framework supports 
Get the primary key within Quick Books for this type of object or this type of action 
Connect to the database 
Query the database 
Escape a string for the database 
Map a default SQL table name to a My SQL table name 
Set the primary key for the related record within your own application for the Check 
Generate and return a QWC Web Connector configuration file 
SOAP endpoint for the Web Connector to connect to 
Issue a request to Quick Books to add a customer 
Handle a response from Quick Books indicating a new customer has been added 
Catch and handle errors from Quick Books 
Connect to the database 
Query the database 
Map a default SQL table name to a My SQL table name 
Constructor 
Place an action into the queue along with a unique identifier if neccessary 
Remove an item from the queue 
Fetch the item currently being processed by Quick Books 
Create a recurring event which will be queued up every so often 
Fetch the next recurring event from the recurring event queue 
Forcibly remove an item from the queue 
final public function queue Status ticket action ident new status msg 
Tell the number of queued items left in the queue for a given user 
Get a list of records from the queue for use in a report 
Tell how many commands have been processed during this login session 
Tell whether or not an item exists in the queue 
Log an error that occured for a specific ticket 
Get the last error that occured 
Establish a session for a user log that user in 
Resolve a ticket string to a Quick Books username 
Get the last date time stamp the user logged in 
Check to see whether or not a ticket is for a valid unexpired login session 
End a log in session 
Create a user account with the given username and password 
Enable a username 
Disable a username 
Initialize the driver class 
Tell whether or not the driver class has been initialized 
Log a message to the Quick Books log 
Call any user defined hooks hooked into a particular type of event 
Check if an OAuth token auth realm psuedonym for the given user 
Fetch OAuth tokens with the data provided to you in the SAML request 
Massage any optional configuration flags 
Log a message to the error debug log 
Queue up recurring events that are overdue to be run 
Authenticate method for the Quick Books Web Connector SOAP service 
Send Request XML method for the Quick Books Web Connector SOAP server Generate and send a request to Quick Books 
Extract a unique record identifier from an XML response 
Extract the status code from an XML response 
Extract the status message from an XML response 
Call the mapped function for a given action 
Call a user defined hook 
Call an error handler function and update the status of a request to ERROR 
Calculate the current progress what percentage done are we with this session 
Receive Response XML method for the Quick Books Web Connector Receive and handle a resonse form Quick Books 
Quick Books Web Connector connection Error SOAP method 
Quick Books Web Connector get Last Error SOAP method 
Quick Books Web Connector close Connection SOAP method 
Quick Books Web Connector get Server Version SOAP method 
Quick Books Web Connector client Version SOAP method Receive the Quick Books Web Connector client version and if neccessary act on it 
Queue up a request for the Web Connector to process 
Find an item by name 
XML parsing recursive helper function 
Tell whether or not a string starts with another string 
Execute an SQL query and return the result resource 
Import require once a bunch of PHP files from a particular PHP directory 
Extract the contents from a particular XML tag in an XML string 
Extract the attributes from a tag container 
Encode a string for use within an XML document 
Decode a string for use within an XML document 
Returns TRUE if an OAuth token exists for this user FALSE otherwise 
Load OAuth credentials from the database 
Check whether a connection is due for refresh reconnect 
Reconnect refresh the OAuth tokens 
Handle an OAuth request login thing 
This function returns the html for displaying the Blue Dot menu 
Take a qb XML schema and transform that schema to an SQL schema definition 
Transform an XML document into an SQL schema 
Tell the SQL primary key for a given XML path or the XML path for a given table field combination 
Map an XML node path to an SQL table field OR map an SQL table field to an XML node path 
Map a qb XML XML field type to it s SQL type definition 
 TODO Change this to return false by default and only catch the specific errors we re concerned with 
Get the date time this object was created in Quick Books 
Get the date time when this object was last modified in Quick Books 
Set a value within the object 
Get a value from the object 
Get a Full Name value where separates parent and child items 
Set a Full Name field 
Set a boolean value 
Set a date 
Get a date value 
Removes a key from this object 
Get a qb XML schema object for a particular type of request 
Convert this Quick Books object to an XML node object representation 
public function as QBXML request todo for empty elements QUICKBOOKS XML XML DROP indent t root null 
Convert a Quick Books XML Node object to a Quick Books Object object instance 
Convert a qb XML string to a Quick Books Object object instance 
Tell whether or not the SQL driver has been initialized 
Connect to the database 
Fetch an array from a database result set 
Query the database 
Tell the last inserted AUTO INCREMENT value 
Override for the default SQL generation functions MSSQL specific field generation function 
Map a default SQL table name to a My SQL table name 
 public function as Array request nest true this cleanup 
Add a new department to Quick Books 
Get the name of this customer 
Set the full name of this customer full name 
Sets the name as first and last 
 public function find By Name Context realm ID name list this find By Name Contains Context realm ID name 
Set the primary key for the related record within your own application for the Check 
Apply default options to an array of configuration options 
Set the customer Application ID auto replaced by the API with a List ID 
Get information about the status of a connection to Quick Books 
Deletes purchase order 
Read an open file descriptor XML file or string 
Load the XML parser with data from a string or file 
Parse an XML document into an XML node structure 
Convert this object to a valid qb XML request 
Connect to the database 
Fetch an array from a database result set 
Query the database 
Tell the last inserted AUTO INCREMENT value 
Map a default SQL table name to a My SQL table name 
Override for the default SQL generation functions Postgre SQL specific field generation function 
Insert a new record into an SQL table 
RC encrypt 
Delete a timeactivity from IDS Quick Books 
Alias of Quick Books Server API Errors e notfound Quick Books sometimes returns a error code sometimes a error code 
Handle a Quick Books error indicating that nothing matched a search 
Resolve a ticket string back to a ticket ID number 
Write a configuration variable to the database 
Read configuration information 
Create a new user for the SOAP server 
Enable a username 
Disable a username 
Get the default user 
Get the last date time a particular user logged in 
Log a user in 
Check to see if a log in session is valid 
Store the last error which occured 
Retreive the last error message which occured for a given ticket session 
Register a recurring event for a particular user 
Dequeue a recurring even that is schedule to be run 
Forcibly remove an item from the queue 
Add an item to the queue 
Fetch the queue item currently being processed by Quick Books 
Remove an item from the queue 
Tell how many items are in the queue 
protected function queue Status ticket action ident new status msg null 
Tell how many items have been processed during this session 
Tell whether or not an item exists in the queue 
Truncate if neccessary the log and queue tables if they grow too large 
Write a message to the log file 
Execute an SQL query against the database 
Get a list of the fields within an SQL table 
Get a list of objects back from the database 
Update a record in the SQL table 
Insert a new record into an SQL table 
Request to enter Interactive Mode with the Web Connector 
Register a recurring event 
Add a new item action to the Quick Books queue 
Tell whether or not an action ident already exists in the queue 
Tell the number of items currently in the queue 
Forcibly remove an item from the queue 
Set the address for the refund optional 
Get the address 
Authenticate to the IPP web service 
Create a Context object used for session management for a given ticket and token 
Set the authorization mode for HTTP requests Federated or OAuth 
 public function get Entitlement Values Context url https workplace intuit com db this dbid action Quick Books IPP API GETENTITLEMENTVALUES 
Make an IDS request Intuit Data Services to the remote server 
Get a company by realm ID 
Set the customer Application ID auto replaced by the API with a List ID 
 public function find All Context realm ID xml null return parent find All Context realm ID Quick Books IPP IDS RESOURCE VENDORCREDIT xml 
Deletes vendor credit 
 Gets all Quickbooks errors from the database and returns the array to the caller 
 Gets all Log entries from the quickbooks API 
 Check how many items are in queue right now 
Make an HTTP request 
Sign on to the QBMS service to fetch a session ticket 
Create a unique transaction request ID from a set of parameters 
Do a Quick Books Merchant Service request and fetch the response 
Refund a credit card a given amount 
Get the HTTP HTTPS gateway to use 
Initialize the queueing object 
Get an adapter class instance 
Merge configurations with the defaults 
Merge two arrays allowing arr to be merged over matching keys in arr 
Send the correct HTTP headers for this request 
Handle the SOAP request 
Set the primary key for the related record within your own application for the Journal Entry 
Set the primary key for the related record within your own application for the Journal Entry 
This error occurs when we send a request to Quick Books that has an error or that Quick Books doesn t understand old version of Quick Books 
AES encryption 
Houses the instance of the soap server and creates the mappings for errors function callbacks 
 Customer Modification Request Block 
Create an instance of a request type object 
Handle a SOAP request 
Apply a user defined function to every single data field in the object 
Charge a credit card 
Authorize but don t do a full charge capture a credit card 
Get information about a charge that was made previously 
Get information about a debit that was made previously 
Refund a transaction 
Store a card via the Quick Books Payments API 
Store a card from a token via the Quick Books Payments API 
Get a card via the Quick Books Payments API 
Get all cards associated with a customer via the Quick Books Payments API 
Delete a card via the Quick Books Payments API 
Handle an error if set in the returned data 
Set an error message 
Perform a Quickbooks Payments operation via HTTP 
Map an application primary key to a Quick Books List ID or Txn ID 
Map a Quick Books List ID or Txn ID to an application primary key 
Pass a request to Quick Books 
Hook which gets called when the Web Connector authenticates to the server 
Restrict the queueing maps to only do these actions and dont do these actions maps 
Returns TRUE if the current version if it s greater than or equal to the required version 
Returns the string element if the current version is greater than or equal to the required version 
Used to build the iterator part of the XML string for every qb XML Query Rq method 
Handle an inventory stock status report from Quick Books 
Fetch a list of deleted things from Quick Books 
Handle a list of deleted items from Quick Books 
Void a transaction 
Receive a response from Quick Books about a voided transaction 
Fetch derived fields for a customer Balance Total Balance etc 
Handle a derived field Balance Total Balance etc response for a customer and update the record 
Fetch derived fields for a customer Balance Total Balance etc 
Handle a derived fields Balance Total Balance etc response for an invoices 
Generate a qb XML Invoice Mod request to update an invoice 
Generate a Job Type Add qb XML request to send to Quick Books 
Send an Add request to Quick Books to add an object to the Quick Books database 
Update relatives which might be referring to an out of date temporary List ID or Txn ID 
Used to build the xml that limits the results to only updated results 
Flushes all caches in specified groups 
Flushes caches by given tags optionally only in a specified single group 
Flushes caches by tags optionally only in specified groups 
Try resolving short command names and aliases If that fails we return the command name as is and let the application throw an exception 
Called from Composer 
This method is meant to be called form a sub process specifically from upgrade checkextensioncompatiblity command 
Load all ext localconf files in order until given extension key 
Load all ext table files in order until given extension key 
Loads ext localconf php for a single extension Method is a modified copy of the original bootstrap method 
Loads ext tables php for a single extension Method is a modified copy of the original bootstrap method 
Handles the case when Local Configuration php file already exists 
Executes the given action and returns their response messages 
Run scheduler 
Execute all scheduled tasks 
Execute a single task 
Get all schema updates that are considered relatively safe 
Get all schema updates that are destructive renaming deleting fields tables 
Actually execute the migration to the new schema 
Render a CLI command reference to re Structured Text 
Lock backend 
Unlock backend 
Lock backend for editors 
Unlock backend for editors 
Create admin backend user 
 
List available upgrade wizards 
TYPO Setup 
Generate Package States php file 
Fix folder structure 
Setup TYPO with extensions if possible 
Connect to database 
Select database 
Executes the given action and outputs the serialized result messages 
Create the dispatcher from within a composer plugin context 
Useful for creating the object during the runtime of another command 
Basic factory method which need the exact path to the typo console binary to create the dispatcher 
Execute a command in a sub process 
Formats and echoes the exception for the command line 
Creates instance of an upgrade wizard 
Expands wildcards in schema update types e g field or change 
 
 
 
Wraps a text and adds indentation to new lines 
 
 param Command string commands 
Submit frontend request 
Make URL absolute so that the core fake frontend request bootstrap correctly configures the environment for trusted host pattern 
Renders a table for upgrade wizards 
Check TYPO version constraints of extensions 
List upgrade wizards 
Execute a single upgrade wizard 
Execute all upgrade wizards that are scheduled for execution 
This is where the hard work happens in a fully bootstrapped TYPO It will be called as sub process 
Checks for broken extensions 
Call silent upgrade class redirect to self if configuration was changed 
Performs all necessary operations to integrate extensions into the system Instead of using buggy TYPO API we created our own instead This might be removed once the bug is fixed in TYPO 
Get default structure object hierarchy 
Creates the folder structure for one extension 
Default definition of folder and file structure with dynamic permission settings 
Build directory nodes by given path 
Append original structure definition with additional structure definition Only add missing nodes 
Generate the XML Schema definition for a given namespace It will generate an XSD file for all view helpers in this namespace 
Generate the XML Schema definition for a given namespace It will generate an XSD file for all view helpers in this namespace 
Generate the XML Schema definition for a given namespace It will generate an XSD file for all view helpers in this namespace 
Generate the XML Schema for a given class name 
Add attribute descriptions to a given tag Initializes the view helper and its arguments and then reads out the list of arguments 
Add documentation XSD to a given XML node 
Get all class names inside this namespace and return them as array This has to be done by iterating over class files for TYPO as the Extbase Reflection Service cannot return all implementations of Fluid Abstract View Helpers 
Get all class names inside this namespace and return them as array This has to be done by iterating over class files for TYPO as the Extbase Reflection Service cannot return all implementations of Fluid Abstract View Helpers 
Get a tag name for a given View Helper class Example For the View Helper TYPO CMS Fluid View Helpers Form Select View Helper and the namespace prefix TYPO CMS Fluid View Helpers this method returns form select 
Add a child node to parent Xml Node and wrap the contents inside a CDATA section 
Processes a command line request 
Resolves and checks the current command method name 
Maps arguments delivered by the request object to the local controller arguments 
Calls the specified command method and passes the arguments 
Formats the given text to fit into this output get Maximum Line Length and outputs it to the console window 
Creates a logger which outputs to the console 
Returns a short description of this command 
Returns a longer description of this command This is the complete method description except for the first line which can be retrieved via get Short Description If The command description only consists of one line an empty string is returned 
Returns an array of TYPO CMS Extbase Mvc Cli Command Argument Definition that contains information about required optional arguments of this command If the command does not expect any arguments an empty array is returned 
Get parsed annotations if command has any 
Get synopsis for this command either short or long 
Returns an array of command identifiers which were specified in the see annotation of a command method 
Removes all occurrences of the specified step from this sequence 
Executes all steps of this sequence 
Invokes a single step of this sequence and also invokes all steps registered to be executed after the given step 
Activate extension s 
Deactivate extension s 
Set up extension s 
Performs all necessary operations to integrate an extension into the system To do so we avoid buggy TYPO API and use our own instead 
Set up all active extensions 
Removes all extensions that are not marked as active 
List extensions that are available in the system 
Truncate all DB tables prefixed with cf 
Handles an error by converting it into an exception 
Executes the given action and returns their response messages 
Allows to register one or more script objects that implement this interface This will be called in the Plugin right before the scripts are executed 
Convert from source to target Type a noop if the source is an array If it is a string it will be exploded by the configured string delimiter 
Call silent upgrade class redirect to self if configuration was changed 
Renders a table for a schema update result 
Renders a table for a schema update result 
Truncate wrap query strings at a certain number of characters 
Outputs specified text to the console window You can specify arguments that will be passed to the text via sprintf see http www php net sprintf 
Renders a table like output of the given rows 
Asks the user to select a value 
Asks a question to the user 
Asks a confirmation to the user 
Asks a question to the user the response is hidden 
Asks for a value and validates the response 
Asks for a value hide and validates the response 
Updating or checking Reference Index 
Subclass Symfony list command to be able to register our own text descriptor 
Writes the log record 
Returns the list of performed update types including the count 
Adds to the number of updates performed for a schema update type 
Adds to the list of errors occurred for a schema update type 
Remove configuration option 
Show configuration value 
Show active configuration value 
Show local configuration value 
Set configuration value 
Actions to take after extension has been installed 
Creates a Message object and adds it to the Flash Message Queue 
Copy typo console binary to root directory taking several possible situations into account 
 deprecated will be removed with 
Generate Fluid View Helper XSD Schema 
Initializes the package system and loads the package configuration and settings provided by the packages 
Provide cleaned implementation of TYPO core classes Can only be called after extension configuration is loaded needs extbase configuration 
Tell Extbase TYPO and PHP that we have another implementation 
Tell Extbase about this implementation 
Sets a value in Local Configuration php 
Returns true if the value is stored in the Local Configuration php file and is NOT overridden later e g in Additional Configuration php 
Convert a value to the type belonging to the given path 
Returns the type of a value in given config path 
Checks if target and actual type is scalar 
Checks if the given command can be executed in current application state 
Extbase has its own validation logic so it is disabled in this place 
Sets the application instance for this command It is used later for is Enabled 
Executes the command to find any Extbase command 
Checks PHP sapi type and sets required PHP options 
If detected TYPO version does not match the main supported version overlay compatibility classes for the detected branch by registering an autoloader and aliasing the compatibility class with the original class name 
This is useful to bootstrap the console application without actually executing a command e g during composer install 
Handle the given command input and return the exit code of the called command 
Executes the given action and returns their response messages 
Renders Exception with trace and nested exceptions with trace 
Output formatted exception 
Output formatted trace 
Shorten file name if inside extension or core extension 
Displays an error message 
Update database schema TYPO Database Compare 
Import mysql queries from stdin 
Renders a table for upgrade wizards 
Execute the command in a sub process but execute some automated migration steps beforehand 
Output schema result 
Output at cli context imported static database content 
Output at cli context initialized imported files to destination Absolute Path 
Output at cli context initialized imported files to destination Absolute Path 
Update reference index 
Perform necessary database schema migrations 
Check if we have all mandatory files to assume we have a fully configured installed TYPO 
Builds the sequence for the given run level 
Essential steps for a minimal usable system 
System with complete configuration but no database 
Fully capable system with database persistence configuration TCA and authentication available 
Flush all caches in specified groups 
Flush cache by tags 
List cache groups 
 inheritdoc 
 inheritdoc 
 
 inheritdoc 
 
 inheritdoc 
 inheritdoc 
 
 
 
Hydrate values from callable 
 
 
Register this dictioanry as used 
 
 
 
 
 
 inheritdoc 
 
 
 
 
 
 Route name file manager 
 Route rename file Name name file manager rename 
 Route upload name file manager upload 
 Route file file Name name file manager file 
 Route delete name file manager delete 
 param File Manager file Manager param path param string parent param bool base Folder Name 
Tree Iterator 
 Base Path 
 param query Parameters 
 
parent url 
Returns object JSON representation required by Pay Pal The Pay Pal REST API requires the use of JSON UNESCAPED SLASHES 
Get transaction description 
 Is this complete purchase response successful Will not be successful if it s a redirect response 
The transaction reference obtained from the purchase call can t be used to refund a purchase 
Get OAuth access token 
Is there a bearer token and is it still valid 
Create Request 
Add an item to the bag 
Set the request start Time 
Set the request end Time 
Get all issues of specific type 
Runs console application 
Checks target argument 
Checks max size argument 
Checks exclude argument 
Checks exclude argument 
Checks file extensions argument 
Runs analyzer 
Prints analyzer report 
Simplifies path to fit in specific width 
 param string format Sets format for size Format should containt string parsable by sprintf function and contain one F macro that will be replaced by size Another macro is U u It will be replaced with used unit U for uppercase u lowercase If i is present at the end of format string size multiplier will be set to and units be Ki B Mi B and so on otherwise multiplier is set to example F Ui Ki B example F Ui Ki B example F Ui Ki B example F U KB 
Shows error and terminates script 
Loads issues 
Creates a tokens hierarchy by from plain list 
Divide first level of tokens hierarchy by comma 
Removes all T WHITESPACE tokens from tokens hierarchy 
Calls function usage checker 
Adds issue to the report 
Checks that terminal supports colors 
Outputs text with background foreground color 
Returns size of terminal on Windows 
 
 
 
 
 
 
 
 
 
 inherit Doc 
Attempts to locate the specified identifier 
Attempt to locate a class by name 
We can only load functions if they already exist because PHP does not have function autoloading Therefore if it exists we simply use the internal reflection API to find the filename If it doesn t we can do nothing so throw an exception 
Our wrapper simply records which file we tried to load and returns boolean false indicating failure 
url stat is triggered by calls like file exists The call to file exists must not be overloaded This function restores the original file stream issues a call to stat to get the real results and then re registers the Autoload Source Locator stream wrapper 
 inherit Doc 
 inherit Doc 
Compile constant expressions 
Compile class constants 
Compile a DIR node 
Find all class and function reflections in the specified file 
Check to see if the line is within the boundaries of the reflection specified 
Create a Reflection Class for the specified class Name 
Get all the classes available in the scope specified by the Source Locator 
Create a reflection of a class s property by its name 
Create a reflection of an instance s property by its name 
 internal 
Set the default visibility of this property Use the core Reflection Property IS values as parameters e g 
Get the core reflection compatible modifier values 
Get the Doc Block type hints as an array of strings 
Get the default value of the property as defined before constructor is called when the property is defined 
 param object null object 
 param object object param mixed null value 
 param mixed object 
 inherit Doc 
 
 param array string array int string mappings 
 internal 
 param mixed args 
 inherit Doc 
Get an array of reflections found in some code 
Given an array of Reflections try to find the identifier 
 inherit Doc 
 
 
Create a reflection of a parameter using a class name 
Create a reflection of a parameter using an instance 
Create a reflection of a parameter using a closure 
Create the parameter from the given spec Possible spec parameters are 
 internal 
Does this method allow null for a parameter 
Get the Reflection Type instance representing the type declaration for this parameter 
Set the parameter type declaration 
Gets a Reflection Class for the type hint returns null if not a class 
 
 
 
 inherit Doc 
 
 
 
 
 
 inherit Doc 
Create a Reflection Function for the specified function Name 
Get all the functions available in the scope specified by the Source Locator 
 inherit Doc 
 inherit Doc 
 internal 
Create a reflection of a method by it s name using a named class 
Create a reflection of a method by it s name using an instance 
Find the prototype for this method if it exists If it does not exist it will throw a Method Prototype Not Found exception 
Get the core reflection compatible modifier values 
Is the method a constructor 
 param object null object 
 param object null object param mixed args 
 param mixed args 
 param object object param mixed args 
 
 param array int string array string paths param array string array string package 
 param array int string string paths 
Create a reflection and return the string representation of a named class 
Create from a Class Node 
Get the short name of the class e g for A B Foo this will return Foo 
Get the full name of the class e g for A B Foo this will return A B Foo 
Construct a flat list of all methods from current class traits parent classes and interfaces in this precise order 
Construct a flat list of methods that are available This will search up all parent classes traits interfaces current scope for methods 
Fetch an array of all methods for this class 
Get only the methods that this class implements i e do not search up parent classes etc 
Get a single method with the name method Name 
Does the class have the specified method method 
Get the value of the specified class constant 
Get an associative array of only the constants for this specific class i e do not search up parent classes etc with keys as constant names and values as see Reflection Class Constant objects 
Get an associative array of the defined constants in this class with keys as constant names and values as see Reflection Class Constant objects 
Get the constructor method for this class 
Get only the properties for this specific class i e do not search up parent classes etc 
Get the properties for this class 
Get the property called name 
Get the parent class if it is defined If this class does not have a specified parent class this will throw an exception 
Gets the parent class names 
Get the core reflection compatible modifier values 
Get the traits used if any are defined If this class does not have any defined traits this will return an empty array 
Given an AST Node Name create a new Reflection Class for the element 
Return a list of the aliases used when importing traits for this class The returned array is in key value pair in this format 
Checks whether the given object is an instance 
Checks whether the given class string is a subclass of this class 
Checks whether this class implements the given interface 
Checks whether this reflection is an instantiable class 
Checks whether this is a reflection of a class that supports the clone operator 
This method allows us to retrieve all interfaces parent of the this interface Do not use on class nodes 
Get the value of a static property if it exists Throws a Property Does Not Exist exception if it does not exist or is not static note differs very slightly from internal reflection behaviour 
Set the value of a static property 
Set whether this class is final or not 
Remove the named method from the class 
Add a new method to the class 
Add a new property to the class 
Remove a property from the class 
Check to see if a reflector is of a valid type specified by this identifier 
 
 
 
 
 
Create a reflection and return the string representation of a class instance 
Pass an instance of an object to this method to reflect it 
Reflect on runtime properties for the current instance 
Create an AST Property Node given a reflection 
 
 
 
 
 
 
 
 
 
 
 
 
 
Populate the common elements of the function abstract 
We must determine if params are optional or not ahead of time but we must do it in reverse 
Get the full name of the function e g for A B foo this will return A B foo 
Get the short name of the function e g for A B foo this will return foo 
Get the number of required parameters for this method 
Get an array list of the parameters for this method signature as an array of Reflection Parameter instances 
Get a single parameter by name Returns null if parameter not found for the function 
Check if the function has a variadic parameter 
Recursively search an array of statements Php Parser nodes to find if a yield expression exists anywhere thus indicating this is a generator 
Check if this function can be used as a generator i e contains the yield keyword 
Get the return type declaration only for PHP code 
Set the return type declaration 
Retrieves the body of this function as code 
Override the method or function s body of statements with an entirely new body of statements within the reflection 
Override the method or function s body of statements with an entirely new body of statements within the reflection 
Override the method or function s body of statements with an entirely new body of statements within the reflection 
Add a new parameter to the method function 
Remove a parameter from the method function 
Fetch an array of all return statements found within this function 
 
 
 
Find all identifiers of a type 
 param array string array int string paths 
 
 
 inherit Doc 
 inherit Doc 
Create a reflection of a class s constant by Const Node 
Returns constant value 
Returns a bitfield of the access modifiers for this constant 
 
 
 
 
 
Generates class or interface PHPDoc 
Converts HTML to Markdown and explode 
Extracts cardinality of properties 
Extracts the cardinality of a property 
Generates files 
Tests if a type is an enum 
Gets the parent classes of the current one and add them to parent Classes array 
Creates a map between classes and properties 
Updates generated class with given field config 
Converts a namespace to a directory path according to PSR 
Uses PHP CS Fixer to make generated files following PSR and Symfony Coding Standards 
Checks if a property exists in Good Relations 
Extracts cardinality from the Good Relations OWL 
Gets a property URL 
 
 
Converts a Schema org range to a PHP type 
 
 
 
 
 
 
 
Gets class or interface name to use in relations 
 
 
 
 
 
 
 
Creates new file 
Writes closing tags to current file 
Flushes buffer into file 
Adds a new item to sitemap 
Adds a new single item to sitemap 
Adds a multi language item based on multiple locations with alternate hrefs to sitemap 
Returns an array of URLs written 
Sets whether the resulting files will be gzipped or not 
Creates new file 
Adds sitemap link to the index file 
Finishes writing 
Deflate data in a deflate context and write it to the target file 
Make sure all data was written 
Store data in a temporary stream file 
Deflate buffered data 
Sets the expiration date of generated keys 
Sets the parameters for the primary key of generated key pairs 
Sets the parameters for the sub key of generated key pairs 
Generates a new key pair in the current keyring 
Builds a Gnu PG key usage string suitable for key generation 
Gets a user id object from parameters 
Parses a user id object from a user id string 
Checks if the process is running 
Ends the process gracefully 
Sets the operation that is being performed by the engine 
Handles error values in the status output from GPG 
Handles error values in the error output from GPG 
On error throws exception 
Check exit code of the GPG operation 
Set data for the process execution 
Create Crypt GPG Bad Passphrase Exception from operation data 
Get registered passphrase for specified key 
Get a name for the used hashing algorithm 
Sets whether or not this sub key can sign data 
Sets whether or not this sub key can encrypt data 
Parses a sub key object from a sub key string 
Parses a date string as provided by GPG into a UNIX timestamp 
Deletes a public key from the keyring 
Gets a key fingerprint from the keyring 
Encrypts string data 
Encrypts a file 
Encrypts and signs data 
Encrypts and signs a file 
Decrypts and verifies string data 
Decrypts and verifies a signed encrypted file 
Signs data 
Signs a file 
Adds a key to use for decryption 
Adds a key to use for encryption 
Adds a key to use for signing 
Adds a key to one of the internal key arrays 
Imports a public or private key into the keyring 
Exports a private or public key from the keyring 
Encrypts data 
Decrypts data 
Signs data 
Verifies data 
Decrypts and verifies encrypted signed data 
Prepares command input 
Prepares command output 
Gets the available keys in the keyring 
Sends a command to the GPG subprocess over the command file descriptor pipe 
Resets the GPG engine preparing it for a new operation 
Runs the current GPG operation 
Sets the operation to perform 
Sets the PINENTRY USER DATA environment variable with the currently added keys and passphrases 
Gets the version of the Gnu PG binary 
Get data from the last process execution 
Set some data for the process execution 
Performs internal streaming operations for the subprocess using either strings or streams as input output points 
Opens an internal GPG subprocess for the current operation 
Closes the internal GPG subprocess 
Closes a the internal GPG AGENT subprocess 
Closes an opened pipe used to communicate with the GPG subprocess 
Forces automatically started gpg agent process to cleanup and exit within a minute 
Gets the location of a binary for the current operating system 
Gets the location of the Pin Entry script 
Displays debug text if debugging is turned on 
Gets the primary sub key of this key 
Gets whether or not this key can sign data 
Gets whether or not this key can encrypt data 
Sets the log file location 
Logs a message at the specified verbosity level 
Connects this pinentry to the assuan server 
Parses an assuan command and performs the appropriate action 
Initializes the PINs to be entered by this pinentry from the environment variable PINENTRY USER DATA 
Disconnects this pinentry from the Assuan server 
Parses the currently requested key identifier and user identifier from the description passed to this pinentry 
Sends the PIN value for the currently requested key 
Sends information about this pinentry 
Gets data ready to send to the assuan server 
Wraps strings at bytes without splitting UTF multibyte characters 
Sends raw data to the assuan server 
 
 
Generates an array with all translations 
 
 
Text to include as a comment before the start of the PO contents 
 
Add one or more lines depending whether the string is multiline or not 
Process arguments from command line in a reusable way 
Retrieves the main file data of the plugin or theme 
Creates a POT file and stores it on disk 
Audits strings 
Returns the copyright comment for the given package 
Sets default POT file headers for the project 
Extracts the Word Press version number from wp includes version php 
Retrieves metadata from a file 
Retrieves metadata from a string 
 
Resolve the callee of a call expression using known formats 
Returns wether or not a comment precedes a node The comment must be before the node and on the same line or the one before 
Extract the translations from a file 
Extract the translations from a file 
Determines whether a file is valid based on given matchers 
Determines whether or not a directory has children that may be matched 
Recursively gets all PHP files within a directory 
Splits a single PO file into multiple JSON files 
Builds a mapping of JS file names to translation entries 
Removes strings from PO file that only occur in Java Script file 
 
 
 
 
 
 
Marks a list of updates as successful 
Marks a list of updates 
Set status for update keys 
Checks an array of bulletpoints on a checklist 
Checks all the bulletpoints on a checklist 
Updates and saves progress of the update checklist 
 
Prints a page about Droopler distribution 
Generates hash for the specified config 
Compares config name hash wit provided hash 
Import a config file 
Import many config files at once 
Install modules 
Check link to download file 
Get Subscribe File Entity 
Checking link was created before h 
Redirect to home page and show drupal message 
Send file to browsers 
You can modify the container here before it is dumped to PHP code 
 todo move to another place 
 param APY Data Grid Bundle Grid Row row 
Gets an array of data items for rows from the set data 
Find data from array object 
Get Total count of data items 
Prepares string to have almost the same behaviour as with a database removing accents and latin special chars 
 
 throws Invalid Argument Exception 
 param APY Data Grid Bundle Grid Column Column columns param int page Page Number param int limit Rows Per Page param int max Results Max rows param int grid Data Junction Grid data junction 
Set a two dimentional array 
 
 
 
Returns an instance of type 
Returns the options resolved 
 param Columns Iterator columns param int page Page Number param int limit Rows Per Page param int grid Data Junction Grid data junction 
 param APY Data Grid Bundle Grid Row row param Document resource 
 param string class param string group 
 
 
 
Render grid block 
Render grid block html only 
 param Twig Environment environment param string name param unknown grid 
 param Twig Environment environment param unknown grid 
Cell Drawing override 
Filter Drawing override 
Column Operator Drawing override 
 param string section param APY Data Grid Bundle Grid Grid grid param APY Data Grid Bundle Grid Column Column param 
 param Twig Environment environment param unknown grid param unknown theme param string id param array params 
Render block 
Has block 
Template Loader 
 param Twig Environment environment param unknown theme 
Walks down a Select Statement AST node modifying it to retrieve a COUNT 
 
 
Sets Source to the Grid 
Handle the grid redirection export etc 
Reads data from the request and write this data to the session 
Process mass actions 
Process exports 
Process tweaks 
Store permanent filters to the session and disable the filter capability for the column if there are permanent filters 
Configures the grid with the data read from the session 
Prepare Grid for Drawing 
Writes data to the session 
Get a column by its identifier 
Returns true if column exists in columns and lazy Add Column properties 
Sets order of Columns passing an array of column ids If the list of ids is uncomplete the remaining columns will be placed after 
Adds Mass Action 
Add a tweak 
Returns tweaks Add the url of the tweak 
Returns a tweak 
Returns tweaks with a specific group 
Adds Row Action 
Sets template for export 
Adds Export 
Returns Route URL 
Set value for filters 
Sets Limits 
Sets current Page internal 
Return count of available pages 
Sets the max results of the grid 
Return true if if title panel is visible in template internal helper 
Return true if filter panel is visible in template internal helper 
Return true if pager panel is visible in template internal helper 
Sets on the visibility of columns 
Sets off the visiblilty of columns 
Redirects or Renders a view helper function 
Extract raw data of columns 
Returns an array of the active filters of the grid stored in session 
Returns the filter of a column stored in session 
A filter of the column is stored in session 
 param APY Data Grid Bundle Grid Column Column column 
 param string field Name 
Sets the initial Query Builder for this Data Grid 
 param APY Data Grid Bundle Grid Column Column columns param int page Page Number param int limit Rows Per Page param int grid Data Junction Grid data junction 
Draw cell 
Return column visibility 
set column order 
Set column width 
set filter data from session request 
get filter data from session request 
Set column align 
Return column filter operators 
Add column 
 param column Id 
 param column Id param bool return Column 
Sets order of Columns passing an array of column ids If the list of ids is uncomplete the remaining columns will be placed after if keep Other Columns is true 
 param mixed id 
Renders a view 
 
 
Date Time Helper get Datetime from Sonata Intl Bundle 
Add route parameter 
Map the parameter 
Render action for row 
Add a grid type 
 
Add a column type 
 
Sets the Container associated with this Controller 
gets the export Response 
Get data form the grid 
Get data form the grid in a flat array 
Render block 
Template Loader 
set template 
get parameter 
Get the list of actions to render 
 
 
 
Performs access check for the specified user This method is internally called by check Access 
 
Assigns cart to logged in user 
Delete all items from the cart 
Add an item to the cart 
Removes an item from the cart 
Returns all items of a given type from the cart 
Finds all items of type item Type sums the values of attribute of all models and returns the sum 
 param Cart cart 
 param int default 
Assigns cart to logged in user 
Function set Headers 
Function request 
Function build Query Params Url 
Function build Segment Params Url 
Redirects the user to the hosted login page 
If the user is logged in returns the user information 
Use this to either enable or disable the remember function for users 
 param enc User 
Callback action that should be called by auth logs the user in 
Persists value on SESSION identified by key 
 param key param null default 
 param array credentials 
Bootstrap the application events 
Register the service provider 
 param Auth Login Contract the identifier 
Checks if name is mutable 
 param number param case param string gender 
 
 
 param number param string gender 
Calculates count of characters in string 
Slices string like python 
Lower case 
Upper case 
Name case ex Thomas Lewis Works properly with separated by words 
multiple substr count 
 
 
 
 
 
 
 
 Rules are from http rusgram narod ru html 
 
 
 
 Rules are from http rusgram narod ru html 
 
 param count param unit 
 
 
 
 
Add or prepositional before the word 
Add or prepositional before the word 
Add or or prepositional before the word 
 
Remove default arguments from Static Invocation or its children hack 
Returns the enabled function mock 
Automatically disable function mocks after the test was run 
Defines the mocked function in the given namespace 
 return bool 
 param Connection Interface conn 
 param Connection Interface conn 
 param Connection Interface conn param Exception e 
 param Connection Interface from param string msg 
Get single flags view 
Get country code based on locale 
Return true if code is an allowed lang Get all allowed languages 
Add names to an array of language codes as code language 
Add names to an array of language codes as language code 
Returns the language code 
Returns the language long code 
Returns the language name 
Bootstrap the application services 
Set locale if it s allowed 
Set locale and return home url 
Set locale and return back 
This function checks if language to set is an allowed lang of config 
Handle an incoming request 
Finds the first index where the given callable returns true 
Returns an element based on its index based 
Removes the element at the given index and returns it 
Updates the element at the given index based 
Extracts element from the head while the passed callable returns true 
set server and port 
auth login with server 
auth oauthbearer with server 
Send the message 
connect the server SUCCESS 
SMTP STARTTLS SUCCESS 
SMTP AUTH LOGIN SUCCESS SUCCESS SUCCESS 
SMTP AUTH OAUTHBEARER SUCCESS 
SMTP AUTH XOAUTH SUCCESS 
SMTP RCPT TO SUCCESS 
SMTP DATA SUCCESS SUCCESS 
SMTP QUIT SUCCESS 
get smtp response code once time has three digital and a space 
set server and port 
set mail from 
set mail fake from 
Create mail header 
 brief create Body create body 
 brief create Body With Attachment create body with attachment 
Finds a file by class name while caching lookups to Win Cache 
Finds a file by class name while caching lookups to APC 
Loads a list of classes and caches them in one big file 
Generates a file where classes and their parents are inlined 
Adds brackets around each namespace if it s not already the case 
Writes a cache file 
Gets an ordered array of passed classes including all their dependencies 
Adds prefixes 
Registers a set of classes 
Finds a file by class name while caching lookups to Xcache 
Parses the given text considering the full language 
Parses a paragraph without block elements block elements are ignored 
Given a set of lines and an index of a current line it uses the registed block types to detect the type of this line 
Parse block elements by calling detect Line Type to identify them and call consume function afterwards 
Parses the block at current line by identifying the block type and parsing the content 
Consume lines for a paragraph 
Returns a map of inline markers to the corresponding parser methods 
Prepare markers that are used in the text to parse 
Parses inline elements of the language 
Parses emphasized and strong elements 
identify a line as the beginning of a HTML block 
Consume lines for an HTML block 
Parses inline HTML 
identify a line as the beginning of a fenced code block 
Consume lines for a fenced code block 
identify a line as a headline 
Consume lines for a headline 
Remove backslash from escaped characters 
Parses a link indicated by 
Parses an image indicated by 
Parses inline HTML 
Parses an inline code span 
Consume lines for a paragraph 
 inheritdocs 
Consume lines for a paragraph 
Consume lines for a code block element 
identify a line as the beginning of an unordered list 
Renders a list 
Return html attributes string from attr Name attr Value list 
Consume lines for a blockquote element 
Consume link references 
Consume lines for a fenced code block 
Renders a headline 
Parses the strikethrough feature 
identify a line as the beginning of a table block 
Consume lines for a table 
render a table block 
Parses urls and adds auto linking feature 
 param Profile Context context 
 param Entity Descriptor idp Ed 
 param Context Interface context 
 param Criteria Set criteria Set param Endpoint Reference candidates 
 param string use 
 param DOMNode parent param Serialization Context context 
 param Context Interface context 
 param XMLSecurity Key input Keys 
 param XMLSecurity Key input Key 
 param string decrypted 
 return string 
 param XMLSecurity Key input Key 
 param XMLSecurity Key symmetric Key 
 param Profile Context context 
 param Subject subject 
 param Subject Confirmation subject Confirmation 
 param string data 
 param string filename 
 param XMLSecurity Key key 
 return string 
 param DOMNode node param Deserialization Context context 
 param Credential Interface credential Candidates 
 param XMLSecurity Key key 
 param Criteria Set criteria Set param Credential Interface arr Credentials 
 param Criteria Set criteria Set param array Credential Interface arr Credentials 
 param Criteria Set criteria Set param Endpoint Reference candidates 
 param Message Context context 
 param Message Context context 
 param Message Context context 
 param Message Context context 
 param Message Context context 
 param Message Context context 
 param Message Context context 
 param Profile Context context 
 param Profile Context context param Entity Descriptor Store Interface entity Descriptor Provider param string entity Id 
 param string party Id 
 param string serialized 
 param Assertion Context context 
 param DOMNode parent param Serialization Context context 
 param Assertion assertion 
 param Sso State sso State param Assertion assertion param Date Time now param string own Entity Id param string party Entity Id 
 param Sso State sso State param Assertion assertion param string own Entity Id param string party Entity Id 
 param Assertion Context context 
 param Assertion Context context 
 param Profile Context context 
 param string bool null allow Create 
 param DOMNode parent param Serialization Context context 
 param Profile Context context 
 param Criteria Interface criteria 
 param Criteria Set criteria Set 
 param mixed condition param callable callback 
 param string class 
 param X Certificate certificate 
 param XMLSecurity Key key param string algorithm 
 param XMLSecurity Key input Keys param Deserialization Context deserialization Context 
 param XMLSecurity Key credential param Deserialization Context deserialization Context 
 param DOMElement dom param Deserialization Context deserialization Context 
 param string xml param string schema 
 param int string Date Time value 
 param string time 
 param string value 
 param Single Sign On Service single Sign On Service 
 param string url 
 param string binding 
 param string null binding 
 param Light Saml Model Assertion Attribute attribute 
 param Criteria Set criteria Set param Credential Interface arr Credentials 
 param Profile Context context param string location 
 PHP gt br String representation of object 
 param string serialized The string representation of the object 
 param Context Interface context 
 param Criteria Set criteria Set param Endpoint Reference candidates 
 param string entity Id 
 param int depth 
 param Assertion assertion param int now param int allowed Seconds Skew 
 param Criteria Set criteria Set param Credential Interface arr Credentials 
 param Request request 
 param string binding Type 
 param Request request 
 param Request request 
 param Request request 
 param string entity Id 
 param Message Context context param null string destination 
 param string in Response To param Assertion Context context 
 param Credential Interface credential 
 param Criteria Set criteria Set param Credential Interface arr Credentials 
 param string audience 
 param int null count 
 param Sso Session State sso Sessions 
 param idp Entity Id param sp Entity Id param name Id param name Id Format param session Index 
 param callable callback 
 param string serialized 
 param callable callable 
 param Context Interface context 
 param Action Interface action param int bool priority 
 param Context Interface context 
 param string xml 
 param int string valid Until 
 param Entities Descriptor Entity Descriptor item 
 param Entities Descriptor Entity Descriptor item 
 param string entity Id 
 param DOMNode parent param Serialization Context context 
 param Assertion Context context 
 param Criteria Set criteria Set param Credential Interface arr Credentials 
 param string name param null string class 
 param string name param object Context Interface sub Context 
 param string name 
 param string own Name 
 param string path 
 param Assertion Context context 
 param Assertion Context context 
 param Criteria Set criteria Set param Endpoint Reference candidates 
 param Profile Context context 
 param Profile Context context param string location 
Returns assertions with Authn Statement and Subject with at least one Subject Confirmation element containing a Method of urn oasis names tc SAML cm bearer 
 param Assertion removed Assertion 
 param string value 
 param Lib XMLError error 
 param Assertion Consumer Service assertion Consumer Service 
 param string binding 
 param string url 
 param int index 
 param string null binding 
 param Request State state 
 param string id 
 param string id 
 param Sso State sso State 
 param Assertion Context context 
 param string binding 
 param string null binding 
 param string name Id Format 
 param string key Name 
 param Criteria Set criteria Set param Endpoint Reference candidates 
 param Exception exception 
 param Abstract Name ID name Id 
 param Light Saml Model Assertion Attribute attributes 
 param Credential Interface credential 
 param string entity Id param string id param Date Time expiry Time 
 param Criteria Set criteria Set param Endpoint Reference candidates 
 param Abstract Profile Context context 
 param Abstract Profile Context context 
 param Sso Session State sso Session State 
 param string attribute Value 
 param string string attribute Value 
Core Processing rules 
 param string session Index 
 param DOMNode parent param Serialization Context context 
Returns array of Subject Confirmation containing a Method of urn oasis names tc SAML cm bearer 
 param DOMNode parent param Serialization Context context 
 param Profile Context context 
 param Entity Descriptor Entities Descriptor entity Descriptor 
 param string entity Id 
 param Profile Context context 
 param Criteria Set criteria Set param Credential Interface arr Credentials 
 param DOMNode parent param Serialization Context context 
 param string entity Id 
 param Criteria Set criteria Set param Credential Interface arr Credentials 
 param DOMNode parent param Serialization Context context 
 param string path 
 param string xml param Deserialization Context context 
 param Profile Context context 
 param string entity Id 
 param string entity Id 
 param Profile Context context 
 param Credential Interface credential 
 param Assertion assertion 
 param Assertion assertion 
 param Assertion assertion 
 param Proxy Restriction item 
 param Audience Restriction item 
 param XMLSecurity Key key 
 param DOMNode parent param Serialization Context context 
 param Contact Person contact Person 
 param Key Descriptor key Descriptor 
 param string use 
 param string null use 
 param Organization organization 
 param Light Saml Model Xml DSig Signature signature 
 param DOMNode parent param Serialization Context context 
 param Abstract Statement statement 
 param string class 
 param bool null is Passive 
 param bool null force Authn 
 param null int attribute Consuming Service Index 
 param null int assertion Consumer Service Index 
 param DOMNode parent param Serialization Context context 
 param Profile Context context 
 param binding 
 param Signing Options options 
 param X Certificate certificate param XMLSecurity Key xml Security Key 
 param Message Context context param null string destination 
 param array data param Message Context context 
 param string msg param string encoding 
 param Message Context context param string null destination 
 param Saml Message message param Message Context context 
 param Saml Message message param string xml 
 param string msg param Saml Message message param string null destination 
 param Request request 
 param Light Saml Credential X Certificate certificate 
 param Abstract Signature Reader signature param string issuer param string metadata Type 
 param string entity Id 
 param Entity Descriptor entity Descriptor 
 param Entity Descriptor Store Interface idp Entity Descriptor Store param Entity Descriptor Store Interface sp Entity Descriptor Store param string own Entity Id param Credential Store Interface own Credential Store param Credential Interface extra Credentials 
 param Entity Descriptor Store Interface idp Entity Descriptor Store param Entity Descriptor Store Interface sp Entity Descriptor Store param Credential Interface own Credentials param Credential Interface extra Credentials 
 param string value 
 param string value 
 param string value 
 param string value 
 param string value 
 param string value 
 param string value 
 param string value 
 param string null id 
 param Light Saml Model Metadata Idp Sso Descriptor Light Saml Model Metadata Sp Sso Descriptor item 
 param DOMNode parent param Serialization Context context 
 param string entity Id 
 param string name param null string namespace param DOMNode parent param Serialization Context context 
 param string name param DOMNode parent param Serialization Context context param string null namespace 
 param array null value param DOMNode node param Serialization Context context param null string node Name param null string namespace Uri 
 param DOMElement node param Deserialization Context context param string node Name param string null namespace Prefix param string class param string method Name 
 param string name param DOMElement element 
 param DOMElement node param Deserialization Context context param string element Name param string class param string namespace Prefix 
 param string name 
 param Abstract Saml Model object param XMLSecurity Key key 
 param DOMNode parent param Serialization Context context 
 param Context Interface context param Action Interface action param array extra Data 
 param Context Interface context param Action Interface action param array extra Data 
 param Context Interface context param Action Interface action param array extra Data param bool log Whole Context 
Shortcut for creating an XML element 
Shortcut for creating an XML element that contains CDATA wrapped text 
Checks if there is at least one image of type default 
Checks if the provided value is empty 
Checks if the provided input complies to a FINDOLOGIC valid url URL needs to have a http s schema See https docs findologic com doku php id export patterns xml urls 
Verifies that property keys for use in CSV export don t contain characters that could break the format fatally 
Creates an exporter for the desired output format 
Add a value to the property element 
Validates the export page against the schema In case of violations an exception is thrown 
Shortcut to easily add the name of the item 
Shortcut to easily add the summary of the item 
Shortcut to easily add the description of the item 
Shortcut to easily add the price of the item 
Shortcut to easily add the bonus of the item The value must be a numeric 
Shortcut to easily add the sales frequency of the item The value must be a positive integer 
Shortcut to easily add the date added value of the item 
Shortcut to easily add the sort value of the item 
Validates given value Basic implementation is validating against an empty string but is overridden when checking values more specific 
Fetches content of a hook 
Insert a hook in repository using a symlink 
Set a hook in repository 
Removes a hook from repository 
Count commits without offset or limit 
Initializes directory attributes on repository 
 throws Runtime Exception Unable to find file HEAD debug mode only 
Returns the reference list associated to the repository 
Instanciates a commit object or fetches one from the cache 
Instanciates a tree object or fetches one from the cache 
Instanciates a blob object or fetches one from the cache 
Returns log for a given set of revisions and paths 
Returns the size of repository in kilobytes 
Executes a shell command on the repository using PHP pipes 
Returns description of repository from description file in git directory 
Changes the repository description file description in git directory 
This command is a facility command You can run any command directly on git repository 
Clones the current repository to a new directory and return instance of new repository 
This internal method is used to create a process object 
Returns the parent commits 
Returns the first line of the commit and the first characters 
Find branch containing the commit 
Initializes a repository and returns the instance 
Checks the validity of a git repository url without cloning it 
Clone a repository to a local path 
Clone a repository branch to a local path 
Internal method to launch effective git clone command 
This internal method is used to create a process object 
Returns lines grouped by commit 
Returns all lines of the blame 
Returns a reference by name 
Returns all branches 
Returns all locales branches 
Returns all remote branches 
Returns content of the blob 
Determine the mimetype of the blob 
Export a diff as array 
Parse a text which represents an email and splits it into fragments 
 param Fragment DTO fragment DTOs 
 param string column param string direction param null table 
Allows calculation on columns using predefined SQL functions 
 param string column Name param string alias 
 return Nil Portugues Sql Query Builder Syntax Column 
 param Minus minus 
 param alias param Select select 
 param Select select 
 param Select select 
 param Select select param string parts 
 param table Columns param select As Columns param value As Columns param func As Columns 
 param Select select param string parts 
 param Select select param array parts 
 param Select select param writer param string get Method param string write Method param string glue param string prepend 
 param Select select param array parts 
 param array wheres 
 param Select select param array parts 
 param Select select param array parts 
 param array having Array param Select select param Generic Builder writer param Placeholder Writer placeholder 
 param Select select param array parts 
 param Order By order By 
 param Select select param array parts 
 param Insert insert 
 param collection param writer param string method 
 inheritdoc 
 param string operator 
 param operator 
 param column param value param string operator 
 param column 
 param string columns param mixed values param string mode 
 param string column param int a param int b 
 param string column param int a param int b 
 param string column 
 param string column 
 param string column param int value 
 param Update update 
 param Update update 
 param Where where 
 param Where where 
 param Where where param array where Array 
 param columns 
 param Where where param array where Array 
 param Where where param string method param string operation 
 param Where where param array where Array 
 param Where where param array where Array 
 param Where where param array where Array 
 param Where where param array where Array 
 param subject 
 param Where where param array where Array 
 param Where where param string get Method param string write Method 
 param Where where param array where Array 
 param Where where param array where Array 
 param Where where param array where Array 
 param Where where param string method param string operation 
 param Where where param array where Array 
 param Where where param array where Array 
 param string table param string self Column param string ref Column param string columns 
 param string table param string self Column param string ref Column param string columns param string join Type 
 param Select select param string self Column param string ref Column 
 param string table param string self Column param string ref Column param string columns 
 param string table param string self Column param string ref Column param string columns 
 param string table param string self Column param string ref Column param string columns 
Allows calculation on columns using predefined SQL functions 
 param null Where data param string operation 
 param int start param count 
 param having Operator 
 param string column param string direction param null table 
 param Select select 
 param array select As Columns param Select Writer select Writer 
 param Select select 
 param Select select 
 param Column column 
 param Column column 
 param Delete delete 
 param string table param array columns 
 param string table param array values 
 param string table param array values 
Returns a SQL string in a readable human friendly format 
 param Query Interface query param bool reset Placeholders 
 param Select select 
 param Table table 
 param Table table 
 param array values 
Returns the column name 
Creates a collection of Column objects 
Creates a Column object 
Creates a Table object 
 param array values 
Converts this query into an SQL string by using the injected builder Optionally can return the SQL with formatted structure 
 param string where Operator 
 param string column param string direction param null table 
 param string comment 
 param value 
 param value 
 param value 
 param Query Part Interface set Class param string set Operation param glue 
 param string table 
 param null string alias 
 param string table param mixed self Column param mixed ref Column param string columns param string join Type 
 param Select select param mixed self Column param mixed ref Column 
 param string table param mixed self Column param mixed ref Column param string columns 
WHERE constrains used for the ON clause of a LEFT RIGHT INNER CROSS JOIN 
Execute the query as a select statement 
Get an array with the values of a given column 
Boot the cacheable eloquent trait for a model 
Store the given cache key for the given model by mimicking cache tags 
Get cache keys from the given file 
Flush cache keys of the given model by mimicking cache tags 
Forget the model cache 
Fire the given event for the model 
Reset cached model to its defaults 
Generate unique cache key 
Cache given callback 
Method validates HPP request object using JSR bean validation 
Method validates HPP response hash 
Checks if the passed value is valid 
 p Method produces JSON from code Hpp Request code object Carries out the following actions ul li Validates inputs li li Generates defaults for security hash order ID and time stamp if required li li Base encodes inputs li li Serialises request object to JSON li ul p 
 p Method produces code Hpp Request code object from JSON Carries out the following actions ul li Deserialises JSON to request object li li Decodes Base inputs li li Validates inputs li ul p 
 p Method produces JSON from code Hpp Response code object Carries out the following actions ul li Validates inputs li li Generates defaults for security hash order ID and time stamp if required li li Base encodes inputs li li Serialises response object to JSON li ul p 
 p Method produces code Hpp Response code object from JSON Carries out the following actions ul li Deserialises JSON to response object li li Decodes Base inputs li li Validates hash li ul p 
Helper method for adding a auto Settle Flag 
Helper method for adding a return Tss 
Helper method for adding a validate Card Only 
Helper method for adding a dcc Enable 
Helper method for adding a card Storage Enable 
Helper method for adding a offer Save Card 
Helper method for adding a payer Exists 
Helper method for adding the Hpp Version 
Generates default values for fields such as hash timestamp and order ID 
Creates the security hash from a number of fields and the shared secret 
Base encodes all Hpp Request values 
Base decodes all Hpp Request values 
Format non encoded request remove null values 
Validates OTB 
Checks if the passed value is valid 
 param string class Name 
Each message sent to Realex should have a hash attached For a message using the remote interface this is generated using the This is generated from the TIMESTAMP MERCHANT ID ORDER ID AMOUNT and CURRENCY fields concatenated together with in between each field This confirms the message comes from the client and Generate a hash required for all messages sent to IPS to prove it was not tampered with p Hashing takes a string as input and produce a fixed size number bits for SHA which this implementation uses This number is a hash of the input and a small change in the input results in a substantial change in the output The functions are thought to be secure in the sense that it requires an enormous amount of computing power and time to find a string that hashes to the same value In others words there s no way to decrypt a secure hash Given the larger key size this implementation uses SHA which we prefer that you but Realex has retained compatibilty with MD hashing for compatibility with older systems p p To construct the hash for the remote interface follow this procedure 
Method serialises code Hpp Request code or code Hpp Response code to JSON 
Method deserialises JSON to code Hpp Request code 
Method deserialises JSON to code Hpp Response code 
Creates the security hash from a number of fields and the shared secret 
Base encodes the HPP response values 
Base decodes the HPP response values 
 param value mixed 
 param array directives 
 param Directive Interface directive 
 param Abstract Object Type type param string field Name 
 param value param bool return Value 
Apply all of reducers to this query Example reducer operations checking for maximum query complexity performing look ahead query planning etc 
Entry point for the walk Query routine Execution bounces between here where the reducer s visit method is invoked and walk Query where we send in the scores from the visit call 
Coroutine to walk the query and schema in DFS manner see Abstract Query Visitor docs for more info and yield a tuple of query Node schema Node child Score 
 param string type 
 return Token 
 http facebook github io graphql October sec String Value 
Exists for the performance 
 param string field Name 
 param Abstract Schema Field value 
 param name 
 param array string variables 
 param Directive Interface Directive value 
 param Abstract Type type param null string name param array config option string edge Fields 
 param Abstract Type type param null string name param array config option string connection Fields 
Unpack results stored inside deferred resolvers 
Apply post process callbacks to all deferred resolvers 
Converts a cursor to its array key 
Converts a cursor to an array offset 
 return mixed 
 param name 
 return array Input List Input Object Literal Variable Reference 
 param string name param array args param Abstract Object Type array output param callable resolve Function 
 
 param key param null default Value 
 param Abstract Schema schema 
 param Abstract Object Type type 
 param Field int Field param Field obj Field param Abstract Interface Type interface 
 param int indices 
Web Socket 
 
 reload 
 
 path Info HTTP 
 websocket server 
 Path Info 
 Path Info 
 
 
 
 composer 
 
 HEADER 
 
 
 
 
 Road Runner 
 
 
 transport 
 
 
 
 
 
 psr 
 
 composer 
 composer 
 composer 
 
 
 
 
 
 
 next 
 
 
 Pdo 
 
 sql 
 
 
 
 
sql 
 
 
 sql 
 
 
 
 
pdo 
 
 
 sql 
 
 
 
 
PDO 
 
 
 
 
 
 
 
 
 
 
 
 
 
 Path Info 
 
 
 
 Rpc Websocket 
 
 
 
 Path Info Open Api 
 
 
 
 
 
 
 
 
 restful restful 
 
 
 
 
 
 
 Psr Leevel 
 
 Leevel 
 COOKIE 
 
 And 
 Not 
 
 
 
 
 
 
 
 
 
 
 session 
 session ID 
 
 
 
 
 
 Mvc 
 Restful 
 throttler 
 
 
 
 
 
 
 HTML 
 
 
 
 
 
 
 
 debug 
 
 
 
 
 
 
 
dsn 
 
 
 limit 
 
 key 
 
 
 
Rpc 
 
 Thrift Rpc Query PHP 
 
 
 
 
 
 
 
 
 
 
 
 
 
 total 
 main 
 next 
 last 
 session 
 session 
 session 
 
 session 
 session 
 session 
 
 
 flash 
 
 
 
 
 flash 
 
 SESSION ID 
 
 
 
bootstrap 
 
 
 
 
 
 
 
 HTTP 
 
 
 token 
 
 http server 
 websocket server 
 rpc server 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 next 
 last 
 last next 
 
 
 JSON 
 url page 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 ID 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 view parser 
 
 
 
 
 
 
 
 
 
if 
elseif 
foreach 
endtag 
let 
if 
for 
assign 
if 
elseif 
foreach list 
lists 
include 
for 
while 
php 
 
 if 
 JS 
 
 
 
 
 
 
 
 body 
 
 
 
 session 
 token 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 register 
 
 
 
 
 
 
 
 
 
 
 
 
 Request 
 
 
 keys 
 
 keys 
 keys 
 
 query 
 cookie 
 
 header 
 server 
 
 Ajax 
 Pjax 
 json 
 json 
 json 
 json 
 
 
 
 
 
 https 
 host 
 URL 
 
 
path Info 
 
 url 
 
pathinfo 
 
 
URL 
 Swoole 
 ifs 
 else Ifs 
 
 
 
 html 
 
 
 
 file get content path 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 Query PHP Thrift RPC 
 Thrift RPC Query PHP 
 
 
 Open Api 
 
 
 open Api 
 
 
 
 api v web v goods orders 
 
 
 
 
 
 
 
 
 
 
 
 
 cache load 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 first 
 prev 
 
 
 PHP 
 
 insert sql 
 insert All 
 update sql 
 delete sql 
 ID 
 
 
 
prefix 
 
 
 
where 
or Where 
 
index 
join 
 UNION 
 GROUP BY 
 HAVING where 
or Having 
Having 
Having OR 
 
 SELECT DISTINCT 
 
 
 
 
 
 
 
 
limit 
 FOR UPDATE 
 
 
 where 
 join 
 
 aggregate 
 from 
 table 
 index 
 where 
 union 
 limit 
 condition where having 
 
 
 
 
 
 
 join 
 
 
 
 
 
 
 Swoole 
 
 
 
 
 
 
 
 
 
 handler 
 
 
 
 
 
 
 leevel 
 
 composer 
 
 
 
 
 Uploaded File 
 FILES 
 
 
 
 
 
 Date Time 
 redis 
 
 
 
 tagself 
code 
js node 
node 
 node 
code 
 
 
 code node 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 JSON 
 JSON 
 JSONP 
 JSON 
 
 
 JSON 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 SQL 
 
 
 
 markdown 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 class 
 
 
 
 
 
 
 
 
 zephir new Instance Without Constructor Class Tests Event Listener Not Extends does not have a constructor so you cannot pass any constructor arguments 
 
 
 DEBUG 
 Monolog DEBUG 
 
 
 
 HTTP 
HTTP 
JSON 
 
 
 
Whoops 
 
 Whoops 
 
 
 
 
 
 
 
 
 
 URL 
 URL 
url 
 
 HTTP HEADERS 
 
 
 And 
 Not 
 
 
 
 
 
 
 
 
 
 filter var 
 filter var 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 uses 
 
 use 
 
 API 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 Thrift 
 text 
 
 
 
 
 
 COOKIE 
 COOKIE 
 
 ID ID 
 ID ID 
 
 ID ID 
 ID ID 
 
 
 JSON 
 ID ID 
 
 
 connect 
 
 
 
 
 
 
 
 
 
 
 
 composer 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
replace 
 ID 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 enum false 
 JSON 
 
 
 
 
 
 replace 
 
 
 
 setter 
 
 
 
 prop 
 getter setter 
 
 
 
 
 enum 
 
 
 
 http nginx favicon ico nginx deny favicon ico Google 
 reload 
 
 Query PHP swoole 
 swoole Query PHP 
 http server 
 
 
 PHP 
 
 
 
 
 id 
 reload 
worker start Query PHP Query PHP Worker 
 
worker 
 
 Finish 
 task 
Server 
 server 
 http server 
http server 
 swoole 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 html 
 phpui 
 
 
 sql select 
 insert sql 
 update sql 
 
 
 delete sql 
 ID 
 
 
 
 
 
 
 
 
 
 
 
 HTML 
 
 
 
 SQL 
 
 
 class 
 
 sql 
 
 
 
 
 
 
 
 inheritdoc 
 
 
 
 
 
 COOKIE 
 
 
 
 
 
 cookie 
 cookie 
 cookie 
 COOKIE 
 mysql 
 
 
 prev 
 next 
 
 Array Access offset Set 
 Array Access offset Unset 
 
 Json Serializable json Serialize 
each 
 
 
 
 
 JSONP 
 
 
 URL 
 
 GET POST 
 
 
 
 
 
 
 
 
 
 
 
 Leevel Psr 
 Leevel Psr 
 
 PSR 
 
 
 MD 
 
 
 
 Swoole 
 URL 
 
 
 
 
 
 
 
 
 url 
 redirect 
 response 
 HTTP 
 
 
 
 
 
 
 
 
 
 
 
 
 false 
 
 
 
 
 
 
 
 
 
 
 
 
 COOKIE 
 COOKIE 
 COOKIE 
 JSON 
 JSON 
 HTTP or 
 
 
 
 
 
 
 
 
 
 JSON 
 JSON 
 
 
 
 
 
 
 Swoole 
 GET POST 
 
 
 
 
 
 
 
 
 
 
 
 
Verifies that the given response content usually a std Class built by json decode is a valid result from an API call to the Deep L API This method will not return true false but throw an exception if something is invalid Especially it will throw an exception if the API was not able to auto detected the source language if no language code was given 
Returns a translation from the response content of the API call Tries to return the best translation which is the first Returns null if there is no translation 
Returns the translation alternatives for a single translation sentence as a string array Might return an empty array 
Returns a string array might be empty with all translation texts Every item in the result array will be one sentence 
Executes an API call a request and returns the raw response data 
Pings the API server Returns the duration in seconds or throws an exception if no valid response was received 
Creates a request bag according to the JSON RPC protocol The API will be able to understand it The result is encoded as a JSON string 
Processes the data from an response from the server to an API call Returns the payload data of the response or throws a Protocol Exception 
Validates that the response data usually a std Class object built by json decode is valid response data from an API call to the Deep L API using the JSON RPC protocol 
Executes an API call a request and returns the raw response data 
Returns the text from an HTML document passed as an HTML code string The text ist trimmed and line breaks are replaced by dashes Returns null if extracting the text was not possible 
Pings the API server Returns the duration in seconds or throws an exception if no valid response was received 
Verifies that the given response content usually a std Class built by json decode is a valid result from an API call to the Deep L API This method will not return true false but throw an exception if something is invalid Especially it will throw an exception if the API was not able to auto detected the language if no language code was given 
Returns a string array with all sentences from the response 
Uses the Deep L API to split a text into sentences Stores them in a Sentences Bag object and returns it You may use the split Text method if you want to get the result as a string array Attention If you choose to set from to auto the API will not return a result if it is unable to detect the language 
Uses the Deep L API to split a text into a string array of sentences This method might throw an exception so you should wrap it in a try catch block 
Tries to detect the language of a text and returns its language code The language of the text has to be one of the supported languages or the result will be incorrect This method might throw an exception so you should wrap it in a try catch block Especially it will throw an exception if the API was not able to auto detected the language 
Requests a translation from the API Returns a Translation Bag object ATTENTION The target language parameter is followed by the source language parameter This method might throw an exception so you should wrap it in a try catch block You may use the translate method if you want to get the result as a string 
Translates a text ATTENTION The target language parameter is followed by the source language parameter This method might throw an exception so you should wrap it in a try catch block 
Translates a short text a sentence Returns an array of translation proposals ATTENTION The target language parameter is followed by the source language parameter This method might throw an exception so you should wrap it in a try catch block 
Translates a text Returns a string array of translation sentences ATTENTION The target language parameter is followed by the source language parameter This method might throw an exception so you should wrap it in a try catch block 
Translates a text file The from argument is optional ATTENTION The target language parameter is followed by the source language parameter This method will throw an exception if reading the file or translating fails so you should wrap it in a try catch block 
Decides if a language code is supported by Deep L y Note that auto is not a valid value in this context except you explicitly set the allow Auto param to true 
Getter for the array with all supported language codes 
Returns the English name of a language for a given language code The language code must be on of these self LANG CODES 
Returns the language code of a language for a given language name The language name must be one of these self LANG NAMES 
Verifies that the given response content usually a std Class built by json decode is a valid result from an API call to the Deep L API This method will not return true false but throw an exception if something is invalid 
Get the devault values used in new rows 
Store a row in the cache 
Returns a row from the cache 
Check if a row with a specific id exists 
Returns a row with a specific id 
Store a row with a specific id 
Remove a row with a specific id 
Returns the foreign key 
Delete all rows in the database 
 see Field Factory Interface 
Get the field class name 
Set a config value 
Returns the Field Factory instance used by the tables 
Execute a query and returns the statement object with the result 
Execute a callable inside a transaction 
Starts a transaction if it s not started yet 
Check whether the value is valid before save in the database 
Returns the value of a value field a related table 
Check whether a value is set or not 
Edit the values using an array 
Insert update the row in the database 
Delete the row in the database 
Relate this row with other rows 
Unrelate this row with other rows 
Unrelate this row with all rows of other tables 
Creates a select query of a table related with this row 
Return the real field name 
List of Quota Limit definitions for the service Used by metric based quotas only 
List of Metric Rule definitions each one mapping a selected method to one or more metrics Used by metric based quotas only 
Logging configurations for sending logs to the producer project There can be multiple producer destinations each one must have a different monitored resource type A log can be used in at most one producer destination 
Logging configurations for sending logs to the consumer project There can be multiple consumer destinations each one must have a different monitored resource type A log can be used in at most one consumer destination 
Collection of advice provided for this change useful for determining the possible impact of this change 
Contextual information about the example value Examples are Trace ID type googleapis com google devtools cloudtrace v Trace Literal string type googleapis com google protobuf String Value Labels dropped during aggregation type googleapis com google monitoring v Dropped Labels There may be only a single attachment of any given message type in a single exemplar and this is enforced by the system 
A list of API interfaces exported by this service Only the name field of the google protobuf Api google protobuf Api needs to be provided by the configuration author as the remaining fields will be derived from the IDL during the normalization process It is an error to specify an API interface here which cannot be resolved against the associated IDL files 
A list of all proto message types included in this API service Types referenced directly or indirectly by the apis are automatically included Messages which are not referenced but shall be included such as types used by the google protobuf Any type should be listed here by name Example types name google protobuf Int 
A list of all enum types included in this API service Enums referenced directly or indirectly by the apis are automatically included Enums which are not referenced but shall be included should be listed here by name Example enums name google someapi v Some Enum 
Configuration for network endpoints If this is empty then an endpoint with the same name as the service is automatically generated to service all defined APIs 
Defines the logs used by this service 
Defines the metrics used by this service 
Defines the monitored resources used by this service This is required by the Service monitoring google api Service monitoring and Service logging google api Service logging configurations 
Describes all violations in a client request 
A list of operations that matches the specified filter in the request 
Optional view for the returned Role objects 
The names of the permissions this role grants when bound in an IAM policy 
The current launch stage of the role 
Billing configurations for sending metrics to the consumer project There can be multiple consumer destinations per service each one must have a different monitored resource type A metric can be used in at most one consumer destination 
Application specific response metadata Must be set in the first response for streaming APIs 
Defines a set of authentication providers that a service supports 
A list of full type names of requested contexts 
A list of full type names of provided contexts 
The values must be monotonically increasing 
The updated role 
Subpages of this page The order of subpages specified here will be honored in the generated docset 
Filters the types of keys the user wants to include in the list response Duplicate key types are not allowed If no key type is provided all keys are returned 
Unstructured address lines describing the lower levels of an address Because values in address lines do not have type information and may sometimes contain multiple values in a single field e g Austin TX it is important that the line order is clear The order of address lines should be envelope order for the country region of the address In places where this can vary e g Japan address language is used to make it explicit e g ja for large to small ordering and ja Latn or en for small to large This way the most specific line of an address can be selected based on the language The minimum permitted structural representation of an address consists of a region code with all remaining information placed in the address lines It would be possible to format such an address very approximately without geocoding but no semantic reasoning could be made about any of the address components until it was at least partially resolved Creating an address only containing a region code and address lines and then geocoding is the recommended way to handle completely unstructured addresses as opposed to guessing which parts of the address should be localities or administrative areas 
Optional The recipient at the address This field may under certain circumstances contain multiline information For example it might contain care of information 
Names of the logs to be sent to this destination Each name must be defined in the Service logs google api Service logs section If the log name is not a domain scoped name it will be automatically prefixed with the service name followed by 
Requirements that must be satisfied before a consumer project can use the service Each requirement is of the form service name requirement id for example serviceusage googleapis com billing enabled 
The stack trace entries indicating where the error occurred 
Specifies the identities requesting access for a Cloud Platform resource members can have the following values all Users A special identifier that represents anyone who is on the internet with or without a Google account all Authenticated Users A special identifier that represents anyone who is authenticated with a Google account or a service account user emailid An email address that represents a specific Google account For example alice gmail com or joe example com service Account emailid An email address that represents a service account For example my other app appspot gserviceaccount com group emailid An email address that represents a Google group For example admins example com domain domain A Google Apps domain name that represents all the users of that domain For example google com or example com 
Monitoring configurations for sending metrics to the producer project There can be multiple producer destinations each one must have a different monitored resource type A metric can be used in at most one producer destination 
Monitoring configurations for sending metrics to the consumer project There can be multiple consumer destinations each one must have a different monitored resource type A metric can be used in at most one consumer destination 
Additional HTTP bindings for the selector Nested bindings must not contain an additional bindings field themselves that is the nesting may only be one level deep 
Requirements for additional authentication providers 
Associates a list of members to a role Multiple bindings must not be specified for the same role bindings with no members will result in an error 
Metrics to update when the selected methods are called and the associated cost applied to each metric The key of the map is the metric name and the values are the amount increased for the metric against which the quota limits are defined The value must not be negative 
The top level pages for the documentation set 
A list of documentation rules that apply to individual API elements NOTE All service configuration rules follow last one wins order 
The action that was performed on a Binding Required 
All files used during config generation 
The public keys for the service account 
The list of matching service accounts 
The current custom role support level 
Policy delta between the original policy and the newly set policy 
The number of values in each bucket of the histogram as described in bucket options If the distribution does not have a histogram then omit this field If there is a histogram then the sum of the values in bucket counts must equal the value in the count field of the distribution If present bucket counts should contain N values where N is the number of buckets specified in bucket options If you supply fewer than N values the remaining values are assumed to be The order of the values in bucket counts follows the bucket numbering schemes described for the three bucket types The first value must be the count for the underflow bucket number The next N values are the counts for the finite buckets number through N The N th value in bucket counts is the count for the overflow bucket number N 
Must be in increasing order of value field 
Names of the metrics to report to this billing destination Each name must be defined in Service metrics google api Service metrics section 
URL s pointing to additional information on handling the current error 
DEPRECATED This field is no longer supported Instead of using aliases please specify multiple google api Endpoint google api Endpoint for each of the intended aliases Additional names that this endpoint will be hosted on 
The list of features enabled on this endpoint 
Tiered limit values Also allows for regional or zone overrides for these values if region or zone is specified in the unit field Currently supported tiers from low to high VERY LOW LOW STANDARD HIGH VERY HIGH To apply different limit values for users according to their tiers specify the values for the tiers you want to differentiate For example LOW STANDARD HIGH VERY HIGH The limit value for each tier is optional except for the tier STANDARD The limit value for an unspecified tier falls to the value of its next tier towards tier STANDARD For the above example the limit value for tier STANDARD is To apply the same limit value for all users just specify limit value for tier STANDARD For example STANDARD To apply a regional overide for a tier add a map entry with key TIER region where region is a region name Similarly for a zone override add a map entry with key TIER zone Further a wildcard can be used at the end of a zone name in order to specify zone level overrides For example LOW STANDARD HIGH LOW us central STANDARD us central HIGH us central LOW us central STANDARD us central HIGH us central The regional overrides tier set for each region must be the same as the tier set for default limit values Same rule applies for zone overrides tier as well Used by metric based quotas only 
The Service Account google iam admin v Service Account resource to create Currently only the following values are user assignable display name 
List of per consumer project specific properties 
Describes all quota violations 
The output format of the private key GOOGLE CREDENTIALS FILE is the default output format 
Which type of key and algorithm to use for the key The default is currently a K RSA key However this may change in the future 
A list of messages that carry the error details There is a common set of message types for APIs to use 
The delta for Bindings between two policies 
The output format of the public key requested X PEM is the default output format 
REQUIRED The complete policy to be applied to the resource The size of the policy is limited to a few s of KB An empty policy is a valid policy but certain Cloud Platform services such as Projects might reject them 
The list of matching roles 
Define parameters Multiple names may be defined for a parameter For a given method call only one of them should be used If multiple names are used the behavior is implementation dependent If none of the specified names are present the behavior is parameter dependent 
Gets the cache file name 
Checks that the cache conditions are respected 
Checks if the target filename exists in the cache and if the conditions are respected 
Write data in the cache 
Get data from the cache 
Get or create the cache entry 
Alias to get Or Create with file true 
Downloads core Word Press files 
Checks if Word Press is installed 
Runs the standard Word Press installation process 
Transforms an existing single site installation into a multisite installation 
Installs Word Press multisite from scratch 
copied from populate network 
copied from populate network 
Displays the Word Press version 
Gets version information from wp includes version php 
Searches for the value assigned to variable var name in PHP code code 
Security copy of the core function with Requests Gets the checksums for the given version of Word Press 
Updates Word Press to a newer version 
Runs the Word Press database update procedure 
Gets download url based on version locale and desired file type 
Returns update information 
Caches the download and uses cached if available 
Upgrade Word Press core 
Build table from array data 
Render property html 
Add custom css for hiding boxes with no frame in screen options 
Move meta boxes after title 
Get meta post type 
Get meta box title 
Render the meta box 
Setup action hooks 
Setup meta box 
Get meta data from type class and merge with the parent meta data 
Load the file and setup file path file name and class name properties 
Setup meta data 
Determine if the property is disabled or not 
Create a new instance of the given type or a empty core property if no type is given 
Format the value of the property before it s returned to Word Press admin or the site 
Get child property 
Get option value 
Get post id 
Get setting value 
Get the html id attribute value 
Get html name for property with or without sub property and row number 
Change value after it s loaded from the database 
Match property slug with given slug value 
Prepare value before database 
Register property with 
Check if the property is allowed to render by the conditional rules 
Set property option value 
Set property setting value 
Setup properties 
Setup property options 
Setup options slug 
Setup options settings 
Update value before it s saved to the database 
Add attachment fields 
Save attachment post data 
Check if the entry type is a singleton 
Get property meta value 
Get value 
Format property value from the property 
Get current property 
Load property value from the property 
Get store from factory 
Get property option or default value 
Render property html 
Get value 
Determine if the property can be rendered or not 
Render the property 
Output hidden input field that cointains which property is used 
Render label for the property 
Render property html 
Render the final html that is displayed in the table 
Render Conditional rules as script tag with JSON 
Format the value of the property before it s returned to Word Press admin or the site 
Get value from the database 
Render property html 
Decode property 
Get post data 
Pre get deep keys and value 
Prepare post data Will decode property options recursive 
Prepare properties data for saving 
Sanitize data before saving it 
Delete property value 
Get right meta function for right type and context 
Geta property value for right meta type 
Update property meta 
Clear cache values on update property meta 
Filters the fields displayed in the post revision diff UI 
Output hidden meta boxes 
Load post new action Redirect to right url if no page type is set 
Redirect post location when post is in iframe mode 
Setup admin entry 
Rename meta key for page type 
Get field slug 
Get the source value 
Setup source callable 
Setup the rule and assign properties with values 
Preboot all types and setup the current type if any 
Add custom body class when it s a page type 
Output Papi page type hidden field 
Get Entry Type instance 
Add docs links to plugin row meta 
Setup actions 
Setup filters 
Update page type to front page type when updating which page that should be used as front page 
Filter the link query results 
Format the value of the property before it s returned to Word Press admin or the site 
Get posts 
Get module templates by post id 
Render property html 
Render option template 
Render property html 
Setup arguments 
Format the value of the property before it s returned to Word Press admin or the site 
Render property html 
Load property from page type 
Prepare load value 
Save properties with a post id of zero 
Render metabox 
Switch page type if all checks pass 
Overwrite post data in posts table 
Pre save page template and page type 
Save meta boxes 
Save custom fields for revision post 
Save properties 
Restore to post revision 
Setup actions 
Check if post id is valid or not 
Check if the property should be displayed by the rules 
Get the display by relation 
Get rule slug 
Prepare rules 
Determine if the page type is allowed by capabilities and post type 
Get body css classes 
Get child page types that lives under the current page type 
Get labels that should be changed when using fill labels option 
Get post type supports that will be removed 
Remove post type support action 
Remove meta boxes 
Setup page type 
Setup post types array 
Setup page templates if templates is a array 
Add filters to filter Tiny MCE buttons 
Render property html 
Remove filters that filter Tiny MCE buttons 
Delete value from the database 
Format the value of the property before it s returned to Word Press admin or the site 
Get results from the database 
Get row results 
Get settings properties 
Render property html 
Change value after it s loaded from the database and populate every property in the repeater with the right property type 
Load child properties 
Prepare properties get properties options object check which properties that are allowed to use 
Prepare property for JSON 
Remove all repeater rows from the database 
Render AJAX request 
Render property JSON template 
Render properties 
Render repeater html 
Render repeater head 
Render repeater rows 
Update value before it s saved to the database 
Register options properties 
Get setting value for a property 
Prepare settings response 
Format the value of the property before it s returned to Word Press admin or the site 
Get value from database 
Get users as dropdown items 
Update value before it s saved to the database 
Bootstrap constants 
Initialise Papi 
Load Localisation files 
Require files 
Deactivate Papi if the Word Press version is lower then 
Format the value of the property before it s returned to Word Press admin or the site 
Determine if items are strings or not 
Render property html 
Change value after it s loaded from the database 
Format the value of the property before it s returned to Word Press admin or the site 
Get settings properties 
Render property html 
Prepare properties and set right slug and value 
Update value before it s saved to the database 
Format the value of the property before it s returned to Word Press admin or the site 
Get file by id or meta value 
Get matching value based on key from a file 
Render property html 
Save file with a meta value or id 
Set a parameter or an object 
Call closure 
Get class prefix 
Determine if a given type is a singleton or not 
Resolve the given type from the container 
Add key and value to the container once 
Unset value by identifier 
Override labels with labels from the entry type 
Page items menu 
Setup menu items for real post types 
Menu callback that loads right view depending on what the page query string says 
Setup actions 
Autoload Papi classes 
Load property from page type 
Format the value of the property before it s returned to Word Press admin or the site 
Get registered sidebars as dropdown items 
Render property html 
Format the value of the property before it s returned to Word Press admin or the site 
Get labels from post types 
Get posts 
Get matching value based on key from a post 
Render property html 
Render option template 
Parse query arguments 
Parse post query arguments 
Parse term query arguments 
Get real query arguments without Papi Query specific arguments 
Get result 
Render property html 
Format the value of the property before it s returned to Word Press admin or the site 
Render property html 
Load property from page type 
Render property html 
Add help tabs 
Add new meta box with properties 
Call parent register if it exists to collect boxes on the parent entry type 
Convert properties to properties objects 
Get admin body css classes 
Get boxes from the page type 
Get property from entry type 
Get root properties 
Merge boxes with same title 
Setup entry type 
Add a new tab 
Format the value of the property before it s returned to Word Press admin or the site 
Render property html 
Delete value from the database 
Load value from database 
Render property html 
Prepare link array with post id If it gets a post id bigger then zero it will use the permalink as url 
Prepare value for the database 
Determine if the taxonomy type is allowed by taxonomy type 
Setup actions 
Render term edit form 
Filter the post 
Prepare response 
Setup REST API fields 
Get format args that will be passed into CLI Formatter 
Render file 
Get box option 
Setup arguments 
Convert value from a property 
Get converted value 
Get deep value 
Get property value 
Equal conditional rule 
Not equal conditional rule 
Greater then conditional rule 
Not in array conditional rule 
Like conditional rule 
Get between values 
Between conditional rule 
Not between conditional rule 
Setup filters 
Format the value of the property before it s returned to Word Press admin or the site 
Get sort option value 
Get sort options for relationship property 
Get items to display from settings 
Get matching value based on key from a post 
Render property html 
Change value after it s loaded from the database 
Sort the values 
Sort the values on update 
Get meta type value 
List Papi types 
Generate html for tabs and properties 
Format the value of the property before it s returned to Word Press admin or the site 
Generate layout slug 
Get layout by slug 
Get results from the database 
Change value after it s loaded from the database and populate every property in the flexible with the right property type 
Load child properties 
Prepare properties 
Render AJAX request 
Render layout input 
Render properties 
Render repeater html 
Render repeater row 
Add form fields to edit tags page 
Prepare taxonomy types add standard taxonomy if it should be added 
Setup hooks for all taxonomies 
Add ajax url to Papi Java Script object 
Handle Papi ajax 
Get entry type via GET 
Get posts via GET 
Get property html via GET 
Get properties via POST 
Get rules result via GET 
Get shortcode via GET 
Get terms via GET 
Setup action hooks 
Get fields that exists on a term 
Rename meta key for taxonomy type 
Add custom table header to page or taxonomy type 
Add custom table column to page or taxonomy type 
Add entry type as a sortable column 
Filter posts on load if page type query string is set 
Filter page types in post type list 
Setup actions 
Setup filters 
Format the value of the property before it s returned to the application 
Get labels from taxonomies 
Get terms for specified taxonomy 
Get matching value based on key from a term 
Render property html 
Format the value of the property before it s returned to Word Press admin or the site 
Render property html 
Prepare property value 
Render property html 
Search for stocks 
Get historical data for a symbol 
Get quote for a single symbol 
Get exchange rate for two currencies Accepts concatenated ISO currency codes 
Retrieves currency exchange rates Accepts concatenated ISO currency codes such as GBPUSD 
Fetch quote data from API 
 param Client Interface null guzzle Client 
Execute the console command 
Get attributes for column header tag 
Render column cell 
Render column cells appends 
Get value from instance by name Use dot delimiter and search recursive 
Get all images within images directory without seeds subdirectories 
Upload new image uses imgupload ckeditor plugin with little modifications in file naming 
Register the service provider 
Execute the console command 
Set eager load fields 
Set default values for instance 
Get unique random filename with extenstion within path directory 
Run filter 
Apply scope to query 
Execute the console command 
Set model classname and or attribute to load title from 
Get title as string 
Append element label and error label to form element and wrap it with div 
Append error label to element and wrap it with div 
Wrap content with div 
Add class to attributes array 
Register all admin routes 
Register routes to admin assets 
Register login and logout routes 
Add new process to the set 
Get array of processes in the set having given status 
Build out tree graph from defined Processes and their relations 
Optimize order of processes using given strategy 
Get count of processes status 
Get result counts of done processes 
Mark all dependant processes of given process as failed 
Get all wrapped processes that depends on process of given name 
Print output from process 
Print error output from process 
Configure command 
Initialize check arguments and options values etc 
Add option to run command configuration 
Get version that should be downloaded if not set attempt to retrieve latest released version 
Get complete URL of the file to download 
Execute the download 
 throws No Such Element Exception 
Select first option which text partially matches the argument 
Configure command 
In interactive or very verbose vv mode provide more output otherwise only output full path to selenium server jar file so it could be parsed and run 
Configure command 
Generates a filename without path and extension for the legacy based on the name of the test case 
Store legacy of test under a custom name 
Store legacy of test get Legacy Filename is called to generate filename from the test class name 
Reads legacy of test get Legacy Filename is called to generate filename from the test class name Raises exception if it is not found 
Reads legacy specified by custom name Raises exception if it is not found 
Converts legacy value to string that can be printed e g in log calls to String on the object if it s defined otherwise print r 
Test if server URL is accessible and we can connected there 
Test if remote server is really a Selenium server and is ready to accept connection 
Get name of the cloud service we are connected to 
Get URL of the concrete executor node of given session Note this is specific non standard feature of Selenium server and available only in grid mode so empty string will be returned if the server does not provide this functionality 
Guess port for given service 
Detect cloud service using server status response 
Create Process Set from given files optionally filtering by given groups and exclude Groups 
Build Process instance for each testcase file 
Get array of groups that cause this class to be excluded 
Get annotations for the first class in testcase one file one class 
Take screenshot and HTML snapshot of the page and save it 
Get url based on relative path of specific snapshot In our implementation we prepend artifact s URL to given relative path to make it clickable in Jenkins output 
Add option to run command configuration 
If xdebug option was not passed at all return null to not activate the feature If the option was used without a value use the default value of idekey If the option was passed with custom not empty value use this value 
Instantiate listeners in given directory and register them to given dispatcher 
Configure command 
Get full path to results file 
Encapsulate given attribute value into valid xpath expression 
Optimize order of tests in given tree based on their defined delay The aim is to run as first processes having the longest delay of their sub dependencies 
Guess most appropriate data type acceptable by JSON 
Check if process is not running longer then specified timeout return error message if so 
Resolve result of finished process 
Get array of unique executors 
Setup capabilities specific for continuous integration server 
Add custom configuration options that should be added to the default ones Can be set only before initialization because the configuration is then immutable 
Retrieve given configuration options values from environment If value is not found throw and exception 
Set queued processes without delay as prepared 
Flush output of the process 
Subroutine to encapsulate creation of real Web Driver Handles some exceptions that may occur etc The Web Driver instance is stored to test wd when created 
Return a collection with the User favorited Model The Model needs to have the Favoriteable trait 
This function counts all types of tests scenarios and writes in class members 
This function updates values in Summary block for each type of scenarios 
This function moves Summary block in the bottom of result report 
This function updates values in Toolbar block for each type of scenarios blue block on the left side of the report 
This function updates and button for viewing test steps in final report 
Add this Object to the user favorites 
Remove this Object from the user favorites 
Toggle the favorite status from this Object 
Check if the user has favorited this Object 
Return a collection with the Users who marked as favorite this Object 
 
Initialization 
Return the permissions used in the module 
This would enter the necessary language file contents to respective language files 
Creating View Files 
Creating Table File 
Creating Event Files 
Generating the file by replacing placeholders in stub file 
getting the stub folder path 
get Base Path 
Modify strings by removing content between beginning and end 
 param array input 
Bootstrap the application services 
Register the application services 
Show the form for creating a new resource 
Store a newly created resource in storage 
Checking the path for a file if exists 
Checking if the table exists 
Get the fully qualified model class name 
select one random server 
select all the servers 
select one server 
select one server according to the key 
call a redis command 
set the current db 
Set an event dispatcher to notify redis command param Object event Dispatcher The event Dispatcher object which implement the notify method param string event Class The event class used to create an event and send it to the event dispatcher 
init for the class param array params confg array 
check the server config param array servers host config 
get the server info against servernam or all the config param int servername cl 
set the server config param array servers config param bool check do I have to check the config 
return a server according to the redis key passed param string key server name param array servers array of servers 
return a Redis object according to the key param string key cache key param array servers servers 
buid a redis server with a config param string id Server server id in the configuration 
connecte un server param object Predis Client redis Predis Client param array server array ip port timeout 
get a value from the cache param string key cl 
delete a key 
set a value 
check if a key exist 
return the type of a key 
return a key ttl param string key cl 
increment a value incr 
set the key ttl 
use for debugging 
watch 
execute multiple commands 
return an array of server with all the keys stored in the cache according to pattern use only for debug 
apply a Closure on all the servers param Closure func anonymous function 
return an array or server with the number of keys stored on each 
return info of a server or all param string id Server Id du server 
add a task to the execution list 
return a predis object param int server Rank 
 
Load a client configuration as a service in the container A client can use multiple servers 
 
add Default Event Section 
 
Dispatch custom event 
Handle an event 
get Event Value 
Factorisation of the timing method find the value timed 
Replaces a string with a method name 
Merge config tags with tags manually sent with the event 
on Kernel Exception 
dispatch Memory dispatch a memory event 
dispatch Request Time dispatch the request time This time is a fake one because some actions are performed before the initialization of the request It is ms smaller than the real kernel time 
Create new event object 
Kernel event 
 param string value 
 param string null input 
Match SRID in EWKT object 
Match spatial geometry object 
Match a coordinate pair 
 param int count 
Match a number and optional exponent 
Match a list of coordinates 
Match nested lists of coordinates 
Match MULTIPOLYGON value 
Match GEOMETRYCOLLECTION value 
Match token at current position in input 
Create exception with descriptive error message 
Creates an array of Response objects from a given response array 
Returns if exists the request time 
Creates an http client to consume the phantomjs API 
Sends a command to the browser 
TODO not sure what this does needs to do normalize Keys 
Get redirect url if response is a redirect 
Check and fix render options 
Renders a page or selection to a file given by path 
Renders base a page or selection to a file given by path 
Find elements given a method and a selector 
Find elements within a page method and selector 
Set an attribute to the given element in the given page 
Sends the order to execute a key event on a given element 
Sends the command to select and option given a value 
Set the debug mode on the browser 
Sets or unsets web proxy 
Get all the network traffic that the page have created 
Gets the cookies on the browser 
Sets a cookie on the browser expires times is set in seconds 
Get the javascript errors found during the use of the phantomjs 
Returns the javascript errors found 
Creates a new node 
Compiles a variable node 
Creates a trie node 
Flushes any text from the buffer 
Lexes a number lexeme 
Lexes a punctuation lexeme 
Lexes a quoted string lexeme 
Lexes a text character lexeme 
Lexes a variable name lexeme 
Adds a route to the collection 
Gets the route with the input name 
Creates a trie 
Parses headers from the SERVER super global 
Normalizes a name 
Tests the current token to see if it matches the input type and optionally the input value and throws an exception if the token did not match 
Gets the current token 
Gets the next token if there is one 
Gets the next token if the current one matches the input type and optionally performs a value check 
Peeks ahead at the next token 
Adds a child to this node 
Adds a child node and recursively merges all its children too 
Gets all the child nodes 
Adds a literal child node 
Adds a variable child node 
Builds all the route builders in the registry 
Creates a group of routes that share similar options 
Creates a route builder with some values already set 
Applies a group s attributes to the input route builder 
Applies a group s constraints to the input route builder 
Applies a group s middleware to the input route builder 
Applies all the group options to a route 
Registers the built in rule factories 
Gets the list of matching route candidates for a particular node 
Builds a route object from all the settings in this builder 
Binds the controller the route uses to be a method 
Binds a custom attribute to the route This is useful for custom route constraint matching 
Binds many custom attributes to the route This is useful for custom route constraint matching 
Binds constraints to this route 
Binds many middleware bindings to the route 
Binds a single middleware class to the route 
Parses a punctuation token 
Parses a text token 
Parses a stream of tokens and adds it to an abstract syntax tree 
Parses a stream of variable tokens 
Parses a single variable rule 
Gets whether or not a segment matches this node 
 param action param data 
 
 param param param spec param coding 
 param action param field 
 param string action 
 
 param string url param array data param bool is Post param bool is Json 
 param file Path param array additionally 
 
 
 throws De Captcha Errors 
 throws De Captcha Errors 
 
 param string array name param string separator 
 param string name 
Full replacement of Doctrine DBAL Platforms Postgre Sql Platform get Create Table SQL check on updates 
Full replacement of Doctrine DBAL Platforms Abstract Platform get Column Comment check on updates 
Group routes with the given attributes 
Map a controller to a route and set basic attributes 
Dispatch routes and run the application 
Check if given request method matches given route method 
Check if given request domain matches given route domain 
Check if given request uri matches given uri method 
Run the controller of the given route 
Run the controller through the middleware list 
Run the controller 
Arrange parameters for given method 
Arrange parameters for given method function 
Convert route to regex 
Convert route parameter to regex 
Map a controller to given route for all the http methods 
Define a parameter pattern 
Generate URL for given route name It returns Null if route with given name is not found 
Prepare router to dispatch routes 
 
 
 
Gets the URI 
Validates the Google s response and returns it whether the status code is 
 
 
 
Validates the Google s response and returns it whether the status code is 
 inheritdoc 
Validates the Wechat s response and returns it whether the status code is 
 
 inheritdoc 
 inheritdoc 
Validates the Bit ly s response and returns it whether the status code is 
 
 
 
 
Validates the Sina s response and returns it whether the status code is 
 
Gets a provider by name 
 
 
 param Request request 
 
Implement Etag support 
Get formatted details for an IP address 
Format details and return as an object 
Get details for a specific IP address 
Set the IP address key to the specified value 
If cache maxsize has been reached remove oldest elements until limit is reached 
Returns raw data about the response that can be presented to the end user success or error message human readable error message code error code see https www paymentwall com us documentation Brick error secure form HTML needed to complete D Secure step HTML of the form to be submitted to the user to redirect him to the bank page 
Make post request 
offset Set 
offset Exists 
offset Get 
serialize 
sign 
hash 
get From Address 
return error html 
dispatch route 
call method http methods 
set group route 
Parse path 
check route is variable route or not 
Parse variable route info like params route callback 
To avoid memory leaks clear variable route cache with LRU when data out of array length 
set map tree 
get redirect url 
check middlewares 
run dispatch 
dispatch route 
redirect warning only for get method 
init db connections 
create a PDO instance 
Get an item from an array using dot notation 
Check if an item exists in an array using dot notation 
create http response header 
get http response header 
create a PDO instance 
get last insert ID for postgresql 
create a PDO instance 
create Dependency injection params 
set a singleton instance 
get a singleton instance 
register class instantiate class set instance to singleton 
get Instance from reflection info 
get Instance if instance is not singleton set it to singleton 
run class method 
run http app 
Initialize some devices like redis database 
register class 
set pipes single mode 
process pipeline flow when payload passed as a closure stop pipeline flow 
init redis clients 
Subscribe to a set of given channels for messages read write timeout to solve the timeout problem 
Subscribe to a set of given channels with wildcards 
create a PDO instance 
reset all attribute memory resident mode need manual reset attr 
reset build attr for sub Builder 
wrap prepare sql 
prepare and execute if timeout auto reconnect 
bind all params 
set table prefix 
add backquote sto field support alias mode prefix mode func mode 
parse argurment create build attr store bind param 
store build attr to tmp 
restore build attr from tmp 
do sub build 
set table 
set select cols 
build where string 
build or Where string 
build where In string 
build where Between string 
build where Null string 
build where Brackets string 
build where Exists string 
build where In Sub string 
build group By string 
build having string 
build or Having string 
build order By string 
build join string 
build right Join string 
get paginate data 
get assoc data 
get assoc row data 
get field list 
get count 
insert data 
update data 
delete data 
native query add auto reconnect 
native prepare add auto reconnect 
begin Transaction add auto reconnect 
Exception Handler handle 
Generate nanoid via optional modes 
The original API of nanoid Use it be careful Please make sure you have been implements your custom Generator Interface as correctly Otherwise use the build in default random bytes generator 
Generate secure URL friendly unique ID By default ID will have symbols to have same collisions probability as UUID v 
Register services 
Decorate services 
Normalize DSN connection string 
Connect database 
Returns new Query object with connection already set 
Execute Expression by using this connection 
Starts new transaction 
Commits transaction 
Rollbacks queries since begin Transaction and resets transaction depth 
Iterate yield array 
Execute expression 
Return last inserted ID value 
Execute expression 
Renders limit 
Use this instead of new Expression if you want to automatically bind new expression to the same connection as the parent 
Resets arguments 
Recursively renders sub query or expression combining parameters 
Given the string parameter it will detect some deal breaker for our soft escaping such as or Those will typically indicate that expression is passed and shouldn t be escaped 
Soft escaping SQL identifier This method will attempt to put escaping char around the identifier however will not do so if you are using special characters like or escaping char 
Escapes argument by adding backticks around it This will allow you to use reserved SQL words as table or field names such as table as well as other characters that SQL permits in the identifiers e g spaces or equation signs 
Converts value into parameter and returns reference Use only during query rendering Consider using consume instead which will also handle nested expressions properly 
Render expression and return it as string 
Return formatted debug output 
Execute expression 
Executes expression and return whole result set in form of array of hashes 
Executes expression and return first value of first row of data from result set 
Executes expression and returns first row of data from result set as a hash 
Renders limit 
Adds new column to resulting select by querying field 
Returns template component for field 
Specify a table to be used in a query 
Renders part of the template table Do not call directly 
Joins your query with another table Join will use main table to reference the main table unless you specify it explicitly 
Renders join 
Adds condition to your query 
Same syntax as where 
Subroutine which renders either where or having 
Renders one condition 
Implements GROUP BY functionality Simply pass either field name as string or expression 
Renders group 
Sets field value for INSERT or UPDATE statements 
Renders set for UPDATE query 
Renders set fields for INSERT 
Renders set values for INSERT 
Set options for particular mode 
Renders option 
Orders results by field or Expression See documentation for full list of possible arguments 
Renders order 
Switch template for this query Determines what would be done on execute 
Returns Expression object for the corresponding Query sub class e g Query My SQL will return Expression My SQL 
Returns Query object of case expression 
Renders case 
Limit how many rows will be returned 
Parses a env value 
Parses a env value 
Parses a env string 
Gets the regex matches in the string 
Constructs a Parse Exception message 
Returns if value starts with a value 
Parses a env variable 
Get variable matches inside a string 
Parses a env variable 
Checks to see if the variable has a parameter expansion 
Fetches and sets the parameter expansion 
Fetches the parameter type symbol 
Splits the parameter expansion into variable and default 
Parses and sets the variable and default if needed 
Parses and sets the variable parameter to default 
Checks to see if a variable exists 
Get variable value 
Parses a env key 
Opens the env parses it then returns the contents 
Parses the env line by line 
Parses a line of the env 
Parses a export line of the env 
Gets the key value items from the line 
Returns the contents of the env 
 param string ressources param array string params 
 param string ressources param array string params 
Start a single task 
Start a workflow instance 
Find a workflow instance 
Send an event to a workflow instance 
 param string url param string params 
Define timezone used when setting date time 
Return Wait timestamp or duration depending on methods used 
 param Cake Chronos Chronos now param int day 
 param Cake Chronos Chronos now param int day 
 param Cake Chronos Chronos now 
Return properties of a class and all its inheritance hierarchy 
Send an event to a workflow instance 
 
Configure the sitemap source manager 
Fix the sitemap configuration 
 
 
Adding source with his group 
 
 
Add context related Block Service if found 
 
Initialize breadcrumb menu 
 
 
 
 
 
 
 
 
 
 
Builds the API query URI based on settings 
 
 
Get all the fonts that are residing in the fonts directory and have the right extention Index them by path as key and pathinfo array as value 
Load a font and get all unicode characters available in that font 
Generate a css file that creates font families for each font file in the font directory 
 Hash password using bcrypt base SHA Encrypt then MAC the hash 
 Verify HMAC then Decrypt the ciphertext to get the hash Verify that the password matches the hash 
 Verify HMAC then Decrypt the ciphertext to get the hash Verify that the password matches the hash 
Key rotation method decrypt with your old key then re encrypt with your new key 
For migrating from an older version of the library 
Provide an Array Node instance e g the root node created by a Tree Builder and a path that is relevant to you e g dbal connections this will strip every node that is not contained in the given path e g the orm node would be removed entirely 
 param Array Node node param string child Node Name 
 param Uri uri 
Runs the analysis of the given website with all given parameters 
Initializes the configuration 
 var Check Result results 
Initializes the configuration 
 param Rule 
This function creates the credentials header for the command line 
Returns an array representing the configuration 
 param relation string param value int param count int 
Filter foreign domains before request is fired 
 
 
 
Initializes all the commands 
 param section 
 var Check Result 
 
Initializes the configuration 
 
Initializes the configuration 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 request 
 
 
 grid source 
 
 
 
 
 
 
 
 
 
 
 Route users username name user view Route users username topics name user topics 
 param int null limit 
 
 
 
 
 
 
 
 
 
 post 
 
 
 
 
 locale 
 
 
 
 
 
 
 
 
 
 
 
 
 
 html 
 
 
 
 
 
 
 
 
 
 
 response 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 param array resources 
 
 
 
 
 
 
 
 
 url 
 
 
 grid source 
 
 
Find all the templates in the bundle and in the kernel Resources folder 
Find templates in the given bundle 
 
 
 
 
 
 
 
 
 
 Route categories new name category add 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 filters column age operator lt value column age operator gt value column age operator between from to username slince 
 
 
 
 
 
 
 
 
 
 metadata qb 
 
 
 
Execute a command 
 
 
 
 response 
 body 
 
 
 
 
 model 
 grid 
 block 
 
 param array authors Arrays 
 param array screenshots Arrays 
 Route posts name post 
 
 
 
 
 
 
 
 
 
 
 
 param Class Metadata metadata 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 threads tag 
threads 
 Route threads slug name thread view 
 Route threads slug edit name thread edit 
 
 
 
 
 
 
 
 
 
 query builder 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 query 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 Route users username followers format name user followers defaults format html Method GET 
 Route users username followers name follower add Method POST 
 Route users username followers name follower delete Method DELETE 
 
 
 
 
doctrine 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 html 
 
 
 
 column 
 grid 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 param mixed input 
 
 param Aggregate Root Id aggregate Root Id param Generator events 
 param Command Definition commands 
 param Definition With Fields definition 
 param Spatie String Str string param string method param array args 
Get the string between the given start and end 
Shortens a string in a pretty way It will clean it by trimming it remove all double spaces and html If the string is then still longer than the specified length it will be shortened The end of the string is always a full word concatinated with the specified more Text Indicator 
Sanitize the string for teasing 
Replace the first occurrence of a string 
Replace the last occurrence of a string 
Get the possessive version of a string 
Get a segment from a string based on a delimiter Returns an empty string when the offset doesn t exist Use a negative index to start counting from the last element 
Alias for find 
Check Response 
Check Response 
Pay UMoney Encrypt Function 
Pay UMoney Decrypt Function 
Register the service provider 
Check Response 
CCAvenue Encrypt Function 
CCAvenue Decrypt Function 
Check Response 
Citrus Encrypt Function 
Citrus Decrypt Function 
EBS Encrypt Function 
 param string scenario String 
 param array parsed Scenario 
Preg Replace 
Add a range 
Add a modifier 
Clean 
Add a range of pages 
Add raw PDF from string 
Add PDF from file 
Add files using iterator 
Factory method for creating a Linked CRS object from properties 
Set optional CRS and Bounding Box arguments passed to a constructor 
Creates an Unserialization Exception for a value with an invalid type 
Creates an Unserialization Exception for a property with an invalid type 
Factory method for creating a Named CRS object from properties 
Get the base path that the module should be installed into Defaults to Modules and can be overridden in the module s composer json 
Get the module name i e joshbrw something module will be transformed into Something 
 From Micro Kernel Trait 
 From Micro Kernel Trait 
 
 
 
Get the path to the application configuration files 
Get the application namespace 
 
 
 param string params 
 
 
Loads the configs for Cache and puts data into the container 
 param array options 
 
 
 
 
 
Generates the configuration tree builder 
 
 
 
 
 
 
 
 
 
 
 
You can modify the container here before it is dumped to PHP code 
 
 
Downloads relative Url to the corresponding location on the local filesystem 
 deprecated Do not call this method directly Instead use Operation Result from Xdr 
Returns a new master node that can be used to derive subnodes 
Derives a path like m 
Takes a path like m and returns an array of indexes to derive 
 deprecated Do not call this method directly Instead use Operation Result from Xdr 
Generic error codes https github com stellar stellar core blob master src xdr Stellar transaction x L 
Returns true if the specified account ID G passes basic validity checks 
Returns a string representing the native balance 
Returns the balance in stroops 
Returns the numeric balance of the given asset 
Returns an Asset Amount representing the balance of this asset 
Returns the balance of a custom asset in stroops 
Returns the hex encoded checksum for the raw bytes in the entropy 
Utility method to convert a bitstring to hex 
Converts a mnemonic to raw bytes 
Converts mnemonic to seed bytes suitable for creating a new HDNode 
Parses a string of words and returns a string representing the binary encoding of the mnemonic including checksum 
Uses signer to add a new Decorated Signature to this Transaction Builder 
This is called by asset issuers to authorize a trustline established by a client account 
This is called by asset issuers to revoke a trustline established by a client account 
Adds an operation to merge the balance of the source account to destination Account Id 
 deprecated Do not call this method directly Instead use Operation Result from Xdr 
 deprecated Do not call this method directly Instead use Operation Result from Xdr 
Child classes MUST call this method to get the header for the operation and then append their body 
Variable length opaque data 
Converts value to a signed byte big endian int 
Converts value to an unsigned byte big endian uint 
Encodes an optional data value as XDR 
Ensures value s length is a multiple of target Length bytes 
 deprecated Do not call this method directly Instead use Operation Result from Xdr 
Returns an array of unique sha hashes in this bucket level 
 deprecated Do not call this method directly Instead use Operation Result from Xdr 
Returns a printable hex string of the binary data 
NOTE This only parses the XDR that s specific to this operation and cannot load a full Operation 
Returns the value of field Name or null if field Name is not in the response 
Throws an exception if field Name is not present in the response 
Returns the Account that matches account Id or null if the account does not exist 
Returns true if the account exists on this server and has been funded 
If set Trust Lines are created with authorized set to false requiring the issuer to set it for each Trust Line 
If set the authorized flag in Trust Lines can be cleared Otherwise authorization cannot be revoked 
Adds the value of x as a signer on the account 
NOTE changes here may requires changes to Post Transaction Exception from Horizon Exception 
Creates a new keypair from a mnemonic passphrase optional and index defaults to 
Returns the raw bytes of the checksum for the public key 
Returns the crc checksum of binary String 
 deprecated Do not call this method directly Instead use Operation Result from Xdr 
Reads a fixed opaque value and returns it as a string 
Converts raw Bytes into a public account ID G 
 deprecated Do not call this method directly Instead use Operation Result from Xdr 
 deprecated Do not call this method directly Instead use Operation Result from Xdr 
 deprecated Do not call this method directly Instead use Operation Result from Xdr 
 deprecated Do not call this method directly Instead use Operation Result from Xdr 
Parses the raw response data and populates this object 
Adds signatures using the given keypairs or secret key strings 
Submits the transaction contained in the Transaction Builder to the network 
Streams Effect objects to callback 
Streams Ledger objects to callback 
Streams Operation objects to callback 
Streams Payment or Create Account objects to callback 
Streams Transaction objects to callback 
Special handling for the transaction endpoint since we expect additional transaction related fields to come back 
Parse a textual representation of patches and return a list of patch objects 
Take a list of patches and return a textual representation 
Increase the context until it is unique but don t let the pattern expand beyond Match max Bits 
Compute a list of patches to turn text into text Use diffs if provided otherwise compute it ourselves There are four ways to call this function depending on what data is available to the caller Method a text b text Method a diffs Method optimal a text b diffs Method deprecated use method a text b text c diffs 
Look through the patches and break up any which are longer than the maximum limit of the match algorithm Intended to be called only from within apply Modifies patches TODO try to fix it 
Add some padding on text start and end so that edges can match something Intended to be called only from within patch apply Modifies patches TODO try to fix it 
Merge a set of patches onto the text Return a patched text as well as a list of true false values indicating which patches were applied 
Given an array of patches return another array that is identical 
Locate the best instance of pattern in text near loc 
Locate the best instance of pattern in text near loc using the Bitap algorithm 
Compute and return the score for a match with e errors and x location Accesses loc and pattern through being a closure 
Initialise the alphabet for the Bitap algorithm 
Reorder and merge like edit sections Merge equalities Any edit section can move as long as it doesn t cross an equality 
Look for single edits surrounded on both sides by equalities which can be shifted sideways to align the edit to a word boundary e g The c ins at c ins ame The ins cat ins came 
Given two strings compute a score representing whether the internal boundary falls on logical boundaries Scores range from best to worst 
Reduce the number of edits by eliminating semantically trivial equalities TODO refactor this cap s code 
Reduce the number of edits by eliminating operationally trivial equalities TODO refactor this Cap s code 
Convert a diff array into a pretty HTML report 
Compute and return the source text all equalities and deletions 
Compute and return the destination text all equalities and insertions 
Crush the diff into an encoded string which describes the operations required to transform text into text E g t t ing Keep chars delete chars insert ing Operations are tab separated Inserted text is escaped using xx notation 
Given the original text and an encoded string which describes the operations required to transform text into text compute the full diff 
Compute and return location in text equivalent to the loc in text e g The cat vs The big cat 
Compute the Levenshtein distance the number of inserted deleted or substituted characters 
Find the differences between two texts Simplifies the problem by stripping any common prefix or suffix off the texts before diffing 
Find the differences between two texts Assumes that the texts do not have any common prefix or suffix 
Do a quick line level diff on both strings then rediff the parts for greater accuracy This speedup can produce non minimal diffs 
Find the middle snake of a diff split the problem in two and return the recursively constructed diff See Myers paper An O ND Difference Algorithm and Its Variations 
Given the location of the middle snake split the diff in two parts and recurse 
Determine the common prefix of two strings 
Determine the common suffix of two strings 
Determine if the suffix of one string is the prefix of another 
Do the two texts share a substring which is at least half the length of the longer text This speedup can produce non minimal diffs 
Does a substring of shorttext exist within longtext such that the substring is at least half the length of longtext 
Split two texts into an array of strings Reduce the texts to a string of hashes where each Unicode character represents one line 
Split a text into an array of strings Reduce the texts to a string of hashes where each Unicode character represents one line Modifies line Array and line Hash TODO try to fix it 
Rehydrate the text in a diff from a string of line hashes to real lines of text Modifies diffs TODO try to fix it 
Find the differences between two texts Simplifies the problem by stripping any common prefix or suffix off the texts before diffing 
Reduce the number of edits by eliminating semantically trivial equalities Modifies diffs 
Reduce the number of edits by eliminating operationally trivial equalities Modifies diffs 
Locate the best instance of pattern in text near loc 
Compute a list of patches to turn text into text Use diffs if provided otherwise compute it ourselves There are four ways to call this function depending on what data is available to the caller Method a text b text Method a diffs Method optimal a text b diffs Method deprecated use method a text b text c diffs 
Multibyte replacement for standard chr 
Multibyte replacement for standard ord 
Send the given notification 
Gets a list of phones from the given notifiable 
Get the major Laravel version number 
Register the service provider 
Bootstrap the application events 
Register the regular Pug compiler 
Get the configuration which is keyed differently in L vs l 
Common pug compiler constructor 
Lazy load Pug and return the instance 
Returns cache path 
Get an option from pug engine or default value 
Returns true if the path has an expired imports linked 
Determine if the view at the given path is expired 
Return path and set it or get it from the instance 
Returns the object the more appropriate to compile Pug Pug with version Phug Compilser for 
Compile the view at the given path 
Compile the view at the given path 
Register the service provider 
Get the Amo CRM client instance 
Get the Amo CRM B BFamily helper instance 
Return a hashed print from input file or content 
Returns true if the path has an expired imports linked 
Resolve a template file path 
Returns true is a template file is expired false else cache Path will be set with the template cache file path 
Display a template 
Get options from extensions list and default options 
Add an extension to the Phug facade will be available in the current renderer instance and next static calls Throws an exception if the extension is not a valid class name 
Remove an extension from the Phug facade remove from current renderer instance 
Cleanup previously set options 
Reset all static options filters and extensions 
Get a renderer with global options and argument options merged 
Set a filter to the Phug facade will be available in the current renderer instance and next static calls Throws an exception if the filter is not callable and do not have a parse method 
Add a filter Throws an exception if the name is already taken 
Remove a filter from the Phug facade remove from current renderer instance 
Set a keyword to the Phug facade will be available in the current renderer instance and next static calls Throws an exception if the keyword is not callable 
Add a keyword Throws an exception if the name is already taken 
Remove a keyword from the Phug facade remove from current renderer instance 
Cache a whole directory and return an array with success Count error Count error Details 
Same method as cache Directory but with textual human friendly output 
Run the CLI applications with arguments list return true for a success status false for an error status 
Yield all available methods 
Dump the list of available methods as textual output 
Attributes for the element containing the content returned by link get Column Content 
HTML for the column content of the td element 
Get the errors which are specific to Meta Description 
Get the list for the Grid Field 
Mark duplicate attributes 
Find duplicate attributes within a list 
Remove pages with empty attributes 
Update the columns needed when importing from CSV 
Handle the incoming request 
Create command 
Create command 
Set option 
Get option 
Create command 
Create command 
Parse response 
Create command 
Create command 
Parse responses 
Start profile 
Stop profile 
Get elapsed time 
Initialize command 
Write commands 
Read reponses from connection 
Parse responses 
Convert arguments to string 
Get and validate command arguments 
Throw exception if command not supported by this version of Redis 
Execute command 
Register Rediska autoload 
Unregister Rediska autoload 
Load class 
Get Rediska path 
 non PHPdoc 
 non PHPdoc 
 non PHPdoc 
Get a list of connections by key name 
Add channel 
Has channel 
Remove channel 
Get connection by channel name 
Get connection by alias 
Get channels by connection 
Get parameter or parameters by pattern 
Set value to parameter 
 Countable implementation 
Sanitize value 
Throw if config not supported by Redis 
Create a new queue 
Delete a queue and all of it s messages 
Return the approximate number of messages in the queue 
Send a message to the queue 
Get messages in the queue 
Delete a message from the queue 
Create command 
Parse responses 
Start profile 
Stop profile 
Get total elapsed time 
 non PHPdoc 
 non PHPdoc 
 non PHPdoc 
Set value to a hash field or fields 
Array magic for set a field 
Increment field value in hash 
Remove field from hash 
 non PHPdoc 
Create command 
Write session data 
Destroy session 
Garbage Collection 
Subscribe to channel or channels 
Unsubscribe from channel or channels If keys is passed we unsubscribe from all channels 
Publish a message to channel 
Get message 
 Array Access implementation 
Execute subscribe or unsubscribe command 
Add message response to buffer 
Get response from connection 
Throw if Pub Sub not supported by Redis 
Create command 
Create command 
Parse response 
Unserialize value 
Catch unserialize notice 
Create command 
Parse response 
Create command 
Parse responses 
Serialize value 
Unserialize value 
Create a new queue in the queues set 
Delete a queue from the queues set 
Get queues cache Fetches data from redis on first call 
Marks the given keys to be watched for conditional execution of a transaction 
Flushes all the previously watched keys for a transaction 
Execute transaction 
Add command to transaction 
Create command 
Parse responses 
Create new post 
Read your posts 
Create command 
Parse responses 
Create a new instance of Rediska Zend Log Writer Redis 
Add the specified member to the Sorted set 
Get count of members from sorted set by min and max score 
Get Sorted set by score 
Remove members from sorted set by score 
Increment score of element 
Get Sorted set by Rank 
Remove all elements in the sorted set at key with rank between start and end 
Get rank of member 
Store to key union between the sorted sets 
Store to key intersection between sorted sets 
Get Sorted set values 
Add array to Sorted set 
Create command 
Set Rediska client name 
Set servers array 
Add server 
Remove server 
Get Rediska connection instance by key name 
Get connection by alias 
Get all Rediska connection instances 
Chain method to work with keys on specified by alias server 
Create transaction 
Subscribe to Pub Sub channel or channels 
Get Redis server configuration 
Set key distributor See options description for more information 
Get Rediska serializer 
Get profiler 
Execute command 
Create command 
Parse response 
Add command 
Remove command 
Get command instance 
Get command lower name and throw exception if command not present 
Execute pipelined commands 
Add command to pipeline 
Create command 
Parse response 
Get command 
Get response from connection 
Create command 
Parse response 
Write command to connection 
Read response from connection 
Get connection 
Set response callback 
Transfrom Multi Bulk command to string 
Read response from connection 
Stop callback Called from profile 
Append value to the end of List 
Append value to the head of List 
Trim the list at key to the specified range of elements 
Set a new value as the element at index position of the List 
Insert a new value as the element after the reference value 
Insert a new value as the element before the reference value 
Insert a new value as the element before or after the reference value 
Delete element from list by value 
Return and remove the first element of the List 
Return and remove the first element of the List and block if list empty or not exists 
Return and remove the last element of the List 
Return and remove the last element of the List and block if list empty or not exists 
Get List values 
Get List values 
Add array to List 
Create command 
Load value with given id from cache 
Save some string datas into a cache record 
Remove a cache record 
Clean some cache records 
Set the frontend directives 
Return an array of stored cache ids which don t match given tags 
Return an array of metadatas for the given cache id 
Give if possible an extra lifetime to the given cache id 
Cleans up expired keys and list members 
 param string key 
Create command 
Parse responses 
Create command 
Parse response 
Create command 
Add the specified member to the Set 
Remove the specified member from the Set 
Move the specified member from one Set to another atomically 
Return the intersection between the Sets 
Return the union between the Sets 
Return the difference between the Sets 
Get Rediska instance 
Set key value 
Set and expire 
Returns the bit value at offset in the string value stored at key 
Set range 
Get range 
Get range 
Get value if value not present set it from chain method 
Signup 
Login 
Users who follow given user Id 
Users who are followed by given user Id 
Start following given user Id 
Create command 
Rename key 
Expire key 
Move key to other Db 
Set expire time 
Get rediska and set specified connection 
Set adapter 
Serialize value 
Unserailize value 
Get stream 
Set access mode 
Stop callback Called from profile 
Reset profiler 
Add Rediska Return true if new instance and false if instance overwrited 
Get Rediska 
Get all Rediska instances 
Remove Rediska 
Instance from options if not yet 
Parse response 
Increment the count for the specified subject 
Count the number of times the subject has performed an action in the last interval seconds 
Calls the increment and count function using a single MULTI EXEC block 
Resets the counter for the specified subject 
Get the bucket associated with the current time 
Adds the commands needed for the increment function 
Adds the commands needed for the count function 
Create command 
Create command 
Create command 
Create command 
Parse response 
Connect to redis server 
Disconnect 
Write to connection stream 
Create socket connection 
Get read buffer 
Create command 
Connect to redis server 
Write to connection stream 
Read length bytes from connection stram 
Read line from connection stream 
Set read timeout 
Set blocking non blocking mode for reads 
If a stream context is provided use it creating the socket 
Read and throw exception if somthing wrong 
Create command 
Create command 
Create command 
Create command 
Parse response 
 since 
Validates the nonce against given context 
Publish a message on the queue 
Publish a message on the queue 
 param Input Interface input param Output Interface output 
Publish a message on the queue 
Handle a message 
 param Event Interface event 
Declare a persistent queue 
Declare an exchange 
Bind an existing queue to an exchange 
Create a persisting queue and bind it to an exchange 
Publish a message in the exchange 
Consume the queue 
Acknowledge the reception of the message 
Acknowledge an error during the consumption of the message 
 return AMQPChannel 
 param string queue Name 
 param string exchange Name 
Returns the message parameters 
Run the daemon 
Stop the daemon 
 param Listener Acceptor Interface listener Acceptor 
 param Input Interface input param Output Interface output 
 param string message 
Handle a message 
Build the exception from another timeout exception 
 param type param array options param array contextual Tags 
 param Input Interface input param Output Interface output 
 param Input Interface input 
 param array configuration 
 param array configuration 
 param array exchange Information 
 param Event Interface Message Consumed event 
Handle a message 
Build the Handler 
Handle a message 
Handle the return value 
 param string message 
 param Input Interface input param Output Interface output 
Return the driver for your system 
 param string connection 
 param Input Interface input param Output Interface output 
 param string headers 
Declare a persistent queue 
Declare an exchange 
Bind an existing queue to an exchange 
Publish a message in the exchange 
Consume the queue 
Aknowledge an error during the consumption of the message 
Close the connection 
 param timeout 
 param AMQPMessage message 
 param AMQPMessage message 
 param AMQPMessage message 
Consumes a message 
Build the class with the given name 
Replace model name 
Parse the name and format according to the root namespace 
Process data Tables editor action request 
Process create action request 
Display success data in data Tables editor format 
Process edit action request 
Process remove action request 
Perform a single access check operation on a given attribute subject and token 
 Route graphql explorer 
 param string attribute 
 
 
 Route graphql 
 return array 
 return object 
 
 return null string 
You can modify the container here before it is dumped to PHP code 
 param Container Builder container 
 param Container Builder container param voter Class param array list 
 param string xml 
 param string filename 
 param DOMDocument document 
 param DOMDocument document 
 param Base Sale sale 
 param Document Interface document 
 param Legend legends param code 
Build html report 
 param directory param options 
Reads the specified amount of bytes from the current var position var of the byte buffer 
Reads a zero byte terminated string from the current position of the byte buffer 
Sets or returns the var limit var of the buffer 
Replaces the contents of the byte buffer with the bytes from the source string beginning at the current var position var 
Creates a new packet object based on the header byte of the given raw data 
Reassembles the data of a split and or compressed packet into a single packet object 
Loads the global unlock percentages of all achievements for the given game 
Closes the underlying socket 
Reads the given amount of data from the socket and wraps it into the buffer 
Sends the given packet to the server 
Reads a packet from the socket 
Reads a single packet from the socket 
This checks the cache for an existing inventory If it exists it is returned Otherwise a new inventory is created 
Reads a packet from the socket 
Executes the given command on the server via RCON 
Requests a challenge number from the server to be used for further requests 
Wraps the given command in a RCON request packet and send it to the server 
Connects the TCP socket to the host with the given IP address and port number 
Returns a list of game server matching the given region and filters 
Updates the item definitions of this schema using the Steam Web API 
Converts a bit numeric Steam ID as used by the Steam Community to a Steam ID as reported by game servers 
Converts a Steam ID as reported by game servers to a bit numeric Steam ID as used by the Steam Community 
Resolves a vanity URL of a Steam Community profile to a bit numeric Steam ID 
Fetches the friends of this user 
Fetches the games this user owns 
Fetches the groups this user is member of 
Returns this user s bit Steam ID 
Returns the time in minutes this user has played this game in the last two weeks 
Returns the total time in minutes this user has played this game 
Fetchs data from the Steam Community by querying the XML version of the profile specified by the ID of this Steam ID 
Rotate this server s IP address to the next one in the IP list 
Initializes the sockets to communicate with the Source server 
Authenticates the connection for RCON communication with the server 
Remotely executes a command on the server via RCON 
Connects the UDP socket to the host with the given IP address and port number 
Creates a new instance of the cacheable object or returns an already cached one 
If available returns the cached instance for the object it is called on 
Returns whether an object with the given ID is already cached 
Saves this object in the cache 
Returns a complete list of all values for the cache IDs of the cacheable object 
Creates a new packet object based on the header byte of the given raw data 
Initializes the sockets to communicate with the Gold Src server 
Tries to establish RCON authentication with the server with the given password 
Remotely executes a command on the server via RCON 
Closes the socket 
Receives the specified amount of data from the socket 
Waits for data to be read from this socket before the specified timeout occurs 
Sends the specified data to the peer this socket is connected to 
Loads the news for the given game with the given restrictions 
Loads XML data from the given URL and returns it parsed into a var Simple XMLElement var 
Returns the class symbols for each class this player has equipped this item 
Returns the number of members this group has 
Returns the members of this group 
Fetches a specific page of the member listing of this group 
Loads information about and members of this group 
This checks the cache for an existing inventory If it exists it is returned Otherwise a new inventory is created 
Returns the item schema 
Updates the contents of the backpack using Steam Web API 
Returns the name for each bot this player has equipped this item 
Returns all Golden Wrenches 
Fetches JSON data from Steam Web API using the specified interface method and version Additional parameters are supplied via HTTP GET 
Fetches JSON data from Steam Web API using the specified interface method and version Additional parameters are supplied via HTTP GET 
Fetches JSON data from Steam Web API using the specified interface method and version Additional parameters are supplied via HTTP GET 
Fetches data from Steam Web API using the specified interface method and version Additional parameters are supplied via HTTP GET Data is returned as a String in the given format 
Returns a singleton instance of an internal var Web Api var object 
Sets the Steam Web API key 
Fetches data from Steam Web API using the specified interface method and version Additional parameters are supplied via HTTP GET Data is returned as a String in the given format 
Fetches data from Steam Web API using the specified URL 
Sends the given RCON packet to the server 
Reads a packet from the socket 
Parses the player attribute names supplied by var rcon status var 
Splits the player status obtained with var rcon status var 
Returns a list of players currently playing on this server 
Sends the specified request to the server and handles the returned response 
Sends a A S INFO request to the server and measures the time needed for the reply 
Sends a A S PLAYERS request to the server and updates the players data for this server 
Extends a player object with information retrieved from a RCON call to the status command 
Returns the leaderboard for the given game and leaderboard ID or name 
Returns an array containing all of a game s leaderboards 
Loads the leaderboards of the specified games into the cache 
Returns the entry on this leaderboard for the user with the given Steam ID 
Returns the entries on this leaderboard for a given rank range 
Loads leaderboard data for the given parameters 
Loads leaderboard data for the given user 
Parses leaderboard entries from the given XML data 
Creates a new or cached instance of the game specified by the given XML data 
Checks if a game is up to date by reading information from a var steam inf var file and comparing it using the Web API 
Returns whether the given version of the game with the given application ID is up to date 
Returns the overall number of players currently playing this game 
Creates a stats object for the given user and this game 
Displays the specified work orders parts and inventory 
Creates a new event 
Displays the specified event 
Updates an event 
Deletes the specified event 
Creates a new work order 
Displays the specified work order 
Displays the form for editing the specified work order 
Updates the specified work order 
Displays the form for taking inventory stock and attaching it to the specified work order 
Processes taking quantity from the stock and inserting it into the work order 
Displays the form for returning parts to the inventory 
Processes returning parts back into the inventory 
Creates a work request 
Displays the users specified work request 
Displays a users work request 
Updates a users work request 
Deletes a users work request 
Retrieves the revised location attribute 
Filters inventory results by specified location 
Creates a new report on the specified event 
Execute the job 
Displays the form for adding attachments to the specified work order 
Processes uploading and adding attaachments to the specified work order 
Displays the work order attachments 
Displays the form for editing the specified work order attachment 
Updates the specified work order attachment 
Deletes the specified work order attachment 
Prompts the user to download the specified uploaded file 
Returns a new form of the specified work order report 
Returns an html icon class of the type of notification by retrieving it from the configuration file 
Execute the job 
Displays all the stock movement entries for the specified stock for the specified inventory 
Displays a stock movement record 
Rolls back an inventory stock movement 
Retrieves the revised status attribute 
Retrieves the revised priority attribute 
Closes all sessions on the current work order 
Checks if the user is currently checked into the current work order 
Returns an HTML label for the work orders started at date 
Returns an HTML label for the work orders completed at date 
Completes the work order by saving the completed at timestamp to now 
Returns a new table of all statuses 
Returns a new form of the specified status 
Execute the job 
Displays all priorities 
Creates a new priority 
Displays the form for editing the specified priority 
Updates the specified priority 
Execute the job 
Filters query by the inputted inventory item stock quantity 
Filters query by the inputted inventory sku 
Mutator for showing the total current stock of the inventory item 
Retrieves the revised metric attribute 
Retrieves a valid operator from the specified string 
Allows all columns on the current database table to be sorted through query scope 
Creates a new work order 
Returns the full path of the uploaded file 
Displays all statuses 
Creates a new status 
Displays the form for editing the specified status 
Updates the specified status 
Run the migrations 
Displays the form for creating a variant for the specified inventory item 
Creates a variant of the specified inventory item 
Displays the form for creating a work order report 
Creates a new work order report 
Returns a new table of all work orders 
Returns a new table of all work orders assigned to the current user 
Displays a table of all unique sessions on the specified work order 
Returns a new form for work orders 
Returns a new form for the specified work order comment 
Uploads and attaches files for the current relation 
Returns a new table of all assets 
Returns a new form for the specified asset 
Returns a table of all inventory items 
Returns a table of stocks for the specified inventory item 
Returns a new form for creating a new inventory item 
Returns a new navbar for the inventory stocks index 
Processes storing the attachment record 
Updates the specified ticket upload 
Processes deleting an attachment record and the file itself 
Execute the job 
Execute the job 
Returns a new table of all metrics 
Returns a new table of all revisions 
Uploads images and attaches them to the specified asset 
Displays the asset image 
Updates the specified asset image upload 
Processes deleting an attachment record and the file itself 
Prompts the user to download the specified uploaded file 
Displays all metrics 
Creates a new metric 
Displays the form for editing the specified metric 
Displays all assets 
Creates a new asset 
Displays the form for editing the specified asset 
Updates the specified asset 
Execute the job 
Allows all tables extending from the base model to be scoped by ID 
Returns the proper response to user If the request was made from ajax then an json response is sent If a request is a typical request without ajax a user is sent a redirect with session flash messages 
Returns input from the client If clean is set to true the input will be ran through the purifier before it is returned 
Returns the complete nested set table in a nested list 
Renders the specified category and it s children in single dimension array 
Execute the job 
Executes the job 
Execute the job 
Registers view composers during boot 
Runs the seeding operations 
Execute the job 
Deletes the current attachment as well as the file 
Displays all stocks for the specified inventory item 
Displays the from for creating a stock for 
Creates a new stock on the specified item 
Displays the specified items stock 
Displays the form for editing the specified items stock 
Updates the specified inventory stock 
Deletes the specified inventory stock 
Run the migrations 
Displays all meters for the specified asset 
Displays the form for creating a new meter for the specified asset 
Creates a new meter for the specified asset 
Displays the specified meter for the specified asset 
Displays the form for editing the specified meter for the specified asset 
Updates the specified meter attached to the specified asset 
Deletes the specified meter for the specified asset 
Creates a new notification for the specified work order 
Updates the specified notification for the specified work order 
The work order started at formatted string 
The work order completed at formatted string 
Execute the job 
Displays the current users assigned work orders 
Returns a new form for the specified comment 
Returns the number of hours a session lasted with decimals 
Execute the job 
Presents the correct date timestamp depending if the event is all day 
Presents the correct start date formatted for editing 
Presents the correct date timestamp depending if the event is all day 
Presents the correct end date formatted for editing 
Presents the correct end time formatted for editing 
Presents the API events recurrence frequency in a nicer format 
Returns the API events actual recurrence frequency array 
Returns the API events actual recurring days array 
Returns the events tags view 
Create a new stock entry for the specified inventory item 
Updates the specified stock for the specified inventory 
Removes the specified stock from the specified inventory 
Returns a new table of all the specified work orders attachments 
Returns a new form for the specified work order attachment 
Handle a login request to the application 
Send the response after the user was authenticated 
Attaches roles depending on the users active directory group 
Captures the Inventory Stock models deleted event and cascades the delete to all of it s movements 
Captures the Inventory Stock models restored event and cascades the restore to all of it s movements 
Run the migrations 
Returns a new table of all priorities 
Returns a new form for priorities 
Execute the job 
 param string date param string null time 
Returns a new table of stocks for the specified inventory item for work order part selection 
Returns a new form for taking stock from the specified inventory for the specified work order 
Returns a new form for putting the stock from the specified work order back into inventory 
Updates the specified inventory item 
Deletes the specified inventory item 
Generates a new session flash message 
Displays the form for creating a report for the specified work order 
Creates a new report for the specified work order 
Displays all of the specified eventables events 
Creates a new event and attaches it to the specified eventable 
Displays the specified event attached to the specified eventable 
Updates the specified event attached to the specified eventable 
Deletes the specified event attached to the specified eventable 
Retrieves the revised location attribute 
Filters results by specified category 
Runs the seeding operations 
Returns a form for the login page 
Uploads manuals and attaches them to the specified asset 
Displays the asset manual 
Updates the specified asset manual upload 
Processes deleting an attachment record and the file itself 
Prompts the user to download the specified uploaded file 
Attaches the specified work order to the specified asset 
Removes the specified work order from the specified asset 
Creates a new work order customer update 
Processes deleting a work order update 
Displays all stocks and variants available for selection 
Displays the form for taking inventory for the specified work order 
Processes taking inventory for the specified work order 
Displays the form for putting inventory from the work order back into the specified stock 
Processes returning stock from the work order back into the specified inventory 
Displays all work requests 
Creates a work request 
Displays the form for editing the specified work request 
Updates the specified work request 
Shows the form for creating a new category or category node if an ID is supplied 
Processes storing a new category or storing a new category underneath another if an ID is specified 
Show the form for editing the specified category 
Processes updating the specified category 
Processes removing the specified category 
Execute the job 
Returns a new table of all work order sessions 
Displays unique sessions per worker and totals their hours 
Captures the Inventory models deleted event and cascades the delete to all of it s stocks 
Captures the Inventory models restored event and cascades the restore to all of it s stocks 
Displays all inventory items 
Creates a new inventory item 
Displays the specified inventory item 
Displays the form for editing the specified inventory item 
Updates the specified inventory item 
Execute the job 
Returns a new table of all stocks of the specified inventory item 
Returns a new table of all movements for the specified inventory stock 
Returns a new form of the specified inventory stock 
Returns a new navbar for the inventory stock index 
Runs the seeding operations 
Run the migrations 
Returns a new table of all parts attached to the specified work order 
Displays all inventory available for selection 
Returns a new navbar for the work order parts table 
Displays all sessions for the specified work order 
Starts the current users session for the specified work order 
Ends the current users session for the specified work order 
Execute the job 
Execute the job 
Returns the change of a stock 
Creates a note for the specified inventory 
Displays the specified inventory note 
Updates the specified note for the specified inventory 
Deletes the specified note attached to the specified inventory 
Executes the job 
Accessor for viewing the last movement of the stock 
Accessor for viewing the user responsible for the last movement 
Accessor for viewing the quantity combined with the item metric 
Returns the stocks put back some work order button view 
Returns the stocks put back all work order button view 
Run the migrations 
Execute the job 
Ends a maintenance workers session on a work order 
Returns a new table of all work requests 
Returns a new form for the specified work request 
Assigns workers to the specified work order ID 
Removes the specified assignent from the specified work order 
Accessor for retrieving the current meter reading with it s metric symbol For example Gal 
Create a select box field 
Create a datalist box field 
Get the select option for the given value 
Create an option group form element 
Create a select element option 
Create a placeholder select element option 
Determine if the value is selected 
Create a select year field 
Open up a new HTML form 
Get the form appendage for the given method 
Get the form action from the options 
Render a custom component 
Prepare the component data while respecting provided defaults 
Register Blade directives 
Convert an HTML string to entities 
Create a new model based form builder 
Create a form label element 
Format the label value 
Determine if old input or model input exists for a key 
Create a HTML reset input element 
Create a submit button element 
Create a button element 
Get the value that should be assigned to the field 
Get value from current Request 
Convert an HTML string to entities 
Generate a link to a Java Script file 
Generate a link to a CSS file 
Generate an HTML image element 
Generate a HTML link to an asset 
Generate a HTML link to a named route 
Generate a HTML link to an email address 
Generate a description list of items 
Create the HTML for a listing element 
Build an HTML attribute string from an array 
Build a single attribute element 
Generate a meta tag 
Register the HTML builder instance 
Register the form builder instance 
Create a checkbox input field 
Create a radio button input field 
Create a checkable input field 
Get a value from the session s old input 
Create a search input field 
Create a datetime input field 
Create a file input field 
Run the migrations 
remove the first line of xml string 
Run the migrations 
Run the migrations 
Split the given string into tokens using whitespace 
Implements interface Filter 
Implements interface Filter 
Load a given locale file as base for the dictionary 
parse a dictionary file to create an ini file from it 
Get all patterns for a given word 
Unify the given locale to a default format 
Add an item to the registry 
Get a dictionary entry by it s key 
Pass the given string through the given tokenizers 
Split the given string into tokens using whitespace 
Split the given input into tokens using punktuation marks as splitter 
Split the given string into tokens using whitespace 
Set the options object for this filter 
Add an item to the registry 
Get a dictionary entry by it s key 
Get an array of hyphenation patterns for a given word 
Set the filters 
Add a filter to the options array 
Set the tokenizers to use 
Add a tokenizer to the tomeizer list 
Create an Option Object by parsing a given file 
Set the pattern 
Get the text of the pattern 
Get the pattern of this instance 
Set the Options 
Get the Options 
Add a Dictionary to the Hyphenator 
Add a Filter to the Hyphenator 
Add a tokenizer to the tokenizer registry 
Get the tokenizers 
Get the dictionaries 
Get the filters 
This method does the actual hyphenation 
Get the hyphenation pattern for the contained tokens 
Hyphenate a Token Object 
Set the default home Path 
Get the default Home Path 
Set the instance home Path 
Create a new Hyphenator Object for a certain locale 
autoload classes 
Replace a given token with an array of new tokens 
Get a Token entry by it s key 
Implements interface Filter 
Merge the given Hyphenation patterns to one pattern for the given token 
Add an item to the registry 
Get a Filters entry by it s key 
Pass the given string through the given Filter 
Split the given string into tokens using whitespace 
Returns application token 
batch process orders 
Perform migration scripts on a single order 
Customer and shipping details have been added to Order so that memberless guest orders can be placed 
Convert shipping and tax columns into modifiers 
Performs calculation function on un calculated orders 
legacy function for working out popularity 
This module always requires a page model 
Create a payment model and provide link to redirect to external gateway or redirect to order link 
Map shop data to omnipay fields 
Create a new payment for an order 
Complete payment processing send receipt update order status accordingling fire event hooks 
Determine if an order can be placed 
Takes an order from being a cart to awaiting payment 
Convert ISO abbreviation to full translated country name 
contact information 
save set up addresses 
Set payment method 
Gets the selected payment method from the session or the only available method if there is only one 
Checks if member or not is allowed in accordance with configuration 
 param string template param string subject 
Send a mail of the order to the client and another to the admin 
Send customer a confirmation that the order has been received 
Notify store owner about new order 
Send customer an order receipt email Precondition The order payment has been successful 
Sends an email to the admin that an order has been cancelled 
Send an email to the customer containing the latest note of link Order Status Log and the current status 
The new Email debug method in Silver Stripe dumps the entire message with all message parts which makes it unusable to preview an Email This method simulates the old way of the message output and renders only the HTML body 
Helper for creating a url 
This is used here and in Variation Form and Add Product Form 
Action remove all of an item from the cart 
Action update the quantity of an item in the cart 
Action clear the cart 
Handle index requests 
Displays order info and cart contents 
Create SQL where filter 
Save the changes to the form 
Save the changes to the form and redirect to the checkout page 
Retrieve a modifier of a given class for the order Modifier will be retrieved from database if it already exists or created if it is always required 
Get unit price for this item Fetches from db or Buyable based on order status 
Calculates the total for this item Generally called by on Before Write 
Intersects this item s required fields with the data record This is used for uniquely adding items to the cart 
Recalculate total before saving to database 
Overloaded relationship for getting versioned variations 
Create a new address if the existing address has changed or is not yet created 
Get an array of data fields that must be populated for model to be valid Required fields can be customised via self required fields 
Convert address to a single string 
Get location of user 
A form for updating cart items 
Calculates shipping cost based on Product Weight 
Calculate the total weight of the order 
Adds a given product to the cart If a hidden field is passed Validate Variant then simply a validation of the user including that product is done and the users cart isn t actually changed 
namespacing functions 
Sums up all of desired field for items and multiply by quantity Optionally sum product field instead 
Add up the totals of all the order items in this list 
Save selected attributes somewhat of a hack 
 Returns the order item which contains the product variation 
Retrieves error messages for the latest payment if existing This can originate e g from an earlier offsite gateway API response 
Override viewer to get correct template for first step 
Get related product live version if in cart or historical version if order is placed 
Adds variations specific fields to the CMS 
Pass an array of attribute ids to query for the appropriate variation 
Generates variations based on selected attributes 
Get all the link Product Attribute Value for a given attribute type based on this product s variations 
Make sure variations are deleted with product 
Resizes image by width or height only if the source image is bigger than the given width height This prevents ugly upscaling 
Returns the first available component with the given class or interface 
Get combined form fields 
Validate every component against given data 
Get combined data 
Set data on all components 
Helper function for saving data from other components 
Get the current order or return null if it doesn t exist 
Set the current cart 
Helper that only allows orders to be started internally 
Adds an item to the cart 
Remove an item from the cart 
Remove a specific order item from cart 
Sets the quantity of an item in the cart Will automatically add or remove item if necessary 
Update quantity of a given order item 
Finds or makes an order item for a given product filter 
Finds an existing order item 
Ensure the proper buyable will be returned for a given buyable This is being used to ensure a product with variations cannot be added to the cart a Variation has to be added instead 
Store old cart id in session order history 
Empty abandon the entire cart 
 param array modifiers 
 param Data Query query 
Get the tax amount to charge on the order 
Convert a numeric price to the shop currency 
Set Install the given locale This does set the i n locale as well as the Fluent locale if this module is installed 
Get the current section first looking at controller then at a request instance and lastly return a fresh session 
Update the cart using data collected 
set image based on filename 
find product group parent ie Cateogry 
Adds paragraphs to content 
Get list of allowed countries 
For shops that only sell to a single country this will return the country code otherwise null 
Convert iso country code to English country name 
Get the cart and do last minute calculation if necessary 
Finds or creates values for this type 
Returns a dropdown field for the user to select a variant 
Retrieve a set of products based on the given parameters Checks get query for sorting and pagination 
Loop down each level of children to get all ids 
Return children Product Category pages of this category 
Recursively generate a product menu starting from the topmost category 
Override the nested title defaults to show deeper nesting in the CMS 
Add print button to order detail form 
Render order for printing 
Get the next step action 
Restrict list to non hidden statuses 
Replace gridfield detail form to include print functionality 
Helper function for reducing a field set to a given subset in the given order 
Modifies the incoming value by adding subtracting or ignoring the value this modifier calculates 
Set up Checkout Page Controller decorators for managing steps 
Redirect back to start of checkout if no cart started 
Check if passed action is the same as the current step 
Get the numerical position of a step 
Returns the link to the checkout page on this site 
Return the products for this group 
Sorting controls 
If no cents on the price trim those off 
Add product fields to CMS 
Helper function for generating list of categories to select from 
Helper function for generating a list of additional categories excluding the main parent 
Get ids of all categories that this product appears in 
Conditions for whether a product can be purchased global allow purchase is enabled product Allow Purchase field is true if variations then one of them needs to be purchasable if not variations selling price must be above 
The raw retail price the visitor will get when they add to cart Can include discounts or markups on the base price 
If the product does not have an image and a default image is defined in Site Config return that instead 
Behaviour can be overwritten by creating a process Payment Response method on the controller owning this form It takes a Symfony Component Http Foundation Response argument and expects an SS HTTPResponse in return 
Make payment for a place order where payment had previously failed 
Form action handler for Cancel Order Form 
Get credit card fields for the given gateways 
Add an order to the session stored history of orders 
Get historical orders for current session 
Get the order via url ID or form submission Order ID It will check for permission based on session stored ids or member id 
Get all orders for current member session 
Return all past orders for current member session 
Return the link Order details for the current Order ID that we re viewing ID parameter in URL 
Build a form for cancelling or retrying payment for a placed order 
Create member account from data array Data must contain unique identifier 
Get member by unique field 
Link the current order to the current member on login if there is one and if configuration is set to do so 
Get the past orders for this member 
Used for storing the quantity update link for ajax use 
Allow choosing from an existing address 
 param Order order param array data 
Create a new address if the existing address has changed or is not yet created 
Create CMS fields for cms viewing and editing orders 
Adjust scafolded search context 
Hack for swapping out relation list with Order Item List 
Calculate the total 
This is needed to maintain backwards compatiability with some subsystems using modifiers eg discounts 
Calculate how much is left to be paid on the order Enforces rounding precision 
Get the link for finishing order processing 
Returns TRUE if the order can be cancelled PRECONDITION Order is in the DB 
Check if an order can be paid for 
Prevent deleting orders 
Check if an order can be viewed 
Gets the name of the customer 
Get billing address if marked to use seperate address otherwise use shipping address or the member default billing address 
Create a unique reference identifier string for this order 
Force creating an order reference 
Called from see on Before Write whenever status changes 
delete attributes statuslogs and payments 
Provide i n entities for the order class 
Render the cart with editable item fields 
Add quantity variation and remove fields to the item set 
Returns the link or the URLSegment to the account page on this site 
Return a link to view the order on the account page 
Browses WP CLI packages available for installation 
Installs a WP CLI package 
Lists installed WP CLI packages 
Gets the path to an installed WP CLI package or the package directory 
Updates all installed WP CLI packages to their latest version 
Uninstalls a WP CLI package 
Gets a Composer instance 
Gets all of the community packages 
Gets the package index instance 
Displays a set of packages 
Gets a package by its shortened identifier 
Gets the installed community packages 
Gets an installed package by its name 
Gets the name of the package from the composer json in a directory path 
Gets the absolute path to the WP CLI packages composer json 
Creates a default WP CLI packages composer json 
Checks that package name matches the name in the repo composer json and return corrected value if not 
Get the version to use for raw github request Very basic 
Guesses the version constraint from a release tag 
Sets COMPOSER AUTH environment variable which Composer merges into the config setup in Composer Factory create Config depending on available environment variables Avoids authorization failures when accessing various sites 
Avoid using default Composer CA bundle if in phar as we don t include it See https github com composer ca bundle blob src Ca Bundle php L 
Reads the WP CLI packages composer json checking validity and returning array containing its path contents and decoded contents 
Registers a PHP shutdown function to revert composer json unless referenced revert flag is false 
Sets a data object for persisting by adding its id and type to the serialised vars 
Sets custom configuration settings from the job data 
Run the task 
Clear out stale jobs based on the cleanup values 
Adds a job to the queue to be started 
Start a job or however the queue handler determines it should be started 
Copies data from a job into a descriptor for persisting 
Check the current job queues and see if any of the jobs currently in there should be started If so return the next job that should be executed 
Runs an explicit check on all currently running jobs to make sure their processed count is incrementing between each run If it s not then we need to flag it as paused due to an error 
Checks through ll the scheduled jobs that are expected to exist 
Attempt to restart a stalled job 
Prepares the given job Descriptor for execution Returns the job that will actually be run in a state ready for executing 
Given a link Queued Job Descriptor mark the job as initialised Works sort of like a mutex Currently a database lock isn t entirely achievable due to database adapters not supporting locks This may still have a race condition but this should minimise the possibility Side effect is the job status will be changed to Initialised 
Start the actual execution of a job The assumption is the job ID refers to a link Queued Job Descriptor that is status set as Queued 
Is execution time too long 
Is memory usage too high 
Determines the memory limit in bytes for this application Limits to the smaller of memory limit configured via php ini or silverstripe config 
Convert memory limit string to bytes Based on implementation in install php 
Gets a list of all the current jobs or jobs that have recently finished 
Return the SQL filter used to get the job list this is used by the UI for displaying the job list 
Process the job queue with the current queue runner 
Process all jobs from a given queue 
Adds a Run Build Task Job to the job queue for a given task 
Write in a format expected by the output medium CLI HTML 
Logs the status of the queued job descriptor 
Logs the number of current jobs per queue 
Reload descriptor from DB 
 inheritdoc 
 inheritdoc 
 inheritdoc 
 inheritdoc 
Implement this method in the task subclass to execute via the Task Runner 
Pause this job but only if it is waiting running or init 
Resume this job and schedules it for execution 
Called to indicate that the job is ready to be run on the queue This is done either as the result of creating the job and adding it or when resuming 
Gets the path to the queuedjob cache directory 
Called when the job has completed and we want to cleanup anything the descriptor has lying around in caches or the like 
Get all job messages as an HTML unordered list 
Get the last job message as a raw string 
Return a string representation of the numeric Job Type 
Return a map of numeric Job Type values to localisable string representations 
Note that this is duplicated for backwards compatibility purposes 
On any restart make sure to check that our temporary file is being created still 
Outputs the completed file to the site s webroot 
Run tasks on the given queue 
Handle the actions and apply any changes to the Grid Field 
Defines the title of the job 
This is called immediately before a job begins it gives you a chance to initialise job data and make sure everything s good to go 
Lets process a single node and publish it if necessary 
Resolves the queue name to one of a few aliases 
Get an array representing the properties of a model 
Runs interactive shell 
Register the given stylesheet into the list of requirements Processes scss files if detected and rewrites URLs 
Process scss file if detected and return new URL 
Saves the source map to a file 
Writes on a shared memory block 
Reads from a shared memory block 
The initial value used to wrap the key and check the integrity when unwrapped The RFC set this value to x A A A A A A A A The RFC set this value to x A A XXXXXXXX The part with XXXXXXXX is the MLI depends on the padding 
 param string kek The Key Encryption Key param string key The key to wrap param bool padding enabled If false the key to wrap must be a sequence of one or more bit blocks RFC compliant else the key size must be at least one octet RFC compliant 
 param string kek The Key Encryption Key param string key The key to unwrap param bool padding enabled If false the AIV check must be RFC compliant else it must be RFC or RFC compliant 
Lists registered sidebars 
Lists widgets associated with a sidebar 
Adds a widget to a sidebar 
Updates options for an existing widget 
Moves the position of a widget 
Deactivates one or more widgets from an active sidebar 
Deletes one or more widgets from a sidebar 
Resets sidebar 
Checks whether a sidebar is a valid sidebar 
Checks whether the specified widget is on the sidebar 
Gets the widgets and their associated data for a given sidebar 
Gets the widget s name option index sidebar and sidebar index from its ID 
Repositions a widget within a sidebar or move to another sidebar 
Gets a widget s instantiated object based on its name 
Cleans up a widget s options based on its update callback 
Get a random integer within the specified range 
Get a random string of the specified length 
Encode a string of raw bytes 
Decode an encoded string 
Generate a string of random data 
Generate a string of random data 
Test system support for this generator 
Generate a string of random data 
Generate a string of random data 
Test system support for this generator 
Generate a string of random data 
Add a search path for custom generators 
Remove a registered generator path 
Get a supported random data generator 
Populate the available generators array 
Generate a string of random data 
For some attributes return the value of the backing control instead of our own 
 param string text param bool screen Reader Only param array extra Classes 
 param string text param bool small param bool muted 
Show the group as an horizontal row using the specified configuration This method should be called last when the label and controls are all initialized 
Make the input read only 
Open a form 
Close a form previously open with open Form 
 param Spatie Html Base Element null control param string null label param string null help Text 
 param Spatie Html Base Element null control param string null prefix param string null suffix 
 param string null type param string null name param string null value 
 param string null name 
 param string null name 
 param string null name param string null value 
 param string null name param string null description param bool is Checked 
 param string null name param string null description param bool is Checked 
 param string null name param array options param string selected Option 
 param string null name param array iterable options param string iterable null value 
 param string null name param string null value 
 param string null name param string null value 
 param string null name param string null value 
 param string null name param string null value 
 param string Spatie Html Base Element text param string variant param bool outlined 
 param text param string variant param bool outlined 
Add an addon before the field 
Add an addon after the field 
Add the child elements corresponding to the given addons 
 param bool string int is Checked 
 param bool disabled 
Link to the latest font awesome CSS served from maxcdn bootstrapcdn com 
 param double progress The current progress value param array options 
Bootstrap the application services 
Register the application services 
For some attributes return the value of the backing control instead of our own 
 param string null name 
 param Spatie Html Base Element wrapper 
Set the control size 
Merge properties of the specified node to the given properties with precedence to node properties 
Replace callbacks The supplied function should take a callback id and return a callback of its own 
fahrenheit in the supplied callback 
 Get value of the property at defined path 
Get the names of children nodes 
Get the names of all properties 
 Get value of the property at specified path 
 Check if specified item exists at path specified path 
 Create named session 
boot 
 
 param Memcached Extension memcached param array servers 
Read values for a set of keys from cache 
Remove values from cache 
 
 
 param string name param Smarty Factory view Factory 
smarty configure 
Execute the console command 
Get the evaluated contents of the view at the given path 
Execute the console command 
Read values for a set of keys from cache 
Save values for a set of keys to cache 
Remove values from cache 
Execute the console command 
 param array keys param array map param array lookup 
Start selenium 
Detect the correct driver for selenium 
Handle an incoming request 
Returns the Aperture F number 
Returns the Author 
Returns the Headline 
Returns the Credit 
Returns the source 
Returns the Jobtitle 
Returns the ISO speed 
Returns the Exposure 
Returns the Exposure 
Returns the focus distance if it exists 
Returns the width in pixels if it exists 
Returns the height in pixels if it exists 
Returns the title if it exists 
Returns the caption if it exists 
Returns the copyright if it exists 
Returns the keywords if they exists 
Returns the camera if it exists 
Returns the horizontal resolution in DPI if it exists 
Returns the vertical resolution in DPI if it exists 
Returns the software if it exists 
Returns the focal length in mm if it exists 
Returns the creation datetime if it exists 
Returns the colorspace if it exists 
Returns the mimetype if it exists 
Returns the filesize if it exists 
Returns the orientation if it exists 
Returns GPS coordinates if it exists 
Maps the array of raw source data to the correct fields for the PHPExif Exif class 
Determines if the given field is known in a case insensitive way for its first letter Also update field to keep it valid against the known fields 
Extract GPS coordinates from components array 
Normalize component 
Setter for the exiftool binary path 
Getter for the exiftool binary path Lazy loads the default path 
