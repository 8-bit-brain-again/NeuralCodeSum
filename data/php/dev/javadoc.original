 
 
Check for overwrite and set the authentication information for the repository 
 
Logs with an arbitrary level 
Given a concrete version this returns a constraint when possible that should be used for example in composer json 
Extracts information from the repository url 
 
 
 
 
Urlencode all non alphanumeric characters rawurlencode can not be used as it does not encode 
 param string type 
Uses the config gitlab domains to see if the driver supports the url for the repository given 
 
 
 
 
 
Builds dependency information It detects used package xml format 
Builds dependency information from package xml format 
Builds dependency information from package xml format 
Builds dependency constraint of extension type 
Builds dependency constraint of package type 
Parses version constraint 
Softened version parser 
Mark an existing package as being installed and having to remain installed 
Attempts to authorize a Git Lab domain via OAuth 
Workaround if your packages depend on plugins we must be sure that those are installed updated first else it would lead to packages being installed multiple times in different folders when running Composer twice 
Removals of packages should be executed before installations in case two packages resolve to the same path due to custom installers 
Loads the most current list of packages that are installed meaning from lock ideally or from installed repo as fallback 
Replace local repositories with Installed Array Repository instances 
Create Installer 
Whether or not generated autoloader are optimized 
Whether or not generated autoloader considers the class map authoritative 
Copy a file out of the cache 
 
 
 
 
 
Replaces current version and pretty version with passed values It also sets stability 
Returns the md hash of the sorted content of the composer file 
Checks whether locker has been locked lockfile found 
Searches and returns an array of locked packages retrieved from registered repositories 
Returns the packages s datetime for its source reference 
 param Pool pool param array packages 
 
 
 
Attempts to fetch the repository data via the Bit Bucket API and sets some parameters which are used in other methods 
 
 
 
 
 
Get the remote content 
aka solver makeruledecisions 
Makes a decision and propagates it to all rules 
Reverts a decision at the given level 
enable disable learnt rules 
Get a list of all possibly relative path names matching given url supports globbing 
 
 
Adds a new package to the repository 
Removes package from repository 
Copy the remote file in local 
Get the content 
Get file content or copy action 
Get contents of remote URL 
 param array options 
 link https github com composer composer issues 
Writes writable repository 
 
 
 
 
 
 
 
 
 
 
 
Error handler 
Register error handler 
Find package requires and child requires 
Adds packages to the package list 
Callback line parser which process hgignore lines 
Generates an exclude pattern for filter from a hg glob expression 
Returns a list of links causing the requested needle packages to be installed as an associative array with the dependent s name as key and an array containing in order the Package Interface and Link describing the relationship as values If recursive lookup was requested a third value is returned containing an identically formed array up to the root package That third value will be false in case a circular recursion was detected 
Add a rule as a reason 
A human readable textual representation of the problem s reasons 
Store a reason descriptor but ignore duplicates 
Turns a job into a human readable description 
Prints all available versions of this package and highlights the installed one if any 
print link objects 
Prints the licenses of a package with metadata 
Init styles for tree 
Display the tree 
Generate the package tree 
Display a package tree 
Display a package tree 
 
 
 
 
 
 
 
 
 
Fetch root identifier from Git Hub 
Read list of packages from base Url p packages xml 
Read package info from base Url p package info xml 
Read package releases from base Url p package allreleases xml 
Read package dependencies from base Url p package deps version txt 
Match hostname against a certificate 
Extract DNS names out of an X certificate 
 
 
 
 
 
 
 
Read list of channel categories from base Url c categories xml 
Read packages from base Url c category packagesinfo xml 
Parses package node 
Dispatch a script event 
Dispatch a package event 
Dispatch a installer event 
Triggers the listeners of an event 
Adds object methods as listeners for the events in get Subscribed Events 
Retrieves all listeners for a given event 
Finds all listeners defined as scripts in the package 
Push an event to the stack of active event 
 
 
 
Add a repository 
Sets whether to output download progress information for all registered downloaders 
Sets installer downloader for a specific installation type 
Returns downloader for a specific installation type 
Downloads package into target dir 
Updates package from initial to target version 
Removes package from target dir 
Determines the install preference of a package 
Add suggested packages to be listed after install 
Add all suggestions from a package 
Checks if a directory is empty 
Recursively remove a directory 
Attempts to unlink a file and in case of failure retries after ms on windows 
Attempts to rmdir a file and in case of failure retries after ms on windows 
Copy then delete is a non atomic version of link rename 
Returns size of a file or directory specified by path If a directory is given it s size will be computed recursively 
Normalize a path This replaces backslashes with slashes removes ending slash and collapses redundant separators and up level references 
delete symbolic link implementation commonly known as unlink 
Creates a relative symlink from link to target 
return true if that directory is a symlink 
resolve pathname to symbolic link of a directory 
Creates an NTFS junction 
Removes a Windows NTFS junction 
Retrieves a branch alias dev master x dev for example if it exists 
 param Package Interface package 
Registers an autoloader based on an autoload map returned by parse Autoloads 
Filters out dev dependencies 
Copy file using stream copy to stream to work around https bugs php net bug php id 
Execute the function 
 
Get the remote content 
Attempts to authorize a Bitbucket domain via OAuth 
Authorizes a Bitbucket domain interactively via OAuth 
Retrieves an access token from Bitbucket 
Store the new updated credentials to the configuration 
 
Moves the internal iterator to the specified offset 
Removes the current element from the list 
Validates the config and returns the result 
Set common options and arguments 
Recursively prints a tree of the selected results 
Searches for a package by it s name and version in managed repositories 
Returns a new repository for a specific installation type 
Suppresses given mask or errors 
Calls a specified function while silencing warnings and below 
Installs PEAR source files according to package xml definitions and removes extracted files 
Perform copy actions on files 
Parses tildes and environment variables in paths 
 
 
 
 
 
 
 
 
 
Generate a distinct filename for a particular version of a package 
Create an archive of the specified package 
Returns the default answer normalizer 
 
Checks if this rule is equal to another one 
Writes json file 
Encodes an array into optionally pretty printed JSON 
Throws an exception according to a given code with a customized message 
Parses json string and returns hash 
Validates the syntax of a JSON string 
Compiles composer into a single phar file 
 
 
 
Build a regexp from a package name expanding globs as required 
Checks the given path against all exclude patterns in this filter 
Generates a set of exclude patterns for filter from gitignore rules 
Generates an exclude pattern for filter from a gitignore rule 
 
 
Checks the local gitignore file for the Composer vendor directory 
Given a package name this determines the best version to use in the require key 
 
 
 
 
Reads PEAR channel through REST interface and builds list of packages 
Reads channel supported REST interfaces and selects one of them 
Registers a set of PSR directories for a given prefix either appending or prepending to the ones previously set for this prefix 
Registers a set of PSR directories for a given namespace either appending or prepending to the ones previously set for this namespace 
Registers a set of PSR directories for a given prefix replacing any others previously set for this prefix 
Registers a set of PSR directories for a given namespace replacing any others previously set for this namespace 
APCu prefix to use to cache found not found classes if the extension is enabled 
Finds the path to the file where the class is defined 
Due to various proxy servers configurations some servers can t handle non standard HTTP http proxy request fulluri parameter and will return error as not implemented see discussion https github com composer composer pull This method will test if you need to disable this parameter via setting extra environment variable in your system 
Due to various proxy servers configurations some servers can t handle non standard HTTP http proxy request fulluri parameter and will return error as not implemented see discussion https github com composer composer pull This method will test if you need to disable this parameter via setting extra environment variable in your system 
Assumes that installed packages come first and then all highest priority packages 
Assumes that locally aliased in root package requires packages take priority over branch alias ones 
Finds whether a request failed due to rate limiting 
Places the second watch on the rule s literal decided at the highest level 
Moves a watch from one literal to another 
Merges new config values with the existing ones overriding 
Returns a setting 
Validates that the passed URL is allowed to be used by current config or throws an exception 
Parses the version and adds a new package to the repository 
 
 
 
 
 
 
 
 
Retrieves the current git version 
 
Loads all plugins from currently installed plugin packages 
Adds a plugin activates it and registers it with the event dispatcher 
Recursively generates a map of package names to packages for all deps 
Retrieves the path a package is installed to 
opens a url in your system default browser 
Initializes repositories 
 
 
 
 
 
Execute an SVN remote command and try to fix up the process with credentials if necessary 
Execute an SVN local command and try to fix up the process with credentials if necessary 
A method to create the svn commands run 
Return the credential string for the svn command 
Get the password for the svn command Can be empty 
Detect Svn Auth 
Create the auth params from the configuration file 
Create the auth params from the url 
Returns the version of the svn binary contained in PATH 
extract file to path 
Give a meaningful error message to the user 
Initializes repository reads file or remote address 
 
Updates the given path to the given commit ref 
 
 
 
Execute an SVN command and try to fix up the process with credentials if necessary 
 
Searches all packages providing the given package name and match the constraint 
Creates a rule to remove a package 
Describes the location of the loaded php ini file s 
 
Execute the function 
 
 
 
Make sure binaries are installed for a given package 
Returns the base path of the package without target dir path 
 
 
 
 
 
 
 
 
Read content from remote filesystem 
Read xml content from remote filesystem 
 
Clone or update existing local fossil repository 
 
 
 
 
Removes installer 
Disables plugins 
Returns installer for a specific package type 
Checks whether provided package is installed in one of the registered installers 
Install binary for the given package If the installer associated to this package doesn t handle that function it ll do nothing 
Executes solver operation 
Executes install operation 
Executes update operation 
Uninstalls package 
Executes mark Alias Installed operation 
Executes mark Alias operation 
Returns the installation path of a package 
A bug in PHP prevents the headers from correctly being sent when a content type header is present and NOT at the end of the array 
 
 
 
 
 
 
An absolute path leading is converted to a file url 
Execute an SVN command and try to fix up the process with credentials if necessary 
Inserts a rule node into the appropriate chains within the graph 
Propagates a decision on a literal to all rules watching the literal 
Moves a rule node from one watch chain to another 
 
 
 
Process the download url 
 
Begins a transaction param string null isolation Level The isolation level to use for this transaction This can be one of READ UNCOMMITTED READ COMMITTED REPEATABLE READ and SERIALIZABLE but also a string containing DBMS specific syntax to be used after SET TRANSACTION ISOLATION LEVEL If not specified null the isolation level will not be set explicitly and the DBMS default will be used 
Creates a validator object 
 
Returns a list of attributes this validator applies to param array string null attributes the list of attributes to be validated 
Returns a value indicating whether the validator is active for the given scenario and attribute 
Adds an error about the specified attribute to the model object This is a helper method that performs message selection and internationalization 
Checks if the given value is empty A value is considered empty if it is null an empty array or an empty string Note that this method is different from PHP empty It will return false when the value is 
Formats a mesage using the I N or simple strtr if Yii app is not available 
Creates a DB command that can be used to execute this query 
Starts a batch query 
Starts a batch query and retrieves data row by row 
Executes the query and returns all results as an array 
Converts the raw query results into the format as specified by this query This method is internally used to convert the data fetched from database into the format as required by this query 
Executes the query and returns a single row of result 
Returns the query result as a scalar value The value returned will be the first column in the first row of the query results 
Returns a value indicating whether the query result contains any row of data 
Returns table names used in from indexed by aliases Both aliases and names are enclosed into and 
Clean up table names and aliases Both aliases and names are enclosed into and 
Ensures name is wrapped with and 
Sets the SELECT part of the query param string array Expression Interface columns the columns to be selected Columns can be specified in either a string e g id name or an array e g id name Columns can be prefixed with table names e g user id and or contain column aliases e g user id AS user id The method will automatically quote the column names unless a column contains some parenthesis which means the column contains a DB expression A DB expression may also be passed in form of an Expression Interface object 
Add more columns to the SELECT part of the query 
Returns unique column names excluding duplicates Columns to be removed if column definition already present in SELECT part with same alias if column definition without alias already present in SELECT part without alias too 
Sets the FROM part of the query param string array Expression Interface tables the table s to be selected from This can be either a string e g user or an array e g user profile specifying one or several table names Table names can contain schema prefixes e g public user and or table aliases e g user u The method will automatically quote the table names unless it contains some parenthesis which means the table is given as a sub query or DB expression 
Sets the WHERE part of the query 
Adds an additional WHERE condition to the existing one The new condition and the existing one will be joined using the AND operator 
Adds an additional WHERE condition to the existing one The new condition and the existing one will be joined using the OR operator 
Adds a filtering condition for a specific column and allow the user to choose a filter operator 
Appends a JOIN part to the query The first parameter specifies what type of join it is param string type the type of join such as INNER JOIN LEFT JOIN param string array table the table to be joined 
Appends an INNER JOIN part to the query param string array table the table to be joined 
Appends a LEFT OUTER JOIN part to the query param string array table the table to be joined 
Appends a RIGHT OUTER JOIN part to the query param string array table the table to be joined 
Sets the GROUP BY part of the query param string array Expression Interface columns the columns to be grouped by Columns can be specified in either a string e g id name or an array e g id name The method will automatically quote the column names unless a column contains some parenthesis which means the column contains a DB expression 
Adds additional group by columns to the existing ones param string array Expression Interface columns additional columns to be grouped by Columns can be specified in either a string e g id name or an array e g id name The method will automatically quote the column names unless a column contains some parenthesis which means the column contains a DB expression 
Sets the HAVING part of the query 
Adds an additional HAVING condition to the existing one The new condition and the existing one will be joined using the AND operator 
Adds an additional HAVING condition to the existing one The new condition and the existing one will be joined using the OR operator 
Sets the HAVING part of the query but ignores is Empty empty operands 
Adds an additional HAVING condition to the existing one but ignores is Empty empty operands The new condition and the existing one will be joined using the AND operator 
Adds an additional HAVING condition to the existing one but ignores is Empty empty operands The new condition and the existing one will be joined using the OR operator 
Adds additional parameters to be bound to the query 
Enables query cache for this Query 
Sets command cache if this query has enabled caching 
Creates a new Query object and copies its property values from an existing one The properties being copies are the ones to be used by query builders 
Serializes a list of links into proper array format 
Returns message file path for the specified language and category 
Loads the message translation for the specified language and category or returns null if file doesn t exist 
Loads MIME types from the specified file 
Loads MIME aliases from the specified file 
Copies a whole directory as another one The files and sub directories will also be copied over param string src the source directory param string dst the destination directory param array options options for directory copy Valid options are 
Removes a directory and all its content recursively 
Removes a file or symlink in a cross platform way 
Returns the files found under the specified directory and subdirectories param string dir the directory under which the files will be looked for param array options options for file searching Valid options are 
Checks if the given file path satisfies the filtering options 
Creates a new directory 
Compares a path part against a pattern with optional wildcards 
Searches for the first wildcard character in the pattern 
 
Checks whether authentication is optional for the given action 
Removes an item from an array and returns the value If the key does not exist in the array the default value will be returned instead 
Removes items with matching values from the array and returns the removed items 
Indexes and or groups the array according to a specified key The input should be either multidimensional array or an array of objects 
Sorts an array of objects or arrays with the same structure by one or several keys 
Decodes HTML entities into the corresponding characters in an array of strings Only array values will be decoded by default If a value is an array this method will also decode it recursively Only string values will be decoded 
Filters array according to rules specified 
Method builds the raw SQL from the expression that will not be additionally escaped or quoted 
Initializes the component 
Loads asset bundle class by name 
Loads dummy bundle by name 
Returns the asset converter 
Publishes a file or a directory 
Publishes a file 
Returns the URL of a published file path This method does not perform any publishing It merely tells you if the file path is published what the URL will be to access it 
Initializes the Fragment Cache object 
Render a HTML input tag 
Renders the strike through feature 
Fetches the next batch of data 
 
Gets column definition 
 
 
 
Collects the table column metadata 
Collects the foreign key column details for the given table 
Returns all unique indexes for the given table 
Loads the column information into a Column Schema object 
Sets the isolation level of the current transaction 
Returns table columns info 
Loads multiple types of constraints and returns the specified ones 
Initializes this component 
Sets the response status code This method will set the corresponding status text if text is null 
Sets the response status code based on the exception 
Sends the response to the client 
Clears the headers cookies content status code of the response 
Sends a file to the browser 
Sends the specified content as a file to the browser 
Sends the specified stream as a file to the browser 
Sets a default set of HTTP headers for file downloading purpose 
Determines the HTTP range given in the request 
Sends existing file to a browser as a download using x sendfile 
Redirects the browser to the specified URL 
Prepares for sending the response The default implementation will convert data into content and set headers accordingly 
 
Validates existence of the current attribute based on relation name 
 
Check whether value exists in target table 
Run query to check if value exists 
Creates a query instance with the given condition 
Moves the cursor to an absolute position given as column and row by sending ANSI control code CUP or CHA to the terminal 
Converts an ANSI formatted string to HTML 
Word wrap text with indentation to fit the screen size 
Gets input from STDIN and returns a string right trimmed for EOLs 
Asks user to confirm by typing y or n 
Gives the user an option to choose from Giving as an input will show a list of options to choose from and their explanations 
Starts display of a progress bar on screen 
Calculate progress Eta progress Eta Last Update and progress Eta Last Done 
Ends a progress bar that has been started by start Progress 
Generates a summary of the validation errors param Model Model models the model s whose validation errors are to be displayed param array options the tag options in terms of name value pairs The following options are specially handled 
Return array of the validation errors 
Formats the specified response 
Formats scalar value to use in XML text node 
Returns element name ready to be used in DOMElement if name is not empty is not int and is valid 
Initializes the widget 
Generates a hashed variable to store the plugin client Options 
Initializes client options 
Registers the needed client script and options 
Returns the command line arguments 
Resolves the current request into a route and the associated parameters 
Formats the value as an HTML encoded plain text with newlines converted into breaks 
Formats the value as HTML text The value will be purified using Html Purifier to avoid XSS attacks Use as Raw if you do not want any purification of the value 
Formats the value as an image tag 
Formats the value as a hyperlink 
Formats the value as a boolean 
Formats the value as a date param int string Date Time value the value to be formatted The following types of value are supported 
Formats the value as a time param int string Date Time value the value to be formatted The following types of value are supported 
Formats the value as the time interval between a date and now in human readable form 
Represents the value as duration in human readable format 
Formats the value as a length in human readable form for example meters Check properties base Units if you need to change unit of value as the multiplier of the smallest unit and system Of Units to switch between UNIT SYSTEM METRIC or UNIT SYSTEM IMPERIAL 
Formats the value as a length in human readable form for example m This is the short form of as Length 
Formats the value as a weight in human readable form for example kilograms Check properties base Units if you need to change unit of value as the multiplier of the smallest unit and system Of Units to switch between UNIT SYSTEM METRIC or UNIT SYSTEM IMPERIAL 
Formats the value as a weight in human readable form for example kg This is the short form of as Weight 
Given the value in bytes formats number part of the human readable form 
Normalizes a numeric input value 
Checks if string representations of given value and its normalized version are different 
Normalizes a numeric string value 
Fallback for formatting value as a decimal number 
Fallback for formatting value as an integer number by removing any decimal digits without rounding 
Fallback for formatting value as a percent number with sign 
Fallback for formatting value as a currency number 
Returns all schema names in the database except system schemas 
Returns all table names in the database 
Determines the PDO type for the given PHP data value 
Returns the ID of the last inserted row or sequence value 
Executes the INSERT command returning primary key values 
Quotes a string value for use in a query Note that if the parameter is not a string it will be returned without change 
Quotes a simple table name for use in a query A simple table name should contain the table name only without any schema prefix If the table name is already quoted this method will do nothing 
Quotes a simple column name for use in a query A simple column name should contain the column name only without any prefix If the column name is already quoted or is the asterisk character this method will do nothing 
Unquotes a simple table name A simple table name should contain the table name only without any schema prefix If the table name is not quoted this method will do nothing 
Unquotes a simple column name A simple column name should contain the column name only without any prefix If the column name is not quoted or is the asterisk character this method will do nothing 
Extracts the PHP type from abstract DB type 
Returns a server version as a string comparable by version compare 
Returns the cache key for the specified table name 
Returns the cache tag name This allows refresh to invalidate all cached table schemas 
Returns the metadata of the given type for all tables in the given schema This method will call a get Table ucfirst type named method with the table name and the refresh flag to obtain the metadata 
Sets the metadata of the given type for the given table 
Changes row s array key case to lower if PDO s one is set to uppercase 
Tries to load and populate table metadata from cache 
Saves table metadata to cache 
Initializes the detail view This method will initialize required property values 
Renders the detail view This is the main entry of the whole detail view rendering 
Renders a single attribute 
 
Writes log messages to syslog Starting from version this method throws Log Runtime Exception in case the log can not be exported 
Gets the named column metadata This is a convenient method for retrieving a named column even if it does not exist 
Manually specifies the primary key for this table 
Initializes the application component This method is required by IApplication Component and is invoked by application 
Frees all session variables and destroys all data registered to a session 
Updates the current session ID with a newly generated one 
Sets the current session save path This is a wrapper for PHP session save path https secure php net manual en function session save path php 
Sets the session cookie parameters This method is called by open when it is about to open the session 
Sets the value indicating whether cookies should be used to store session IDs 
Returns the session variable value with the session variable name If the session variable does not exist the default Value will be returned 
Updates the counters for flash messages and removes outdated flash messages This method should only be called once in init 
Removes a flash message 
Removes all flash messages Note that flash messages and normal session variables share the same name space If you have a normal session variable using the same name it will be removed by this method 
This method is required by the interface Array Access 
If session is started it s not possible to edit session ini settings In PHP it throws exception This function saves session data to temporary variable and stop session 
Begins a widget This method creates an instance of the calling class It will apply the configuration to the created instance A matching end call should be called later As some widgets may use output buffering the end call should be made in the same view to avoid breaking the nesting of output buffers 
Ends a widget Note that the rendering result of the widget is directly echoed out 
Returns the view object that can be used to render views or view files The render and render File methods will use this view object to implement the actual view rendering If not set it will default to the view application component 
This method is invoked right before the widget is executed 
This method is invoked right after a widget is executed 
 
 
Initializes the view component 
Renders a view 
Finds the view file based on the given view name 
Renders a view file 
This method is invoked right before render File renders a view file The default implementation will trigger the EVENT BEFORE RENDER event If you override this method make sure you call the parent implementation first 
This method is invoked right after render File renders a view file The default implementation will trigger the EVENT AFTER RENDER event If you override this method make sure you call the parent implementation first 
Renders dynamic content returned by the given PHP statements This method is mainly used together with content caching fragment caching and page caching when some portions of the content called dynamic content should not be cached The dynamic content must be returned by some PHP statements 
 
Typecast owner attributes according to attribute Types 
Casts the given value to the specified type 
 
Deletes a model 
 
 
 
Initializes the Db Session component This method will initialize the db property to make sure it refers to a valid DB connection 
Updates the current session ID with a newly generated one Please refer to https secure php net session regenerate id for more details 
Ends the current session and store session data 
Session read handler 
Session write handler 
Session destroy handler 
Session GC garbage collection handler 
Binds a column to a PHP variable When rows of data are being fetched the corresponding column value will be set in the variable Note the fetch mode must include PDO FETCH BOUND 
Resets the iterator to the initial state This method is required by the interface Iterator 
Method builds the raw SQL from the expression that will not be additionally escaped or quoted 
Prepares column name to be used in SQL statement 
Attaches value to params array and returns placeholder 
 
Gets the connected logger If not set Yii get Logger will be used 
Sets the connected logger 
Dispatches the logged messages to targets 
Loads the message translation for the specified language and category If translation for specific locale code such as en US isn t found it tries more generic en 
Loads the messages from database You may override this method to customize the message storage in the database 
The method builds the Query object for the fallback language messages search Normally is called from load Messages From Db 
Processes the given log messages This method will filter the given messages with levels and categories And if requested it will also export the filtering result to specific medium e g email 
Generates the context information to be logged The default implementation will dump user information system variables etc 
Formats a log message for display as a string 
Returns a string to be prefixed to the given message If prefix is configured it will return the result of the callback The default implementation will return user IP user ID and session ID as a prefix 
Check whether the log target is enabled 
Returns formatted Y m d H i s timestamp for message If microtime is configured to true it will return format Y m d H i s u 
Renders separator 
Send data formatted as JSON 
Send data formatted as XML 
Binds the parameters to the action This method is invoked by yii base Action when it begins to run with the given parameters This method will check the parameter names that the action requires and return the provided parameters according to the requirement If there is any missing parameter an exception will be thrown 
 
Refreshes the current page This method is a shortcut to Response refresh 
Attaches the behavior object to the component The default implementation will set the owner property and attach event handlers as declared in events Make sure you call the parent implementation if you override this method 
Detaches the behavior object from the component The default implementation will unset the owner property and detach event handlers declared in events Make sure you call the parent implementation if you override this method 
Initializes this rule 
Process pattern on rule initialization 
Prepares pattern on rule initialization replace parameter names by placeholders 
Parses the given request and returns the corresponding route and parameters 
Creates a URL according to the given route and parameters 
Iterates over placeholders and checks whether each placeholder exists as a key in matches array When found replaces this placeholder key with a appropriate name of matching parameter Used in parse Request create Url 
Renders a data cell 
Renders the data cell content 
Show help message 
Notifies user that there are no fixtures to unload according input conditions 
Notifies user that fixtures were successfully unloaded 
Notifies user that fixtures were not found under fixtures path 
Prompts user with confirmation if fixtures should be loaded 
Prompts user with confirmation for fixtures that should be unloaded 
Outputs data to the console as a list 
Finds fixtures to be loaded for example User if no fixtures were specified then all of them will be searching by suffix Fixture php 
Calculates fixture s name Basically strips get Fixture Path and Fixture php suffix from fixture s full path 
Returns valid fixtures config that can be used to load them 
Filters fixtures by splitting them in two categories one that should be applied and not 
 
 
 
 
 
Returns the named header s 
Adds a new header If there is already a header with the same name it will be replaced 
Adds a new header If there is already a header with the same name the new one will be appended to it instead of replacing it 
Sets a new header only if it does not exist yet If there is already a header with the same name the new one will be ignored 
Removes a header 
Negotiates the response format and application language 
Negotiates the application language 
Returns a value indicating whether the requested language matches the supported language 
Finds Active Record instance s by the given condition This method is internally called by find One and find All 
Checks if a property value is null This method overrides the parent implementation by checking if the named attribute is null or not 
Creates a query instance for has one or has many relation 
Populates the named relation with the related records Note that this method does not check if the relation exists or not 
Returns a value indicating whether the model has an attribute with the specified name 
Returns the named attribute value If this record is the result of a query and the attribute is not loaded null will be returned 
Sets the named attribute value 
Returns the old value of the named attribute If this record is the result of a query and the attribute is not loaded null will be returned 
Returns a value indicating whether the named attribute has been changed 
Returns the attribute values that have been modified since they are loaded or saved most recently 
Updates the specified attributes 
Updates one or several counter columns for the current AR object Note that this method differs from update All Counters in that it only saves counters for the current AR object 
This method is called at the beginning of inserting or updating a record 
Repopulates this active record with the latest data from a newly fetched instance 
Returns a value indicating whether the given active record is the same as the current one The comparison is made by comparing the table names and the primary key values of the two active records If one of the records is New Record is new they are also considered not equal 
Returns the primary key value s 
Returns the old primary key value s This refers to the primary key value that is populated into the record after executing a find method e g find find One The value remains unchanged even if the primary key attribute is manually assigned with a different value 
Populates an active record object using a row of data from the database storage 
Returns the relation object with the specified name A relation is defined by a getter method which returns an Active Query Interface object It can be declared in either the Active Record class itself or one of its behaviors 
Establishes the relationship between two models 
Destroys the relationship between two models 
Destroys the relationship in current model 
Returns a value indicating whether the given set of attributes represents the primary key for this model 
Returns the text label for the specified attribute If the attribute looks like related Model attribute then the attribute will be received from the related model 
Returns the text hint for the specified attribute If the attribute looks like related Model attribute then the attribute will be received from the related model 
Sets the element value at the specified offset to null This method is required by the SPL interface Array Access It is implicitly called when you use something like unset model offset 
Resets dependent related models checking if their links contain specific attribute 
Sets relation dependencies for a property 
 
 
Returns the maximum size allowed for uploaded files 
 
Converts php ini style size to bytes 
Checks if given uploaded file have correct type extension according current validator settings 
Checks the mime Type of the file against the list in the mime Types property 
 
Creates a URL rule using the given pattern and action 
 
 
 
 
Sends log messages to specified email addresses Starting from version this method throws Log Runtime Exception in case the log can not be exported 
Composes a mail message with the given body content 
 
Casts value to use in expression 
Method builds the raw SQL from the expression that will not be additionally escaped or quoted 
 
 
Prepares a query by applying filtering conditions defined in conditions method property and filter class property 
Processes attributes relations described in target Attribute parameter into conditions compatible with yii db Query where Query where key value format 
Builds and adds combo Not Unique error message to the specified model attribute 
Returns conditions with alias 
Runs the application This is the main entrance of an application 
Sets the directory that stores runtime files 
Returns the directory that stores vendor files 
Sets the directory that stores vendor files 
Terminates the application This method replaces the exit function by ensuring the application life cycle is completed before terminating the application 
Renders a view in response to an AJAX request 
Clears up the registered meta tags link tags css js scripts and files 
Registers all files provided by an asset bundle including depending bundles files Removes a bundle from asset Bundles once files are registered 
Registers the named asset bundle All dependent asset bundles will be registered 
Registers a CSS file 
Registers a JS code block param string js the JS code block to be registered param int position the position at which the JS script tag should be inserted in a page The possible values are 
Registers a JS file 
Renders the content to be inserted at the end of the body section The content is rendered using the registered JS code blocks and files 
Performs normalization action for the specified route 
Normalizes specified path Info 
Adds or removes trailing slashes from path Info depending on whether the suffix has a trailing slash or not 
Converts a word to its plural form Note that this is for English only For example apple will become apples and child will become children 
Returns the singular of the word 
Converts an underscored or Camel Case word into a English sentence 
Converts a Camel Case name into space separated words For example Post Tag will be converted to Post Tag 
Converts a Camel Case name into an ID in lowercase Words in the ID may be concatenated using the specified character defaults to For example Post Tag will be converted to post tag 
Converts an ID into a Camel Case name Words in the ID separated by separator defaults to will be concatenated into a Camel Case name For example post tag is converted to Post Tag 
Returns a human readable string from word 
Same as camelize but first char is in lowercase 
Returns a string with all spaces converted to given replacement non word characters removed and the rest of characters transliterated 
Converts a list of words into a sentence 
Acquires lock by given name 
Releases lock by given name 
Sends this email message 
Returns static class instance which can be used to obtain meta information 
Builds a normalized cache key from a given key 
Retrieves a value from cache with a specified key 
Checks whether a specified key exists in the cache This can be faster than getting the value from the cache if the data is big In case a cache does not support this feature natively this method will try to simulate it but has no performance improvement over getting it Note that this method does not check whether the dependency associated with the cached data if there is any has changed So a call to get may return false while exists returns true 
Stores multiple items in cache Each item contains a value identified by a key If the cache already contains such a key the existing value and expiration time will be replaced with the new ones respectively 
Stores multiple items in cache Each item contains a value identified by a key If the cache already contains such a key the existing value and expiration time will be preserved 
Stores a value identified by a key into cache if the cache does not contain this key Nothing will be done if the cache already contains the key 
Retrieves multiple values from cache with the specified keys The default implementation calls get Value multiple times to retrieve the cached values one by one If the underlying cache storage supports multiget this method should be overridden to exploit that feature 
Stores multiple key value pairs in cache The default implementation calls set Value multiple times store values one by one If the underlying cache storage supports multi set this method should be overridden to exploit that feature 
Adds multiple key value pairs to cache The default implementation calls add Value multiple times add values one by one If the underlying cache storage supports multi add this method should be overridden to exploit that feature 
Method combines both set and get methods to retrieve value identified by a key or to store the result of callable execution if there is no cache available for the key 
 
 
 
Collects the table column metadata 
Sequence name of table 
 Overrides method in class Schema see https secure php net manual en function PDO last Insert Id php Oracle does not support this 
Creates Column Schema instance 
Finds constraints and fills them into Table Schema object passed 
Returns all unique indexes for the given table Each array element is of the following structure 
Extracts the data types for the given column 
Extracts size precision and scale information from column s DB type 
 
Moves the internal pointer to the next array element This method is required by the interface Iterator 
This registers the necessary Java Script code 
Generates a summary of the validation errors If there is no validation error an empty error summary markup will still be generated but it will be hidden param Model Model models the model s associated with this form param array options the tag options in terms of name value pairs The following options are specially handled 
Generates a form field A form field is associated with a model and an attribute It contains a label an input and an error message and use them to interact with end users to collect their inputs for the attribute 
Begins a form field This method will create a new form field and returns its opening tag You should call end Field afterwards 
Validates one or several models and returns an error message array indexed by the attribute IDs This is a helper method that simplifies the way of writing AJAX validation code 
Validates an array of model instances and returns an error message array indexed by the attribute IDs This is a helper method that simplifies the way of writing AJAX validation code for tabular input 
Renders the sort links 
Encodes special characters into HTML entities The yii base Application charset application charset will be used for encoding 
Generates a link tag that refers to an external CSS file param array string url the URL of the external CSS file This parameter will be processed by Url to param array options the tag options in terms of name value pairs The following options are specially handled 
Generates a script tag that refers to an external Java Script file param string url the URL of the external Java Script file This parameter will be processed by Url to param array options the tag options in terms of name value pairs The following option is specially handled 
Generates a hyperlink tag param string text link body It will NOT be HTML encoded Therefore you can pass in HTML code such as an image tag If this is coming from end users you should consider encode it to prevent XSS attacks param array string null url the URL for the hyperlink tag This parameter will be processed by Url to and will be used for the href attribute of the tag If this parameter is null the href attribute will not be generated 
Generates a mailto hyperlink 
Generates an image tag param array string src the image URL This parameter will be processed by Url to param array options the tag options in terms of name value pairs These will be rendered as the attributes of the resulting tag The values will be HTML encoded using encode If a value is null the corresponding attribute will not be rendered See render Tag Attributes for details on how attributes are being rendered 
Generates a text area input param string name the input name param string value the input value Note that it will be encoded using encode param array options the tag options in terms of name value pairs These will be rendered as the attributes of the resulting tag The values will be HTML encoded using encode If a value is null the corresponding attribute will not be rendered See render Tag Attributes for details on how attributes are being rendered The following special options are recognized 
Generates a drop down list param string name the input name param string array null selection the selected value s String for single or array for multiple selection s param array items the option data items The array keys are option values and the array values are the corresponding option labels The array can also be nested i e some array values are arrays too For each sub array an option group will be generated whose label is the key associated with the sub array If you have a list of data models you may convert them into the format described above using yii helpers Array Helper map 
Generates an unordered list param array Traversable items the items for generating the list Each item generates a single list item Note that items will be automatically HTML encoded if options encode is not set or true param array options options name config for the radio button list The following options are supported 
Generates a label tag for the given model attribute The label text is the label associated with the attribute obtained via Model get Attribute Label param Model model the model object param string attribute the attribute name or expression See get Attribute Name for the format about attribute expression param array options the tag options in terms of name value pairs These will be rendered as the attributes of the resulting tag The values will be HTML encoded using encode If a value is null the corresponding attribute will not be rendered The following options are specially handled 
Generates a summary of the validation errors If there is no validation error an empty error summary markup will still be generated but it will be hidden param Model Model models the model s whose validation errors are to be displayed param array options the tag options in terms of name value pairs The following options are specially handled 
Return array of the validation errors 
If maxlength option is set true and the model attribute is validated by a string validator the maxlength option will take the value of yii validators String Validator max 
Generate placeholder from model attribute label 
Generates a boolean input This method is mainly called by active Checkbox and active Radio 
Generates a list box The selection of the list box is taken from the value of the model attribute param Model model the model object param string attribute the attribute name or expression See get Attribute Name for the format about attribute expression param array items the option data items The array keys are option values and the array values are the corresponding option labels The array can also be nested i e some array values are arrays too For each sub array an option group will be generated whose label is the key associated with the sub array If you have a list of data models you may convert them into the format described above using yii helpers Array Helper map 
Generates a list of checkboxes A checkbox list allows multiple selection like list Box As a result the corresponding submitted value is an array The selection of the checkbox list is taken from the value of the model attribute param Model model the model object param string attribute the attribute name or expression See get Attribute Name for the format about attribute expression param array items the data item used to generate the checkboxes The array keys are the checkbox values and the array values are the corresponding labels Note that the labels will NOT be HTML encoded while the values will param array options options name config for the checkbox list container tag The following options are specially handled 
Generates a list of radio buttons A radio button list is like a checkbox list except that it only allows single selection The selection of the radio buttons is taken from the value of the model attribute param Model model the model object param string attribute the attribute name or expression See get Attribute Name for the format about attribute expression param array items the data item used to generate the radio buttons The array keys are the radio values and the array values are the corresponding labels Note that the labels will NOT be HTML encoded while the values will param array options options name config for the radio button list container tag The following options are specially handled 
Adds a CSS class or several classes to the specified options 
Merges already existing CSS classes with new one This method provides the priority for named existing classes over additional 
Removes a CSS class from the specified options 
Converts a CSS style array into a string representation 
Converts a CSS style string into an array representation 
Returns the value of the specified attribute name or expression 
Generates an appropriate input name for the specified attribute name or expression 
Generates an appropriate input ID for the specified attribute name or expression 
Escapes regular expression to use in Java Script 
Fallback implementation for Message Formatter format Message 
Tokenizes a pattern by separating normal text from replaceable patterns 
Parses a token 
 
Prepares the data models and keys 
Returns the total number of data models When pagination is false this returns the same value as count Otherwise it will call prepare Total Count to get the count 
Sets the sort definition for this data provider param array Sort bool value the sort definition to be used by this data provider This can be one of the following 
Refreshes the data provider After calling this method if get Models get Keys or get Total Count is called again they will re execute the query and return the latest data available 
 
 
 
Handles the specified request 
Initialize the application 
Runs a controller action specified by a route This method parses the specified route and creates the corresponding child module s controller and action instances It then calls Controller run Action to run the action with the given parameters If the route is empty the method will use default Route 
Session read handler 
Session write handler 
Session destroy handler 
 
 
Check the given requirements collecting results into internal field This method can be invoked several times checking different requirement sets Use get Result or render to get the results 
Checks if the given PHP extension is available and its version matches the given one 
Checks if PHP configuration option from php ini is on 
Checks if PHP configuration option from php ini is off 
Compare byte sizes of values given in the verbose representation like M K etc 
Checks if upload max file size matches the given range 
Normalizes requirement ensuring it has correct format 
Initializes the grid view This method will initialize required property values and instantiate columns objects 
Runs the widget 
Renders validator errors of filter model 
Returns the options for the grid view JS widget 
Renders the data models for the grid view 
Renders the caption element 
Renders the column group HTML 
Renders the table footer 
Renders the filter 
Renders the table body 
This function tries to guess the columns to show from the given data if columns are not explicitly specified 
Returns all view names in the database 
 
 
Adds an additional WHERE condition to the existing one The new condition and the existing one will be joined using the AND operator 
Adds an additional WHERE condition to the existing one The new condition and the existing one will be joined using the OR operator 
Sets the WHERE part of the query but ignores is Empty empty operands 
Adds an additional WHERE condition to the existing one but ignores is Empty empty operands The new condition and the existing one will be joined using the AND operator 
Adds an additional WHERE condition to the existing one but ignores is Empty empty operands The new condition and the existing one will be joined using the OR operator 
Removes is Empty empty operands from the given query condition 
Returns a value indicating whether the give value is empty 
Adds additional ORDER BY columns to the query param string array Expression Interface columns the columns and the directions to be ordered by Columns can be specified in either a string e g id ASC name DESC or an array e g id SORT ASC name SORT DESC 
Returns a value indicating whether ANSI color is enabled 
Runs an action with the specified action ID and parameters If the action ID is empty the method will use default Action 
Binds the parameters to the action This method is invoked by Action when it begins to run with the given parameters This method will first bind the parameters with the options options available to the action It then validates the given arguments 
Prints a string to STDERR 
Returns properties corresponding to the options for the action id Child classes may override this method to specify possible properties 
Returns the properties corresponding to the passed options 
Returns the help information for the anonymous arguments for the action 
Returns full description from the docblock 
 
Adds value to the array by input name e g Item name 
Adds file info to the uploaded files array by input name e g Item file 
Gets the size in bytes from verbose size representation 
Renders the exception 
Adds informational links to the given PHP type class 
Renders a single call stack element 
Renders call stack 
Creates string containing HTML link which refers to the home page of determined web server software and its full name 
Converts arguments array to its string representation 
Returns human readable exception name 
 
 
 
 
Validates an image file 
 
Stores a value identified by a key into cache if the cache does not contain this key This is the implementation of the method declared in the parent class 
Normalizes the attributes property 
Returns the columns and their corresponding sort directions 
Returns the currently requested sort information 
Sets up the currently sort information 
Returns the sort direction of the specified attribute in the current request 
Generates a hyperlink that links to the sort action to sort by the specified attribute Based on the sort direction the CSS class of the generated hyperlink will be appended with asc or desc 
Creates a URL for sorting the data by the specified attribute This method will consider the current sorting status given by attribute Orders For example if the current page already sorts the data by the specified attribute in ascending order then the URL created will lead to a page that sorts the data by the specified attribute in descending order 
Loads default values from database table schema 
Creates an Active Query instance with a given SQL statement 
Returns table aliases which are not the same as the name of the tables 
Filters array condition before it is assiged to a Query filter 
Valid column names are table column names or column names prefixed with table name or table alias 
 
Updates the whole table using the provided attribute values and conditions 
Updates the whole table using the provided counter changes and conditions 
Deletes rows in the table using the provided conditions 
Returns the schema information of the DB table associated with this AR class 
 
Deletes the table row corresponding to this active record 
Deletes an Active Record without considering transaction 
Returns a value indicating whether the given active record is the same as the current one The comparison is made by comparing the table names and the primary key values of the two active records If one of the records is New Record is new they are also considered not equal 
Returns a value indicating whether the specified operation is transactional in the current scenario 
Replaces placeholders in content with results of evaluated dynamic statements 
Converts markdown into HTML 
Converts markdown into HTML but only parses inline elements 
Passes markup through HTMLPurifier making it safe to output to end user 
 
Override settings for specific action 
For each CORS headers create the specific response 
Adds the CORS headers to the response 
Filters headers according to the trusted Hosts 
Returns the method of the current request e g GET POST HEAD PUT PATCH DELETE 
Returns whether this is an Adobe Flash or Flex request 
Returns the request parameters given in the request body 
Returns the named request body parameter value If the parameter does not exist the second parameter passed to this method will be returned 
Returns GET parameter with a given name If name isn t specified returns an array of all GET parameters 
Returns the schema and host part of the current request URL 
Sets the schema and host part of the application URL This setter is provided in case the schema and hostname cannot be determined on certain Web servers 
Returns the host part of the current request URL Value is calculated from current get Host Info host Info property 
Returns the relative URL for the application This is similar to script Url except that it does not include the script file name and the ending slashes are removed 
Returns the entry script file path The default implementation will simply return SERVER SCRIPT FILENAME 
Returns the path info of the currently requested URL A path info refers to the part that is after the entry script and before the question mark query string The starting and ending slashes are both removed 
Encodes an ISO string to UTF 
Returns the currently requested relative URL This refers to the portion of the URL that is after the host Info part It includes the query String part if any 
Resolves the request URI portion for the currently requested URL This refers to the portion that is after the host Info part It includes the query String part if any The implementation of this method referenced Zend Controller Request Http in Zend Framework 
Return if the request is sent via secure channel https 
Returns the port to use for insecure requests Defaults to or the port specified by the server if the current request is insecure 
Sets the port to use for insecure requests This setter is provided in case a custom port is necessary for certain server configurations 
Returns the port to use for secure requests Defaults to or the port specified by the server if the current request is secure 
Sets the port to use for secure requests This setter is provided in case a custom port is necessary for certain server configurations 
Returns the content types acceptable by the end user 
Returns the languages acceptable by the end user This is determined by the Accept Language HTTP header 
Gets the Etags 
Returns the cookie collection 
Creates a cookie with a randomly generated CSRF token Initial values specified in csrf Cookie will be applied to the generated cookie 
Performs the CSRF validation 
Validates CSRF token 
 
 
 
Ends recording a block This method stops output buffering and saves the rendering result as a named block in the view 
Initializes Oracle specific mutex component implementation 
Acquires lock by given name 
Releases lock by given name 
Renders the opening tag of the field container 
Generates a label tag for attribute 
Generates a tag that contains the first validation error of attribute Note that even if there is no validation error this method will still return an empty error tag param array false options the tag options in terms of name value pairs It will be merged with error Options The options will be rendered as the attributes of the resulting tag The values will be HTML encoded using Html encode If this parameter is false no error tag will be rendered 
Renders the hint tag param string bool content the hint content If null the hint will be generated via Model get Attribute Hint If false the generated field will not contain the hint part Note that this will NOT be Html encode encoded param array options the tag options in terms of name value pairs These will be rendered as the attributes of the hint tag The values will be HTML encoded using Html encode 
Renders an input tag param string type the input type e g text password param array options the tag options in terms of name value pairs These will be rendered as the attributes of the resulting tag The values will be HTML encoded using Html encode 
Renders a text input This method will generate the name and value tag attributes automatically for the model attribute unless they are explicitly specified in options param array options the tag options in terms of name value pairs These will be rendered as the attributes of the resulting tag The values will be HTML encoded using Html encode 
Renders a hidden input 
Renders a password input This method will generate the name and value tag attributes automatically for the model attribute unless they are explicitly specified in options param array options the tag options in terms of name value pairs These will be rendered as the attributes of the resulting tag The values will be HTML encoded using Html encode 
Renders a file input This method will generate the name and value tag attributes automatically for the model attribute unless they are explicitly specified in options param array options the tag options in terms of name value pairs These will be rendered as the attributes of the resulting tag The values will be HTML encoded using Html encode 
Renders a text area The model attribute value will be used as the content in the textarea param array options the tag options in terms of name value pairs These will be rendered as the attributes of the resulting tag The values will be HTML encoded using Html encode 
Renders a radio button This method will generate the checked tag attribute according to the model attribute value param array options the tag options in terms of name value pairs The following options are specially handled 
Renders a drop down list The selection of the drop down list is taken from the value of the model attribute param array items the option data items The array keys are option values and the array values are the corresponding option labels The array can also be nested i e some array values are arrays too For each sub array an option group will be generated whose label is the key associated with the sub array If you have a list of data models you may convert them into the format described above using Array Helper map 
Adjusts the for attribute for the label based on the input options 
Returns the JS options for the field 
Adds validation class to the input options if needed 
Returns the currently requested instance of this module class If the module class is not currently requested null will be returned This method is provided so that you access the module instance from anywhere within the module 
Sets the currently requested instance of this module class 
Initializes the module 
Returns an ID that uniquely identifies this module among all modules within the current application Note that if the module is an application an empty string will be returned 
Returns the root directory of the module It defaults to the directory containing the module class file 
Returns current module version If version is not explicitly set default Version method will be used to determine its value 
Defines path aliases This method calls Yii set Alias to register the path aliases This method is provided so that you can define path aliases when configuring a module property array list of path aliases to be defined The array keys are alias names must start with and the array values are the corresponding paths or aliases See set Aliases for an example param array aliases list of path aliases to be defined The array keys are alias names must start with and the array values are the corresponding paths or aliases For example 
Retrieves the child module of the specified ID This method supports retrieving both child modules and grand child modules 
Adds a sub module to this module param string id module ID param Module array null module the sub module to be added to this module This can be one of the following 
Returns the sub modules in this module 
Registers sub modules in the current module 
Checks if class name or prefix is incorrect 
This method is invoked right before an action within this module is executed 
This method is invoked right after an action within this module is executed 
 inheritdoc 
 inheritdoc 
 
 
Compares two values with the specified operator 
Checks if a property is set i e defined and not null 
Returns a value indicating whether a property is defined for this component 
Returns a value indicating whether a property can be read 
Returns a value indicating whether a method is defined 
Returns a value indicating whether there is any handler attached to the named event 
Detaches an existing event handler from this component 
Triggers an event This method represents the happening of an event It invokes all attached handlers for the event including class level handlers 
Returns the named behavior object 
Attaches a list of behaviors to the component Each behavior is indexed by its name and should be a Behavior object a string specifying the behavior class or an configuration array for creating the behavior 
Detaches all behaviors from the component 
Attaches a behavior to this component 
Converts the input value according to php Type after retrieval from the database If the value is null or an Expression it will not be converted 
Registers relational link tags in the html header for prev next first and last page These links are generated using yii data Pagination get Links 
Renders the page buttons 
Renders a page button You may override this method to customize the generation of page buttons 
Initializes this component by ensuring the existence of the cache path 
Checks whether a specified key exists in the cache This can be faster than getting the value from the cache if the data is big Note that this method does not check whether the dependency associated with the cached data if there is any has changed So a call to get may return false while exists returns true 
Stores a value identified by a key in cache This is the implementation of the method declared in the parent class 
Returns the cache file path given the cache key 
Encodes the given value into a JSON string 
Handles encode and decode errors by throwing exceptions with the respective error message 
Generates a summary of the validation errors param Model Model models the model s whose validation errors are to be displayed param array options the tag options in terms of name value pairs The following options are specially handled 
 
Builds given expression 
Gets object of Expression Builder Interface that is suitable for expression Uses expression Builders array to find a suitable builder class 
Creates an INSERT SQL statement For example php sql query Builder insert user name Sam age params The method will properly escape the table and column names 
Prepare select subquery and field names for INSERT INTO SELECT SQL statement 
Creates an UPDATE SQL statement 
Creates a DELETE SQL statement 
Builds a SQL statement for removing a primary key constraint to an existing table 
Builds a SQL statement for dropping a DB column 
Builds a SQL statement for renaming a column 
Builds a SQL statement for dropping a foreign key constraint 
Builds a SQL statement for creating a new index 
Builds a SQL statement for dropping an index 
Creates a SQL command for dropping an unique constraint 
Creates a SQL command for adding a check constraint to an existing table 
Creates a SQL command for dropping a check constraint 
Execute a SQL statement for resetting the sequence value of a table s primary key Reason for execute is that some databases Oracle need several queries to do so The sequence is reset such that the primary key of the next new row inserted will have the specified value or the maximum existing value 
Creates a SQL View 
Converts an abstract column type into a physical column type 
Quotes table names passed 
Builds the ORDER BY and LIMIT OFFSET clauses and appends them to the given SQL 
Processes columns and properly quotes them if necessary It will join all columns into a string with comma as separators 
Parses the condition specification and generates the corresponding SQL expression 
Connects two or more SQL expressions with the AND or OR operator 
Inverts an SQL expressions with NOT operator 
Creates an SQL expressions with the BETWEEN operator 
Creates an SQL expressions with the IN operator 
Creates an SQL expressions with the LIKE operator param string operator the operator to use e g LIKE NOT LIKE OR LIKE or OR NOT LIKE param array operands an array of two or three operands 
Creates an SQL expressions with the EXISTS operator 
Creates an SQL expressions like column operator value 
Helper method to add value to params array using PARAM PREFIX 
Displays a model 
This method contains the logic to be executed when applying this migration Child classes may override this method to provide actual migration logic 
This method contains the logic to be executed when removing this migration The default implementation throws an exception indicating the migration cannot be removed Child classes may override this method if the corresponding migrations can be removed 
Executes a SQL statement This method executes the specified SQL statement using db 
Creates and executes an INSERT SQL statement The method will properly escape the column names and bind the values to be inserted 
Creates and executes a batch INSERT SQL statement The method will properly escape the column names and bind the values to be inserted 
Creates and executes a command to insert rows into a database table if they do not already exist matching unique constraints or update them if they do 
Creates and executes an UPDATE SQL statement The method will properly escape the column names and bind the values to be updated 
Creates and executes a DELETE SQL statement 
Builds and executes a SQL statement for creating a new DB table 
Builds and executes a SQL statement for renaming a DB table 
Builds and executes a SQL statement for dropping a DB column 
Builds and executes a SQL statement for renaming a column 
Builds and executes a SQL statement for changing the definition of a column 
Builds and executes a SQL statement for creating a primary key The method will properly quote the table and column names 
Builds a SQL statement for adding a foreign key constraint to an existing table The method will properly quote the table and column names 
Builds and executes a SQL statement for creating a new index 
Builds and executes a SQL statement for dropping an index 
Builds and execute a SQL statement for adding comment to column 
Builds a SQL statement for adding comment to table 
Builds a SQL statement for dropping comment from table 
Returns an uploaded file for the given model attribute The file should be uploaded using yii widgets Active Field file Input 
Returns all uploaded files for the given model attribute 
Returns an uploaded file according to the given file input name The name can be a plain string or a string like an array element e g Post image File or Post image File 
Returns an array of uploaded files corresponding to the specified file input name This is mainly used when multiple files were uploaded and saved as files files files n and you can retrieve them all by passing files as the name 
Saves the uploaded file Note that this method uses php s move uploaded file method If the target file file already exists it will be overwritten 
Creates Uploaded File instances from FILE 
Creates Uploaded File instances from FILE recursively 
Resolves the table name and schema name if any 
 
 
Resolves the table name and schema name if any 
Loads the column information into a Column Schema object 
Collects the metadata of table columns 
Collects the constraint details for the given table and constraint type 
Collects the primary key column details for the given table 
Collects the foreign key column details for the given table 
Returns all unique indexes for the given table 
Loads multiple types of constraints and returns the specified ones 
 
 
 
 
Specifies the relation associated with the junction table 
Finds the related records for the specified primary record This method is invoked when a relation of an Active Record is being accessed in a lazy fashion 
Indexes buckets by column name 
 
 
 
 
 
Loads multiple types of constraints and returns the specified ones 
 
 
 
 
 
Flushes log messages from memory to targets 
Returns the profiling results 
Returns the statistical results of DB queries The results returned include the number of SQL statements executed and the total time spent 
Calculates the elapsed time for the given log messages 
 
 
 
Converts a file to a themed file if possible If there is no corresponding themed file the original file will be returned 
Converts a relative URL into an absolute URL using base Url 
Writes a byte integer 
Reads a string 
Method builds the raw SQL from the expression that will not be additionally escaped or quoted 
Builds expressions that are stored in condition 
 
 
Renders the header cell content The default implementation simply renders header This method may be overridden to customize the rendering of the header cell 
 
Returns header checkbox name 
Registers the needed Java Script 
Generates a batch INSERT SQL statement 
Builds a SQL statement for renaming a DB table 
 
Initializes mutex component implementation dedicated for UNIX GNU Linux Mac OS X and other UNIX like operating systems 
Acquires lock by given name 
Releases lock by given name 
Renders a view that represents the exception 
Gets the code from the exception 
Returns the exception name followed by the code if present 
 
 
 
 
Initializes the component by configuring the default message categories 
Translates a message to the specified language 
Formats a message using Message Formatter 
Returns the message formatter instance 
Returns the message source for the given category 
Composes storage field set for session writing 
Displays available commands or the detailed information about a particular command 
List all available controllers and actions in machine readable format This is used for shell completion 
List all available options for the action in machine readable format This is used for shell completion 
Displays usage information for action 
Displays all available commands 
Displays the detailed information of a command action 
Generates a well formed string for an argument or option 
Loads the message translation for the specified language and category If translation for specific locale code such as en US isn t found it tries more generic en When both are present the en US messages will be merged over en See load Fallback Messages for details If the language is less specific than source Language the method will try to load the messages for source Language For example source Language is en GB language is en The method will load the messages for en and merge them over en GB 
Returns message file path for the specified language and category 
Checks whether a specified key exists in the cache This can be faster than getting the value from the cache if the data is big Note that this method does not check whether the dependency associated with the cached data if there is any has changed So a call to get may return false while exists returns true 
Retrieves multiple values from cache with the specified keys 
Stores a value identified by a key in cache This is the implementation of the method declared in the parent class 
Stores multiple key value pairs in cache 
Stores a value identified by a key into cache if the cache does not contain this key This is the implementation of the method declared in the parent class 
Adds multiple key value pairs to cache 
Upgrades the application by applying new migrations 
Downgrades the application by reverting old migrations 
Upgrades or downgrades till the specified version 
Modifies the migration history to the specified version 
Truncates the whole database and starts the migration from the beginning 
Generates class base name and namespace from migration name from user input 
Finds the file path for the specified migration namespace 
Upgrades with the specified migration class 
Downgrades with the specified migration class 
Creates a new migration instance 
Includes the migration file for a given migration class name 
Migrates to the specified apply time in the past 
Migrates to the certain version 
Initializes the bundle If you override this method make sure you call the parent implementation in the last 
Registers the CSS and JS files with the given view 
Publishes the asset bundle if its source code is not under Web accessible directory It will also try to convert non CSS or JS files e g LESS Sass into the corresponding CSS or JS files using Asset Manager converter asset converter 
Shows information about current framework and extension versions 
Automation tool for making Yii framework and official extension releases 
This will generate application packages for download page 
Sorts CHANGELOG for framework or extension 
Extract changelog content for a specific version 
Ensure sorting of the changelog lines 
Fix some issues with PHPDoc in files 
Fix file PHPDoc 
Markdown aware fix of whitespace issues in doc comments 
Fixes line spacing code style for properties and constants 
remove multi empty lines and trim trailing whitespace 
Replace property annotations in doc comment 
 
 
 
 
 
 
 
 
 
Serializes a data provider 
Serializes a pagination into an array 
Adds HTTP headers about the pagination to the response 
Serializes the validation errors in a model 
Serializes a set of models 
Initializes the route This method is invoked after the route is created by the route manager 
Writes log messages to a file Starting from version this method throws Log Runtime Exception in case the log can not be exported 
Rotates log files 
 Copy rotated file into new file 
 
Collects the metadata of table columns 
Gets the CREATE TABLE sql string 
Collects the foreign key column details for the given table 
Returns all unique indexes for the given table 
Add servers to the server pool of the cache specified 
Add servers to the server pool of the cache specified Used for memcached PECL extension 
Retrieves multiple values from cache with the specified keys 
Stores a value identified by a key in cache This is the implementation of the method declared in the parent class 
Stores multiple key value pairs in cache 
Stores a value identified by a key into cache if the cache does not contain this key This is the implementation of the method declared in the parent class 
Dumps a variable in terms of a string This method achieves the similar functionality as var dump and print r but is more robust when handling complex objects such as Yii controllers 
Exports a Closure instance 
Lists the caches that can be flushed 
Flushes given cache components 
Flushes all caches registered in the system 
Clears DB schema cache for a given connection component 
Notifies user that given caches are found and can be flushed 
Notifies user that given cache components were not found in the system 
Returns a value indicating whether the locator has the specified component definition or has instantiated the component This method may return different results depending on the value of check Instance 
Registers a set of component definitions in this locator 
 
Builds conjunction condition which consists of multiple independent ones It covers such operators as and and or 
Builds block condition which consists of a single condition It covers such operators as not 
Builds search condition for a particular attribute 
Builds an operator condition 
Initializes the DB connection component This method will initialize the db property to make sure it refers to a valid DB connection 
 
 
Class autoload loader 
Logs a debug message Trace messages are logged mainly for development purpose to see the execution work flow of some code This method will only log a message when the application is in debug mode 
Translates a message to the specified language 
Runs the widget 
Renders the summary text 
Renders the pager 
Renders the sorter 
 
 
Casts value after retrieving from the DBMS to PHP representation 
Returns entry script file path 
Sets the entry script file path The entry script file path can normally be determined based on the SCRIPT FILENAME SERVER variable However for some server configurations this may not be correct or feasible This setter is provided so that the entry script file path can be manually specified 
Parses date string into UNIX timestamp 
Formats a timestamp using the specified format 
Method builds the raw SQL from the expression that will not be additionally escaped or quoted 
Encrypts data using a cryptographic key Derives keys for encryption and authentication from the input key using HKDF and a random salt which is very fast relative to encrypt By Password The input key must be properly random use generate Random Key to generate keys The encrypted data includes a keyed message authentication code MAC so there is no need to hash input or output data 
Verifies and decrypts data encrypted with encrypt By Key 
Encrypts data 
Prefixes data with a keyed hash value so that it can later be detected if it is tampered There is no need to hash inputs or outputs of encrypt By Key or encrypt By Password as those methods perform the task 
Validates if the given data is tampered 
Generates specified number of random bytes Note that output may not be ASCII see generate Random String if you need a string 
Generates a random string of specified length The string generated matches A Za z and is transparent to URL encoding 
Generates a secure hash from a password and a random salt 
Verifies a password against a hash 
Performs string comparison using timing attack resistant approach 
Unmasks a token previously masked by mask Token 
 
 inheritdoc 
Get default value 
Responds to the OPTIONS request 
 
Normalizes route and makes it suitable for Url Manager Absolute routes are staying as is while relative routes are converted to absolute ones 
Creates a URL based on the given parameters 
Normalize URL by ensuring that it use specified scheme 
Returns the base URL of the current request param bool string scheme the URI scheme to use in the returned base URL 
Remembers the specified URL so that it can be later fetched back by previous 
Creates a URL by using the current route and the GET parameters 
Returns the asset manager instance 
Sets asset manager instance or configuration 
Combines and compresses the asset files according to the given configuration During the process new asset bundle configuration file will be created You should replace your original asset bundle configuration with this file in order to use compressed files 
Applies configuration from the given file to self instance 
Creates full list of source asset bundles 
Loads asset bundle dependencies recursively 
Builds output asset bundle 
Adjust dependencies between asset bundles in the way source bundles begin to depend on output ones 
Registers asset bundles including their dependencies 
Compresses given Java Script files and combines them into the single one 
Compresses given CSS files and combines them into the single one 
Combines Java Script files into a single one 
Combines CSS files into a single one 
Adjusts CSS content allowing URL references pointing to the original resources 
Returns canonicalized absolute pathname Unlike regular realpath this method does not expand symlinks and does not check path existence 
Composes trace info for bundle circular dependency 
Deletes bundle asset files which have been published from source Path 
Check guide for non printable characters that may break docs generation 
Equivalent for ord just for unicode 
 
Executes query and returns a single row of result 
 
Joins with the specified relations 
Returns the table name and the table alias for model Class 
Joins a parent query with a child query The current query object will be modified accordingly 
Sets the ON condition for a relational query The condition will be used in the ON part when Active Query join With is called Otherwise the condition will be used in the WHERE part of a query 
Adds an additional ON condition to the existing one The new condition and the existing one will be joined using the AND operator 
Adds an additional ON condition to the existing one The new condition and the existing one will be joined using the OR operator 
Define an alias for the table defined in model Class 
 
 
Tokenizes and returns a code type token 
Returns whether the longest common prefix equals to the SQL code of the same length at the current offset 
Returns a string of the given length starting with the specified offset 
Returns an index after the given string in the SQL code starting with the specified offset 
Determines whether there is a delimited string at the current offset and adds it to the token children 
Determines whether there is an operator at the current offset and adds it to the token children 
Determines a type of text in the buffer tokenizes it and adds it to the token children 
Converts a given asset file into a CSS or JS file 
Returns an instance of the requested class 
Registers a class definition with this container 
Registers a class definition with this container and marks the class as a singleton class 
Creates an instance of the specified class This method will resolve dependencies of the specified class instantiate them and inject them into the new instance of the specified class 
Merges the user specified constructor parameters with the ones registered via set 
Returns the dependencies of the specified class 
Resolves dependencies by replacing them with the actual object instances 
Resolve dependencies for a function 
Registers class definitions within this container 
Registers class definitions as singletons within this container by calling set Singleton 
Pares Pg SQL array encoded in string 
Parses Pg SQL encoded string 
 
 
 
Adds a validation rule to this model You can also directly manipulate validators to add or remove validation rules This method provides a shortcut 
Validates the given data with the specified validation rules This method will create a Dynamic Model instance populate it with the data to be validated create the specified validation rules and then validate the data using these rules 
Generates the data needed to determine if dependency is changed 
Executes the query according to method specification 
Method builds the raw SQL from the expression that will not be additionally escaped or quoted 
Oracle DBMS does not support more than parameters in IN condition This method splits long IN condition into series of smaller ones 
Method builds the raw SQL from the expression that will not be additionally escaped or quoted 
Builds values to be used in In Condition 
Builds SQL for IN condition 
Builds SQL for IN condition 
 
Iterates through specified rules and calls create Url for each of them 
Specifies the relations with which this query should be performed 
Converts found rows into model instances 
Finds records corresponding to one or multiple relations and populates them into the primary models 
Handles exception thrown during exception processing in handle Exception 
Handles HHVM execution errors such as warnings and notices 
Converts an exception into a string that has verbose information about the exception and its trace param Exception Error exception the exception being converted return string the string representation of the exception 
Method builds the raw SQL from the expression that will not be additionally escaped or quoted 
Enables query cache for this command 
Binds a parameter to the SQL statement to be executed 
Binds pending parameters that were registered via bind Value and bind Values Note that this method requires an active pdo Statement 
Binds a value to a parameter 
Executes the SQL statement and returns the value of the first column in the first row of data This method is best used when only a single value is needed for a query 
Creates an INSERT command 
Creates a batch INSERT command 
Creates a command to insert rows into a database table if they do not already exist matching unique constraints or update them if they do 
Creates an UPDATE command 
Creates a DELETE command 
Creates a SQL command for creating a new DB table 
Creates a SQL command for renaming a DB table 
Creates a SQL command for dropping a DB table 
Creates a SQL command for truncating a DB table 
Creates a SQL command for adding a new DB column 
Creates a SQL command for renaming a column 
Creates a SQL command for removing a primary key constraint to an existing table 
Creates a SQL command for adding a foreign key constraint to an existing table The method will properly quote the table and column names 
Creates a SQL command for creating a new index 
Creates a SQL command for adding an unique constraint to an existing table 
Creates a SQL command for adding a check constraint to an existing table 
Creates a SQL command for adding a default value constraint to an existing table 
Creates a SQL command for resetting the sequence value of a table s primary key The sequence will be reset such that the primary key of the next new row inserted will have the specified value or the maximum existing value 
Executes a db command resetting the sequence value of a table s primary key Reason for execute is that some databases Oracle need several queries to do so The sequence is reset such that the primary key of the next new row inserted will have the specified value or the maximum existing value 
Builds a SQL command for enabling or disabling integrity check 
Builds a SQL command for adding comment to column 
Builds a SQL command for adding comment to table 
Builds a SQL command for dropping comment from column 
Builds a SQL command for dropping comment from table 
Creates a SQL View 
Drops a SQL View 
Executes the SQL statement This method should only be used for executing non query SQL statement such as INSERT DELETE UPDATE SQLs No result set will be returned 
Returns the cache key for the query 
Refreshes table schema which was marked by require Table Schema Refresh 
Executes a prepared statement 
Resets command properties to their initial state 
This method is invoked right before an action is to be executed after all possible filters You may override this method to do last minute preparation for the action 
Denies the access of the user The default implementation will redirect the user to the login page if he is a guest if the user is already logged a HTTP exception will be thrown 
Initializes the Mutex component 
Acquires a lock by name 
Releases acquired lock This method will return false in case the lock was not found 
 
 
 
 
Uses query cache for the queries performed with the callable 
Disables query cache temporarily 
Establishes a DB connection It does nothing if a DB connection has already been established 
Initializes the DB connection This method is invoked right after the DB connection is established The default implementation turns on PDO ATTR EMULATE PREPARES if emulate Prepare is true and sets the database charset if it is not empty It then triggers an EVENT AFTER OPEN event 
Creates a command for execution 
Starts a transaction 
Executes callback provided in a transaction 
Processes a SQL statement by quoting table and column names that are enclosed within double brackets Tokens enclosed within double curly brackets are treated as table names while tokens enclosed within double square brackets are column names They will be quoted accordingly Also the percentage character at the beginning or ending of a table name will be replaced with table Prefix 
Returns the name of the DB driver Based on the the current dsn in case it was not set explicitly by an end user 
Returns the PDO instance for the currently active slave connection When enable Slaves is true one of the slaves will be used for read queries and its PDO instance will be returned by this method 
Returns the currently active slave connection If this method is called for the first time it will try to open a slave connection when enable Slaves is true 
Returns the currently active master connection If this method is called for the first time it will try to open a master connection 
Executes the provided callback by using the master connection 
Opens the connection to a server in the pool This method implements the load balancing among the given list of the servers Connections will be tried in sequential order 
Renders all data models 
Calls before Item closure returns execution result If before Item is not a closure null will be returned 
Calls after Item closure returns execution result If after Item is not a closure null will be returned 
Returns parent directory s path This method is similar to dirname except that it will treat both and as directory separators independent of the operating system 
Check if given string starts with specified substring Binary and multibyte safe 
Returns string representation of number value with replaced commas to dots if decimal point of current locale is comma 
Returns the validator declared in rule 
Creates validator object based on the validation rule specified in rule 
 
Formats the specified response 
Generates the data needed to determine if dependency has been changed This method returns the value of the global state 
Acquires lock by given name 
Releases lock by given name 
Checks whether a specified key exists in the cache This can be faster than getting the value from the cache if the data is big Note that this method does not check whether the dependency associated with the cached data if there is any has changed So a call to get may return false while exists returns true 
Removes the expired data values 
 
 
The method checks whether the IP address with specified CIDR is allowed according to the ranges list 
Parses IP address range for the negation with NEGATION CHAR 
Prepares array to fill in ranges 
 
Updates an existing model 
 
Returns the column name to hold the version value as defined in yii db Base Active Record optimistic Lock optimistic Lock 
 inheritdoc 
Upgrades the version value by one and stores it to database 
Builds a SQL statement for creating a new index 
Builds a SQL statement for dropping an index 
Builds a SQL statement for renaming a DB table 
Builds a SQL statement for changing the definition of a column 
 
 
Normalizes data to be saved into the table performing extra preparations and type converting if necessary 
Returns the zero based current page number 
Sets the current page number 
Returns the number of items per page By default this method will try to determine the page size by page Size Param in params If the page size cannot be determined this way default Page Size will be returned 
Returns a whole set of links for navigating to the first last next and previous pages 
Returns the value of the specified query parameter This method returns the named parameter value from params Null is returned if the value does not exist 
 
Composes default value for search Attribute Types from the search Model validation rules 
Detect attribute type from given validator 
Sets the list of error messages responding to invalid filter structure in format error Key message Message may contain placeholders that will be populated depending on the message context For each message a filter placeholder is available referring to the label for filter Attribute Name attribute 
Returns default values for error Messages 
Parses content of the message from error Messages specified by message key 
Validates filter condition 
Validates conjunction condition that consists of multiple independent ones This covers such operators as and and or 
Validates search condition for a particular attribute 
Validates operator condition 
Validates attribute value in the scope of model 
Normalizes filter value replacing raw keys according to filter Controls and attribute Map 
Normalizes complex filter recursively 
 
 
 
Merge current rules config with provided list of rules 
 
 
Returns a currency symbol 
Returns the value for the current attributes This method is called by evaluate Attributes Its return value will be assigned to the attributes corresponding to the triggering event 
 
 
Sorts the data models according to the given sort definition 
 
 
 
 
 
 
 
 
 
Recursively finds all children and grand children of the specified item 
 
 
 
 
 
 
Checks whether there is a loop in the authorization item hierarchy 
 
 
 
Removes all auth items of the specified type 
 
Initializes Url Manager 
Adds additional URL rules 
Builds URL rule objects from the given rule declarations 
Stores built Rules to cache using rules Declaration as a part of cache key 
Provides the built URL rules that are associated with the rule Declarations from cache 
Parses the user request 
Creates a URL using the given route and query parameters 
Returns the value indicating whether result of create Url of rule should be cached in internal cache 
Get URL from internal cache if exists 
Creates an absolute URL using the given route and query parameters 
Returns the base URL that is used by create Url to prepend to created URLs It defaults to Request base Url This is mainly used when enable Pretty Url is true and show Script Name is false 
Sets the base URL that is used by create Url to prepend to created URLs This is mainly used when enable Pretty Url is true and show Script Name is false 
Returns the entry script URL that is used by create Url to prepend to created URLs It defaults to Request script Url This is mainly used when enable Pretty Url is false or show Script Name is true 
Returns the host info that is used by create Absolute Url to prepend to created URLs 
 
 
Returns an action ID by converting Action unique Id into an ID relative to the module 
Returns a value indicating whether the filter is active for the given action 
Creates view instance from given configuration 
Creates a new message instance and optionally composes its body content via view rendering 
Creates a new message instance The newly created instance will be initialized with the configuration specified by message Config If the configuration does not specify a class the message Class will be used as the class of the new message instance 
Sends multiple messages at once 
Saves the message as a file under file Transport Path 
This method is invoked right before mail send You may override this method to do last minute preparation for the message If you override this method please make sure you call the parent implementation first 
This method is invoked right after mail was send You may override this method to do some postprocessing or logging based on mail send status If you override this method please make sure you call the parent implementation first 
 
Install all extensions and advanced basic app 
Runs a command in all extension and application directories 
This command installs a project template in the apps directory and links the framework and extensions 
This command installs an extension in the extensions directory and links the framework and other extensions 
 
Remove all symlinks in the vendor subdirectory of the directory specified 
Creates symlinks to framework and extension sources for the application param string dir application directory param string base Yii sources base directory 
Get a list of subdirectories for directory specified param string dir directory to read 
Finds linkable applications 
Parses a HTTP request body 
 
 
 
 
Set default roles 
Returns default Roles as array of Role objects 
Creates a primary key column 
Creates a big primary key column 
Creates a char column 
Creates a string column 
Creates a tinyint column If tinyint is not supported by the DBMS smallint will be used 
Creates a smallint column 
Creates an integer column 
Creates a bigint column 
Creates a float column 
Creates a double column 
Creates a decimal column 
Creates a datetime column 
Creates a timestamp column 
Creates a time column 
Creates a binary column 
Creates a money column 
Creates a JSON column 
 
 
 
Builds the ORDER BY LIMIT OFFSET clauses for SQL SERVER or newer 
Builds the ORDER BY LIMIT OFFSET clauses for SQL SERVER to 
 
 
Builds a SQL statement for enabling or disabling integrity check 
 
Runs a request specified in terms of a route The route can be either an ID of an action within this controller or a complete route consisting of module IDs controller ID and action ID If the route starts with a slash the parsing of the route will start from the application otherwise it will start from the parent module of this controller 
Creates an action based on the given action ID The method first checks if the action ID has been declared in actions If so it will use the configuration declared there to create the action object If not it will look for a controller method whose name is in the format of action Xyz where xyz is the action ID If found an Inline Action representing that method will be created and returned 
Returns all ancestor modules of this controller The first module in the array is the outermost one i e the application instance while the last is the innermost one 
Returns the unique ID of the controller 
Renders a view and applies layout if available 
Returns the directory containing view files for this controller The default implementation returns the directory named as controller id under the module s view Path directory 
Retrieve a database connection attribute 
Attaches an event handler to a class level event 
Detaches an event handler from a class level event 
 
 
Parse the command line migration fields return array parse result with following fields 
Adds default primary key to fields list if there s no primary key specified 
Creates a new model 
 
Resolves the table name and schema name if any 
 
Collects the foreign key column details for the given table 
Gets information about given table unique indexes 
Collects the metadata of table columns 
 
 
 
 
 
Evaluates the attributes values and assigns it to the current attributes 
Returns the value for the current attributes This method is called by evaluate Attributes Its return value will be assigned to the target attribute corresponding to the triggering event 
Converts the model into an array 
Extracts the root field names from nested fields Nested fields are separated with dots e g item id The previous example would extract item 
Extract nested fields from a fields collection for a given root field Nested fields are separated with dots e g item id The previous example would extract id 
Determines which fields can be returned by to Array This method will first extract the root fields from the given fields Then it will check the requested root fields against those declared in fields and extra Fields to determine which fields can be returned 
Initializes the application component This method overrides parent implementation by loading the authorization data from PHP script 
 
Performs access check for the specified user This method is internally called by check Access 
Checks whether there is a loop in the authorization item hierarchy 
 
 
 
 
 
 
 
 
 
Returns all permissions that are directly assigned to user 
Returns all permissions that the user inherits from the roles assigned to him 
 
 
 
Saves the authorization data to a PHP script file 
Saves items data into persistent storage 
Saves assignments data into persistent storage 
Saves rules data into persistent storage 
 
Begins fragment caching Prevents owner widget from execution if its contents can be retrieved from the cache 
Outputs widget contents and ends fragment caching 
Initializes widget event handlers 
Returns a fragment cache widget configuration array 
 
This method is invoked right before an action is to be executed after all possible filters You may override this method to do last minute preparation for the action 
Caches response properties 
 
Creates the CAPTCHA action object from the route specified by captcha Action 
 
Marks column as unsigned 
Builds the length precision part of the column 
Builds the default value specification for the column 
Returns the category of the column type 
Returns the complete column definition from input format 
Loads messages from a PO file 
Saves messages to a PO file 
 
 
Checks whether the new slug generation is needed This method is called by get Value to check whether the new slug generation is needed You may override it to customize checking 
This method is called by get Value when ensure Unique is true to generate the unique slug Calls generate Unique Slug until generated slug is unique and returns it 
Checks if given slug value is unique 
Adds the rate limit headers to the response 
Initializes the action 
Runs the action 
Validates the input to see if it matches the generated code 
Renders the CAPTCHA image 
Renders the CAPTCHA image based on the code using GD library 
Renders the CAPTCHA image based on the code using Image Magick library 
Initializes this component 
Translates the specified message If the message is not found a EVENT MISSING TRANSLATION missing Translation event will be triggered If there is an event handler it may provide a Missing Translation Event translated Message fallback translation If no fallback translation is provided this method will return false 
Returns a child token at the specified offset This method is required by the SPL Array Access interface It is implicitly called when you use something like child token offset 
Adds a child token to the token This method is required by the SPL Array Access interface It is implicitly called when you use something like token offset child 
Removes a child token at the specified offset This method is required by the SPL Array Access interface It is implicitly called when you use something like unset token offset 
Sets a list of child tokens 
Returns whether the token represents a collection of tokens 
Returns the SQL code representing the token 
Returns whether this token including its children matches the specified pattern SQL code 
Tests the given token to match the specified pattern token 
Updates token SQL code start and end offsets based on its children 
 
 
Splits the specified SQL code into individual SQL statements and returns them or false if there s a single statement 
Returns named bindings used in the specified statement token 
Initializes the application component 
Returns the identity object associated with the currently logged in user When enable Session is true this method may attempt to read the user s authentication data stored in session and reconstruct the corresponding identity object if it has not done so before 
Sets the user identity object 
Logs in a user 
Regenerates CSRF token 
This method is called before logging in a user The default implementation will trigger the EVENT BEFORE LOGIN event If you override this method make sure you call the parent implementation so that the event is triggered 
This method is called after the user is successfully logged in The default implementation will trigger the EVENT AFTER LOGIN event If you override this method make sure you call the parent implementation so that the event is triggered 
This method is invoked when calling logout to log out a user The default implementation will trigger the EVENT BEFORE LOGOUT event If you override this method make sure you call the parent implementation so that the event is triggered 
Removes the identity cookie This method is used when enable Auto Login is true 
Checks if the user can perform the operation as specified by the given permission 
Checks if the Accept header contains a content type that allows redirection to the login page The login page is assumed to serve text html or application xhtml xml by default You can change acceptable content types by modifying acceptable Redirect Types property 
Returns if error is one of fatal type 
Retrieve an external iterator 
Creates a configuration file for the extract command using command line options specified 
Creates a configuration file template for the extract command 
Extracts messages to be translated from source code 
Saves messages to database 
Extracts messages from a file 
Extracts messages from a parsed PHP tokens list 
The method checks whether the category is ignored according to ignore Categories array 
Writes messages into PO file 
 
Builds a SQL statement for renaming a column 
Creates a SQL statement for resetting the sequence value of a table s primary key The sequence will be reset such that the primary key of the next new row inserted will have the specified value or 
 
 
Checks the ability to use fractional seconds 
Returns the map for default time type If the version of My SQL is lower than then the types will be without fractional seconds otherwise with fractional seconds 
Stores a value identified by a key into cache if the cache does not contain this key This is the implementation of the method declared in the parent class 
Initializes the widget 
Renders the widget 
Checks if there is graphic extension available to generate CAPTCHA images This method will check the existence of Image Magick and GD extensions 
 
Returns the cookie with the specified name 
Returns the value of the named cookie 
Returns whether there is a cookie with the specified name Note that if a cookie is marked for deletion from browser this method will return false 
Adds a cookie to the collection If there is already a cookie with the same name in the collection it will be removed first 
Removes a cookie If remove From Browser is true the cookie will be removed from the browser In this case a cookie with outdated expiry will be added to the collection 
Creates a report about documentation updates since last update of same named translations 
This method is invoked right before an action is to be executed after all possible filters You may override this method to do last minute preparation for the action 
Validates if the HTTP cache contains valid content If both Last Modified and ETag are null returns false 
Generates an ETag from the given seed string 
Returns a list of scenarios and the corresponding active attributes 
Returns the form name that this model class should use 
Returns all the validators declared in rules 
Returns the validators applicable to the current scenario 
Returns the text hint for the specified attribute 
Returns the first error of the specified attribute 
Returns the errors for all attributes as a one dimensional array 
Adds a list of errors 
Removes errors for all attributes or a single attribute 
Returns attribute values 
Returns the attribute names that are subject to validation in the current scenario 
Populates the model with input data 
Populates a set of models with the data from end user This method is mainly used to collect tabular data input The data to be loaded for each model is data form Name index where form Name refers to the value of form Name and index the index of the model in the models array If form Name is empty data index will be used to populate each model The data being populated to each model is subject to the safety check by set Attributes 
Invalidates all of the cached data items that are associated with any of the specified tags 
RSA 
RSA 
 
 
 
 
rc 
 param string way see Config 
 
RSA 
RSA 
 
 
 
 
 param array ret 
 
 
 
 
 
 param array data 
 
 
 h 
 
 
 
 
 
 
 param string channel see Config 
 
 
 
 
 
 
 
 UTF 
 
 rsa param string key param string type 
 
 
 
 
 
 param string channel see Config 
 
 APP param array ret 
 
 xml 
 xml array 
 
 param array data 
 param string channel see Config 
 
 param string channel param array config param array metadata 
 
 
 key 
 key 
 
 key key param array arr param key param string default 
 
 
 
 
 
 
 
 
 true false param Pay Notify Interface notify param array notify Data 
 
 
 param string channel param array config param array metadata 
 
 
 
 
 
 
 
 
 
 
 
 
 param string channel see Config 
 
 
 
 
 
 
 
 param string channel see Config 
 
 
 
 
 param Php Token input param string ignored Tags 
Returns the index of the last token that is part of the annotation at the given index 
Returns the index of the close brace that matches the open brace at the given index 
Inserts a token at the given index 
 inheritdoc 
 inheritdoc 
 param int index param int direction 
 param int index param string string type param int direction 
Make sure of line breaks prefixing namespace is within given range 
 
 
 
Remove spaces from token at a given index 
 
 
Find the start of a reference 
Clear tokens in the given range unless they are comments 
Should the given tags be kept together or kept apart 
 
 
 param Tokens tokens param int index index of the first token on the line to indent 
 param int index position of the T OBJECT OPERATOR token param Tokens tokens 
 param Tokens tokens param int index index of the indentation token 
 param Tokens tokens param int start index of first meaningful token on previous line param int end index of last token on previous line 
 
Determine whether there is a void return annotation in the function s PHPDoc comment 
Determine whether the function already has a return type hint 
Determine whether the function has a void return 
Find all the return annotations in the function s PHPDoc comment 
 
 
 
 
Parse a string that contains a namespace into tokens 
 
 
 
 param Tokens tokens param int start Index param int end Index 
 param Tokens tokens param int variable Index 
 param Tokens tokens param int index Index of 
 
 
 
 
 
This method is used for sorting the uses in a namespace 
This method is used for sorting the uses statements in a namespace by length 
 param int uses param Tokens tokens 
 param array indexes 
 
 
 param Tokens tokens param int index 
 param Annotation annotation 
 param Tokens tokens 
 
 
 
 
 
 param Tokens tokens param int index 
 param array configuration 
Look for group of placeholders and provide vertical alignment 
 
 
 
 
 param Tokens tokens param int start param int end 
 param Tokens tokens param int index The index of the first token of the type hint 
 param Annotation annotation param array info param array string string symbol Short Names 
Normalizes types to make them comparable 
 
 
 
 
 
 
 param string line param bool match Comment Only 
 param int vertical Align Indent param int left Align Indent 
 param array items param int index 
 
 
 
Fix spacing below an element of a class interface or trait 
Fix spacing below a method of a class or trait 
Fix spacing above an element of a class interface or trait 
 param Tokens tokens param int white Space Start Index param int white Space End Index 
 param Tokens tokens param int comment Index 
Replaces class keyword namespace by namespace 
 param false string class Import param string class String 
 param Tokens tokens 
 param Tokens tokens param array use Indexes 
 param Tokens tokens param int start Index param int end Index 
 
 
 param Tokens tokens param int index 
 param Tokens tokens param int index 
 param Tokens tokens param int new Line Token Index param array array int annotation Positions Pairs of begin and end indexes of main annotations 
 
 
 
 
Find the index for the new line Return the given index when there s no new line 
Checks if the semicolon closes a chained call and returns the whitespace of the first call at index i e it will return the whitespace marked with in the example underneath 
 param int index 
 
 
Remove return void or return null annotations 
 
Get the sequence of meaningful tokens and returns a new Tokens instance 
Check if the requested token is an operator computed before the ternary operator along with the isset 
Check if the isset content may change if called multiple times 
Method to insert space after comma and remove space before comma 
 
 
 
Fix arguments spacing for given function 
 param Tokens tokens param int start Parenthesis Index param int end Parenthesis Index 
 param Tokens tokens param int index 
Method to insert newline after comma or opening parenthesis 
Method to insert space after comma and remove space before comma 
Check if last item of current line is a comment 
 
Override backtick code with corresponding double quoted string 
 
 
 
 param Tokens tokens param int i 
 param Tokens tokens param int index 
 param Tokens tokens param int index 
 param Tokens tokens param int index 
 param Doc Block doc Block param Tokens tokens param int doc Block Index 
 param Doc Block doc param Tokens tokens param int doc Block Index 
Take a one line doc block and turn it into a multi line doc block 
 param Line line 
 
 param Tokens tokens param int indices 
 
 
 
 
 
 
 
 
Cleanup a whitespace token 
 param Tokens tokens param int index 
 
Fix semicolon after closing curly brace if needed 
 
 
 param string function Name 
 param Tokens tokens param int index 
 
 
 
Find a previous call to unset directly before the index 
 param Tokens tokens param int start Index previous of the first token to move param int end Index of the last token to move param int to Upper boundary index 
 
 
 
 
 
 
 
Remove white line s after the index of a block type but only if the block is not on one line 
 
 
 
 
 
 
 
 
 param Tokens tokens param int index T CLASS index 
Get the tag name 
Set the tag name 
 param Tokens tokens param int index 
 param Tokens tokens param int method Index 
 param Tokens tokens param int method Index 
 
 
 
 param Tokens tokens param int class Open Index param array class Extends Info 
 param Tokens tokens param int class Open Index param array class Implements Info 
 param Tokens tokens param array class Def Info 
 param Tokens tokens param int classy Index 
 param Tokens tokens param int start Index param string label 
 
 
 
 
 
 
 param Tokens tokens param int index 
Check if comment at given index precedes structural element 
Return array of indices that are part of a comment started at given index 
 see https github com php Documentor fig standards blob master proposed phpdoc md definitions 
Checks control structures for foreach if switch while for correct docblock usage 
Checks variable assignments through list print etc calls for correct docblock usage 
Checks variable assignments for correct docblock usage 
 param string content 
 
 param Tokens tokens param int start Index param int end Index 
 param string name param bool is Custom 
 
 
 param string types 
 param string types 
 
Check if token is a part of a string 
 
 
 
 param Doc Block doc param int after 
 param Doc Block doc 
 param Doc Block doc param int from 
 
 
 
 
 
This method will resolve the short Name of a FQCN if possible or otherwise return the inserted type name E g use Foo Bar Bar 
 param Tokens tokens 
 param Tokens tokens 
 
Returns true if there is a possible reference to this within the given tokens index range 
 
 
 param bool is Decorated Output param array fix Result 
 param int time param int memory param bool is Dry Run 
Process an exception that occurred 
 
 
 param Tokens tokens param int keyword Index param int compared Index 
 
Fix constructor within a class if possible 
Fix calls to the parent constructor within a class 
Fix a particular infinite recursion issue happening when the parent class has construct and the child has only a PHP constructor that calls the parent constructor as this construct 
Generate the sequence of tokens necessary for the body of a wrapper method that simply calls this method args with the same arguments as its own signature 
Find a function or method matching a given name within certain bounds 
 
 
 param Tokens tokens param int index 
 param Tokens tokens param int index param int end Index 
 
 param Fixer Option Interface option 
 
 param Tokens tokens param int index 
 
 
 
Fixes whitespaces around braces of a function y call 
Gets the token kinds which can work as function calls 
 
 
 
 
 param Tokens tokens param int index 
 
 
 
 
 
 param Tokens tokens param int function Name Index param int open Parenthesis Index param int close Parenthesis Index param array int int arguments 
 param Tokens tokens param int argument Start Index param int argument End Index 
 
 
 
 
 
 
 
 
 
 
Looks up Tokens sequence for suitable candidates and delivers boundaries information which can be supplied by other methods in this abstract class 
 
 param Tokens tokens param int start param int end 
 
Clear cache one position or all of them 
Detect type of block 
Create token collection from array 
Create token collection directly from code 
Set new size of collection 
Unset collection item 
Set collection item 
Clear internal flag if collection was changed and flag for all collection s items 
Clear empty tokens 
Ensure that on given index is a whitespace with given kind 
 param int type type of block one of BLOCK TYPE param int search Index index of opening brace param bool find End if method should find block s end default true otherwise method find block s start 
 param array int possible Kind kind or array of kind param int start optional offset param null int end optional limit 
Generate code from tokens between given indexes 
Get index for closest next token of given kind 
Get index for closest sibling token which is non whitespace 
Get index for closest previous token of given kind This method is shorthand for get Token Of Kind Sibling method 
Get index for closest sibling token of given kind 
Get index for closest sibling token not of given kind 
Get index for closest sibling token that is not a whitespace or comment 
Get index for closest sibling token which is not empty 
Find a sequence of meaningful tokens and returns the array of their locations 
Insert instances of Token inside collection 
Check if collection was change collection itself like insert new tokens or any of collection s elements 
 param int index 
Override token at given index and register it 
Override tokens at given range 
Set code Clear all current content and replace it by new Token items generated from code directly 
Check if all token kinds given as argument are found 
 param int string token Kind 
Clear tokens in the given range 
Checks for monolithic PHP code 
 param int start start index param int end end index 
 param int type type of block one of BLOCK TYPE param int search Index index of starting brace param bool find End if method should find block s end or start 
Get cache value for given key 
Change code hash 
Register token as found 
 param array string Token token token prototype 
 
 
 
 
 
 
Method to fix spacing in array declaration 
Method to move index over the non array elements like function calls or function declarations 
 
 
Returns whether the token type is one of the given types 
 
 param Tokens tokens param int index 
Return the first and last token index of the previous block 
 param Tokens tokens param int index Index of the token to check param int lower Limit Index Lower limit index Since the token to check will always be in a conditional we must stop checking at this index 
For internal use only as it is not perfect 
 param string path path to file 
Create process that lint PHP code 
 
 
 
 
 param DOMDocument dom param string applied Fixer 
 
 
 
Use syntax long short 
 
 param string diff param string line Template 
Returns help copy suitable for console output 
 param mixed value 
Returns the allowed values of the given option that can be converted to a string 
Wraps a string to the given number of characters ignoring style tags 
 
 
 
 
 
Method to trim leading trailing whitespace within single line arrays 
 
 
 
 
 
 
 
 
 
Get this docblock s annotations 
 param int pos 
Get specific types of annotations only 
 
 
Transforms the heredoc start token to nowdoc notation 
 
 
 
 
 
 
 
 
 param string function Names 
 
 
 
 
 
 
 
 
 param Tokens tokens param int structure Token Index 
 param Tokens tokens param int parenthesis End Index 
 param Tokens tokens param int start Parenthesis Index param int end Parenthesis Index 
Returns whether the token at given index is a comment whose indentation can be fixed 
 param Tokens tokens param int index param bool after 
 
Decide whether or not skip the fix for given class 
 
 
 param Php Tokens tokens param int index 
 
 param string json 
 
 
 
 
 
 
 param Tokens tokens param int index 
 param Tokens tokens param int index 
 param Fixer Interface fixers 
 param Fixer Interface fixer param bool is Custom 
Apply Rule Set on fixers to filter out all unwanted fixers 
 param Fixer Interface fixer 
 param array string string fixer Conflicts 
 
 
 param Tokens tokens param int index 
 
 
 
 param Tokens tokens param int function Name Index 
 
 
 param string name name of set 
Resolve input set into group of rules 
Resolve set rules as part of another set 
 
Handle both extremes of the control structures e g if or endif 
Handle the else 
Handle the elsif cases 
Add opening and closing braces to the else and elseif 
 
 param Tokens tokens param int index 
 param Tokens tokens param int index 
 
Fix the types at the given line 
 param string types 
Prepare the type and normalize it 
 
 
 
Check if token under given index is use statement for lambda function 
 
Get the delimiter that would require the least escaping in a regular expression 
 
 
 
 
Cleanup a whitespace token 
Get name for custom token 
 
 
 
 
 
Clear the return statement located at a given index 
Does the return statement located at a given index need fixing 
Is the return within a function with a non void or nullable return type 
Should we clear the specific token 
 param string candidate param string target 
Get the types associated with this annotation 
Set the types associated with this annotation 
Get the normalized types associated with this annotation so they can easily be compared 
Get the current types content 
Replace all else if T ELSE T IF with elseif T ELSEIF 
Count amount of parameters in a function method reference 
Returns start and end token indexes of arguments 
 param Tokens tokens param int argument Start param int argument End 
 
Finds the end of the right hand side of the comparison at the given index 
Finds the start of the left hand side of the comparison at the given index 
 param Tokens tokens 
Fixes the comparison at the given index 
 param Tokens tokens param int start param int end 
 param Tokens tokens param int index param bool yoda 
 param Tokens tokens param int index 
 param Tokens tokens param int index 
 param Tokens tokens param int index param int end 
Checks whether the given token has a lower precedence than T IS EQUAL or T IS IDENTICAL 
Checks whether the tokens between the given start and end describe a variable 
Get indexes of methods and properties in classy code classes interfaces and traits 
Get indexes of namespace uses 
Check if the array at index is multiline 
Returns the attributes of the method under the given index 
Check if there is an anonymous class under given index 
Check if the function under given index is a lambda 
Check if the T STRING under given index is a constant invocation 
Checks if there is an unary successor operator under given index 
Checks if there is an unary predecessor operator under given index 
Checks if there is a binary operator under given index 
Check if T WHILE token at given index is do while syntax and not while 
Find classy elements 
 
 param Tokens tokens param int index Index of dirname param null int first Argument End Index Index of last token of first argument of dirname call 
 
 
 
 param Tokens tokens param int start Index 
 param Tokens tokens param int index 
 param Tokens tokens param int index 
 param array elements 
 param string needle 
 
 param string content 
 
Check if token under given index is short array opening 
 param Tokens tokens param int index 
 param string flags 
 
 param Tokens tokens param int index index of token 
 
 
Enclose the given text in a comment block 
 param Tokens tokens param int header New Index 
Find the index where the header comment must be inserted 
 param Tokens tokens param int index Start param int index End 
Method to fix spacing in array declaration 
 
 
Append a blank docblock line to this line s contents 
 
 
 param DOMDocument dom param array fix Result 
 param DOMDocument dom param array fix Result 
 param float time param DOMDocument dom 
 param float memory param DOMDocument dom 
 
 
Transform closing for T CURLY OPEN into CT T CURLY CLOSE 
 
 param Tokens tokens param int index param string method 
 param Tokens tokens param int index param string method 
 param array string string map param Tokens tokens param int index param string method 
 
 
 
 
 
 param Tokens tokens param int index param int class Open Index 
 
Move all param annotations in before throws and return annotations 
Move all return annotations after param and throws annotations 
 param bool is Dry Run param bool has Changed Files param bool has Invalid Errors param bool has Exception Errors 
 
 
 
 
 
 param string original Class Name 
Calculate a bitmask for given constant names 
Converts a camel cased string to an snake cased string 
Calculate the trailing whitespace 
Perform stable sorting using provided comparison function 
Sort fixers by their priorities 
Join names in natural language wrapped in backticks e g a b and c 
Get the line index of the line containing the end of the short description if present 
 
 
Look for group of placeholders and provide vertical alignment 
 
 
Make sure the description is separated from the annotations 
Make sure the annotations are correctly separated 
Force the given annotations to immediately follow each other 
Force the given annotations to have one empty line between each other 
Returns errors reported during linting before fixing 
Returns errors reported during fixing 
Returns errors reported during linting after fixing 
 
 
 
 param Tokens tokens param int index 
 
 
 
 
 
 
 
 param Tokens tokens param int index 
 param Tokens tokens param string group Prefix param int group Open Index param int group Close Index param string comment 
 
 param Tokens tokens param int function Index token index of T FUNCTION param int function Open Index token index of the opening brace token of the function param int function Close Index token index of the closing brace token of the function 
 param Tokens tokens param int assign Var Index param int assign Var Operator Index param int return Index param int return Var End Index 
 param Token token 
 
 param string mode 
Replace occurrences of the name of the classy element by self if possible 
 
 
 
Return the start index end index and a flag stating if the comment block is empty 
 param Tokens tokens param int white Start param int white End 
 param string content 
 
 
 
 param Tokens tokens param int index of T ISSET 
 param Tokens tokens param int indexes 
 
 
 param Tokens tokens param int index 
 param Tokens tokens param int index 
 param Tokens tokens param int index 
 
 
 param Token token 
 param Tokens tokens param int position 
 param Tokens tokens param int position 
 param Tokens tokens param int position 
 param string pattern param string subject param null string matches param int flags param int offset 
 param string pattern param string subject param null string matches param int flags param int offset 
 param string string pattern param string string replacement param string string subject param int limit param null int count 
 param string string pattern param callable callback param string string subject param int limit param null int count 
 param string pattern param string subject param int limit param int flags 
 param string string pattern 
 
 param string file Path 
 
 
 param Tokens tokens param int index 
 param Tokens tokens param int class Index param int class Open Index 
 param Tokens tokens param int class Index param int class Open Index param int class Close Index 
 
 
 
 param Reporter Interface reporter 
 param string format 
Removes a file from shutdown removal 
Removes attached files 
 
 
 
 
 
 
Transform given Tokens collection through all Transformer classes 
 
 
 param Tokens tokens param int index 
 
 
 
 
 
 
Clear token at given index 
Clear internal flag if token was changed 
Check if token is equals to given one 
Check if token is equals to one of given 
A helper method used to find out whether or not a certain input token has to be case sensitively matched 
Get token s name 
Generate array containing all keywords that exists in PHP version in use 
Check if token is empty e g because of clearing 
Check if token is one of given kind 
Check if token is a native PHP constant true false or null 
Check if token is whitespace 
Override token 
 param string content 
 param null string options JSON encode option 
 param string token Names 
 
 
 
 
 
 
Remove tokens part of an else statement if not empty i e no meaningful tokens inside 
 
Returns path 
 throws Invalid Configuration Exception 
Returns dry run flag 
Compute file candidates for config file 
Compute rules 
 param array rules 
Apply path on config instance 
Set option that will be resolved 
 param string option Name 
Configure the validator instance 
Handle an incoming request to ensure it is valid 
Execute the job 
Check if scripttag is in the list 
Gets sets the current shop 
Gets an API instance 
Ensures shop domain meets the specs 
HMAC creation helper 
Bootstrap the application services 
Register the application services 
Activates the usage charge 
Saves the usage charge to the database 
Authenticating a shop 
Determines where to redirect after successfull auth 
Gets the charge s data from Shopify 
Checks if the charge is currently in trial 
Returns the remaining trial days 
Returns the remaining trial days from cancellation date 
Cancels this charge 
Run the migrations 
Checks if a shop has paid for access 
Handles an incoming webhook 
Builds the authentication URL for a shop 
Post process actions after authentication is done 
Dispatches the job to install webhooks 
Dispatches the job to install scripttags 
Dispatches the after authenticate job if any 
Run the migrations 
Reverse the migrations 
Execute the job 
Clean the shop data on uninstall 
Cancels a recurring or one time charge 
Determines the type of access 
Sets the Shopify domain to session expire on close must be set to avoid issue of cookies being deleted too early 
Stores the access token and user if any Uses database for acess token if it was an offline authentication 
Gets the access token in use 
Forgets anything in session 
Listen to the shop creating event 
Run the migrations 
Reverse the migrations 
Handle an incoming request to ensure webhook is valid 
Configure the validator instance 
Run the migrations 
Reverse the migrations 
Gets the webhooks present in the shop 
Check if webhook is in the shop by address 
Creates webhooks if they do not exist 
Deletes webhooks in the shop tied to the app 
Execute the console command 
Converts the job class name into a URL endpoint 
Returns the plan type as a string for API 
Handle an incoming request 
Checks we have a valid shop 
Come back with a response 
Creates or returns an instance of API for the shop 
Gets the last single or recurring charge for the shop 
Redirects to billing screen for Shopify 
Processes the response from the customer 
Allows for setting a usage charge 
Run the migrations 
Gets the charge information for a previously inited charge 
Gets the confirmation URL to redirect the customer to This URL sends them to Shopify s billing page 
Returns the charge params sent with the post request 
Activates a plan to the shop 
Cancels the current charge for the shop saves the new charge 
Primary method for query validation See class description for details 
Returns all global validation rules 
This uses a specialized visitor which runs multiple visitors in parallel while maintaining the visitor skip and break API 
Returns global validation rule by name Standard rules are named by class name so example usage for such rules 
Utility which determines if a value literal node is valid for an input type 
 param mixed type 
 param mixed type 
 param bool recurse 
 param mixed value param string path param string null null Fence 
Given an ast node returns its string description 
 return Type Input Type 
 param string Named Type Node ref 
 param string type Name param Named Type Node null type Node 
 param Object Type Definition Node Interface Type Definition Node Enum Type Definition Node Scalar Type Definition Node Input Object Type Definition Node Union Type Definition Node def 
Given a collection of directives returns the string value for the deprecation reason 
 param Object Type Definition Node Interface Type Definition Node Enum Type Extension Node Scalar Type Definition Node Input Object Type Definition Node def param mixed config 
 param Type Node List Type Node Non Null Type Node type Node 
 param Type Node List Type Node Non Null Type Node input Type Node 
Whether a offset exists 
Offset to retrieve 
Offset to set 
Offset to unset 
Returns array of all types in this schema Keys of this array represent type names values are instances of corresponding type definitions 
Returns type by it s name 
 param string type Name 
Returns all possible concrete types for given abstract type implementations for interfaces and members of union type for unions 
Returns true if object type is concrete type of given abstract type implementation for interfaces and members of union type for unions 
Returns instance of directive by name 
Validates schema 
Validates schema 
Provided two types return true if the types are equal invariant 
Provided a type and a super type return true if the first type is either equal or a subset of the second super type covariant 
Provided two composite types determine if they overlap Two composite types overlap when the Sets of possible concrete types for each intersect 
 param mixed offset 
 param int offset param int length param mixed replacement 
 param Node List Node list 
Visit the AST see class description for details 
 param callable visitors 
Creates a new visitor instance which maintains a provided Type Info instance along with visiting visitor 
 param callable null visitor param string kind param bool is Leaving 
Parses HTTP request using PHP globals and returns Graph QL Operation Params contained in this request For batched requests it returns an array of Operation Params 
Parses normalized request params and returns instance of Operation Params or array of Operation Params in case of batch operation 
Checks validity of Operation Params extracted from HTTP request and returns an array of errors if params are invalid or empty array when params are valid 
Executes Graph QL operation with given server configuration and returns execution result or promise when promise adapter is different from Sync Promise Adapter 
Executes batched Graph QL operations with shared promise queue thus effectively batching deferreds promises of all queries at once 
 param bool is Batch 
 return mixed 
 param string operation Type 
 param string operation Type 
 param string operation Type 
Send response using standard PHP header and echo 
 param Execution Result mixed result 
Converts PSR request to Operation Params 
Converts query execution result to PSR response 
 param string Node List Location Node Node Node List Location value 
 param bool recursive 
 param Node value Node param mixed null variables 
Resolves concrete Object Type for given object value 
 param object obj param mixed vars param string required Keys 
 param mixed Traversable traversable 
 param mixed Traversable traversable 
 param mixed Traversable traversable 
 param mixed Traversable traversable 
 param mixed Traversable traversable 
Splits original traversable to several arrays with keys equal to key Fn return 
 param mixed Traversable traversable 
 param mixed traversable 
 param mixed var 
 param Type mixed var 
UTF compatible chr 
UTF compatible ord 
Returns UTF char code at given positing of the string 
 param int null code 
Returns an Error if a name is invalid 
Wraps original callable with PHP error handling using set error handler Resulting callable will collect all PHP errors that occur during the call in errors array 
 param string items 
 param string items 
Given an invalid input string and a list of valid options returns a filtered list of valid options sorted based on their similarity with the input 
Executes Document Node against given schema 
Same as execute but requires promise adapter and returns a promise which is always fulfilled with an instance of Execution Result and never rejected 
If a resolve function is not given then a default resolve behavior is used which takes the property of the source object of the same name as the field and returns it as the result or if it s a function returns the result of calling that function while passing along args and context 
 return Token 
Reads an alphanumeric underscore name from the source 
Reads a number token from the source file either a float or an int depending on whether a decimal point appears 
Returns string with all digits changes current string cursor position to point to the first char after digits 
 param int line param int col 
Reads a block string token from the source file 
Reads from body starting at start Position until it finds a non whitespace or commented character then places cursor to the position of that character 
Reads a comment token from the source file 
Reads next UTF Character from the byte stream starting from byte Stream Position 
Reads next number Of Chars UTF characters from the byte stream starting from byte Stream Position 
Moves internal string cursor position 
 param Node Node List ancestors The type is actually Node Node List but this PSR syntax is so far not supported by most of the tools 
Converts an array of options to instance of Server Config or just returns empty config when array is not passed 
Set validation rules for this server 
 param string name 
Checks if the type is a builtin type 
Returns all builtin in types including base scalar and introspection types 
 param Type type 
 param Type type 
 param Type type 
 param mixed type 
 param Field Definition fields 
 param string name 
 return mixed 
similar to array merge recursive this merges nested arrays but handles non array values differently while array merge recursive tries to merge non array values in this implementation they will be overwritten 
Given an arbitrary Error presumably thrown while attempting to execute a Graph QL operation produce a new Graph QLError aware of the location in the document responsible for the original Error 
An array of locations within the source Graph QL document which correspond to this error 
Returns array representation of error suitable for serialization 
Constructs an Execution Context object from the arguments passed to execute which we will pass throughout the other execution methods 
 param mixed Promise null data 
Implements the Evaluating operations section of the spec 
Extracts the root type of the operation from the schema 
Given a selection Set adds all of the fields in that selection to the passed in map of fields and returns it at the end 
Determines if a field should be included based on the include and skip directives where skip has higher precedence than include 
Implements the logic to compute the key of a given fields entry 
Determines if a fragment is applicable to the given type 
Implements the Evaluating selection sets section of the spec for write mode 
Resolves the field on the given source object In particular this figures out the value that the field returns by calling its resolve function then calls complete Value to complete promises serialize scalars or execute the sub selection set for objects 
This method looks up the field on the given type definition It has special casing for the two introspection fields schema and typename typename is special because it can always be queried as a field even in situations where no other fields are allowed like on a Union schema could get automatically added to the query type but that would require mutating type definitions which would cause issues 
Isolates the Return Or Abrupt behavior to not de opt the resolve Field function Returns the result of resolve Fn or the abrupt return Error object 
This is a small wrapper around complete Value which detects and logs errors in the execution context 
This is a small wrapper around complete Value which annotates errors with location information 
Implements the instructions for complete Value as defined in the Field entries section of the spec 
Only returns the value if it acts like a Promise i e has a then function otherwise returns null 
Similar to array reduce however the reducing callback may return a Promise in which case reduction will continue after each promise resolves 
Complete a list value by completing each item in the list with the inner type 
Complete a Scalar or Enum by serializing to a valid value throwing if serialization is not possible 
Complete a value of an abstract type by determining the runtime object type of that value then complete the value for that type 
If a resolve Type function is not given then a default resolve behavior is used which attempts two strategies 
Complete an Object value by executing all sub selections 
 param mixed result param Field Node field Nodes 
 param Field Node field Nodes param mixed path param mixed result 
Implements the Evaluating selection sets section of the spec for read mode 
This function transforms a PHP array string Promise scalar array into a Promise array key scalar array 
 param string Object Type null runtime Type Or Name param Field Node field Nodes param mixed result 
Given a type and any value return a runtime value coerced to match the type 
 param string message param Node blame Node param mixed null path param string sub Message param Exception Throwable null original Error 
Build a string describing the path into the value where the error was found 
 param string mixed name 
 param mixed value 
 param mixed value 
 param Node value Node param mixed null variables 
Converts and exception to error and sends spec compliant HTTP error Useful when an exception is thrown somewhere outside of server execution context e g during schema instantiation 
Parses HTTP request executes and emits response using standard PHP header function and echo 
Executes Graph QL operation and returns execution result or promise when promise adapter is different from Sync Promise Adapter 
Executes PSR request and fulfills PSR response 
Executes Graph QL operation and returns execution result or promise when promise adapter is different from Sync Promise Adapter 
Synchronously wait when promise completes 
 param mixed type 
 param string name 
 param string name 
 return Field Definition 
 param mixed value param mixed null context 
Validates type config and throws if one of type options is invalid Note this method is shallow it won t validate object fields and their arguments 
 param callable validators 
Given a selection Set adds all of the fields in that selection to the passed in map of fields and returns it at the end 
Print a block string in the indented block form by adding a leading and trailing blank line However if a block string starts with whitespace and is a single line adding a leading blank line would strip that whitespace 
Prints a Graph QLError to a string representing useful location information about the error s position in the source 
Render a helpful description of the location of the error in the Graph QL Source document 
Standard Graph QL error formatter Converts any exception to array conforming to Graph QL spec 
Decorates spec compliant formatted Error with debug entries according to debug flags see Graph QL Error Debug for available flags 
Prepares final error formatter taking in account debug flags If initial formatter is not set Formatted Error create From Exception is used 
Returns error trace as serializable array 
 param mixed var 
 deprecated as of v 
 deprecated as of v use general purpose method create From Exception instead 
Creates an instance from given array 
 param mixed config 
 param mixed value 
 param Node value Node param mixed null variables 
Produces the value of a block string from its parsed raw value similar to Coffeescript s block string Python s docstring trim or Ruby s strip heredoc 
Prepares an object map of variables of the correct type based on the provided variable definitions and arbitrary input If the input cannot be coerced to match the variable definitions a Error will be thrown 
Prepares an object map of argument values given a directive definition and a AST node which may contain directives Optionally also accepts a map of variable values 
Prepares an object map of argument values given a list of argument definitions and list of argument AST nodes 
 param Field Definition Directive field Definition param Argument Node argument Value Map param mixed variable Values param Node null reference Node 
 deprecated as of Moved to Graph QL Utils AST value From AST 
 deprecated as of Use coerce Value directly for richer information 
A helper function to build a Graph QLSchema directly from a source document 
This takes the ast of a schema document produced by the parse function in Graph QL Language Parser 
 param Schema Definition Node schema Def 
 param Field Argument args 
 param Interface Type Object Type type 
 param Directive Definition Node directive Definitions 
 param mixed type 
Accepts options as a second argument 
Graph QL schema define root types for each type of operation These types are the same as any other type and can be named in any manner however there is a common naming convention 
 param bool options 
Parses an externally provided value query variable to use as an input 
Parses an externally provided literal value to use as an input e g in Query AST 
Helper method that returns names of all fields selected in query for this field Name up to depth levels 
If a variable definition has a default value it s effectively non null 
Given two schemas returns an Array containing descriptions of all the types of breaking changes covered by the other functions down below 
Given two schemas returns an Array containing descriptions of any breaking changes in the new Schema related to removing an entire type 
Given two schemas returns an Array containing descriptions of any breaking changes in the new Schema related to changing the type of a type 
 return string 
Given two schemas returns an Array containing descriptions of any breaking changes in the new Schema related to removing types from a union type 
Given two schemas returns an Array containing descriptions of any breaking changes in the new Schema related to removing values from an enum type 
Given two schemas returns an Array containing descriptions of any breaking or dangerous changes in the new Schema related to arguments such as removal or change of type of an argument or a change in an argument s default value 
Given two schemas returns an Array containing descriptions of all the types of potentially dangerous changes covered by the other functions down below 
Given two schemas returns an Array containing descriptions of any dangerous changes in the new Schema related to adding values to an enum type 
Given two schemas returns an Array containing descriptions of any dangerous changes in the new Schema related to adding types to a union type 
Options descriptions Whether to include descriptions in the introspection result Default true 
Converts an array of options to instance of Schema Config or just returns empty config when array is not passed 
Find all conflicts found within a selection set including those found via spreading in fragments Called when visiting each Selection Set in the Graph QL Document 
Given a selection set return the collection of fields a mapping of response name to field ASTs and definitions as well as a list of fragment names referenced via fragment spreads 
Given a reference to a fragment return the represented collection of fields as well as a list of nested fragment names referenced via fragment spreads 
Collect all Conflicts within one collection of fields 
Determines if there is a conflict between two particular fields including comparing their sub fields 
 param Argument Node arguments param Argument Node arguments 
Two types conflict if both types could not apply to a value simultaneously Composite types are ignored as their individual field types will be compared later recursively However List and Non Null types must match 
Find all conflicts found between two selection sets including those found via spreading in fragments Called when determining if conflicts exist between the sub fields of two overlapping fields 
Collect all Conflicts between two collections of fields This is similar to but different from the collect Conflicts Within function above This check assumes that collect Conflicts Within has already been called on each provided collection of fields This is true because this validator traverses each individual selection set 
Collect all conflicts found between a set of fields and a fragment reference including via spreading in any nested fragments 
Given a reference to a fragment return the represented collection of fields as well as a list of nested fragment names referenced via fragment spreads 
Collect all conflicts found between two fragments including via spreading in any nested fragments 
Given a series of Conflicts which occurred between two sub fields generate a single Conflict 
 param mixed value 
 param string name 
Go through all of the implementations of type as well as the interfaces that they implement If any of those types include the provided field suggest them sorted by how often the type is referenced starting with Interfaces 
For the field name provided determine if there are any similar field names that may be the result of a typo 
 param string field Name param string type param string suggested Type Names param string suggested Field Names 
Validates type config and throws if one of type options is invalid Note this method is shallow it won t validate object fields and their arguments 
Converts Graph QL query result to spec compliant serializable array using provided errors handler and formatter 
Convert representation of AST as an associative array to instance of Graph QL Language AST Node 
Produces a Graph QL Value AST given a PHP value 
Produces a PHP value given a Graph QL Value AST 
Returns true if the provided value Node is a variable which is not defined in the set of variables 
Produces a PHP value given a Graph QL Value AST 
Returns type definition for given AST Type node 
Returns operation type query mutation or subscription given a document and operation name 
Executes graphql query 
Same as execute Query but requires Promise Adapter and always returns a Promise Useful for Async PHP platforms 
 deprecated Use execute Query to Array instead 
 deprecated renamed to execute Query 
Suppress warning by id has no effect when custom warning handler is set 
Re enable previously suppressed warning by id 
 param mixed value 
 param Node value Node param mixed null variables 
Given a Graph QL source parses it into a Graph QL Language AST Document Node Throws Graph QL Error Syntax Error if a syntax error is encountered 
Given a string containing a Graph QL value ex parse the AST for that value Throws Graph QL Error Syntax Error if a syntax error is encountered 
Given a string containing a Graph QL Type ex Int parse the AST for that type Throws Graph QL Error Syntax Error if a syntax error is encountered 
Returns a location object used to identify the place in the source that created a given parsed object 
If the next token is of the given kind return true after advancing the parser Otherwise do not change the parser state and return false 
If the next token is of the given kind return that token after advancing the parser Otherwise do not change the parser state and return false 
If the next token is a keyword with the given value return that token after advancing the parser Otherwise do not change the parser state and return false 
Converts a name lex token into a name parse node 
Implements the parsing rules in the Document section 
 return Executable Definition Node Type System Definition Node 
 return Executable Definition Node 
 return Operation Definition Node 
 return string 
 return Variable Definition Node 
 return Variable Node 
 return Field Node 
 param bool is Const 
 return Argument Node 
 return Argument Node 
 return Fragment Spread Node Inline Fragment Node 
 return Fragment Definition Node 
Value Const Const Variable Int Value Float Value String Value Boolean Value Null Value Enum Value List Value Const Object Value Const 
 param bool is Const 
 param bool is Const 
 param bool is Const 
 param bool is Const 
 param bool is Const 
Handles the Type Type Name List Type and Non Null Type parsing rules 
Type System Definition Schema Definition Type Definition Type Extension Directive Definition 
 return Schema Definition Node 
 return Operation Type Definition Node 
 return Scalar Type Definition Node 
 return Object Type Definition Node 
Implements Interfaces implements Named Type Implements Interfaces Named Type 
 return Field Definition Node Node List 
 return Field Definition Node 
 return Input Value Definition Node Node List 
 return Input Value Definition Node 
 return Interface Type Definition Node 
Union Type Definition Description union Name Directives Const Union Member Types 
Union Member Types Named Type Union Member Types Named Type 
 return Enum Type Definition Node 
 return Enum Value Definition Node Node List 
 return Enum Value Definition Node 
 return Input Object Type Definition Node 
 return Input Value Definition Node Node List 
Type Extension Scalar Type Extension Object Type Extension Interface Type Extension Union Type Extension Enum Type Extension Input Object Type Definition 
 return Schema Type Extension Node 
 return Scalar Type Extension Node 
 return Object Type Extension Node 
 return Interface Type Extension Node 
Union Type Extension extend union Name Directives Const Union Member Types extend union Name Directives Const 
 return Enum Type Extension Node 
 return Input Object Type Extension Node 
Directive Definition directive Name Arguments Definition on Directive Locations 
 return Name Node 
 return Name Node 
Given root type scans through all fields to find nested types Returns array where keys are for type name and value contains corresponding type instance 
 param Type type Map 
Not exactly the same as the executor s definition of get Field Def in this statically evaluated environment we do not always have an Object type and need to handle Interface and Union types 
 param Type type param string operation 
 param string arg Name 
 param string arg Name 
 param Object Type Interface Type type 
 param Object Type Interface Type type param string field Name 
 param Object Type Interface Type type param string field Name 
 param Object Type Interface Type type param string field Name 
 param Object Type Interface Type type param string field Name param string arg Name 
 param Object Type Interface Type type param string field Name param string arg Name 
 param Object Type Interface Type type param string field Name param string arg Name 
 param Interface Type iface 
 param Interface Type iface 
 param string type Name 
 param string value Name 
 param mixed value 
 param Node value Node param mixed null variables 
 param int start param int end 
Parses an externally provided value query variable to use as an input 
Parses an externally provided literal value hardcoded in Graph QL query to use as an input 
 param int position 
Get the given stub by name 
Register the baum install command 
Replace the order by clause of the current query 
Execute an aggregate function on the database 
Reloads the model from the database 
Returns a fresh instance from the database 
Return all root nodes for the current database table appropiately sorted 
Recompute left and right index bounds for the specified node and its children recursive call Fill the depth column too 
Return all children for the specified node 
Return an array of the scoped attributes of the supplied node 
Return a string key for the current scoped attributes Used for index computing when a scope is defined acsts as an scope identifier 
Return next index bound value for the given key current scope identifier 
Easy static accessor for performing a move operation 
Runs the SQL query associated with the update of the indexes affected by the move operation 
Resolves suplied node Basically returns the node unchanged if supplied parameter is an instance of Baum Node Otherwise it will try to find the node in the database 
Check wether the current move is possible and if not rais an exception 
Computes the other boundary TODO Maybe find a better name for this 
Computes the new parent id for the node being moved 
Check wether there should be changes in the downward tree structure 
Fire the given move event for the model 
Quotes an identifier for being used in a database query 
Applies a lock to the rows between the supplied index boundaries 
Execute the console command 
Write the migration file to disk 
Write the model file to disk 
Checks that there are no duplicates for the lft and rgt columns 
Check that each root node in the list supplied satisfies that its bounds values lft rgt indexes are less than the next 
Check that each root node in the list supplied satisfies that its bounds values lft rgt indexes are less than the next within each scope 
Given a list of root nodes it returns an array in which the keys are the array of the actual scope column values and the values are the root nodes inside that scope themselves 
Builds a single string for the given scope columns values Useful for making array keys for grouping 
Maps a tree structure into the database Unguards wraps in transaction 
Maps a tree structure into the database without unguarding nor wrapping inside a transaction 
Maps a tree structure into the database 
The booting method of the model 
Get the qualified column names which define our scope 
Children relation self referential N 
Get a new scoped query builder for the Node s model 
Static query scope Returns a query scope with all root nodes 
Static query scope Returns a query scope with all nodes which are at the end of a branch 
Static query scope Returns a query scope with all nodes which are at the middle of a branch not root and not leaves 
Provides a depth level limit for the query 
Returns the root node starting at the current node 
Instance scope which targes all the ancestor chain nodes including the current one 
Instance scope targeting all of its nested children which do not have children 
Instance scope targeting all of its nested children which are between the root and the leaf nodes middle branch 
Scope targeting itself and all of its nested children 
Retrieve all of its children nested children 
Returns true if node is a descendant 
Returns true if node is self or a descendant 
Returns true if node is an ancestor 
Returns true if node is self or an ancestor 
Returns the first sibling to the left 
Make the node the first child of 
Checkes if the given node is in the same scope as the current one 
Checks wether the given node is a descendant of itself Basically whether its in the subtree defined by the left and right indices 
Sets default values for left and right fields 
Store the parent id if the attribute is modified so as we are able to move the node to this new parent after saving 
Move to the new parent if appropiate 
Sets the depth attribute 
Sets the depth attribute for the current node and all of its descendants 
Prunes a branch off the tree shifting all the elements on the right back to the left so the counts work 
Makes room for the the current node between its siblings 
Return an key value array indicating the node s depth with seperator 
Compute current node level If could not move past ourseleves return our ancestor count otherwhise get the first parent level the computed nesting 
Initializes the form field 
Ticks a checkbox 
Ticks a checkbox 
Sets the value of the field 
Returns list of available field options 
Initializes the form field 
 throws No Such Element Exception throws Time Out Exception 
Bootstrap the application services 
Register the application services 
Configure and publish views 
Load and publishes configs 
Return parsed Javascript Rule 
Add conditional rules 
Determine if rule is passed with sometimes 
Returns Javascript parameters for remote validated rules 
Returns Javascript parameters for remote validated rules 
Handles multidimensional attribute names 
Set default parameters 
Render the specified view with validator data 
Gets view data 
Set the form selector to validate 
Set the view to render Javascript Validations 
Replace all error message place holders with actual values 
Get the validation message for an attribute and rule 
Add conditions to a given field based on a Closure 
Confirmed rule is applied to confirmed attribute 
Returns Javascript parameters for After rule 
Replace javascript error message place holders with actual values 
Creates fake data needed to parse messages Returns original data 
Generate fake data to get Required If message 
Generate fake data to get file type messages 
Validate request 
Throw the failed validation exception 
Parse Validation input request data 
Parse Validation parameters 
Validate remote Javascript Validations 
Sets data for validate remote rules 
Remove rules that should not be validated remotely 
Create closure to call inaccessible method 
Gets inaccessible property 
Calls inaccessible method 
Sets delegated Validator instance 
Generate Javascript Validations 
Make Laravel Validations compatible with JQuery Validation Plugin 
Validate Conditional Validations using Ajax in specified fields 
Creates Js Validator instance based on rules and message arrays 
Get the validator instance for the request 
Gets fake data when validator has wildcard rules 
Creates Js Validator instance based on Form Request 
Creates and initializes an Form Request instance 
Creates Js Validator instance based on Validator 
Get and encrypt token from session store 
Handle an incoming request 
Wraps Validator resolver with Remote Validator resolver 
Closure used to resolve Validator instance 
Resolves Validator instance 
Create new validator instance 
Closure used to trigger Js Validations 
Returns if rule is validated using Javascript 
Check if rule must be validated in server side 
Setup 
Add a custom definition 
Add provided attributes to the provided definition 
Add provided elements to the provided definition 
Check Create cache directory 
 param null config 
 param dirty param null config 
Register the service provider 
Sets the request against which the menu should be matched 
Sorts the internal list of extensions by priority 
Renders a HTML attribute 
Prepares an attribute key and value for HTML representation 
Escapes an HTML value 
Adds a voter in the matcher 
Retrieves item in the menu eventually using the menu provider 
Renders a menu with the specified renderer 
Renders an array ready to be used for breadcrumbs 
Returns the current item of a menu 
 param Item Interface array string menu 
 param Item Interface item 
Renders a menu with the specified renderer 
Returns the current item of a menu 
A string representation of this menu item 
Checks whether an item is current 
Configures the newly created item with the passed options 
Configures the newly created item s extras Extras are processed one by one in order not to reset values set by other extensions 
 param array data param string null name the name of the item used only if there is no name in the data themselves 
Renders all of the children of this menu 
Called by the parent menu item to render this menu 
Renders the link in a a tag with link attributes or the label in a span tag with label attributes 
If this render Compressed is on this will apply the necessary spacing and line breaking so that the particular thing being rendered makes up its part in a fully rendered and spaced menu 
Moves item to specified position Rearrange siblings accordingly 
Moves child to specified position Rearrange other children accordingly 
Get slice of menu as another menu 
Split menu into two distinct menus 
Calls a method recursively on all of the children of this item 
A string representation of this menu item 
 param Item Interface item param integer null depth the depth until which children should be exported null means unlimited 
Renders an array ready to be used for breadcrumbs 
Returns definitions for each configuration option that is supported 
Builds the needed e Bay HTTP headers 
Returns definitions for each configuration option that is supported 
Returns definitions for each configuration option that is supported 
Returns true if the value is truthy 
Gets the JMESPath type equivalent of a PHP variable 
Determine if the provided value is a JMESPath compatible object 
JSON aware value comparison function 
JMESPath requires a stable sorting algorithm so here we ll implement a simple Schwartzian transform that uses array index positions as tie breakers 
Creates a Python style slice of a string or array 
Returns definitions for each configuration option that is supported 
Sends an API request 
Returns definitions for each configuration option that is supported 
Builds the needed e Bay HTTP headers 
Returns definitions for each configuration option that is supported 
Returns definitions for each configuration option that is supported 
Builds the needed e Bay HTTP headers 
Returns definitions for each configuration option that is supported 
Returns definitions for each configuration option that is supported 
Builds the needed e Bay HTTP headers 
Returns definitions for each configuration option that is supported 
Set multiple configuration options 
Helper function that builds the HTTP request headers 
Sends a debug string of the request details 
Validates value A and B ensures they both are correctly typed and of the same type 
Reduces and validates an array of values to a single value using a fn 
Validates the return values of expressions as they are applied 
Returns definitions for each configuration option that is supported 
Returns definitions for each configuration option that is supported 
Resolve and validate the passed uri 
Replaces path parameters placeholders in the uri with the correct values 
Builds a query parameters string 
Returns definitions for each configuration option that is supported 
Builds the needed e Bay HTTP headers 
Returns definitions for each configuration option that is supported 
Returns definitions for each configuration option that is supported 
Returns definitions for each configuration option that is supported 
Tokenize the JMESPath expression into an array of tokens hashes that contain a type value and key 
Returns a token based on whether or not the next token matches the expected value If it does a token of type is returned Otherwise a token of or Else type is returned 
Returns a token the is the result of consuming inside of delimiter characters Escaped delimiters will be adjusted before returning a value If the token is not closed unknown is returned 
Parses a JSON token or sets the token type to unknown on error 
Returns definitions for each configuration option that is supported 
Builds the needed e Bay HTTP headers 
Sends an asynchronous API request 
Builds the request body string 
Builds the XML payload part of a multipart form data request body 
Builds the file part of a multipart form data request body 
Helper function that builds the HTTP request headers 
Returns definitions for each configuration option that is supported 
Parses a JMESPath expression into an AST 
Parses an expression while rbp lbp 
Parses an array index expression e g 
Returns definitions for each configuration option that is supported 
Resolve and validate the passed configuration options 
Resolve and validate the passed configuration options The difference between this method and resolve is that this will only resolve options in the passed configuration It will not use the definitions to resolve optional and required options 
 param array valid Array of valid types param name Name of the configuration option param provided Value to check the type of 
 param array configuration Associative array of configuration options 
Sets a value for the given offset 
Determines if the value is the correct type to assign to the array 
Converts the object to a XML string 
Returns the meta data for a property 
Method to get or set the object s attachment Overrides any existing attachment is setting 
Assign a value to a property 
Determines if the value is the correct type to assign to a property 
Helper function to return the actual type of a value 
Helper function to convert an property into XML 
Helper function to convert a value into XML 
Helper function when assigning values via the ctor Determines the actual value to assign to a property 
Helper function when assigning values via the ctor 
 param mixed value Remove null elements if an array 
Wraps a credentials provider and caches previously provided credentials 
Creates an aggregate credentials provider that invokes the provided variadic providers one after the other until a provider returns credentials 
Provider that creates credentials from environment variables EBAY SDK APP ID EBAY SDK CERT ID and EBAY SDK DEV ID 
Provider that creates credentials using an ini file stored in the current user s home directory 
Gets the environment s HOME directory if available 
Create a service object by namespace Service is configured using array of options 
Returns definitions for each configuration option that is supported 
Sends an API request 
Builds the needed e Bay HTTP headers 
Builds the request body string 
Parse the passed XML to create a PHP object 
Handler for the parser that is called at the start of each XML element 
Handles element names that may have namespaces in them 
Builds the required PHP object 
Determines if the type of the property is simple 
Returns a value that will be assigned to an object s value property 
Returns definitions for each configuration option that is supported 
 param std Class property Meta The metadata for the property param mixed value The property value 
 param std Class property Meta The metadata for the property param mixed value The property value 
Returns definitions for each configuration option that is supported 
Returns definitions for each configuration option that is supported 
Returns data from the input array that matches a JMESPath expression 
Creates a JMESPath runtime based on environment variables and extensions available on a system 
Delete all previously compiled JMESPath files from the JP COMPILE DIR directory or sys get temp dir 
Returns definitions for each configuration option that is supported 
 param array ast AST to compile param string fn Name The name of the function to generate param string expr Expression being compiled 
Creates a monotonically incrementing unique variable name by prefix 
Writes the given line of source code Pass positional arguments to write that match the format of sprintf 
Returns definitions for each configuration option that is supported 
Returns definitions for each configuration option that is supported 
 param array params An associative array with state and scope as the keys 
Sends an asynchronous API request 
Builds the request body string 
Helper function that builds the HTTP request headers 
Returns definitions for each configuration option that is supported 
Returns definitions for each configuration option that is supported 
 param rate Request 
Creates and sends a request for the given shipment This handles checking for errors in the response back from UPS 
Create the Rate request 
Format the response 
 param null DOMDocument document 
 param null DOMDocument document 
 param null DOMDocument document 
Create the access request 
Creates the Transaction Reference node for a request 
Send request to UPS 
Compiles the final endpoint URL for the request 
 param null DOMDocument document 
 param Unit Of Measurement unit Of Measurement 
 param null DOMDocument document 
 param null DOMDocument document 
 param mixed maximum List Size 
 param null DOMDocument document 
 param null DOMDocument document 
 param null DOMDocument document 
Create a Shipment Confirm request generate a digest 
Creates a Ship Confirm request 
Create a Shipment Accept request generate a shipping label 
Creates a Ship Accept request 
Void a shipping label request 
Creates a void shipment request 
Recover a shipping label 
Creates a label recovery request 
 param null DOMDocument document 
 param string description 
 param string description 
 param string description 
 param null DOMDocument document 
 param Package package 
 param null DOMDocument document 
Creates and sends a request for the given shipment This handles checking for errors in the response back from UPS 
Create the Label Recovery request 
Format the response 
 param null DOMDocument document 
 param null DOMDocument document 
 param null DOMDocument document 
 param mixed maximum List Size 
 param null DOMDocument document 
Get address suggestions from UPS using the default Address Validation API AV 
Create the AV request 
Format the response 
 param null DOMDocument document 
Get a Quantum View subscription 
Create the Quantum View request 
Format the response 
Send request to UPS 
 param null DOMDocument document 
 param null DOMDocument document 
 param null DOMDocument document 
 param var 
Creates and sends a request for the given shipment This handles checking for errors in the response back from UPS 
Create the Time In Transit request 
Format the response 
 param null DOMDocument document 
 param null DOMDocument document 
 param null DOMDocument document 
 param null DOMDocument document 
Tells whether or not the No Candidates Indicator is present on the XML document This indicator is returned if the address is so badly formed that UPS is unable to even offer any suggested alternatives 
Tells whether or not the Valid Address Indicator is present on the XML document This indicator is present if provided address is valid and represents a single unique address in the UPS Address Validation system 
Tells whether or not the Ambiguous Address Indicator is present on the XML document This indicator is present when the address provided is not specific enough to be unique to one physical location but provides enough 
 param null DOMDocument document 
 param Notification notification 
 param null DOMDocument document 
 param null DOMDocument document 
Send request to UPS 
Create the Landed Cost Request request 
Creates and sends a request for the given data Most errors are handled in Soap Request 
Get address suggestions from UPS using the Street Level Address Validation API XAV 
Create the XAV request 
 param null DOMDocument document 
 param null DOMDocument document 
Get package tracking information 
Get package tracking information 
Check if tracking number is for mail innovations 
Create the Tracking request 
Format the response 
 param null DOMDocument document 
Generates a standard Address node for requests 
Generates an artifact Address node for requests 
Adds location information including company name attention name and address 
 param std Class shipment param DOMNode node 
Conditionally adds a child node to node The value comes from the specified object and will only be added if the property Name has a value 
 param null DOMDocument document 
 param null DOMDocument document 
 param Pickup Type pickup Type 
 param Shipment shipment 
 param Address address 
 param null DOMDocument document 
 param null DOMDocument document 
Create the Time In Transit request 
 param null DOMDocument document 
 param reason 
 param comments 
 param value 
 
 
 param string json 
Checks a data structure and extracts the space ID if present 
Checks a data structure and extracts the environment ID if present 
 
 
 param Locale string null input 
 param array value Map param string locale Code param Environment environment 
 
 
Creates a File or a subclass thereof 
 
 param Input Interface input param Client Interface client 
 
 param array data 
Returns the field for the passed id 
Adds a runtime field of type unknown 
 
 
 
 
Loads resources for a certain type only 
Loads resources in the current cache pool and fetches the missing ones from the API 
Each Contentful ID can be up to characters long so if we have too many links in a single query it might create some queries that are too long 
Actually make the relevant API calls 
 
 
We extract content types that need to be fetched from a response array This way we can use a collective query rather than making separate queries for every content type 
 param bool cache Content 
 param string host 
 param Cache Item Pool Interface cache Item Pool param bool auto Warmup param bool cache Content 
 param bool cache Content 
 param string type Either Entry or Asset param string locales 
 param string class param array data 
 
Returns the parameters to execute this query 
Set the Type of event or resource to sync 
Set the content type to which results should be limited Set to NULL to not filter for a content type 
 param string null token param Query null query 
Starts a new Synchronization The result will contain all the resources currently present in the space By calling Result is Done it can be checked if there s another page of results if so call continue Sync to get the next page 
Continues the synchronization either at the next page or with the results since the initial synchronization 
Build a Result from the API response 
Parses the sync token out of an URL supplied by the API 
Returns the parameters to execute this query 
Creates the appropriate Resource Pool object using the given client and options 
 
 
 param bool cache Content 
Checks whether the current entry has a field with a certain ID 
Returns all fields of the current entry with some optimizations applied Links are resolved by default If you want to get raw link objects rather than complete resources set the resolve Links parameter to false 
Returns a the value of a field using the given locale It will also resolve links If you want to access the ID of a link or of an array of links simply append Id to the end of the name parameter 
Attempts to fetch a value given the current configuration It will return the raw field value without applying any transformation to it 
Given a field value this method will resolve links if it s a Link object or an array of links 
Checks whether the given name parameter corresponds to an attempt of fetching the ID of a link or array of links 
Gets all entries that contain links to the current one You can provide a Query object in order to set parameters such as locale include and sorting 
 
 
 param Resource Content Type content Type param array fields param Resource Class null previous 
If a previous entry is given this methods will combine all values from the fields array an those in the already built entry This is done so in the event of partial resource building i e after having queried the API using the select operator the resulting object is increasingly updated therefore the new object will contain the biggest set of old plus new fields 
Transforms values from the original JSON representation to an appropriate PHP representation 
Returns the locale to be used in a cache key 
 
 
 
 
 
 
 
 
 
 
Parse a JSON string 
 
 param string uri param array query param string null type param string null resource Id param string null locale 
 
 param string property param Locale string null locale 
 
 param Resource Interface resource 
 
 
 
 
 
 param string code Code of the locale to fetch the object for 
Returns the default locale for this space 
 
 
 
XML 
 
 
 XML 
 
 get 
 post 
CURL 
POST 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Downloads recipes 
Decodes a JSON HTTP response body 
Store a newly created resource in storage 
Display the specified resource 
Run the migrations 
Create an feed response for whole forum section 
Register the application services 
Store a newly created resource in storage 
Update the specified resource in storage 
Delete post 
Replace url parameter 
Url parameter 
This function will demote H to H H to H H to H etc this will help with SEO so there are not multiple H tags on the same page 
This function construct the categories menu with nested categories 
Auto generated seed file 
Verifies that a given signature is correct 
 param input 
This function takes a input like a b a c d e and returns the parsed parameters like this array a array b c d e 
Set the connection and response timeouts 
Set the number of times to retry on error and how long between each 
Make URLs for user browser navigation 
Make oauth requests to the API 
Make oauth requests to the API 
Make GET requests to the API 
Make POST requests to the API 
Make DELETE requests to the API 
Make PUT requests to the API 
Upload media to upload twitter com 
Private method to upload media not chunked to upload twitter com 
Private method to upload media chunked to upload twitter com 
Private method to get params for upload media chunked init Twitter docs https dev twitter com rest reference post media upload init html 
Cleanup any parameters that are known not to work 
 param string method param string host param string path param array parameters param bool json 
Format and sign an OAuth API request 
Set Curl options 
Make an HTTP request 
Get the header info to store 
Encode application authorization header with base 
Decodes a JSON string to std Object or associative array 
pretty much a helper function to set up the request 
The request parameters sorted and concatenated into a normalized string 
parses the url and rebuilds it to be scheme host path 
Builds a url usable for a GET request 
Builds the Authorization header 
 param Signature Method signature Method param Consumer consumer param Token token 
 
Bootstrap the application services 
Get the specified option value 
Set a given option value 
Query the resource when it appears in a to many relation of a parent resource 
Query the resource when it appears in a to one relation of a parent resource 
Does the record match the supplied filters 
Apply filters to the provided query parameter 
Hydrate related models after the primary record has been persisted 
Return the result for a paginated query 
Default query execution used when querying records or relations 
Get JSON API parameters to use when constructing an Eloquent query 
Set the default API name 
Add a record to the identity map for a resource identifier 
Does the identity map know that ths supplied identifier exists 
Get the record from the identity map 
Get the encoding parameters from the request 
Is this an index request 
Is this a read resource request 
Is this an update resource request 
Is this a delete resource request 
Is this a request to read all processes for a resource type 
Allow fields for a resource type 
Allow any fields for the specified resource type 
Allow no fields for the specified resource type 
Are the fields allowed for the specified resource type 
Get the invalid fields for the resource type 
Get the fields that are invalid 
Apply sort parameters to the query 
Get sort parameters to use when the client has not provided a sort order 
Get the table column to use for the specified search field 
Add middleware 
Handle the event 
Set the route s relationship field name and inverse resource type 
Create an encoding that will encode JSON API content 
Create an encoding for the JSON API media type 
Create an encoding that will not encode JSON API content 
Is the encoding for any of the supplied media types 
Is the encoding acceptable 
Create a cursor from query parameters 
Register JSON API services 
Register package middleware 
Register a response macro 
Register Blade directives 
Bind parts of the neomerx json api dependency into the service container 
Bind the JSON API service as a singleton 
Bind the inbound request services so they can be type hinted in controllers and authorizers 
Bind the exception parser into the service container 
Create a validator instance to validate the supplied data 
Is the JSON API field allowed to be filled into the supplied record 
Get the JSON API document as an array 
 param Header Parameters Interface parameters 
 param Header Parameters Interface parameters 
 param Header Parameters Interface parameters 
Execute the console command 
Filters out commands using either except or only filter 
Runs the given commands and passes them all the given parameters 
Validate the value of a type member 
Validate the value of an id member 
Validate an identifier object 
Validate a resource relationship 
Validate a to one relation 
Validate a to many relation 
Does the key exist in document data object 
Get a value from the document data object use dot notation 
Check if the resource is not found 
Add an error for a member that is required 
Add errors for when a member has a field that is not allowed 
Add an error for when the resource type is not supported by the endpoint 
Add an error for when the resource does not support client generated ids 
Add an error for when a resource already exists 
Add an error for when a resource identifier does not exist 
Add errors for when a resource field exists in both the attributes and relationships members 
Does the HTTP request require a JSON API error response 
Prepare JSON API exception for non JSON API rendering 
Send a response with the supplied media type content 
Set the encoding options 
Return a response for a resource update request 
Return a response for a resource delete request 
Create a response containing a single error 
Create a response containing multiple errors 
Render an exception that has arisen from the exception handler 
Does a no content response need to be returned 
Get any JSON API errors that are in the response 
Parse JSON API errors out of the response body 
Add records to the relationship 
Find the related models for a JSON API relationship object 
Get attributes that are included for every model class 
Get attributes for the provided model 
Get the attributes to serialize for the provided model 
Create an error for a member that is required 
Create an error for when a resource type is not recognised 
Create an error for when the resource id is not supported by the endpoint 
Create an error for when a resource does not support client generated ids 
Create an error for a resource identifier that does not exist 
Create an error for when a resource cannot be deleted 
Create an error for an invalid resource 
Create an error for an invalid query parameter 
Create errors for a failed validator 
Create a JSON API exception for a failed validator 
Translate an error member value 
Create a source pointer for the specified path and optional member at that path 
Convert a belongs to relationship without causing the database to be queried 
Create a model identity using the model class and a provided id 
Add eager loading to the query 
Add eager loading to a record 
Get the relationship paths to eager load 
Convert a JSON API include path to a model relationship path 
Convert a JSON API field name to an Eloquent model relation name 
Create an error collection from an array of error arrays 
Fill the soft delete value if it has been provided 
Deserialize the provided value for the soft delete attribute 
Get the JSON API field that is used for the soft delete value 
Add allowed parameters 
Replaces underscores or camel case with dashes 
Converts a camel case string into all lower case separated by underscores 
Converts a camel case or dasherized string into a lower cased and underscored string 
Gets the lower camel case form of a string 
Gets the upper camel case form of a string 
Build the class with the given name 
Get the stub file for the generator 
Get the resource name 
Replace the value of the resource type string 
Replace the value of the model class name 
Replace the value of the application namespace 
Get the stub for specific generator type 
Determine whether a resource is eloquent or not 
Get validation data for updating a domain record 
Get validation data for deleting a domain record 
Get validation data for modifying a relationship 
Get validation rules for a specified relationship field 
Create a validator for a JSON API resource object 
Create a validator for a delete request 
Create a generic validator 
Get rules to disallow the provided keys 
Get a validator for all query parameters 
Validate that a data member exists and it is either a has one or a has many relationship 
Is this a valid has one relationship 
Is this a valid has many relationship 
Get the next page 
Get the previous page 
Add a where clause for the supplied id and operator 
Order items in descending order 
Order items in ascending order 
Get the column value for the provided id 
Guess the column to use for the cursor 
Guess the key to use for the cursor 
Decode a JSON string 
Does the HTTP request contain body content 
Does the HTTP response contain body content 
Does the request want JSON API content 
Get the most applicable HTTP status code 
Create a resolver 
Create a response factory 
Create a validator to check that a resource document complies with the JSON API specification 
Create a validator to check that a resource document complies with the JSON API specification 
Create a validator to check that a relationship document complies with the JSON API specification 
Create a Laravel validator that has JSON API error objects 
Create a JSON API resource object validator 
Create a JSON API relationship validator 
Create a query validator 
Get a link to read a resource object 
Get a link to update a resource object 
Get a link to delete a resource object 
Get a link to a resource object s related resource 
Get a link to remove from a resource object s relationship 
Run the migrations 
Key the resource array by domain record type 
Get the default API codec 
Create an encoder for the API 
Register a resource provider with this API 
Create a decoding 
Return a new instance with the supplied decodings added to the beginning of the stack 
Return a new instance with the supplied decodings added to the end of the stack 
Return a new instance with the supplied decodings merged 
Push decodings if the truth test evaluates to true 
Push decodings if the truth test does not evaluate to true 
Get the decoding that matches the supplied media type 
Recursively camelize all keys in the provided array 
Get a link to the current path adding in supplied query params 
Get a link to the index of a resource type 
Get a link to read a resource object 
Get a link to a resource object s related resource 
Create encodings from array config 
Create encodings that will not encode JSON API content 
Return a new instance with the supplied encodings added to the beginning of the stack 
Return a new instance with the supplied encodings added to the end of the stack 
Return a new instance with the supplied encodings merged 
Push encodings if the truth test evaluates to true 
Push encodings if the truth test does not evaluate to true 
Get the encoding that matches the supplied media type 
Get the acceptable encoding for the supplied Accept header 
Start JSON API support 
Build the API instance and bind it into the container 
Override the page resolver to read the page parameter from the JSON API request 
Build parameters that are to be included with pagination links 
Set the resource that was created by the job 
Create a URL from an array 
Get the URL for the specified resource 
Get the URI for a related resource 
Get the URI for the resource s relationship 
Index action 
Read resource action 
Create resource action 
Update resource action 
Delete resource action 
Read related resource action 
Read relationship data action 
Replace relationship data action 
Add to relationship data action 
Remove from relationship data action 
Read processes action 
Read a process action 
Search resources 
Read a resource 
Create a resource 
Update a resource 
Delete a resource 
Replace a relationship 
Execute the closure within an optional transaction 
Register a custom route 
Register routes for the supplied resource type 
Create a validation exception from a validator 
Deserialize a resource object from a JSON API document 
Is the field a fillable relation 
Get the method name on this adapter for the supplied JSON API field 
Fill the domain record with data from the supplied resource object 
Fill relationships from a resource object 
Fill a relationship from a resource object 
Set the resource type and id that will be created updated by the job 
Handle the request 
Will the response contain a specific resource 
Is data expected for the supplied request 
Set the cursor column 
Set the column name for the resource s ID 
Create a new cursor query 
Extract the cursor from the provided paging parameters 
Does the codec encode any of the supplied media types 
Does the codec decode any of the supplied media types 
Decode a JSON API document from the request content 
Register custom routes 
Add routes for async processes 
Handle the request 
Authorize a relationship request 
Get the relation from the model 
Does the query need to be passed to the inverse adapter 
Get an Eloquent adapter for the supplied record s relationship 
Get a validator for the resource attributes member 
Get a validator for the resource relationships member 
Get a validator for all query parameters 
Get a validator for query parameters except for filter sort and page 
Get the validation rules for query parameters excluding filter sort and page 
Apply a deterministic order to the page 
Do we need to apply a deterministic order to the query 
Add middleware 
Fill JSON API attributes into a model 
Convert a JSON API resource field name to a model key 
Deserialize fillable attributes 
Deserialize a value obtained from the resource s attributes 
Is this resource key a date attribute 
Set the resource that the client job relates to 
Get the resource that the process relates to 
Substitute the route bindings onto the Laravel route 
Get the domain record type for the route 
What is the resource id of the route 
Get the resource identifier for the route 
Get the domain object binding for the route 
Get the process id for the route 
Get the process binding for the route 
Get the process identifier for the route 
Set or get the default API name 
Get an API by name 
Register the routes for an API 
Validate the JSON API document complies with the spec 
Create a resource object from the data member of a JSON document 
Return a new instance with the specified type 
Return a new instance with the specified id 
Return a new instance with the provided attributes 
Return a new instance with the provided relationships 
Get the data value of all relationships 
Return a new instance with the provided meta 
Return a new instance with the provided links 
Return a new instance with the supplied attribute relationship fields removed 
Return a new instance that only has the specified attribute relationship fields 
Return a new instance with a new attribute relationship field value 
Convert a validation key to a JSON pointer 
Convert a validation key to a JSON pointer for a relationship object within the resource 
Get the meta member of the document 
Invoke a hook 
Invoke multiple hooks 
Validate that the top level data member is acceptable 
Validate the resource object 
Validate the resource type and id 
Validate the resource type 
Validate the resource id 
Validate the resource attributes 
Validate the resource relationships 
Validate the resource s attributes and relationships collectively 
Determine if the user is logged in 
Serialize a domain record 
Serialize related record s 
 param Seo Data value param Element Interface null element 
Adds the X Robots Tag header to the request if needed 
 
 
 
Returns the canonical URL falling back to the current URL if not set 
 
Gets the social metadata fallback 
Returns an array for variables for rendering 
 param template param variables 
 
 param string array title param string description param bool Deprecated param array social 
 param Asset null image param array transform 
Handles exceptions 
Returns all the redirects 
Finds a redirect matching the given path 
Saves the redirect 
Bulk creates redirects 
Deletes the redirect with the given ID 
Checks if the redirect URI is a regex 
 
 param context 
 
 param array variables 
 
 param Section Category Group thing 
Creates the XML document 
Get s the latest updated element date for the given element type and group section ID 
Get s the page count for the given element type and group section ID 
Sets the section or group ID on the criteria according to the given element type 
 param handle param data param sitemap Data 
 param group param id 
 param group param id param page 
 
 
 
Establishes a DB connection It does nothing if a DB connection has already been established 
Closes the currently active DB connection It does nothing if the connection is already closed 
Executes a redis command For a list of available commands and their parameters see http redis io commands 
Sends RAW command string to the server 
Initializes the redis Session component This method will initialize the redis property to make sure it refers to a valid redis connection 
Session read handler Do not call this method directly 
Session write handler Do not call this method directly 
Executes the query and returns all results as an array 
Executes the query and returns a single row of result 
Returns the number of records 
Returns a value indicating whether the query result contains any row of data 
Executes the query and returns the first column of the result 
Returns the query result as a scalar value The value returned will be the specified attribute in the first record of the query results 
Executes a script created by Lua Script Builder 
Fetch by pk if possible as this is much faster 
Builds a Lua script for finding a list of records 
Builds a Lua script for finding one record 
Builds a Lua script for finding a column 
Adds a column to the list of columns to retrieve and creates an alias 
Parses the condition specification and generates the corresponding Lua expression 
Initializes the redis Mutex component This method will initialize the redis property to make sure it refers to a valid redis connection 
Acquires a lock by name 
Releases acquired lock This method will return false in case the lock was not found or Redis command failed 
Updates the whole table using the provided attribute values and conditions For example to change the status to be for all customers whose status is 
Updates the whole table using the provided counter changes and conditions For example to increment all customers age by 
Deletes rows in the table using the provided conditions WARNING If you do not specify any condition this method will delete ALL rows in the table 
Builds a normalized key from a given primary key value 
It will return the current Replica Redis Connection and fall back to default redis Connection defined in this instance Only used in get Value and get Values 
Register a file log handler 
Register a daily file log handler 
Get the underlying Monolog instance 
Resolve the current request 
Get the request formatted as meta data 
Execute the console command 
Log a message to the logs 
Fires a log event 
Boot the authentication services for the application 
Boot the service provider 
Setup the events 
Format the query as breadcrumb metadata 
Setup the queue 
Register the service provider 
Get the guzzle client instance 
Setup the callbacks 
Setup the client paths 
Setup session tracking 
 param Coordinate point param Coordinate point 
Creates a Coordinate instance from the given string 
 param string string param Ellipsoid ellipsoid 
 param string string param Ellipsoid ellipsoid 
 param string string param Ellipsoid ellipsoid 
 param string string 
Calculates the center of this bounds object and returns it as a Coordinate instance 
 param Coordinate coordinate 
Simplifies the given polyline 
 param Polyline polyline 
Calculates the distance between the given coordinate and this coordinate 
Checks if the given value is numeric and between lower and upper bounds including the bounds values 
Calculates the length of the polyline 
 param string type 
 param Coordinate coordinate 
Calculates the length of the line distance between the two coordinates 
 param Bearing Interface bearing Calculator 
 param Bearing Interface bearing Calculator 
 param Polyline polyline 
 param array line 
 param Coordinate point param Coordinate point 
This method calculates the initial bearing between the two points 
Calculates the final bearing between the two points 
Calculates a destination point for the given point bearing angle and distance 
 param Coordinate point param Line line 
 param Polygon polygon 
Return all polygon point s latitudes 
Return all polygon point s longitudes 
Determine if given geometry is contained inside the polygon This is assumed to be true if each point of the geometry is inside the polygon 
Determine if given point is contained inside the polygon Uses the PNPOLY algorithm by W Randolph Franklin Therfore some edge cases may not give the expected results e g if the point resides on the polygon boundary 
Calculates the polygon perimeter 
Calculates the polygon area 
Create a new polygon with reversed order of points i e reversed polygon direction 
 internal gracefully shutdown connection by flushing all remaining data and closing stream 
set login data for username password authentication method RFC 
Establish a TCP IP connection to the given target URI through the SOCKS server 
Internal helper used to handle the communication with the SOCKS server 
Add a message 
Render response as array 
Render response as array for API V 
Render response as array for API V 
Get argument by name 
Get datetime argument 
Render response as array for API V 
Render response as array for API V 
Render response as array 
Create a new Suggestion instance 
Set the reply for a Suggestion 
Render response as array for API V 
Render response as array for API V 
Render System Intent as array 
Render as an array 
Render a single Rich Response item as array 
Render a single Rich Response item as array 
Convenience method to get a Dialogflow context by name Reference https dialogflow com docs contexts 
Response to incoming request 
Get a Dialogflow outgoing context Reference https dialogflow com docs contexts 
Set a new Dialogflow outgoing context Reference https dialogflow com docs contexts 
Clear an existing outgoing context Reference https dialogflow com docs contexts 
Render response as array for API V 
Render response as array for API V 
Render System Intent as array 
Set the image for a Card 
Render a single Rich Response item as array 
Render response as array 
Render a single Rich Response item as array 
Render response as array for API V 
Render response as array for API V 
Render a single Rich Response item as array 
Render response as array 
Get the countries from the JSON file if it hasn t already been loaded 
Returns a list of countries suitable to use with a select element in Laravelcollective html Will show the value and sort by the column specified in the display attribute 
Generate the module 
Enable two factor authentication 
Disable two factor authentication 
 
Purge the folder 
Delete the folder 
Rename the folder 
Copy the folder 
Protect the folder by removing the public file 
Check if the folder or any parent folder contains a public file 
Synchronize the folder by removing the nosync file 
Unsynchronize the folder by adding a nosync file 
Return the files model 
Return the MD hash of the folder 
Return the size of the folder 
Return the path info binary safe 
Adds the front end preview URL to the event 
Generate the module 
 
 
 
 
 
Check permissions to edit table tl user 
Handle the profile page 
Return the copy user button 
Generate a switch account button and return it as string 
Return a checkbox to delete session data 
Return all modules except profile modules 
Prevent administrators from downgrading their own account 
Prevent administrators from disabling their own account 
Update the current user if something changes otherwise they would be logged out automatically 
Symfony will authenticate the user automatically by calling this route 
 
 
Update a particular style sheet 
Update all style sheets in the scripts folder 
Write a style sheet to a file 
Compile format definitions and return them as string 
Compile a color value and return a hex or rgba color 
Try to shorten a hex color 
Convert hex colors to rgb 
Return a form to choose an existing style sheet and import it 
Export a style sheet 
Check the name of an imported file 
Create a format definition and insert it into the database 
Return an image as data string 
 
Run the controller and parse the template 
Display a wildcard in the back end 
Generate the module 
 
Find multiple style sheets by their IDs 
Adds the front end preview URL to the event 
Removes a front end authentication from the session 
Loads the front end user and checks its group access permissions 
Set the internal pointer to a particular file 
Unzip the current file and return its contents as string 
Return a list of all files in the archive 
Calculate the Unix timestamp from two hexadecimal values 
Update a particular RSS feed 
Delete old files and generate all feeds 
Generate all feeds including a certain archive 
Generate an XML files and save them to the root directory 
Add news items to the indexer 
Generate a URL and return it as string 
Return the link of a news article 
Return the names of the existing feeds so they are not removed 
Generate the content element 
Prepare the output 
Generate the content element 
 
Generate the module 
Adds the JWT cookie to the given response 
Clears the JWT cookie in the response 
Returns whether the response has a cookie with that name 
Index a page 
Search the index and return the result object 
Remove an entry from the search index 
Renders a Contao back end template with the given blocks 
Run the controller and parse the template 
Generate the module 
 
Replaces the FAQ insert tags 
 
 
Check permissions to edit table tl calendar events 
Set the end time to an empty string see 
Automatically set the end time if not set 
Add the type of input field 
Get all articles and return them as array 
Adjust start end end time of the event based on date span start Time and end Time 
Generate the module 
Ajax actions that do not require a data container object 
Ajax actions that do require a data container object 
Execute the post actions hook 
Instantiate a new user object 
Check whether the current user has a certain access right 
Return true if the current user is allowed to do the current operation on the current page 
Return true if there is at least one allowed excluded field 
Restore the original numeric file mounts see 
Set all user properties from a database record 
Generate the navigation menu and return it as array 
Sets the default locale based on the user language 
Get all news archives and return them as array 
 
Splits the ID attribute and returns the chunks 
Returns a string representation of the global PHP language array 
Adds the labels to the global PHP language array 
 
 
 
Check the selected value 
Return the preview image 
Sets the environment variable with the random secret 
Checks if there is at least one config file defined but none of the files exists 
 inheritdoc 
 
 
 
 
Parse the template 
Schedule a news feed update 
Return the manage feeds button 
Generate the widget and return it as string 
Check the account status and return true if it is active 
Find a user in the database 
Update the current record 
Regenerate the session ID 
Return true if the user is member of a particular group 
 inheritdoc 
 
 
 
Trigger the import User hook 
 
Check whether the target page and the article are published 
Generate the content element 
 
 
Generate the module 
Recursively get all book pages 
Validates the code which was entered by the user 
Generates the TOTP provision URI 
Generates the QR code as SVG and returns it as a string 
Returns a route collection build from all plugin routes 
Return if the file does not exist 
Generate the content element 
 
Run the controller and parse the login template 
Display a login form 
Generate the module 
Check permissions to edit the file system 
Only show the important part fields for images 
Add the file location instead of the help text see 
Check a file name and romanize it 
Return the sync files button 
Return the upload file button 
Return the delete file button 
Return the edit file source button 
Return the show file button 
Return a checkbox to protect a folder 
Return a checkbox to exclude a folder from synchronization 
Add an enclosure 
Generate the module 
Get all calendars and return them as array 
Display a wildcard in the back end 
Generate the module 
List a single record 
Format a value 
Adds the initialize php file 
Return if there are no files 
Generate the module 
Import a library and make it accessible by its name or an optional key 
Add a log entry to the database 
Return the referer URL and optionally encode ampersands 
Load a set of language files 
Check whether a language is installed 
Return the countries as array 
Return the available languages as array 
Return the timezones as array 
Set a cookie 
Convert a byte value into a human readable format 
Format a number 
Return the session hash 
Anonymize an IP address by overriding the last chunk 
Read the contents of a PHP file stripping the opening and closing PHP tags 
Convert an xlf file into a PHP language file 
Parse a date format string and translate textual representations 
Runs the command scheduler 
Checks if a database connection can be established and the table exist 
Colorize the log entries depending on their category 
Stores the referer in the session 
Returns the current request URI relative to the base path 
List a news article 
Add the source options depending on the allowed fields see 
Adjust start end end time of the event based on date span start Time and end Time 
Schedule a news feed update 
Feature unfeature a news item 
Check whether an object property exists 
Return all errors as string separated by a given separator 
Parse the template file and return it as string 
Generate the label and return it as string 
Generate the widget with error message and return it as string 
Return all attributes as string 
Return a single attribute 
Validate the user input and set the value 
Find and return a POST variable 
Recursively validate an input variable 
Take an associative array and add it to the object s attributes 
Check whether an option is checked 
Check whether an option is selected 
Return a selected attribute if the option is selected 
Return a checked attribute if the option is checked 
Check whether an input is one of the given options 
Extract the Widget attributes from a Data Container array 
Return the empty value based on the SQL string 
Return the empty value based on the SQL string 
Return either an empty string or null based on the SQL string 
 
 throws Invalid Configuration Exception 
Do not show the module if no calendar has been selected 
Generate the module 
Return the week days and labels as array 
Return all weeks of the current month as array 
Valid URL with special characters allowed see 
Insecure path potentially containing directory traversal 
Valid file name 
Display a wildcard in the back end 
Generate the module 
Count the total matching items 
Fetch the matching items 
 
Checks if the Request includes authorization or other sensitive information that should cause the cache to be bypassed 
Check permissions to edit table tl page 
Add an image to each page in the tree 
Auto generate an article alias if it has not been set yet 
Return all active layout sections as array 
Return the edit article button 
Return the paste article button 
Automatically generate the folder URL aliases 
Return the toggle visibility button 
 
 
Adds the parameters to the alias 
Forces the router to add the host if necessary 
Sets the context from the domain 
Extracts host and port from the domain 
Returns the auto item key from the parameters or the global array 
 
Adds the frontend route which is language aware 
Adds a route to redirect a user to the index page 
Adds the locale to the route if prepend locale is enabled 
Parse the template 
Find a content element in the TL CTE array and return the class name 
Render a row of a box and return it as HTML string 
Return the field explanation as HTML string 
Generate possible palette names from an array by taking the first value and either adding or not adding the following values 
Return a query string that switches into edit mode 
Compile buttons from the table configuration array and return them as HTML 
Compile global buttons from the table configuration array and return them as HTML 
Compile header buttons from the table configuration array and return them as HTML 
Initialize the picker 
Return the picker input field markup 
Build the sort panel and return it as string 
Invalidate the cache tags associated with a given DC 
Run the controller 
Render a page 
 
 
Parse the template 
Filter disabled groups 
Add an image to each record 
Generate a switch account button and return it as string 
Call the set New Password callback 
Store the date when the account has been added 
Check the selected value 
Generate the widget and return it as string 
Check permissions to edit table tl content 
Check access to a particular content element 
Return all content elements as array 
Return the group of a content element 
Adjust the DCA by type 
Show a hint if a Java Script library needs to be included in the page layout 
Add the type of content element 
Get all content elements and return them as array content element alias 
Get all forms and return them as array 
Get all articles and return them as array article teaser 
Dynamically set the ace syntax 
Add a link to the list items import wizard 
Add a link to the table items import wizard 
Return the link picker wizard 
Return the delete content element button 
Dynamically add flags to the single SRC field 
Dynamically add flags to the multi SRC field 
Extract the You Tube ID from an URL 
Extract the Vimeo ID from an URL 
Generate the module 
Recursively get all quicknav pages and return them as array 
Return the manage feeds button 
Check for a valid option see 
Generate the widget and return it as string 
Generate a checkbox and return it as string 
Generate the content element 
Check permissions to edit the table 
Add the new image size to the permissions 
List an image size 
Show a hint if a Java Script library needs to be included in the page layout 
 
Return the original values as associative array 
Set the current record from an array 
Set the current record from an array preserving modified but unsaved fields 
Mark a field as modified 
Save the current record 
Delete the current record and return the number of affected rows 
Lazy load related records 
Reload the data from the database discarding all modifications 
Detach the model from the registry 
Called when the model is attached to the model registry 
Called when the model is detached from the model registry 
Find a single record by its primary key 
Find a single record by its ID or alias 
Find multiple records by their IDs 
Find a single record by various criteria 
Find records by various criteria 
Find records and return the model or model collection 
Return the number of records matching certain criteria 
Compile a Model class name from a table name e g tl form field becomes Form Field Model 
Parse a database sql file 
 
Adds the fragments to the registry 
Returns the controller name from the service and method name 
Generate the module 
Update a particular RSS feed 
Delete old files and generate all feeds 
Generate all feeds including a certain calendar 
Generate an XML file and save it to the root directory 
Add events to the indexer 
Add an event to the array of active events 
Convert a UNIX timestamp to a Julian day 
Sort out protected archives 
Parse an item and return it as string 
Parse one or more items and return them as array 
Return the meta fields of a news article as array 
Generate a URL and return it as string 
Generate a link and return it as string 
 
 
 
 
Adds generic attributes and query parameters before rendering 
Redirect to the first active regular page 
Prepare the page object and redirect URL 
Generate the options 
Generate the widget and return it as string 
Replaces the trans insert tag 
 
 inheritdoc 
Find events of the current period by their parent ID 
Find upcoming events by their parent IDs 
Generate a regular page 
Return a response object 
Generate a regular page 
Get a page layout and return it as database result object 
Create a new template 
Create all header scripts 
Create all footer scripts 
Create a directory 
Remove a directory 
Recursively remove a directory 
Open a file and return the handle 
Rename a file or folder 
Copy a file or folder 
Recursively copy a directory 
Change the file mode 
Move an uploaded file to a folder 
Validate a path 
Clear the Contao session data if not a POST request 
List records 
Add the sender address as placeholder 
Add the sender name as placeholder 
 
 
Validates the session lifetime and logs the user out if the session has expired 
Parse the template 
 
Return if there are no files 
Generate the content element 
Check for maintenance mode 
Show a warning if there is no language fallback page 
 inheritdoc 
 
 
Initializes session access for SESSION FE DATA and SESSION BE DATA 
 
Parses a file and returns the code and namespace 
 
Checks if the request has an Origin header 
Generate the widget and return it as string 
Generate a particular subpart of the file tree and return it as HTML string 
Recursively render the filetree 
Translate the file IDs to file paths 
Check if a path is protected see 
 
Adds every bundle with a public folder as assets package 
Adds the Contao components as assets packages 
Returns a bundle package name emulating what a bundle extension would look like 
List all files and folders of the file system 
Create a new folder 
Move an existing file or folder 
Recursively duplicate files and folders 
Recursively delete files and folders 
Delete all files and folders that are currently shown 
Move one or more local files to the server 
Auto generate a form to rename a file or folder 
Auto generate a form to edit all records that are currently shown 
Load the source editor 
Protect a folder 
Save the current value 
Synchronize the file system with the database 
Generate a particular subpart of the tree and return it as HTML string 
Render the file tree and return it as HTML string 
Return a search form that allows to search results using regular expressions 
Return true if the current folder is mounted 
Check a file operation 
Return an array of encrypted folder names 
 
Build a query based on the given options 
Build a query based on the given options to count the number of records 
Generate the pagination menu and return it as HTML string 
Generate all page links separated with the given argument and return them as string 
Generate all page links and return them as array 
Generate a link and return the URL 
Generate the widget and return it as string 
Generate a particular subpart of the page tree and return it as HTML string 
Recursively render the pagetree 
Get the IDs of all parent pages of the selected pages so they are expanded automatically 
Checks whether the htaccess file grants access via HTTP 
Scans a line for an access definition 
Run the controller and parse the template 
Check whether the current element of the iterator is acceptable 
Logs the security exception to the Contao back end 
Return if the image does not exist 
Generate the content element 
 
Parse the template file and return it as string 
 
Adds the htaccess file or merges it with an existing one 
Adds files from Resources skeleton web to the application s web directory 
Purges old entry points 
Checks if an optional file exists 
 
Checks wether login is allowed front end only 
Checks whether the account is not active yet or not anymore 
 
 
Creates a resize configuration object 
Fetches the important part from the database 
Check options if the field is mandatory 
Parse the template file and return it as string 
Generate the options 
Generate the widget and return it as string 
Prepare a query string so the following functions can handle it 
Autogenerate the SET VALUES subpart of a query from an associative array 
Handle limit and offset 
Execute the query and return the result object 
Directly send a query string to the database 
Replace the wildcards in the query string 
Escape the values and serialize objects and arrays 
Send the HTTP request 
Generate the module 
 
 
Returns the argument name from the model class 
Strips the namespace from a class name 
Creates a template by name or from the custom Tpl field of the model 
Returns the type from the class name 
Generate the module 
Redirects the user to the Contao back end and adds the picker query parameter It will determine the current provider URL based on the value which is usually read dynamically via Java Script 
Generate the module 
Validate the input and set the value 
Generate the captcha values 
Generate hashes for the current time and the specified sum 
Generate the captcha question 
Generate the label and return it as string 
Generate the widget and return it as string 
Return the captcha question as string 
 
 
Find all feeds which include a certain news archive 
Find news feeds by their IDs 
Adds the DCA data to the Doctrine schema 
Returns the SQL definitions from the Contao installer 
Returns the index length if the index needs to be shortened 
Get the GD image object from an image file 
Get the GD image object for the specified dimensions 
Set the GD resource handle 
Save the GD image to a file 
Save the GD image to a file 
Convert a true color image to a palette image with colors and preserve transparency 
Count the number of colors in the image 
Detect if the image contains semitransparent pixels 
Do not validate unit fields 
Only check against the unit values see 
 
 
 
 
 
 
Compiles all possible aliases by applying dirname to the request e g news archive item news archive news 
Sorts routes so that the Final Matcher will correctly resolve them 
Show the raw markdown code in the back end 
Generate the content element 
Attach a file 
Attach a file from a string 
Send the e mail 
Extract the e mail addresses from the func get args arguments 
Add a hook to modify the template output 
Compile the template 
Return the locale string 
Return the datepicker string 
 
Generate the content element 
Run the controller 
Check access to a particular content element 
Generate the module 
Redirect to an internal page 
Return the URL to the jump To or first published page 
 
 
 
Converts the UUID value to a file path if possible 
Run the controller and parse the template 
Add the new channel to the permissions 
Trim values 
Check permissions to edit table tl newsletter recipients 
Set the recipient status to added manually if they are moved to another channel 
Check if recipients are unique per channel 
Check if a recipient is blacklisted for a channel 
List a recipient 
Return the toggle visibility button 
Replaces the asset insert tag 
Auto generate a form to edit the local configuration file 
Save the current value 
Return the name of the current palette 
Generate the module 
Generate the module 
Return a response object 
Compile the template 
Return a custom layout section 
Return the custom layout sections 
Point to Frontend add To Url in front end templates see 
Return all custom layout sections 
Set the cache headers according to the page settings 
Redirect to an external page 
Return a response object 
Generate the module 
Generate the module 
Show the related records 
Resend the double opt in token 
Return the resend token button 
Parse the template file and return it as string 
Find a subscription by its source table parent ID and e mail address 
Find active subscriptions by their source table and parent ID 
Find subscriptions that have not been activated for more than hours 
Return all style sheets of the current theme 
Add a link to edit the stylesheets of the theme 
Auto select layout css if responsive css is selected see 
 
 
 
Generate the widget and return it as string 
Show the Vimeo link in the back end 
Generate the module 
Trim values 
Generate the widget and return it as string 
 
 
Returns the task name from the argument list or via an interactive dialog 
Validate the input and set the value 
Generate the widget and return it as string 
Encode an internationalized domain name 
Decode an internationalized domain name 
Encode the domain in an e mail address 
Decode the domain in an e mail address 
Encode the domain in an URL 
Decode the domain in an URL 
Check the source folder 
Generate the module 
Generate the widget and return it as string 
Generate the label of the confirmation field and return it as string 
Generate the widget and return it as string 
Generate the widget and return it as string 
Return a form to choose a CSV file and import it 
Find a file by its primary key 
Find a file by its ID or UUID 
Find a file by its parent ID 
Find multiple files by their IDs or UUIDs 
Find a file by its UUID 
Find multiple files by their UUIDs 
Find a file by its path 
Find multiple files by their paths 
Find multiple files by UUID and a list of extensions 
Find all files in a folder 
Find all folders in a folder 
Adds the news ID to the front end preview URL 
Add a message 
Return the messages with a wrapping container as HTML 
Return the messages as HTML 
Reset the message system 
Check if there are error messages 
Check if there are any messages 
 
 
 
 
 
Validate the input and set the value 
Generate the widget and return it as string 
Returns the image sizes as options suitable for widgets 
Returns the image sizes for the given user suitable for widgets 
Loads the options from the database 
Filters the options by the given allowed sizes and returns the result 
Split the current request into fragments strip the URL suffix recreate the GET array and return the page ID 
Try to find a root page based on language and URL 
Overwrite the parent method as front end URLs are handled differently 
Redirect to a jump To page or reload the current page 
Check whether a back end or front end user is logged in 
Get the meta data from a serialized string 
Prepare a text to be used in the meta description tag 
Index a page if applicable 
Generate an RSS feed and return it as XML string 
Adjust the publication date 
Generate the content element 
Dumps the parameters into the parameters yml file 
Escapes and 
Returns the first available locale 
Returns the first eight accepted locales 
Returns an array of data from the imported CSV files 
Returns the uploaded files from a File Upload instance 
Returns the version number of a package 
Returns the version number as major minor patch 
Generate the widget and return it as string 
Generate the content element 
 
Re add some attributes if the field type is a number 
Generate the widget and return it as string 
 
Validate the subscription form 
Remove the recipient 
Maps known exceptions to HTTP exceptions 
Generate the widget and return it as string 
 inheritdoc 
Returns the labels from GLOBALS TL LANG based on a message ID like MSC view 
Loads a Contao framework language file 
Maps fragments to the globals array 
Run the controller and parse the template 
 
Initializes the Contao framework 
Find all feeds which include a certain calendar 
Add a new namespace 
Add multiple new namespaces 
Add multiple new classes with their file paths 
Autoload a class and create an alias in the global namespace 
Scan the module directories for config autoload php files and then register the autoloader on the SPL stack 
Find all published content elements by their parent ID and parent table 
Find all published content elements by their parent ID and parent table 
 
Run the controller and parse the template 
Check the uploaded files and move them to the target directory 
Generate the markup for the default uploader 
Get the files from the global FILES array 
Resize an uploaded image if neccessary 
 
 
Configures the contao image imagine service 
Reads the old contao image target path parameter 
Add FAQs to the indexer 
Find published pages by their PID 
Find the first published root page by its host name and language 
Find the first published page by its parent ID 
Find pages matching a list of possible alias names 
Find published pages by their ID or aliases 
Find all published subpages by their parent ID and exclude pages only visible for guests 
Find all published regular pages by their IDs and exclude pages only visible for guests 
Find all published regular pages by their parent IDs and exclude pages only visible for guests 
Find the language fallback page by hostname 
Finds the published root pages 
Find the parent pages of a page 
Find the first active page by its member groups 
Find a page by its ID and return it with the inherited details 
Register the contao dns fallback alias when the model is attached to the registry 
Unregister the contao dns fallback alias when the model is detached from the registry 
Get the details of a page including inherited parameters 
Generate a front end URL 
Generate an absolute URL depending on the current rewrite URL setting 
Return the slug options 
Modifies a URL from the URL generator 
 
Creates a picture configuration 
Creates a picture configuration item 
Trim values 
Check whether an input is one of the given options 
Generate the widget and return it as string 
Generates a symlink 
Validates a symlink 
Find recipients by their e mail address and parent ID 
Returns the database connection object 
Show the raw code in the back end 
Generate the content element 
 
Creates an installation specific folder in the temporary directory and returns its path 
Adds the index length on My SQL platforms for Doctrine DBAL 
 
 
Verifies the database connection and prepares the statement 
Executes the legacy hook if the Contao framework is booted 
Save the original group membership 
Restore the original group membership 
Set all user properties from a database record 
Create a picture instance from the given image path and size 
Get the picture element definition array 
Get the config for one picture source element 
Generate the widget and return it as string 
Standardize the ID 
Generate the widget and return it as string 
Check permissions to edit table tl page 
Make new top level pages root pages 
Make sure that top level pages are root pages 
Show a warning if there is no language fallback page 
Make the redirect page mandatory if the page is a logout page 
Check for modified pages and update the XML files if necessary 
Schedule a sitemap update 
Auto generate a page alias if it has not been set yet 
Automatically create an article in the main column of a new page 
Purge the search index if a page is being deleted 
Check the sitemap alias 
Prevent circular references 
Make sure there is only one fallback per domain thanks to Andreas Schempp 
Returns all allowed page types as array 
Return all page layouts grouped by theme 
Add an image to each page in the tree 
Return the copy page with subpages button 
Return the cut page button 
Return the paste page button 
Return the delete page button 
Automatically generate the folder URL aliases 
Generate the module 
Return the date and time strings 
 
 
Return the IDs of the allowed news archives as array 
Get all tables and return them as array 
Purge the search tables 
Purge the version table 
Purge the image cache 
Purge the script cache 
Purge the page cache 
Purge the internal cache 
Purge registrations that have not been activated within hours 
Purge opt in tokens 
Remove old XML files from the share directory 
Generate the Google XML sitemaps 
Regenerate the XML files 
Generate the symlinks in the web folder 
Generate the internal cache 
Rotate the log files 
Add multiple new templates with their file paths 
Return a template path 
Return the path to the default template 
Find the templates in the Contao resource folders 
Find published comments by their source table and parent ID 
Count published comments by their source table and parent ID 
Remove name attributes in the back end so the form is not validated 
Generate the form 
Process form data store it in the session and redirect to the jump To page 
Initialize the form in the current session 
Display a wildcard in the back end 
Generate the module 
Validate input and set value 
Parse the template file and return it as string 
Generate the label of the confirmation field and return it as string 
Generate the widget and return it as string 
Checks whether the scope attributes matches a scope 
Create the date ranges 
Return the begin of the week as timestamp 
Return a regular expression to check a date 
Return an input format string for a particular date e g YYYY MM DD 
Convert a date string into a Unix timestamp using the format string 
Convert a PHP format string into a Java Script format string 
Return the numeric date format string 
Return the numeric time format string 
Return the numeric datim format string 
Parse a date format string and translate textual representations 
Resolve the custom modifiers 
Checks if the database is older than version 
Checks the database configuration 
Returns the available SQL templates 
Recursively compile the navigation menu and return it as HTML string 
Generate the module 
Create links and remember pages that have been processed 
Get the maximum file size that is allowed for file uploads 
Find an opt in token by its related table and ID 
Find opt in tokens by their related table and ID 
Returns the related records 
Set the related records 
Generate the widget and return it as string 
 
 
 
Asks a question with the given label and hides the input 
Generate an error page 
Return a response object 
Prepare the output 
Do not display the module if there are no articles 
Generate the module 
 
Adds the back end user navigation 
 
 
Returns a field value from the page model 
Add a warning if there are users with access to the template editor 
Return all excluded fields as HTML drop down menu 
Load a set of DCA files 
Run the controller and parse the password template 
 
Return if there are no files 
Generate the content element 
Generate the content element 
 
 
 
 
Generate the module 
Generate the widget and return it as string 
 
Generate the module 
 
Generate a HTML form with queries and return it as string 
Compile a command array for each database modification 
Get the DCA table settings from the DCA cache 
Get the DCA table settings from the database sql files 
Get the current database structure 
 
 
Return the active modules as array 
Add a file to the combined file 
Add multiple files from an array 
Generates the files and returns the URLs 
Generate the combined file and return its path 
Generates the debug markup 
Generate the combined file and return its path 
Handle CSS files 
Handle SCSS LESS files 
Fix the paths 
Check if the file has a media tag 
Parse the template file and return it as string 
Start a new block 
End a block 
Insert a template 
Find a particular template file and return its path 
Load all configuration files 
Mark the object as modified 
Save the local configuration file 
Add a configuration variable to the local configuration file 
Permanently set a configuration value 
Permanently remove a configuration value 
Preload the default and local configuration 
Override the database and SMTP parameters 
Escape a value depending on its type 
Throws an exception if the document root is insecure 
Adds the Contao headers to the Symfony response 
Fetches and stores HTTP headers from PHP 
 throws Logic Exception 
Replaces the current session data with the stored session data 
Writes the current session data to the database 
Returns the session bag 
Return all attributes as string 
 
 
 
 
Generate an error page 
Return a response object 
Prepare the output 
 
Generate the widget and return it as string 
 
Counts the login attempts and locks the user if it reaches zero 
Recursively replace insert tags with their values 
Replace insert tags with their values 
Return a form to choose an existing CSV file and import it 
Generate the e mail object and return it 
Compile the newsletter and send it 
Return a form to choose a CSV file and import it 
Remove the newsletter subscriptions of members who close their account 
Synchronize newsletter subscription of new users 
Activate newsletter subscription of new users 
Synchronize the newsletter subscriptions if the visibility is toggled 
Synchronize newsletter subscription of existing users 
Update a particular member account 
Purge subscriptions that have not been activated within hours 
Get all editable newsletters and return them as array 
Add newsletters to the indexer 
Ignore the field if nothing has been entered 
Generate the widget and return it as string 
Show the You Tube link in the back end 
Generate the module 
Version update 
Version update 
Version update 
Version update 
Version update 
Version update 
Version update 
Version update 
Version update 
Version update 
Scan the upload folder and create the database entries 
Update all File Tree fields 
Convert a single source field to UUIDs 
Convert a multi source field to UUIDs 
Convert an order source field to UUIDs 
Generate a helper object based on a field value 
Create a content element 
Renders a form to accept the license 
Renders a form to set the install tool password 
Renders a form to log in 
The method preserves the container directory inside the cache folder because Symfony will throw a compile error exception if it is deleted in the middle of a request 
The method runs the optional cache warmers because the cache will only have the non optional stuff at this time 
Renders a form to set up the database connection 
Renders a form to adjust the database tables 
Renders a form to import the example website 
Returns a redirect response to reload the page 
Adds the default values to the context 
 
Generates the symlinks in the web directory 
The method will try to generate relative symlinks and fall back to generating absolute symlinks if relative symlinks are not supported see 
Returns a finder instance to find files in the given path 
Filters nested paths so only the top folder is symlinked 
List an image size item 
Creates a new root node and dispatches an event to fill it with child nodes 
Generate the module 
Generate the dayil menu 
Return the week days and labels as array 
Return all weeks of the current month as array 
Sort out protected archives 
Get all events of a certain period 
Add an event to the array of active events 
Return the begin and end timestamp and an error message as array 
Listens to the contao installation initialize event 
Runs a command and returns the error if any 
Fetch a model by table name and primary key 
Fetch a model by one of its aliases 
Register a model in the registry 
Unregister a model from the registry 
Check if a model is registered 
Register an alias for a model 
Check if an alias is registered 
Generate the module 
Create a new user and redirect 
Send the activation mail 
Activate an account 
Re send the activation mail 
Send an admin notification e mail 
Redirects the authenticated user 
 
Find an article by its ID or alias and its page 
Find a published article by its ID or alias and its page 
Find all published articles by their parent ID and column 
Clean the global GPC arrays 
Return a GET variable 
Return a POST variable 
Return a POST variable preserving allowed HTML tags 
Return a raw unsafe POST variable 
Return a raw unsafe and unfiltered POST variable 
Return a COOKIE variable 
Set a GET variable 
Set a POST variable 
Set a COOKIE variable 
Sanitize the variable names thanks to Andreas Schempp 
Strip HTML and PHP tags preserving HTML comments 
Clean a value and try to prevent XSS attacks 
Decode HTML entities 
Preserve basic entities by replacing them with square brackets e g amp becomes amp 
Encode special characters which are potentially dangerous 
Fallback to the session form data if there is no post data 
Generate the module 
Logout the current user and redirect 
 
Generate the yearly menu 
Generate the monthly menu 
Check whether a field exists 
Fetch the current row as enumerated array 
Fetch the current row as associative array 
Fetch a particular field of each row of the result 
Fetch all rows as associative array 
Get the column information and return it as array 
Go to the first row of the current result 
Go to the previous row of the current result 
Go to the next row of the current result 
Go to the last row of the current result 
Return the current row as associative array 
Get all channels and return them as array 
Add the type of input field 
Return a list of form fields 
Toggle the visibility of a form field 
Generate the widget and return it as string 
Generate a checkbox and return it as string 
Find published news items by their parent ID 
Count published news items by their parent ID 
Find published news items with the default redirect target by their parent ID 
Find published news items by their parent ID 
Find all published news items of a certain period of time by their parent ID 
Count all published news items of a certain period of time by their parent ID 
Check permissions to edit the table 
Add an image to each record 
Check for modified style sheets and update them if necessary 
Return all template folders as array 
Return the edit CSS button 
Map an exception to an error screen 
Checks the exception chain for a known exception 
 
Return the edit header button 
Render the diff and return the generated markup 
Add the breadcrumb menu 
Create a new template 
Compares the current to the original template 
Return the drag file button 
Recursively scan the templates directory and return all folders as array 
Return the edit file source button 
 
Checks if there is an authenticated user 
 
 throws Invalid Argument Exception 
Run the controller and parse the template 
Find ten matching usernames and return them as JSON 
Check permissions to use table tl undo 
Show the deleted records 
Adds the feeds to the page header 
Check whether the article is published 
Generate the module 
Print an article as PDF and stream it to the browser 
 
 
 
 
Adds backwards compatibility for the prepend locale parameter 
Adds the database server version to the Doctrine DBAL configuration 
 
Find a particular template file and return its path 
Return all template files of a particular group as array 
Generate a front end module and return it as string 
Generate an article and return it as string 
Generate a content element and return it as string 
Generate a form and return it as string 
Return the languages for the Tiny MCE spellchecker 
Calculate the page status icon name based on the page parameters 
Check whether an element is visible in the front end 
Replace insert tags with their values 
Replace the dynamic script tags see 
Compile the margin format definition based on an array of values 
Add a request string to the current URL 
Redirect to another page 
Replace the old back end paths 
Generate a front end URL 
Convert relative URLs in href and src attributes to absolute URLs 
Send a file to the browser so the save as dialogue opens 
Load a set of DCA files 
Redirect to a front end page 
Get the parent records of an entry and return them as string which can be used in a log message 
Take an array of file paths and eliminate the nested ones 
Take an array of pages and eliminate the nested ones 
Add an image to a template 
Add enclosures to a template 
Set the static URL constants 
Add a static URL to a script 
Get the details of a page including inherited parameters 
Remove old XML files from the share directory 
Resize an image and crop it if necessary 
Resize an image and crop it if necessary 
Generate an image tag and return it as string 
Convert a DCA file configuration to be used with widgets 
Return the IDs of all child records of a particular record see 
Return the IDs of all parent records of a particular record 
Create an initial version of a record 
Create a new version of a record 
Return the files matching a GLOB pattern 
Instantiate the Database object Factory 
Prepare a query and return a Statement object 
Execute a raw query and return a Result object 
Auto generate a FIND IN SET statement 
Return all tables as array 
Determine if a particular database table exists 
Return all columns of a particular table as array 
Determine if a particular column exists 
Determine if a particular index exists 
Return the field names of a particular table as array 
Check whether a field value in the database is unique 
Return the IDs of all child records of a particular record see 
Return the IDs of all parent records of a particular record 
Lock one or more tables 
Return the table size in bytes 
Return a universal unique identifier 
Quote the column name if it is a reserved word 
 
Generate the widget and return it as string 
Return all front end modules as array 
Return all editable fields of table tl member 
Return all layout sections as array 
Load the default activation text 
Load the default password text 
Dynamically add flags to the multi SRC field 
Dynamically change attributes of the pages field 
Return an environment variable 
Return the absolute path to the script e g home www html website index php 
Return the relative path to the script e g website index php 
Return the document root e g home www user 
Return the request URI path query e g contao index php id 
Return the first eight accepted languages as array 
Return the HTTP Host 
Return true if the current page was requested via an SSL connection 
Return the current URL without path or query string 
Return the real REMOTE ADDR even if a proxy server is used 
Return the SERVER ADDR 
Return the relative path to the base directory e g path 
Return the operating system and the browser name and version 
Find an active member by their e mail address and username 
Find an unactivated member with a valid opt in token by their e mail address 
 
 
Generate the module 
Activate a recipient 
Add a new recipient 
Checks if the request can be indexed and forwards it accordingly 
 
 
 
Generate the module 
Return the current theme as string 
Return the back end themes as array 
Return the Tiny MCE language 
Return a list of Tiny MCE templates as JSON string 
Add the request token to the URL 
Handle runonce files 
Open a back end module and return it as HTML 
Get all searchable pages and return them as array 
Add the file meta information to the request 
Add a breadcrumb menu to the page tree 
Add an image to each page in the tree 
Return the system messages as HTML 
Add a breadcrumb menu to the file tree 
Convert an array of layout section IDs to an associative array with IDs and labels 
Generate the DCA picker wizard 
Add the custom layout section references 
Get all allowed pages and return them as string 
Recursively get all allowed pages and return them as string 
Get all allowed files and return them as string 
Recursively get all allowed files and return them as string 
Set the important part settings 
Get the important part settings 
Set the zoom level 
Get the path of the resized image 
Get the cache name 
Resize the image 
Prepare image object 
Prepare important part object 
Prepare resize configuration object 
Calculate the resize coordinates 
Get the relative path to an image 
Generate an image tag and return it as string 
Resize or crop an image and replace the original with the resized version 
Create an image instance from the given image path and size 
Resize an image and store the resized version in the image target folder 
Convert sizes like em cm or pt to pixels 
Run the controller 
Return the token 
Validate a token 
Check whether a property is set 
Create a new collection from a database result 
Return the current row as associative array 
Set the current row from an array 
Save the current model 
Delete the current model and return the number of affected rows 
Lazy load related records 
Go to the next row 
Fetch a column of each row 
Trim the values and add new languages if necessary 
Generate the widget and return it as string 
Adds the request attribute to the request 
Generate the module 
Generate the widget and return it as string 
Return a form to choose a CSV file and import it 
Logs successful user impersonations 
Reads the cookies from the request and injects them into the storage 
Adds the token cookies to the response 
 
Compiles the command required to update the database 
Checks engine and collation and adds the ALTER TABLE queries 
Adds the legacy table options to remain backwards compatibility with database sql files 
Create the initial version of a record 
Create a new version of a record 
Restore a version 
Compare versions 
Render the versions dropdown menu 
Add a list of versions to a template 
Return the edit URL 
Return the username 
Return the user ID 
Implode a multi dimensional array recursively 
Create the file if it does not yet exist 
Truncate the file and reset the file pointer 
Delete the file 
Close the file handle 
Return the file content as string 
Write to a file 
Rename the file 
Copy the file 
Resize the file if it is an image 
Send the file to the browser 
Write data to a file 
Return the path info binary safe 
Return a redirect response object 
 
Checks if a front end user is authenticated 
Checks if a back end user is authenticated 
Gets the front end username from the session 
Gets the back end username from the session 
Tells whether the front end preview can show unpublished fragments 
Find a published group by its ID 
Find all active groups 
Find the first active group with a published jump To page 
Shorten a string to a given number of characters 
Shorten a HTML string to a given number of characters 
Decode all entities 
Generate an alias from a string 
Prepare a slug 
Censor a single word or an array of words within a string 
Encode all e mail addresses within a string 
Extract all e mail addresses from a string 
Split a friendly name e address and return name and e mail as array 
Highlight a phrase within a string 
Split a string of comma separated values 
Convert a string to XHTML 
Convert a string to HTML 
Parse simple tokens 
Convert file paths inside src attributes to insert tags 
Convert insert tags inside src attributes to file paths 
Sanitize a file name 
Resolve a flagged URL such as assets js core js static 
Convert the character encoding 
Convert special characters to HTML entities preventing double conversions 
Standardize a parameter strip special characters and convert spaces 
Return an unserialized array or the argument 
Split a string into fragments remove whitespace and return fragments as array 
Strip the Contao root dir from the given absolute path 
Find a published FAQ from one or more categories by its ID or alias 
Adds the referer ID to the request 
Sets the response from the exception 
If the legend already exists nothing will be changed 
If position is PREPEND or APPEND pass a legend as parent otherwise pass a field name 
If no legend is given the field is removed everywhere 
Converts a palette string to a configuration array 
Converts a configuration array to a palette string 
Adds a new legend if possible or appends to the last one 
Having the same field in multiple legends is not supported by Contao so we don t handle that case 
Check permissions to edit table tl news archive 
Add the new calendar feed to the permissions 
Return the IDs of the allowed calendars as array 
Add a file to the archive 
Add a file from a string to the archive 
Write the central directory and close the file handle 
Convert a Unix timestamp to a hexadecimal value 
 
Add comments to a template 
Add a form to create new comments 
Replace bbcode and return the HTML string 
Convert line feeds to br tags 
Purge subscriptions that have not been activated within hours 
Add the subscription and send the activation mail double opt in 
Change the subscription status 
Notify the subscribers of new comments 
Parse the template file and return it as string 
Parse the template file and print it to the screen 
Return a response object 
Return a route relative to the base URL 
Return the preview route 
Returns a translated message 
Returns an asset path 
Minify the HTML markup preserving pre script style and textarea tags 
Generate the markup for a style sheet tag 
Generate the markup for a Java Script tag 
Flush the output buffers 
Parse the template 
Get one object instance per table 
Return an array that can be used by the database installer 
Create the extract from the DCA or the database sql files 
Import a theme 
Compare the theme tables with the local database and check whether there are custom layout sections 
Extract the theme files and write the data to the database 
Export a theme 
Add the table tl theme 
Add the table tl style sheet 
Add the table tl module 
Add the table tl image size 
Add the table tl files to the XML and the files to the archive 
Add a data row to the XML document 
Recursively add a folder to the archive 
Add templates to the archive 
Adds a file or folder with its parent folders 
Moves a file or folder to a new location 
Copies a file or folder to a new location 
Removes a file or folder 
Update the hashes of all parent folders of a resource 
Synchronize the file system with the database 
Get the folder hash from the databse by combining the hashes of all children 
Check if the current resource should be synchronized with the database 
Check if a file or folder is excluded from synchronization 
Adds a link to the Contao Manager in the back end navigation 
Generate the module 
Set the new password 
Create a new user and redirect 
Run the controller 
Check whether the last script execution was less than a minute ago 
Runs all Composer tasks to initialize a Contao Managed Edition 
Check for modified style sheets and update them if necessary 
Schedule a style sheet update 
List a style sheet 
 
 
Adds the initialize php file 
Generate the module 
Generate the content element 
Automatically set the category if not set 
Schedule a style sheet update 
Update a style sheet after a version has been restored 
 
 
Return a session variable 
Set a session variable 
Remove a session variable 
Return the session data as array 
Set the session data from an array 
Append data to the session 
Parse the template file and return it as string 
Generate the widget and return it as string 
Duplicates the configuration and overrides the current picker alias 
Encodes the picker configuration for the URL 
Initializes the object from the URL data 
 
Returns the back end user object 
Encrypt a value 
Decrypt a value 
Initialize the encryption module 
Check permissions to edit table tl comments 
Notify subscribers of a reply 
Check whether the user is allowed to edit a comment 
Send out the new comment notifications 
List a particular record 
Return the edit comment button 
Adds the cache invalidation tags for the source 
Sets the default locale based on the request or session 
Returns the locale from the request the session or the HTTP header 
Find a blacklist entry by its hash and PID 
 
Check permissions to edit table tl content 
List all records of a particular table 
Return all non excluded fields of a record as HTML table 
Insert a new row into a database table 
Assign a new position to an existing record 
Duplicate a particular record of the current table 
Duplicate all child records of a duplicated record 
Move all selected records 
Calculate the new position of a moved or inserted record 
Delete a record of the current table table and save it to tl undo 
Delete all selected records 
Recursively get all related table names and records 
Restore one or more deleted records 
Change the order of two neighbour database records 
Auto generate a form to edit the current database record 
Auto generate a form to edit all records that are currently shown 
Auto generate a form to override all records that are currently shown 
Save the current value 
Return the name of the current palette 
Delete all incomplete and unrelated records 
List all records of the current table as tree and return them as HTML string 
Generate a particular subpart of the tree and return it as HTML string 
Recursively generate the tree and return it as HTML string 
Show header of the parent table and list all records of the current table 
List all records of the current table and return them as HTML string 
Return a search form that allows to search results using regular expressions 
Return a select menu that allows to sort results by a particular field 
Return a select menu to limit results 
Generate the filter panel and return it as HTML string 
Return a pagination menu to browse results 
Return the formatted group header as string 
Return the formatted group header as string 
 
Canonicalizes a path preserving the directory separators 
Generate the markup for the Drop Zone uploader 
Find sent newsletters by their parent ID 
Find sent newsletters by multiple parent IDs 
Check permissions to edit table tl faq 
Add the type of input field 
Generate the content element 
Run the controller and parse the login template 
Add the welcome screen 
Output the template file 
Adjusts the logout link if the current user is impersonated 
 
Display a wildcard in the back end 
Generate the module 
Returns the options for the valid characters setting suitable for widgets 
 
 
Generate the widget and return it as string 
Parse the template file and return it as string 
Generate the widget and return it as string 
Generate the module 
Map field value to a proper Solr representation 
Map field value to a proper Solr representation 
Map field value to a proper Solr representation 
Maps given Content to a Document 
Returns an array of fields for the given content to be added to the corresponding block documents 
Returns an array of fields for the given content and language Code to be added to the corresponding block documents 
Returns an array of fields for the given content to be added to the corresponding Content document 
Returns an array of fields for the given content and language Code to be added to the corresponding Content document 
Returns an array of fields for the given location to be added to the corresponding Location document 
Map field value to a proper Solr representation 
Returns max depth of indexing for given content type 
 inheritdoc 
 
Receive the given signal and react on it 
Map field value to a proper Solr representation 
Finds content objects for the given query 
Performs a query for a single content object 
Finds Locations for the given query 
Indexes a content object 
Indexes several content objects 
Deletes a content object from the index 
Log warning while progress helper is running 
Map field value to a proper Solr representation 
Execute a HTTP request to the remote server 
Get formatted request headers 
Get array of search fields 
Map search field value to solr value using Field Value Mapper 
 
Extracts value object from hit returned by Solr backend 
 param mixed hit 
 param mixed hit 
 param Symfony Component Dependency Injection Container Builder container 
Map field value to a proper Solr representation 
Returns search hits for the given query 
Returns search hits for the given query 
Returns search hits for the given array of Solr query parameters 
Generate URL encoded query string 
Returns search targets for given language settings 
Returns all search targets without language constraint 
Indexes an array of documents 
Returns version of the document to be indexed in the always available core 
Deletes documents by the given query 
 todo implement purging for document type 
Commits the data to the Solr index making it available for search 
Perform request to client to search for records with query string 
Map field value to a proper Solr representation 
 
Get Endpoint with name 
Check if visitor is applicable to current criterion 
Map field value to a proper Solr representation 
Get sort field name 
Extracts search result from data returned by Solr backend 
Returns true if current configurations has several endpoints 
Map field value to a proper Solr representation 
Map field value to a proper Solr representation 
Processes connection configuration by flattening connection parameters and setting them to the container as parameters 
Creates needed search services for given connection name and parameters 
Creates boost factor map parameter for a given connection Name 
Creates indexing depth map parameter for a given connection Name 
Creates Endpoint definition in the service container 
Builds boost factor map from the given config 
Check if visitor is applicable to current criterion 
Map field value to a proper Solr representation 
Map field value to a proper Solr representation 
Get Solr range 
Escapes value for use in expressions 
Adds endpoints definition 
Adds connections definition 
 
 param e Z Publish SPI Persistence Content content param e Z Publish SPI Persistence Content Type content Type param string language Code param int max Depth param int depth 
Maps given content relations to an array of search fields 
Returns field name base on given depth 
Return index field type for the given content Type 
Map field value to a proper Solr representation 
Get boost factor for a Content field by the given content Type and field Definition 
Get boost factor for a Content meta field by the given field Name 
Create update XML for the given array of documents 
Check if visitor is applicable to current criterion 
Map field value to a proper Solr representation 
Returns a filtering condition for the given language settings 
Returns criteria for prioritized languages fallback 
Returns criteria for always available translation fallback 
Returns a list of language codes to be excluded when matching translation in given selected Language Code 
Check if visitor is applicable to current criterion 
Map field value to a proper Solr representation 
Return index field type for the given arguments 
Converts an array of facet builder objects to a Solr query parameters representation 
Map field value to a proper Solr representation 
Map Solr return array into a sane hash map 
Loads messages versions from WSDL 
Get Messages Versions from an imported WSDL file 
Load the WSDL contents to a queryable DOMXpath 
extract Message Version 
Evaluate an XPATH query on a given WSDL 
Loop all extracted operations from a wsdl and find their message versions 
 do Request override of Soap Client 
 param FFCriteria criteria 
Convert new codes Price PNR version to old format 
 param Fare Price Pnr With Booking Class Options Lower Fare Opt Lowest Fare Opt options 
Load fop Group 
Create a request message for a given message with a set of options 
Get the version number active in the WSDL for the given message 
Find the correct builder for a given message 
FOP Validate Form Of Payment Analyze the result from the message operation and check for any error messages 
Make status from a category DOMNode or default status 
Add infant 
If there is no passenger node at traveller Info passenger Data traveller Information passenger create one 
Sets error status 
Checks if new status is worse than current status 
Set Transaction Flow Link Consumer Id 
Authenticate 
PNR Retrieve Retrieve an Amadeus PNR by record locator 
PNR Split 
Create a PNR using PNR Add Multi Elements 
PNR Add Multi Elements Create a new PNR or update an existing PNR 
PNR Retrieve And Display Retrieve an Amadeus PNR by record locator including extra info 
PNR Cancel 
PNR Display History 
PNR Transfer Ownership 
PNR Name Change 
Queue List get a list of all PNR s on a given queue 
Queue Place PNR Place a PNR on a given queue 
PNR Ignore Ignore an Amadeus PNR by record locator 
Queue Remove Item remove an item a PNR from a given queue 
Queue Move Item move an item a PNR from one queue to another 
Offer Create Offer 
Offer Verify Offer 
Offer Confirm Air Offer 
Offer Confirm Hotel Offer 
Offer Confirm Car Offer 
Fare Master Pricer Travel Board Search 
Fare Master Pricer Calendar 
Fare Price Pnr With Booking Class 
Fare Price Pnr With Lower Fares 
Fare Price Pnr With Lowest Fare 
Fare Informative Pricing Without PNR 
Fare Informative Best Pricing Without PNR 
Fare Check Rules 
Fare Get Fare Rules 
Fare Convert Currency 
Air Multi Availability 
Air Sell From Recommendation 
Air Flight Info 
Air Retrieve Seat Map 
Air Rebook Air Segment 
Command Cryptic 
Mini Rule Get From Pricing Rec 
Mini Rule Get From Pricing 
Mini Rule Get From ETicket 
Info Encode Decode City 
Point Of Ref Search 
Ticket Create TSTFrom Pricing 
Ticket Create TSMFrom Pricing 
Ticket Create TSMFare Element 
Ticket Create TASF 
Ticket Delete TST 
Ticket Delete TSMP 
Ticket Display TST 
Ticket Display TSMP 
Ticket Retrieve List Of TSM 
Ticket Display TSMFare Element 
Ticket Check Eligibility 
Ticket ATCShopper Master Pricer Travel Board Search 
Ticket Reprice PNRWith Booking Class 
Ticket Cancel Document 
Ticket Reissue Confirmed Pricing 
Ticket Process EDoc 
Ticket Process ETicket 
Doc Issuance Issue Ticket 
Doc Issuance Issue Miscellaneous Documents 
Doc Issuance Issue Combined 
Doc Refund Init Refund 
Doc Refund Ignore Refund 
Doc Refund Update Refund 
Doc Refund Process Refund 
Ticket Init Refund 
Ticket Ignore Refund 
Ticket Process Refund 
FOP Create Form Of Payment 
FOP Create Form Of Payment 
Price Xplorer Extreme Search 
Sales Reports Display Query Report 
Service Integrated Pricing 
Service Integrated Catalogue 
Sales Reports Displayor Summarized Report 
Sales Reports Display Net Remit Report 
Call a message with the given parameters 
Make message options 
Load security authenticate options from auth params 
Get the Transaction Flow Link Consumer ID 
Handles authentication sessions 
Handles post message actions 
Create the Soap Headers to be used on the subsequent request 
Get the Web Services server Endpoint from the WSDL 
Get the SOAPAction for a given message from the WSDL contents 
Generate a GUID 
Generates a Password Digest following this algorithm Hashed Password Base SHA nonce created SHA password as defined in https webservices amadeus com extranet kdb View Document do external Id wikidoc web services embedded security implementation guide header entries ws security usernametoken doc Status Published mp Id fla technical 
Make Soap Client options for Soap Header handler 
Return transaction code for stateful requests 
Load non required options if available 
Load inventory information 
FOP Create Form Of Payment Analyze the result from the message operation and check for any error messages 
Set the session data to continue a previously started session 
Extract the Messages and versions from the loaded WSDL file 
Get the version number active in the WSDL for the given message 
Get the WSDL ID for the given message 
Get the appropriate Soap Client for a given message 
Initialize Soap Client for a given WSDL ID 
Execute a method on the native Soap Client 
Create the correct element identifier for a given element 
Analyze response by looking for error category and message with the provided XPATH queries 
Analyze response by looking for error message and level with the provided XPATH queries 
Analyse with XPATH queries for error code and message provide fixed category 
Analyze response by looking for error category and message in nodes specified by name 
Make a Xpath queryable object for an XML string 
Converts a status code found in an error message to the appropriate status level 
Convert a Dom Node List of nodes containing a potentially partial error message into a string 
Analyze the response from the server and throw an exception when an error has been detected 
Find or create the correct handler object for a given message 
Loads Client parameters 
Load the session handler 
Load a request creator 
Extracts the message content from the soap envelope i e everything under the soap body 
Get substring between two strings 
Load an array of Pricing Option Group objects from the Pricing request options 
Load fare family pricing option and return it 
Load corporate negofare 
Load corporate unifares 
Load OB Fees 
load Method of Payment Details 
Payment Module information 
Load Supplementary data 
Load Mop Information 
Create Mop Detailed Data node if needed 
Load Specific Changes 
Search by geocode 
Search by country state iata code 
Search by Business ID 
Generates a somewhat random string of a given length 
Analysing a PNR Display History Reply 
Check if any parameter to the current function is not empty 
Check if all parameters to the current function are not empty 
Check if all parameters to the current function are integers 
Check if any parameter to the current function is true 
Get the NONCE base to be used when generating somewhat random nonce strings 
 param Price Xplorer Extreme Search Options params 
 param Price Xplorer Extreme Search Options params 
 param Price Xplorer Extreme Search Options params 
Check if the given Form Of Payment type is valid 
Load parameters from an associative array 
Load Session Handler 
Load Authentication Parameters 
Load Session Handler Parameters 
Load Request Creator Parameters 
Merges Pricing options 
Load corporate unifares 
Avoid double pricing groups when combining an explicitly provided override option with a specific parameter that uses the same override option 
Load Arrival Unknown element 
Analysing a PNR Reply 
Load Customer references 
 param Pnr Cancel Options params return void 
Load parameters from an associative array 
Load parameters from an associative array 
Load WSDL from config 
Load Override Soap Client parameter from config 
Load Transaction Flow Link options from config 
Prepare to send a next message and checks if authenticated 
Handles post message actions 
Analysing a PNR Name Change Reply 
Returns the errortext from a Queue Reply errorcode 
Load passenger segment references 
PNR Add Multi Elements call which only adds requested data to the message 
Make PNR Add Multi Elements structure from a Pnr Create Pnr Options input 
Load Segment itinerary 
Add Received From field if needed 
Load Arrival date info from Date Time 
Load all payment Data 
Availability options Keys are option types Request Options OPTION TYPE values are option arguments 
Create a Request Creator 
 param Cabin Options cabin Options 
Set fee ids if needed 
Set currency override code if needed 
Add Price Type 
Find the error message for a given error code 
Decode error processing level code 
Checks whether any of the given tokens matches the current lookahead 
Moves to the next token in the input string 
Tells the lexer to skip input tokens until it sees a token with the given value 
Moves the lookahead token forward 
Gets the literal for a given token 
Check if AUTH dictionary exists 
Upload VCL snippets 
Verifies whether super users are enabled in the magentomodule config dictionary 
Delete dictionary 
Upload WAF allowlist snippet 
Prepares ACL VCL snippets 
Get all dictionaries for active version 
Alter the X Magento Tags header 
Delete ACL entry 
List all image optimization default config options 
Fetch current version 
Fetch next version 
Check if active versions local and remote are in sync 
Determine currently service active version and the next version in which the active version will be cloned 
Fetches and validates active version 
Create auth item 
Prepares GA data for request 
Returns Website name 
Checks if API token is valid 
Prepares GA custom variables 
Returns default Country 
Get Default Site Location 
Generate GA CID 
Sends request to GA that the Fastly module is installed 
Sends request to GA every time the Test connection button is pressed 
Sends Fastly configured not configured request to GA 
Calculates number of days since Fastly module installation 
Sends CURL request to GA 
Renders ESI Geo Ip block 
Initialise form fields 
Render array cell for prototype JS template 
Get list of store views 
Options getter 
Delete dictionary item 
Apply range 
Create ACL entry for specific ACL 
Upload Blocking snippets 
Prepares ACL VCL snippets 
Prepares blocked countries VCL snippet 
Get custom snippets 
Send API purge request to invalidate cache by pattern 
Upload VCL snippets 
Validate custom snippet naming convention vcl snippet type priority short name description vcl 
Save WAF Page 
Return historic stats 
Deletes the specified custom snippet VCL file 
Get ACL 
Check feed for modification 
Fetches last github version 
Create dictionary item 
Get all ACL entries for active version and current ACL 
Purge by content type 
Injects modlyies to configuration 
Purge a single URL 
Purge Fastly by a given surrogate key 
Purge all of Fastly s CDN content Can be called only once per request 
Send purge request via Fastly API 
Get the logged in customer details 
List detailed information on a specified service 
Clone the current configuration into a new version 
Add comment to the specified version 
Upload a VCL for a particular service and version 
Set the specified VCL as the main 
Validate the version for a particular service and version 
Activate the current version 
Creating and updating regular VCL snippets 
Update a dynamic snippet 
Performs a lookup to determine if VCL snippet exists 
Creates a new condition 
Creates a new header 
Creates a new Response Object 
Gets the specified Response Object 
Creates a new Request Settings object 
Retrieves a specific Request settings object 
Removes the specified Request Settings object 
List all backends for a particular service and version 
Configure Backend settings 
Send message to Slack channel 
Create named dictionary for a particular service and version 
Get dictionary item list 
Fetches dictionary by name 
Get auth dictionary 
Check if authentication dictionary is populated 
Create dictionary items 
Delete single Dictionary item 
Upsert single Dictionary item 
Get ACL container info 
Delete named ACL for a particular service and version 
Fetch ACL entry list for particular ACL 
Upsert single ACL entry 
Delete single ACL entry from specific ACL 
Update single ACL entry 
Query for historic stats 
Check if image optimization is enabled for the Fastly service 
Configure the image optimization default config options 
Retrieve Fastly service details 
Retrieve Web Application Firewall settings 
Wrapper for API calls towards Fastly service 
Check if request is limited 
Get Fastly service image optimization status 
Purge by content type 
Converts Fastly serialized data to JSON format 
On Off switch based on config value 
Wrapper for original rotate 
Fastly implementation of rotation 
Fastly implementation of resize 
Return resized product image information 
Wrapper for original get Url 
Creates a force lossy url param or url param depending if IO is disabled or enabled 
Creates a url with fastly parameters 
Compiles the fastly GET parameters 
Upload snippet with updated IO default config options 
Set x esi header on ESI response request If omitted causes issues with embedded esi tags 
Upload Blocking snippets 
Prepares ACL VCL snippets 
Prepares blocked countries VCL snippet 
Return cache type Varnish if Fastly is configured 
Upload VCL snippets 
Checking service details 
Upload Auth VCL snippets 
If old configuration values exist they re fetched and saved to new config paths This script will only execute on module version 
Config path changes 
GA changes 
Convert serialized data to magento supported serialized data 
Get a list of all modules 
Save uploaded file before saving config value 
Check if block can be displayed 
Get content types as option array 
Create ACL 
Verifies weather or not auth settings snippet exists on specified Fastly version 
Returns all module data from database 
Get the WAF page content 
Trigger purge if set 
Set flag for purging if Fastly is switched off 
Get all domains for active version 
Check if authentication users are available 
Retrieve element HTML markup 
Get pixel ratio values 
Get checked values 
Returns Modly node config 
Insert text input for Modly config 
Remove scope label 
Get custom snippet 
Purge by content type 
Checks if host is one of Magento s configured domains 
Get Geo IP action 
Gets the dialog message in the locale of the target store 
Checking service details 
Prevent Magento from executing purge requests on Varnish when Fastly is enabled 
Set x esi header if block contains ttl attribute 
If Fastly CDN is enabled it sends one purge request per tag 
Return false if purging is not allowed for object instance 
Get all Auth items for active version 
 
Upload WAF Bypass snippets 
Prepares ACL VCL snippets 
Edit custom snippet 
Get all dictionaries for active version 
Adjust srcset if required 
Delete auth item 
Get all backends for active version 
Performs cache cleanup and purge all on Fastly service Should be used when Preserve static assets on purge is enabled 
Save Error Page Html 
Set appropriate Cache Control headers Set Fastly stale headers if configured 
Add a debug header to indicate this request has passed through the Fastly Module This is for ease of debugging 
Delete auth 
Gte a list of all modules 
Enable Fastly 
Disable Fastly 
Set Fastly Service ID 
Set Fastly API Token 
Upload default VCL conditions and requests 
Upload Image Optimization settings 
Verifies whether or not the blocking settings snippet exists on specified Fastly version 
Fetch all manifests from the repository 
Check if the Fastly service is already configured 
Predispatch admin user login success 
Flush Fastly CDN cache 
Determines should Image optimization be used 
Determines should Image optimization pixel ratios be used 
Get store ID for country 
Filter country code mapping by priority 
Return generated magento fastly varnish vcl configuration file 
Returns VCL snippet data 
Get regexs for design exceptions Different browser user agents may use different themes Varnish supports regex with internal modifiers only so we have to convert pattern i U into Ui pattern 
Validate custom snippet data 
Process blocked items depending on blocking type 
 
 
 
 
 
 
 
 
 
 
Matches a path in the router 
Plains a text Strips everything evil out 
Publish imported articles 
React to a config object being deleted 
Get taxonomy permissions 
 
 
 
 
 
 
 
 
 
 
 
 
 
Lock 
Throttle 
Get Estimate doesn t require lock 
Get new ratio 
Lock 
set 
Throttle 
Get Estimate doesn t require lock 
Get storage key 
Fetches the branches via the git branch command 
Returns the log level mapping for an event 
 
Adds a log message using the level defined in the mappings 
 
Checks whether a repository has already been cloned to this directory 
Runs a Git command and returns the output 
Returns whether HEAD is up to date with its remote tracking branch 
Returns whether HEAD is ahead of its remote tracking branch 
This is synonymous with git push origin tag v 
This is synonymous with git push tags origin 
Create a new branch and check it out 
Adds a remote to the repository 
Returns the fetch or push URL of a given remote 
Executes a git clone command 
Record changes to the repository If only one argument is passed it is assumed to be the commit message Therefore git commit Message yields a git commit am Message command 
Create an empty git repository or reinitialize an existing one 
 code git mv orig txt dest txt 
 code git rm oldfile txt 
 code git show v 
Fetches the Tags via the git branch command 
Set an alternate private key used to connect to the repository 
Set whether or not to stream real time output to STDOUT and STDERR 
For example passing the git 
Executes a git init command 
Executes a git clone command and returns a working copy object 
The command is simply a raw command line entry for everything after the Git binary For example a git config l command would be passed as config l via the first argument of this method 
Builds the command line options for use in the Git command 
Renders the arguments and options for the Git command 
Given a file iterator pass each to a Humbug Mutable instance which is used to generate mutations and store the instructions for applying and reversing them as a set of mutables instances of Humbug Mutation 
 param configuration Dir return string 
Render message where the initial test run did not pass excl incomplete skipped risky tests 
Render message where the initial test run didn t pass excl incomplete skipped risky tests 
Render a progress marker T The test run timed out possibly due to an infinite loop or underestimated timeout E The test run hit a fatal error either kicked out from a test or due to a Humbug issue M The test run was successful The mutation went undetected by the unit tests The test run included a fail condition The mutation was detected 
Render a shadow marker i e a mutation whose source code line is not covered by any test based on current code coverage data 
Render message that mutation testing loop is starting 
Utility function to prefix output lines with an indent 
Extract failure details and reformat into human readable form 
Not all additions can be mutated 
Execute the command 
Replace any integer with its sign inverted i e multiply by 
 param sources Dirs param exclude Dirs param ch Dir param timeout param text Log File param json Log File 
 param Input Interface input param Output Interface output return string null 
Replace with with or increment 
Get tokens use token get all but post process to interpolate new line markers so we can check the line number of each token 
Reconstruct a string of source code from its constituent tokens 
Based on the current file generate mutations 
Replace return this with return null 
Replace any return statement contained in brackets with null but retain the statement and move to before the return call This isn t perfect the statement might evaluate to null anyway 
Replace with with and float between and is incremented by one and any float greater than is replaced with 
Parse the test adapter result output and count ok results 
Adds a php env name XXX value YYY php to set environment variables and generates the php block if not present 
Retrieve any of the original input options 
Get the cache directory 
Set the cache directory of the project being mutated 
Get the cache directory of the project being mutated 
Options to pass to adapter s underlying command 
Get a test framework adapter Creates a new one based on the configured adapter name passed on the CLI if not already set 
Generate Mutants 
For debug and logging purposes 
Generate a new Job script to be executed under a separate PHP process 
Finds the next token in token array after a given index param array tokens Token array to lookup param int index Position to start lookup at param array exclude Tokens Excluded tokens list 
Finds the next token value in token array before a given index param array tokens Token array to lookup param int index Position to start lookup at param array exclude Tokens Excluded tokens list 
 param Process process param Adapter Abstract test Framework Adapter param callable on Progress Callback 
Replace any float with its sign inverted i e multiply by 
Runs the tests suite according to Runner set options and the execution order of test case if any It then returns an array of two elements First element is a boolean result value indicating if tests passed or not Second element is an array containing the key stdout which stores the output from the last test run 
Wrangle XML to create a PHPUnit configuration based on the original that allows for more control over what tests are run allows JUnit logging and ensures that Code Coverage for Humbug use whitelists all of the relevant source code 
Creates a new link bit Expert Disco Proxy Configuration Method Generator Bean Method 
 override Enforces generation of Proxy Manager Generator Method Generator 
Helper method to generate the method body for managing lazy bean instances 
Helper method to generate the code to initialize a bean 
Helper method to generate the method body for managing non lazy bean instances 
Helper function to cast any value to a boolean representation 
 
Creates a new link bit Expert Disco Proxy Configuration Method Generator Bean Post Processor Method 
 
 
Sets the directory in which Proxy Manager will store the generated proxy classes in 
Sets the link Proxy Manager Autoloader Autoloader Interface that should be used by Proxy Manager to load the generated classes 
Returns the Proxy Manager configuration based on the current link bit Expert Disco Bean Factory Configuration 
 param string class Name param Closure initializer 
Creates an instance of the given config Class Name 
 
Converts the Parameter annotations to the respective get Parameter method calls to retrieve the configuration values 
View request profile list 
View request profile page 
Returns lines from log file 
Deletes all request profiles 
Initialise request profile collection based on filters set on request 
Returns sorted visible debug panels 
Initialises logging by registering commong log files 
Returns list of events dispatched during request This is extracted from data captured by Varien Profiler 
Returns a list of called observers during request Observers are determined based on Varien Profiler timers 
Captures information from controller 
Captures layout information 
Adds block 
Returns block information associated to specified block name 
Returns information about instantiated rendered blocks 
Adds loaded collection 
Returns information about loaded collections 
Adds loaded model 
Returns information about captured models 
Sets request query from current sql profiler 
Serialize fields that are stored in info blob 
Initialize persistent fields that are used as filters and prepare info blob 
Initialize fields that are saved in info blob 
Cron jobs that deletes expired request info 
Removes configured number of days from specified date 
Don t use translation for our debug module 
Returns url to specified request profile page 
Returns number formatted based on current locale 
Returns an option array where every element has its value and label filled in with elements from passed array 
Enable SQL profiler 
Disable SQL profiler 
Runs specified SQL 
Returns stack trace for specified query 
Returns query referenced in request parameters 
Captures rendering start for specified block 
Captures rendering completion for specified block 
Captures layout information 
Returns layout updates processed during the request 
Returns design descriptive properties 
Returns request info 
Returns url for request list with current filters 
Renders an array as text 
Iterates an array and prints its keys and values 
Prints recursively a value We don t test for cyclic references for compound types e g array 
Builds a tree based on block recorded information 
Returns a tree html representation for layout tree 
Renders a rendering tree node 
Returns request path based on REQUEST URI 
Wrapper for getallheaders 
Returns an url for our module route and default store 
Returns a string representation for current store website name and store name 
Returns module configuration file 
Sets active status for specified module 
Changes status for SQL profiler 
Enable disables Full Page Cache debug 
Changes status for template and block hints 
Searches configuration keys 
Delete template hints related configurations 
Deletes all saved request profiles 
Returns layout files that have updates for specified handle 
Returns layout updates added via Admin and stored in database 
Captures information from specified collection 
View layout handle details 
Returns layout handles for specified request profile 
Returns html for http methods select 
Returns html for limit selects 
Returns position range for specified log file 
Initiates start range for all registered files 
Returns logged content for each log file 
Returns current end position for specified file path 
Returns content added during this request for specified log file 
Returns number of log lines added in all of registered logs 
Returns content from specified file between specified range 
Prevent access to our access if toolbar is disabled 
Renders specified array 
Renders specified table array of arrays 
Returns enable state for required PHP extensions 
Returns description for installed Magento modules 
Captures information about specified model 
Returns an assoc array with filter and if its value from request Filters missing from request parameters are ignored 
Enables specified module 
Determines category based on timer name 
Converts timers registered by Varien Profile into structure understood by Symfony 
Search grouped class 
Flushes cache 
Enables Full Page Cache Debug 
Enables template Hints 
Disables inline translation 
E mail body action 
Returns query references in request parameters 
Returns request info model associated to current request 
Called to mark that we can start profile execution of specified request 
Can be manually called to update current profile with data collected from loggers SQL Profiler et C Executed after response is send to update profile with latest information 
Saves request info model 
Listens to controller action predispatch event to capture request information 
Listens to controller action layout generate blocks after and records instantiated blocks 
Listens to core block abstract to html before event and records blocks that are about to be rendered 
Listens to core block abstract to html after event and computes time spent in block s to Html rendering time 
Listens to core collection abstract load before and eav collection abstract load before events and records loaded collections 
Listens to model load after and records loaded models 
Listens to controller front send response after This event represents the end of a request 
Disables website restriction module for requests handled by our module 
Logic that checks if we should capture specified block 
Sheep Debug Model Query constructor 
Overwrites parent method to capture details for sent e mail 
Adds e mail information on current request profile info 
Responsible to copy queries from current profiler and set this instance sql profiler 
Calls parent implementation and saves stack trace 
Returns an array of SQL queries 
Captures request response and controller information 
Initialize generic request attributes stored in PHP global variables POST GET etc 
Initialize response properties 
Download configuration as text or xml action 
Prepares response with configuration as text 
Calls real send method 
Overwrites parent method to capture e mail details 
Adds e mail information on request profiler 
Returns raw content attached to specified mail object 
Returns raw content of e mail message Abstract Zend Mime Part interface changes between and 
Returns raw subject 
Returns module version number 
Returns results as assoc array for specified SQL query 
Flattens an xml tree into an associate array where key represents path 
Returns specified number formatted based on current locale 
Returns readable file size 
Formats a stack trace array generated by debug backtrace 
Sort callback for objects that have get Count see Sheep Debug Model Model 
Returns all xml files that contains layout updates 
Formats the blockname used in the observer on Block To Html method 
Execute the console command 
Convert string to corresponding type 
Execute the console command 
Execute the console command 
Execute the console command 
Transfer inputs to properties of editing 
Execute the console command 
Transfer inputs to properties of editing 
Tests file for writability If the file doesn t exist check the parent directory for writability so the file can be created 
Append one setter to buffer 
Update one setter in buffer 
Delete one setter in buffer 
Save buffer to special file path 
Ensures the given file is readable 
Get informations of all lines from file content 
Build an setter line from the individual components for writing 
Normalising the value of setter to reading 
Parse a line into an array of type export key value and comment 
Load file for working 
Reset content for editor 
Get all or exists given keys in file content 
Check if a given key is exists in the file content 
Return the value matching to a given key in the file content 
Set many keys to buffer 
Set one key to buffer 
Delete many keys in buffer 
Save buffer to file 
Create one backup of loaded file 
Return an array with all available backups 
Restore the loaded file from latest backup file or from special file 
Delete all or the given backup files 
Bootstrap the application events 
Execute the console command 
Transfer inputs to properties of editing 
For the special case of units that have a linear conversion factor this factory method simplifies the construction of the unit of measure 
Register a new unit of measure for all instances of this this physical quantity 
Get the unit of measure that matches the given name by either name or alias 
Given a unit of measure determine if its name or any of its aliases conflict with the set of already known unit names and aliases 
Given the patterns for generating the names and aliases generate the various metric units of measure and add them to this physical quantity 
Bootstrap the application services 
Determine if any of the assigned roles to this user have a specific permission 
Assign a role to this user 
Remove a role from this user 
Reassign roles from an id or an array of role Ids 
Replace all existing permissions with a new set of permissions 
Give Permission to a Role 
Replace all existing permissions with a new set of permissions 
 param string resource file 
Guzzle Http Psr Uri use parse url not good for utf So should encode URI first before new Psr Request 
 Header 
 
 API body param Config service Config param method param uri param date param policy param content Md body md 
Creates release zip 
 param path param stream param params 
 param path param stream param params 
 
 
 
 
 
 
 
 
 
 
 
 
 m u param array files m u param string save As m u 
 m u param string file m u param string save As m u param array slice param bool is Include true slice slice param bool index slice false true m u 
 m u param string file m u 
 mp m u param string file param string save As param string point HH MM SS param string size x param string format save As jpg png webp 
 param string file 
 param array set Color 
 param width param height 
 param string color hexadecimal exceptions Invalid Argument Exception 
Formats all vertical horizontal top horizontal bottom top right bottom left 
Set padding format top right bottom left ex 
 param array data param height 
 param array data 
 param key 
 param std Class data 
 param Transaction transaction 
 param Transaction transaction 
 param Transaction transaction 
 param string tid 
 param reference 
 param tid 
 param Transaction transaction 
 param Flight flight 
 param string type param string number 
 param string ddd param string number param int type 
 param string url param string kind 
 param Environment environment 
 param integer gateway param integer module 
 param card Number param card Cvv param expiration Year param expiration Month param holder Name 
 param card Number param security Code param expiration Month param expiration Year param card Holder Name param kind 
 param card Number param card Cvv param expiration Year param expiration Month param holder Name 
 param bool capture 
 param string code param string departure Tax 
 param soft Descriptor param payment Facilitator ID param Sub Merchant sub Merchant 
 param string on Failure param bool embed param string directory Server Transaction Id param string three DIndicator 
 param Passenger passenger 
 param string response param string status Code 
 param string body param string method 
 param int type 
 param Item item 
 param Address shipping Address 
 param string name param string email param string cpf 
 
 
 inheritdoc 
 inheritdoc 
 
 
 
 
 
 param key 
Given the current state of a Loader instance perform a batch load from its current queue 
Do not cache individual loads if the entire batch dispatch fails but still reject each request so they do not hang 
 
 
 
 
The call for action method this is the parse job initiator 
Returns array of available template patterns or performs a similarity match slower to return best match template 
Sets the class property templates Directory Path 
Prepares the matched template text for parsing by escaping known characters and removing excess whitespaces 
Extracts the named variables values from within the text based on the provided template 
Iterates through the templates directory to find the closest template pattern that matches the provided text 
Constructor Perform some checks about the OS and setserial 
Device set function used to set the device name address linux use the device address like dev tty S osx use the device address like dev tty serial windows use the COMxx device name like COM can also be used with linux 
Opens the device for reading and or writing 
Closes the device 
Configure the Baud Rate Possible rates and 
Configure parity Modes odd even none 
Sets the length of a character 
Sets the length of stop bits 
Configures the flow control 
Sets a setserial parameter cf man setserial NO MORE USEFUL No longer supported Only use it if you need it 
Sends a string to the device 
Reads the port until no new datas are availible then return the content 
Flushes the output buffer Renamed from flush for osx compat issues 
check if current user authorized 
 Easy We Chat 
 Easy We Chat 
 Easy We Chat 
 Easy We Chat 
 Easy We Chat 
 Easy We Chat 
 
 
Generates the configuration tree builder 
 
 
Perform a HTTP Request 
Build a request object 
Creates a request for x or x guzzle version 
 return array 
Creates a response object 
Pick the metadata out of the raw data 
Pick the rows items out of the raw data 
 param user Token param array options 
Creates a new local client instance 
Get a table gateway for the given table name 
Status Reply 
Status Reply 
Status Reply 
Status Reply 
Status Reply 
Status Reply 
Status Reply 
Status Reply 
Status Reply 
Status Reply 
 
Take a Message and return a PSR Response Interface 
 param string path 
 
 
 param Identity Interface string identity 
 param Identity Interface string identities 
 
 inheritdoc 
 
 inheritdoc 
 
 
 param Attachment attachments 
 param Identity Interface string recipients 
 param Identity Interface string identities 
 param Identity Interface Identity Interface string identities 
 
 
 param Attachment attachments 
Applies a function to each attachment and finds a unique name for any conflicting names 
 param string name The name to make unique param array claimed Names already in use to avoid 
 
 
 param Attachment attachments 
Parses the closure s code and produces an abstract syntax tree AST 
Returns the variables that in the use clause of the closure definition These are referred to as the used variables static variables or closed upon variables context of the closure 
 param Reflection Function reflection 
Recursively traverses and wraps all Closure objects within the value 
Analyzer a given closure 
Clones the Serializable Closure with a new bound object and class scope 
Serializes the code context and binding of the closure 
Unserializes the closure 
 param string url 
 param string url 
Returns license metadata by license identifier 
Returns license exception metadata by license exception identifier 
Returns the short identifier of a license or license exception by full name 
 param array string license 
 param string license 
 see Command 
Creates the Bundle object based on the user s non interactive input 
Adds a configuration resource at the top of the existing ones 
Finds the last imported resource path in the YAML file 
Adds a bundle at the end of the existing ones 
Tries to make a path relative to the project which prints nicer 
Peeks the next token 
 param Bundle Interface bundle param string entity param string format param array fields 
Generate the CRUD controller 
Generates the index html twig template in the final bundle 
Generates the show html twig template in the final bundle 
Validates that the given namespace e g Acme Foo Bundle is a valid format 
Tries to generate forms if they don t exist yet and if we need write operations on entities 
Adds a routing resource at the top of the existing ones 
Checks if the routing file contains a line for the bundle 
Parses pattern based on ICU grammar 
 param bool as Num 
Register the service provider 
Sets a logger instance on the transport 
Column names to select i e Last Name Website Email When not set defaults to all columns 
Pass the file input stream to a record 
Encodes a request record 
Parses the XML returned by Zoho to the appropriate objects 
Search record by an equal criteria Could be multiple wheres into a single request i e First Name Cristian 
Search record by an equal criteria adding This function adds a secondary alternative after established where s Could be multiple or Wheres into a single request i e Email hsilencee gmail com 
Bootstrap any application services 
initialize SMTP plugin 
encode special chars if possible 
encode and split header strings 
set encoded header value 
set message sender 
set reply to field respected by most email clients 
set receipient for bounce error mails 
reset recipients if key was given or restart whole smtp plugin 
set message in HTML text format 
set message contents by mime type 
add a file attachment 
send message 
save the send mail to disk 
receive and proceed message ping 
track clicked link and reroute 
init routing 
Set layout template 
Retrieve an attribute 
Renders a template and returns the result as a string 
Set the consumer for this client 
Follow a blog 
Unfollow a blog 
Like a post 
Unlike a post 
Delete a post 
Reblog a post 
Edit a post 
Create a post 
Get tagged posts 
Get information about a given blog 
Get blog avatar URL 
Get blog likes for a given blog 
Get blog followers for a given blog 
Get posts for a given blog 
Make a GET request to the given endpoint and return the response 
Make a POST request to the given endpoint and return the response 
Parse a response and return an appropriate result 
Make a GET request to the given endpoint and return the response 
Make a request to the given endpoint and return the response 
Set the consumer for this request handler 
Set the token for this request handler 
Make a request with this request handler 
Decode a string encoded with the managed format 
Pause delivery execution 
Resume delivery execution 
Get delivery execution state 
Set time reference of current assessment item session to i now i instead of time of last update This ensures that time when delivery execution was paused will not be taken in account Make sure that method invoked right after retrieving assessment test session and before the first Assessment Test Session update Duration method call 
Return a human readable description of the test session 
Gets the current progress inside a delivery execution 
Retrieve QTI Items in their hierarchy for the given parameters as format them as tree 
Reformat the the tree state and count Add the item s categories 
Puts data in the cache Maintain the link to the user Id call Id pair Also keep the dirty state that will be used when persisting the data to the actual storage 
Checks if a dataset exists for the provided key 
Persists a cache entry and update its status 
Applies a dataset to be stored 
Gets a dataset from the store using the provided keys Will return null if the dataset doesn t exist 
Whenever or not a dataset exists 
Marks the the dataset to be removed from the storage 
Sends the changes to the storage 
Packs a Time Line in order to reduce the storage footprint 
Unpack a dataset to a workable Time Line 
Encode a dataset with the managed format 
Decode a string encoded with the managed format 
Initialize parameters 
Recompile items 
Get assessment Item Ref from delivery 
Save the tool state if some are found in the current request 
Get the current tools states 
Starts the context 
Extracts the path of the compilation directory 
Loads the storage 
Retrieves the index of compiled items 
Gets a particular value from item index 
Get Cat Engine Implementation 
Get the current CAT Session Object 
Persist the CAT Session Data 
Persist seen CAT Item identifiers 
Get Last CAT Item Output 
Persist CAT Item Output 
Is the Assessment Test Session Context Adaptive 
Contains Adaptive Content 
Select the next Adaptive Item and store the retrieved results from CAT engine 
Get Current Assessment Item Ref object 
Get Real Current Position 
Can Move Backward 
Save the Cat service result for tests and items 
Store a Cat Result variable 
Convert CAT variables to tao Result Server variables 
Get item uri associated to the given item Id 
Forward the data processing to the Synchronisation Service 
Process the move action 
Initialize and verify the current service context useful when the context was opened but not checked 
End the item timer to Qti Time Line 
Save the actual item state Requires params item Definition and item State 
Save the item responses Requires params item Duration and optionaly consumed Extra Time 
Gets the item reference for the current item Ref 
Process the timeout action 
Gets the rubrics according to the current session state The content is directly rendered into the page 
Process the pause action 
Do the move 
Processes the input messages 
Builds the list of output messages 
Check whether channel exists 
Extract CAT Information from Test Definition 
Is a Given Section Adaptive 
Returns the config of the test runner 
Returns the value of a config entry The name can be a namespace each name being separated by a dot like item Caching enabled 
Returns the options related to the current test context 
Returns the Adaptive Engine 
Get Assessment Item Ref by Identifier 
Get Assessment Item Ref by Identifiers 
Get Assessment Item Refs corresponding to a given Adaptive Placeholder 
Get Information about a given Adaptive Section 
Validation for adaptive section 
Is an Assessment Section Adaptive 
Create the client and version based on the entry options 
If it is the initial call reload cat section from this cat Section cache 
Get the current CAT Session Object 
Persist the CAT Session Data 
Alter the timeout value for engine params 
Process the store Trace Data action 
Do the move 
Stores the timer data 
Loads the timer data from the storage 
Wrap the process to appropriate action and aggregate results 
Get available actions from config 
Resolve a runner action to synchronize 
Get item data by identifier 
Create the item definition response for a given item 
Gets a message related to the state of the assessment test session 
Returns an array of items containing also confident data like branching and response processing rules 
Returns the item Data extending with the variable elements 
Calls itself recursively to return identifiers from nested arrays 
Gets the Storage Manager service 
Loads the extended state from the storage 
Saves the extended state into the storage 
Set the marked for review state of an item 
Gets the marked for review state of an item 
Gets the name of the client store used for the timer 
Add an event on top of the queue 
Gets all events from the queue 
Removes particular events from the queue 
Loads the table that maps the items identifiers to item reference Fallback index in case of the delivery was compiled without the index of item href 
Sets a CAT value in the Extended State 
Gets a CAT value from the Extended State 
Removes a CAT value from the Extended State 
Gets the State Storage service 
Persists the extended state 
Set the marked for review state of an item 
Gets the marked for review state of an item 
Sets the name of the client store used for the timer 
Add an event on top of the queue 
Removes particular events from the queue 
Removes all events from the queue 
Stores the table that maps the items identifiers to item reference Fallback index in case of the delivery was compiled without the index of item href 
Set a CAT Value 
Get a CAT Value 
Remove a CAT value from the Extended State 
Exports the internal state to an array 
Imports the internal state from an array 
Constructs the object 
Removes all Time Point corresponding to the provided criteria 
Gets a filtered Time Line containing the Time Point corresponding to the provided criteria 
Finds all Time Point corresponding to the provided criteria 
Computes the total duration represented by the filtered Time Points 
Compute the duration of a range of Time Point 
Ensures the ranges are well formed They should have been sorted before otherwise the process won t work Tries to fix a range by adding missing points 
Makes a copy of a Time Point and forces a particular type 
Tells if this is a start Time Point 
Tells if this is a end Time Point 
Computes the duration between two Time Point 
Get the data folder from a given item definition 
Gets the test session for a particular delivery execution 
Persists the Assessment Test Session into binary data 
Initializes the delivery execution session 
Gets the rubrics related to the current session state 
Gets Assessment Item Ref s Href by Assessment Item Ref Identifier 
Gets definition data of a particular item 
Gets the state of a particular item 
Sets the state of a particular item 
Parses the responses provided for a particular item 
Checks if the provided responses are empty 
Stores the response of a particular item 
Should we display feedbacks 
Does the given item has feedbacks 
Should we display feedbacks 
Moves the current position to the provided scoped reference 
Skips the current position to the provided scoped reference 
Handles a test timeout 
Finishes the test 
Sets the test to paused state 
Resumes the test from paused state 
Checks if the test is still valid 
Checks if an item has been completed 
Get the base url to the item public directory 
Comment the test 
Continue the test interaction if possible 
Stuff to be undertaken when the Assessment Item presented to the candidate times out 
Build an array where each cell represent a time constraint a k a time limits in force Each cell is actually an array with two keys 
Stores trace variable related to an item a test or a section 
Create a trace variable from variable identifier and value 
Stores outcome variable related to an item a test or a section 
Create an outcome variable from variable identifier and value 
Stores response variable related to an item a test or a section 
Create a response variable from variable identifier and value 
Store a set of result variables to the result server 
Store a result variable to the result server 
Build the transmission based on context and item ref id to store Item variables 
Check if the given Runner Service Context is a Qti Runner Service Context 
Starts the timer for the current item in the Test Session 
Ends the timer for the current item in the Test Session 
Switch the received client store ids Put the received id if different from the last stored This enables us to check wether the stores has been changed during a test session 
Get Current Assessment Session 
Returns that the Theme Switcher Plugin is enabled or not 
Returns the ID of the current theme 
Gets the file that contains the href for the Assessment Item Ref Identifier 
Checks if the Assessment Item Ref Identifier is in the index 
Gets Assessment Item Ref s Href by Assessment Item Ref Identifier 
Builds the map of an assessment test 
Get the test Map for the current context but limited to the given scope 
Update the stats inside the target 
Get Assessment Item Ref objects 
Get the relative position of the given Route Item within the test The position takes into account adaptive sections and count items instead of placeholders 
Get the time constraint for the given component 
Get the label of a Map item 
Gets a QTI runner navigator 
Check if a timed section is exited 
Get the list of items classes 
Retrieve QTI Items for the given parameters 
Do the move 
Whenever or not to use client container for test runner Fallback determined by qti Item model extension 
Get the remaining duration from a source min or max time usually 
Get the time remaining to be spent by the candidate on the source of the time constraint Please note that this method will never return negative durations 
Get the time remaining the candidate has to spend by the candidate on the source of the time constraint Please note that this method will never return negative durations 
Converts a duration to milliseconds 
Serialize the constraint the expected way by the Test Context and the Test Map 
Do the move 
Process the skip action 
Adds a server start Time Point at a particular timestamp for the provided Item Ref 
Adds a server end Time Point at a particular timestamp for the provided Item Ref 
Gets the first timestamp of the range for the provided tags 
Gets the last timestamp of the range for the provided tags 
Gets the last registered timestamp 
Adds client start and client end Time Point based on the provided duration for a particular Item Ref 
Computes the total duration represented by the filtered Time Points 
Checks if the duration of a Time Line subset reached the timeout 
Exports the internal state to an array 
Saves the data to the storage 
Loads the data from the storage 
Gets the added extra time 
Sets the added extra time 
Gets the amount of already consumed extra time If tags are provided only take care of the related time 
Gets the amount of remaining extra time 
Checks if a timestamp is consistent with existing Time Point within a range 
Check if the provided range is open START Time Point and no related END 
Extracts a sorted range of Time Point 
Count the number of bits set in a bits integer 
Retrieve QTI Items for the given parameters 
Process the parameters of a matched function 
Processes this test when one of its tokens is encountered 
Returns an array of tokens this test wants to listen for 
Processes this test when one of its tokens is encountered 
Returns an array of tokens this test wants to listen for 
Processes this test when one of its tokens is encountered 
Process the parameters of a matched function 
Processes this test when one of its tokens is encountered 
Processes this test for T STYLE tokens in CSS files 
Verify if a CSS property value complies with an expected value 
Processes this test when one of its tokens is encountered 
Check against a typical manual search replace error often encountered 
Retrieve an array with the doc block tags from a T DOC COMMENT OPEN TAG 
Get the version number tag name of the latest TGMPA release from the Git Hub API 
Parse HTTP response headers array to a more usable format 
Processes this test when one of its tokens is encountered 
Processes this test when one of its tokens is encountered 
Returns an array of tokens this test wants to listen for 
Processes this test when one of its tokens is encountered 
Processes this test when one of its tokens is encountered 
Creates an array from a binary string into a given chunk size 
Encodes into base 
Decodes base 
Given an existing active OAuth access token make a Dropbox API call to get a new OAuth access token that represents the same user and app 
Make a Dropbox API call to disable the given OAuth access token 
 param OAuth Access Token oauth Access Token param string path 
Use this to check that a function argument is of type App Info 
Loads a JSON file containing information about your app At a minimum the file must include the key and secret fields Run php authorize php in the examples directory for details about what this file should look like 
Parses a JSON object to build an App Info object If you would like to load this from a file use the load From Json File method 
Use this to check that a function argument is either null or of type App Info 
Make an API call to disable the access token that you constructed this Client with After calling this API calls made with this Client will fail 
Make an API call to get basic account and quota information 
Downloads a file from Dropbox The file s contents are written to the given out Stream and the file s metadata is returned 
Creates a file on Dropbox using the data from in Stream for the file contents 
Creates a file on Dropbox using the given data string as the file contents 
Creates a file on Dropbox using the data from in Stream as the file contents 
 param string path 
Sometimes fread returns less than the request number of bytes for example when reading from network streams This function repeatedly calls fread until the requested number of bytes have been read or we ve reached EOF 
Start a new chunked upload session and upload the first chunk of data 
Append another chunk data to a previously started chunked upload session 
Creates a file on Dropbox using the accumulated contents of the given chunked upload session 
If you ve previously retrieved the metadata for a folder and its children this method will retrieve updated metadata only if something has changed This is more efficient than calling link get Metadata With Children if you have a cache of previous results 
A way of letting you keep up with changes to files and folders in a user s Dropbox 
Gets the metadata for all the file revisions up to a limit for a given path 
Takes a copy of the file at the given revision and saves it over the current copy This will create a new revision but the file contents will match the revision you specified 
Returns metadata for all files and folders whose filename matches the query string 
Creates and returns a public link to a file or folder s preview page This link can be used without authentication The preview page may contain a thumbnail or some other preview of the file along with a download link to download the actual file 
Creates and returns a direct link to a file This link can be used without authentication This link will expire in a few hours 
Gets a thumbnail image representation of the file at the given path 
Creates a file or folder based on an existing copy ref possibly from a different Dropbox account 
Creates a folder 
Moves a file or folder to a new location 
Build a URL for making a GET or PUT request Will add the locale parameter 
Perform an OAuth authorized GET request to the Dropbox API Will automatically fill in User Agent and locale as well 
Parses date time strings returned by the Dropbox API The Dropbox API returns date times formatted like Sat Aug 
Return a double quoted version of the given string using PHP escape sequences for all non printable and non ASCII characters 
If the given string begins with the UTF BOM byte order mark remove it and return whatever is left Otherwise return the original string untouched 
Return whether s starts with prefix 
If s starts with prefix return s with prefix removed Otherwise return null 
Loads a Host object from the auth host and host suffix fields of a JSON object If those fields aren t present return null 
Loads a JSON file containing authorization information for your app php authorize php in the examples directory for details about what this file should look like 
Parses a JSON object to build an Auth Info object If you would like to load this from a file please use the see load From Json File method 
Starts the OAuth authorization process which involves redirecting the user to the returned authorization URL a URL on the Dropbox website When the user then either approves or denies your app access Dropbox will redirect them to the redirect Uri given to constructor at which point you should call link finish to complete the authorization process 
Call this after the user has visited the authorize URL link start approved your app and was redirected to your redirect URI 
If the given path is a valid Dropbox path return null otherwise return an English string error message describing what is wrong with the path 
Return the last component of a path the file or folder name 
 internal 
 internal 
 param string client Identifier param string access Token param string user Locale param string host param string path param array null params 
 param string client Identifier param string auth Header Value param string user Locale param string host param string path param array null params 
 param string client Identifier param string access Token param string user Locale param string host param string path param array null params 
 param int max Retries The number of times to retry it the action if it fails with one of the transient API errors A value of means we ll try the action once and if it fails we will retry once 
If you re running within a PHAR call this method before you use the SDK to make any network requests 
 internal 
 param string base Folder 
 param string base Folder 
A string equality function that compares strings in a way that isn t suceptible to timing attacks An attacker can figure out the length of the string but not the string s value 
Returns cryptographically strong secure random bytes as a PHP string 
Returns total amount of items in cart 
Returns total price of all the items in cart 
Returns total tax of all the items in cart 
Returns total tax of all the items in cart 
Returns total amount to be charged base on total price tax and discount 
Runs calculations 
Resets cart calculations 
Sets callback urls 
Execute the console command 
Create the migration 
Create the seeder 
Returns item name 
Returns item url 
Returns flag indicating if item was purchased by user 
Called by shop to charge order s amount 
Called on callback 
Adds item to cart 
Removes an item from the cart or decreases its quantity Returns flag indicating if removal was successful 
Checks if the user has a role by its name 
Scope to current user cart 
Scope to current user cart and returns class model 
Transforms cart into an order Returns created order 
Whipes put cart 
Retrieves item from cart 
Scopes to get transactions from user 
Bootstrap the application events 
Maps router Add package special controllers 
Scopes class by item sku Optionally scopes by status 
Scopes class by user ID and returns object Optionally scopes by status 
Creates the order s transaction 
Process payment callback 
Checkout current user s cart 
Checkout current user s cart 
Checkout current user s cart 
Returns placed order 
Handles gateway callbacks 
Formats any value to price format set in config 
Check on order status differences and fires event 
Run the migrations 
Preserve new lines recursive function 
 
 
Get the path to the database file 
Open the database file 
Close the database file 
Read lines from the database file 
Append a line to the database file 
Write temporary file contents to database file 
Set the config 
Get a key from the database 
Set a key in the database 
Delete a key from the database 
Flush the database 
Get all keys from the database 
Get all data from the database 
Replace a key in the database 
Normalize the user supplied config 
Set the dir 
Set the ext 
Set the cache 
Set the formatter 
 param Zend View View Event e 
Add to the map 
 
Returns the source context for a given template logical name 
Listen to the bootstrap event 
 param name 
Get plugin instance 
Processes a view script and returns the output 
 param Zend View View view 
Page header 
Register the service provider 
Load data 
Simple table 
Better table 
Colored table 
Read data from a client socket 
Reads data from the stream 
Start the process 
Wait for the process to end 
Send a signal signal to the process 
Gets the process input stream STDIN 
Gets the process output stream STDOUT 
Gets the process error stream STDERR 
Twitter share link 
Linked in share link 
Build a single link 
Optionally Set custom prefix and or suffix 
 param Input Interface input param Output Interface output 
 param string dir Name 
 param Gender Name Model model 
 param ip Address param user Agent 
 param Lead lead 
 param service param params param field Key param field Value 
 param response param field Key 
 param Lead lead 
Creates an array of fingerprintable fields 
 param Lead lead 
 param Lead lead 
 param Lead lead 
 param Lead lead 
Convert a DOM Document into a nested array 
 param Lead lead 
 param array settings 
 param Lead lead param array config 
Make a basic call using c URL to get the data TODO migrate to Guzzle instead 
 param Input Interface input param Output Interface output 
Runs enhancements before the Lead is persisted 
 param Lead Event event 
 param Lead lead 
 param country Name 
 param Lead lead 
Gets from local cache and or calls the Blacklist serivice See documentation at http developer theblacklist click 
 param Plugin Integration Event event 
 param name 
 param Lead lead 
 param address Data 
 param Lead lead param string service Id 
 param City State Postal Code Model model 
 param Lead lead 
 param Lead lead 
 param Lead lead 
 param Lead lead 
Get image Content support url file Spl File Info 
Determine the given file has a image type 
Set Http Client Headers 
Send A Http POST Request 
Update 
Send A Http Request For Guzzle Http Http Client 
JSON request 
Get Guzzle Http Client instance 
 param Psr Http Message Response Interface string body 
append signature to params 
 OCR 
 OCR 
 HTTP JSON 
 
 
 
 
Request 
Get aliyun fixed request format 
 
 
 
 
 
 
 
 
 
 
 
 
 
Append access token to this url 
Build Request Param 
 
Register Provider 
Tencent Authorization signature 
Build signature Key 
Get access token from baidu API 
Get Token From Api 
Get access token cache key 
OCR 
OCR 
 
Append App Id And Bucket to option if empty 
Send a Http Request 
 
 
Set an array item to a given value using dot notation 
Build spec attributes from spec string 
push option value when the option accept multiple values 
get readable spec for printing 
Value Type Setters 
Return valud values array 
Return suggestions 
Check if an option is one of the option in the collection 
add spec string desc string 
 Get spec by spec id 
consume option value from current argument or from the next argument 
 push value to multipl value option 
 param array argv 
Return the current argument and advance to the next position 
Render readable spec 
render option descriptions 
 
 
 
 param array criteria 
 param string snippet 
 param Attribute attribute 
 param Attribute attributes 
 
 param array entry 
 param array entry 
 param array entry 
 param array entry 
 param array entry 
 param mixed command param callable next 
 param int id 
 param array criteria 
 param array criteria 
 param array criteria 
 
 inheritdoc 
 param Price price 
 param Bundle bundle 
 param Bundle bundle param Bundle Model bundle Model 
 param Bundle bundle param Bundle Model bundle Model param Detail Model main Variant 
 param Bundle bundle 
 param string bundle Number 
 inheritdoc 
 inheritdoc 
 
 param int plenty Id 
 param array detail param array result 
 param array details param array result 
 param array category Details 
 inheritdoc 
 
 
 
 
 param mixed command 
 param array payload 
 
 
 param Definition definitions 
 param Definition definitions param null string object Type 
 param Definition definitions 
 
 
 
 param Order Item order Item param Order order 
 param int article Number param int customer Group Id 
 
 inheritdoc 
 param Category category param Identity shop Identity 
 param Category category param int parent Category 
 param Identity category Identity param Category Model shop Main Category 
 inheritdoc 
 
 
 
 param array product 
 param Product product param Transfer Object Interface candidates For Processing 
 param array variation 
 param array product 
 param array product 
 param array product param array texts param array result 
 param array main Variation 
 param array texts 
 param array product 
 param array main Variation 
 param Variation variations param array main Variation 
 param Variation variations 
 param array product 
 param array product 
 param array product 
 param array product 
 param array product 
 
 
 
 
 
 
 
 
 param array entry param array texts param array result 
 param array image param array product Texts 
 
 param payment Id 
 
 param Variation variation 
 param Variation variation 
 param Variation variation 
 
 param array variation param array product 
 param array product 
 param array variation 
 
 param array entry 
 param array entry 
 param array entry 
 param array entry 
 param array entry 
 param array entry 
 param array entry 
 param array plenty Customer 
 param array plenty Customer 
 param array entry 
 param array entry 
 param array entry 
 param array entry 
 param array entry 
 param array entry 
 param array entry 
 param array entry 
 param array entry 
 param array entry 
 param array entry 
 param array entry 
 param int variation Id 
 param Date Time Immutable start Timestamp 
 
 
 
 
 
 inheritdoc 
migrating variation from one product to the correct connector handeled product 
 
 
 param array attribute Data 
 param string klarna Shop Id param string country Iso 
 param string country 
 
 
 
 
 inheritdoc 
 
 param Definition definition param string adapter Name 
 
 
 inheritdoc 
 
 
 param Query Interface query 
 
 
 
 
 
 
 
 
 param Definition definition 
 param array group 
 
 
 
 param Order Item order Item 
 param string identifier 
 param string number 
 param Order Item order Item 
 inheritdoc 
 param Order order 
 param Args args 
 param Args args 
 param Args args 
 param array params 
 param string method param string path param array options 
 param array variation 
 param array variations 
 param array main Variation param array variations 
 
 param array variation 
 
 param array entry 
 param array entry 
 param int shopware Id 
 param string entry param string type 
 
 param Translateable Interface object 
 
 inheritdoc 
 
 param Media media 
 param Media media 
 
 param array element 
 param array variation 
 param array variation 
 
 inheritdoc 
 
 inheritdoc 
 inheritdoc 
 param Order order 
 param Order order 
 
 
 
 
 
 
 param Enlight Event Event Args args 
 
 param Command Interface command 
 
 param Transfer Object Interface Value Object Interface object param string message param string property Path param array parents 
 
 
 
 
 param string request Url param string method param string path param array params param int limit param int offset 
 param int limit param int offset 
 param string path param array options 
 param string url 
 param string path 
 param Throwable exception param string method param string path param array params param int limit param int offset 
 param int limit param int offset param array options param array response 
 
 
 
 
 
 
 
 
 
 param array product 
 param array texts param array variation param array result 
 param array variation 
 param array variation 
 param array variation 
 param array variation 
 param array names 
 inheritdoc 
 param Query Interface query param callable next 
 
 param array entry 
 param int mode 
 inheritdoc 
 param int product Id 
 param Date Time Immutable start Timestamp param Date Time Immutable end Timestamp 
 
 
 inheritdoc 
 
 
 
 param array entry 
 
 param string name 
 
 
 
 
 param Address address param Order order param array plenty Customer param int address Type 
 param string mail 
 param Order order 
 
 
 
 param string ordernumber 
 
 inheritdoc 
 param Manufacturer manufacturer 
 
 
 param string currency 
 param array element 
 param array element 
 
 
 
 inheritdoc 
 param Identity order Identity 
 
 
 param array variation 
 param string order Origin param array referrers 
 param array variation Sales Prices 
Returns the matching price configurations 
 param array price Configurations param array price 
 
 
 param string hash 
 
 inheritdoc 
 
 inheritdoc 
 inheritdoc 
 param Payment payment 
 param Payment payment 
 param Payment payment 
 
 
 
 
 param Product product param string type 
 param Product product 
 param Product product 
 param Product product 
 param Product product 
 inheritdoc 
 
 
Check file status Return array of json data 
Upload file from a URL and get File instance 
Upload file from a URL and get File instance 
Upload file from local path 
Upload file from file pointer 
Upload file from string using mime type 
Create group from array of File objects 
Init upload request and return curl resource 
Set all the headers for request and set return transfer 
Run prepared curl request Throws Exception of not http code 
Returns script sections to include Uploadcare widget 
Return URL for javascript widget If no version is provided method will use default current version 
Return data integration attribute 
Gets input tag to use with widget 
Convert datetime from string or Date Time object to ATOM string 
Get portion of groups from server respecting filters 
Get portion of files from server respecting filters 
Return an iterator of File objects to work with 
Return an iterator of Group objects to work with 
Copy file 
Copy file to the Uploadcare storage 
Copy file to the external storage 
Process multiple files with chunk support 
Run request to process multiple files 
Run raw request to REST 
Make request to API Throws Exception if not http code was returned If http code it will parse returned data form request as JSON 
Prepares paged params array from chunk request result 
Convert query array to encoded query string 
Return path to send request to Throws Exception if wrong type is provided or parameters missing 
Set request type If request type is wrong an Exception will be thrown 
Returns full user agent string 
Set all the headers for request and set return transfer 
Update File info 
Copy the file 
Copy file to the external storage 
Get URL of original image 
Get local URL path of original image 
Get image tag 
Get object with cropped parameters 
Get object with resized parameters Provide width or height or both If not width or height are provided exceptions will be thrown 
Get object with preview parameters Provide both width and height If no width and height are provided exceptions will be thrown 
Get object with cropped parameters 
Apply effect 
Add any custom operation 
Check if element exists Uses current position if no offset provided 
Check if all elements are loaded into iterator 
Load elements chunk from server 
Get all Files 
Flushes rewrite rules 
Updates the permalink structure 
Gets a list of the current rewrite rules 
Exposes apache modules if present in config 
Displays a warning if skip plugins or skip themes are in use 
 
Normalizes event setting all expected parameters 
 
 
 
Generate a YUML compatible dsl text to describe a given array of entities 
Build the string representing the single graph item 
Retrieve a class metadata instance by name from the given array 
Visit a given association and mark it as visited 
Retrieve the form factory 
 
Overrides the base get Form Specification to additionally iterate through each field association in the metadata and trigger the associated event 
 
Create service 
Redirects the user to a YUML graph drawn with the provided dsl text 
 param string path 
When processing the filename call the callback 
Get a manipulable image instance 
Creates an instance defining the cache directory 
Display the password reminder view 
Handle a POST request to remind a user of their password 
 The function displays the password change view 
 After User enter the new password this function handles the resetting the the password 
Either retrieve the dashboard items from cache or from the config DB if they were not yet cached 
Determine whether to show the given entity type in the panel 
Return the array of entity types models links to show CRUD interfaces for in the panel 
Get the default namespace for the class 
Execute the console command 
Run the migrations 
Run the migrations 
Reverse the migrations 
Display the password reminder view 
For the given entity name the the corresponding Model s class 
Handle an incoming request 
Determine if the user has the given role 
Determine if the user may perform the given permission 
Performs authentication 
Finds user to authenticate 
Gets role from user s identity 
Authenticates user 
 
 
 
 
Send a reset link to the given user 
Get redirect path after a successful confirmation 
Get redirect path after a registration that still needs to be confirmed 
Get redirect path after the confirmation was sent 
Confirm a user with a given confirmation code 
Resend a confirmation code to a user 
Handle a registration request for the application 
Send the confirmation code to a user 
Attempt to log the user into the application 
Get the mail representation of the notification 
Path segment normalization https tools ietf org html rfc section 
Decode unreserved characters 
Replacement for PHP s parse string which does not deal with spaces or dots in key names 
Perform method action 
Make http request 
Apply result callback to the node provided by method 
Get value from content by css selector 
Apply all result callbacks 
Load method data from yaml file 
 param null selected param null placeholder param array select Attributes param array option Attributes 
 param integer timestamp param string timezone param string format 
 param integer timestamp param string timezone param string format 
Attempt to lock this command 
Check if the passed time has elapsed since the command start 
Search the specified path for command classes and add them to the application 
 
Override configure IO so that we can check if the global options were set 
Set the lock store to use 
Get the lock factory in use 
Set the path for the directory where lock files are stored 
Run another command usually from within the currently running command 
Formats the elapsed time as a string 
Display 
 param Issue issues 
 param Issue issues 
 param Issue issues 
 param Issue issues 
Bootstrap the application services 
Called when the crawl has ended 
 param Symfony Component Console Input Input Interface input param Symfony Component Console Output Output Interface output 
Refresh model fields and save them to a class field 
Fill model fields if they are already known Saves DB queries 
Update model 
Create an array of fields that will be saved to database 
 
Creates a query instance for has one or has many relation 
Get value from language field according to current language 
Register eloquent 
Bootstrap illuminate pagination 
Bootstrap illuminate database 
Instantiate service container if it s not instantiated yet 
 Highload eloquent 
Internal part of create to avoid problems with static and inheritance 
Delete model 
Save model to database 
Determine whether the field should be stopped from passing to update 
 
 
 
 
Get the collection of users according to the current query 
Get count of users according the current query 
Determine if groups must be selected 
Normalize filter before sending it to get List This prevents some inconsistency 
Get count of users that match filter 
Get list of items 
 load Models 
Get item by its id 
Setter for sort 
Add another filter to filters array 
Paginate the given query into a paginator 
Get a paginator only supporting simple next and previous links 
Adds item to results using key By value 
Determine if all fields must be selected 
Store closure s result in the cache for a given number of minutes 
 
CIBlock Section get List substitution 
Get count of sections that match filter 
Normalize select before sending it to get List This prevents some inconsistency 
Refresh user fields and save them to a class field 
Refresh user groups and save them to a class field 
Substitute old group with the new one 
Internal part of create to avoid problems with static and inheritance 
Delete model 
Save model to database 
Determine whether the field should be stopped from passing to update 
Get list of items 
Get count of elements that match filter 
Fetch all iblock property codes from database 
Fetches static iblock Properties Data if it s not fetched and returns it 
Refresh element s fields and save them to a class field 
Refresh element s sections and save them to a class field 
 deprecated in favour of section Get element direct section as ID or array of fields 
Get element direct section as model object 
Save props to database If selected is not empty then only props from it are saved 
Normalize properties s format converting it to PROPERTY CODE VALUE 
Construct PROPERTY VALUES from flat fields array This is used in save If selected Fields are specified only those are saved 
Set fetch using from string or array 
Choose between Fetch and Get Next b Text Html Auto use Tilda and then fetch 
Exists method for Array Iterator 
Get method for Array Iterator 
Get accessor method name if it exists 
Get accessor for language field method name if it exists 
Cast model to array 
Get an attribute from the model 
Set a given attribute on the model 
Get IDs of direct children of the section Additional filter can be specified 
Get IDs of all children of the section direct or not Additional filter can be specified 
Record an aggregate changed event 
Returns null if no stream events can be found for aggregate root otherwise the reconstituted aggregate root 
Default stream name generation Override this method in an extending repository to provide a custom name 
Add aggregate id and aggregate type as metadata to domain Event Override this method in an extending repository to add more or different metadata 
 param object event Sourced Aggregate Root 
 param object an Event Sourced Aggregate Root 
 param Aggregate Type aggregate Type param Iterator history Events 
 param object an Event Sourced Aggregate Root 
 param object an Event Sourced Aggregate Root param Iterator events 
Use this factory when aggregate type should be detected based on given aggregate root 
Use this factory when aggregate type equals to aggregate root class The factory makes sure that the aggregate root class exists 
Use this factory when the aggregate type is not equal to the aggregate root class 
 param object aggregate Root 
 param Aggregate Type aggregate Type param Iterator history Events 
 param object an Event Sourced Aggregate Root param Iterator events 
Replay past events 
Allows for application extension by modules Module can be any valid object or class name 
Registers new route 
Finds route matching clients request 
Startups and run application with or without dedicated server Once application is run it will listen to incoming http requests and takes care of the entire request flow process 
Registers PSR compatible middelware Middleware can be either callable object which accepts PSR server request interface and returns response interface or just class name that implements psr middleware or its instance 
Handles request flow process 
Runs application listeners and handles request flow process 
Decorator for handle method used by server instance see Application handle see Server add Listener 
Registers new controller that accepts get request when request uri matches passed route pattern 
Registers new controller that accepts post request when request uri matches passed route pattern 
Registers new controller that accepts put request when request uri matches passed route pattern 
Registers new controller that accepts patch request when request uri matches passed route pattern 
Registers new controller that accepts delete request when request uri matches passed route pattern 
Registers new controller that accepts options request when request uri matches passed route pattern 
Registers new controller that accepts head request when request uri matches passed route pattern 
Gets value behind the key or returns default value if path does not exists 
Merges one instance of Config class into current one and returns current instance 
Returns new instance of the config containing only values from the given namespace 
Sets new value 
Bootstrap the application services 
Attempt to connect and identify a bot with the Discord websocket gateway 
Get the URL of the gateway that the socket should connect to 
 param Psr Http Message Response Interface response 
Perform an HTTP request with the Discord API 
Send the given notification 
 
Set title 
With localized title 
Set body 
Set localized body 
With localized action 
Add launch image 
Include configuration file with constants 
 
 
 
Set alert 
Set category 
Set sound 
Set badge 
Set content available option 
Set mutable content option 
Set thread id 
Try to resolve the signature generator 
Add default signature generator resolvers 
Try the resolve Web Token Jwt Signature Generator 
Try to resolve Spomky Labs Jose Signature Generator 
Create a temporary file 
Set aps 
Add or replace custom data 
Add or replace header 
Add multiple headers 
Use certificate for send request 
Use pass phrase of certificate for send request 
Add visitor to chain 
 
 
 inheritdoc 
Inner send process 
Add visitor 
Add default visitors 
 
Create chain visitor 
Create URI for device 
 
Set payload 
Set apn identifier 
Set priority 
Set expiration 
Set the collapse identifier 
 
 inheritdoc 
Initialize c URL resource 
Prepare c URL resource by request 
 
 
 
 
Create exception by reason 
 
Convert APS data to array 
Convert alert object to array 
 param string mailable Class param string argument Name param string argument Type param string null default Value 
 param string mailable Class param string argument Name param Illuminate Database Eloquent Model model param string int null id 
Run the migrations 
Reverse the migrations 
Handle an incoming request 
 param namespace param group param trans Key param locale 
 param namespace param group param locale param translations array null translations to override with cached translations 
 param namespace string param group string param key string param null string locale param bool use Lottery param bool find Or New 
 Return an opcodes string describing the diff between a From and a To string 
 Return an iterable collection of diff ops from an opcodes string 
 Generic opcodes parser user must supply callback for handling single opcode 
Entry point to compute the diff 
This is the recursive function which is responsible for handling increasing granularity 
This is the core algorithm which actually perform the diff itself fragmenting the strings as per specified delimiters 
Perform a character level diff 
Efficiently fragment the text into an array according to specified delimiters No delimiters means fragment into single character The array indices are the offset of the fragments into the input string A sentinel empty fragment is always added at the end Careful No check is performed as to the validity of the delimiters 
Stock opcode renderers 
Return value to be used for concatenation as a database value 
Replace translation table name used to allow queries with standard table name so that Php Storm SQL completions and refactoring could be used 
return an element representing the translation for bulk insert by insert Translations 
Run the migrations 
Change default connection used for this login session and reload persistent data if it the connection is different from what was before 
 Standard WEB UI API not REST 
Test for post Publish 
 React UI API 
Handles missing keys from the React App 
TODO these are shared and they all need extra param for connection Name from the React UI 
Execute the console command 
Run the migrations 
Reverse the migrations 
Bootstrap the application events 
 param array trans translation to output param null integer options formatting options 
Register the service provider 
Get the default locale being used 
Set the default locale 
Get the default show Unpublished being used 
Set the default show Unpublished 
Get the translation for a given key from the JSON translation files 
Get the translation for the given key 
Make the translation popup from used keys when rendering a page 
Output translation strings for Web UI used by JS 
Make the translation popup from used keys when rendering a page 
Get a translation according to an integer value 
 param string resource input File path or resource param callback callable item Callback Callback param bool assoc Parse as associative arrays 
 param string resource input File path or resource 
Login using Unreal Engine credentials to access Fortnite API 
Refreshes OAuth tokens using an existing refresh token 
Returns item by it s item id 
Parses a list of items and removes any non items for some reason quests show up in here 
Get leaderboard top 
Fetches stats for the current user 
Lookup a user by their Epic display name 
Parses a stat string into a mapped array 
Fetches profile data 
Get current user s friends on Unreal Engine 
Sends a GET request as the Unreal Engine Client 
Sends a POST request as the Unreal Engine Client 
Sends a GET request as the Fortnite client 
Sends a POST request as the Fortnite client 
Get a key to use with the hierarchy If the key does not start with Hierarchical Pool Interface SEPARATOR this will return an unalterered key This function supports a tagged key Ie foo bar 
This will take a hierarchy key foo bar with tags foo bar tag Hash and return an array with each level in the hierarchy appended with the tags foo tag Hash bar tag Hash 
Find a user with a LDAP attribute and a value 
Finds user by username samaccountname 
Check if a Edvlerblog Adldap model User Db Ldap is allowed to login Two checks are done before a user object is returned 
Validates password 
Create a new object in database 
Check if a user exists If the user exists the account status and group assigments are refreshed Otherwise a new user is created 
Query LDAP for the current user status and save the information to database 
Update the group assignment of the user object The Yii app params LDAP Group Assignment Options has several options how to update the group assignment 
Query all groups assigned to user from Active Directory If the parameter SEARCH NESTED GROUPS true then all nested groups are respected too Keep in mind that a query for nested groups is much slower as a normal query 
Querys the complete user object from LDAP The username of the object has to be set before a query 
Get the Adldap provider name Since Version use the static function get Adldap Provider 
Get the Adldap provider name from the extension options See constant variable EXTENSION OPTIONS DEFAULT at the top of the class 
Get a value of the synchronisation options by option key The options can be defined with the set Individual Sync Options function of this class for a single object or global in the yii params php If nothing is defined the defaults from the varibale SYNC OPTIONS TEMPLATE WITHOUT BACKEND TASK are used 
Get a value of the group assignment options by option key The options can be defined with the set Individual Group Assignment Options function of this class for a single object or global in the yii params php If nothing is defined the defaults from the varibale GROUP ASSIGNMENT TOUCH ONLY MATCHING REGEX are used 
Get a value of the group assignment options by option key The options can be defined global in the yii params php If nothing is defined the defaults from the varibale EXTENSION OPTIONS DEFAULT are used 
Get the password expirytime See https msdn microsoft com en us library cc aspx 
init called by yii 
Create a role with the name yii example group and assign the permissions permission Display Detailed About and permission To Use Contanct Page 
Import all users from LDAP assign roles and account status Run this command with cron or another scheduler every X minuten hours days 
Execute the console command 
return if the file path is writable 
write the file to the file path 
Update attributes 
Display a listing of the resource GET roles 
Show the form for creating a new resource GET roles create 
Store a newly created resource in storage POST roles 
Show the form for editing the specified resource GET roles id edit 
Update the specified resource in storage PUT roles id 
Remove the specified resource from storage DELETE roles id 
Create a user 
Update user 
Delete model 
Boot and configure the application paths 
Register the service provider 
Display a listing of the resource GET model 
Show the form for creating a new resource GET model create 
Store a newly created resource in storage POST model 
Show the form for editing the specified resource GET model id edit 
Remove the specified resource from storage DELETE model id 
Handle the request 
Create model 
Update attributes 
Create a model 
Update model 
Register the repository class 
Register the parser class 
Parse a line and determine if it contains an emoji 
Fetch the emoji map 
Fetch the emoji map 
Boot this model 
Set the meta attribute 
Get the meta attribute value 
Cast value to proper type 
Set group of the meta attribute 
Set type of the meta attribute 
Set value of the meta attribute 
Mutate attribute value 
Get the value type 
Get the mutated type 
Determine whether a mutator exists for the value type 
Get mutator for the type 
Handle casting value to string 
Register hook on get Attribute method 
Register hook on set Attribute method 
Register hook on to Array method 
Register hook on replicate method 
Register hook on isset call 
Register hook on unset call 
Register hook on query Hook method 
Add or update attribute 
Set attribute 
Update existing attribute 
Unset attribute 
Create copy of the attribute bag 
Custom query handler for querying meta attributes 
Adjust meta columns for select statement 
Join meta attributes table in order to call provided method 
Order query by meta attribute 
Get an array with the values of given meta attribute 
Add select clause for key of the list array 
Join meta attributes table 
Add where Has subquery on the meta attributes relation 
Determine the operator for count relation query 
Integers and floats must be passed in raw form in order to avoid string comparison due to the fact that all meta values are stored as strings 
Get the relation constraint closure 
Query Builder where Between override required to pass raw numeric values 
Save new or updated meta attributes and delete the ones that were unset 
Determine whether meta attribute is allowed for the model 
Set meta attribute 
Load meta attributes relation 
Change the MAC address of the network interface specified 
Get the system s current MAC address 
Return the settings response if some one clicks on the settings plugin icon 
Register CP URL rules 
Set our plugin static property to this class so that it can be accessed via Sitemap plugin 
Handle a request going to our plugin s index action URL e g actions sitemap default 
Creates the tables needed for the Records used by the plugin 
Creates the indexes needed for the Records used by the plugin 
Handle a request going to our plugin s index action URL e g actions sitemap default 
Called when saving the settings 
Serialize data 
Parser Http Request to Json Request 
Handle http request 
Create new Http Response from exception 
Collect exception 
 param Container Builder container 
 param Reflection Class reflection Class 
 param Request request param string version 
Is debug 
Serialize data 
Create new Json Response from exception 
Handle json request 
Check is cache support for Json Request 
 param Json Request json Request 
 param Method Meta Data method Meta Data param Json Request json Request 
 
 inheritdoc 
Ger http handler by name 
 param string name 
 param string template param string target param array parameters 
Get a list of all tables in the schema 
Execute the console command 
Get provider url to fetch user details 
Register the service provider 
Get the outside temperature humidity given a location zip postal code optional country code 
Get a list of all the locations configured in the Nest account 
Get the schedule details for the specified device 
Get the next scheduled event 
Get the specified device thermostat or protect information 
Change the thermostat target mode and temperature 
Change the thermostat target temperature when the thermostat is not using a range 
Change the thermostat target temperatures when the thermostat is using a range 
Set the thermostat to use ECO mode mode ECO MODE MANUAL or not mode ECO MODE SCHEDULE 
 Deprecated Change the thermostat away temperatures This method is an alias for set Eco Temperatures 
Change the thermostat ECO temperatures 
Set the thermostat controlled fan mode 
Set the thermostat controlled fan to be ON for a specific number of minutes each hour 
Set the thermostat controlled fan to be ON using a timer 
Cancels the timer for the thermostat controlled fan 
Set the thermostat controlled fan to run only between the specified hours 
Change the location structure to away or present Can also set the specified thermostat to use ECO temperatures when enabling Away mode 
Enable or disable using Eco temperatures when you re Away 
Change the dual fuel breakpoint temperature 
Enable or disable Nest Sense Humidifier 
Change the dual fuel breakpoint temperature 
Convert a temperature value from the device prefered scale to Celsius 
Convert a temperature value from Celsius to the device preferred scale 
Get the thermostat preferred scale Celsius or Fahrenheit 
Get all the devices of a specific type from the user s account 
Either return the parameter as is or if empty return the serial number of the first device found in the user s account 
Get the specified device network information 
Send a HTTP request 
Get latest CA certs from curl haxx se 
Create a temporary file in the system temp folder 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Validates an array of items 
 param string name 
 param string name 
 param string key Id 
 return Key 
 param string name 
 return array 
 return string 
 param Request Interface message 
 param Request Interface message 
 param Request Interface message 
 param Request Interface message 
 param array pairs 
 param segment 
 param result 
 param array col Schema param string tpl Dir 
 param array col Schema param string tpl Dir 
 param array col Schema param string tpl Dir 
 param string type param string primary Key param mixed default 
 param string driver param string db param string inc param string exc param string table Prefix 
 param string driver param string db param string table param string field Prefix 
 param string driver 
 param string driver 
 param Psr Http Message Server Request Interface Request request param Psr Http Server Request Handler Interface handler 
get all registered events list 
Get swoole info 
Get app config 
get app pools 
Get all registered application events list 
Get all registered http middleware list 
get all registered rpc middleware list 
 param string db param string inc param string exc 
 param string db param string table 
init the project will create runtime dirs 
Print current system environment information 
Check current operating environment information 
 param condition param string null msg param bool show On False 
Get all of the input and files for the request 
Get an input item from the request 
Get a subset of the items from the input data 
Get all of the input except for a specified array of items 
Get a mapped subset of the items from the input data 
Get an old input item from the request 
Clean a specified value or values 
Process a specified value 
Register the binput class 
Initialize Get values from GET and COOKIES and save to Utm Cookie Init self utm Cookie value 
Initialize static values to default or empty values 
Get all utm values or just value of utm with specific key 
Save utm Cookie value into COOKIE and set actual self utm Cookie value call only from init 
Populate the environment 
Retrieve a list of all backend sections like content system etc 
Find a particular template file and return its path 
Call the parse Template HOOK 
Parse the template file and return it as string 
Static convenience method to perform the whole rendering within one line of code 
Start a new block 
Insert a template 
Purge the page cache 
Render the html for the input screen condition 
 
Retrieve the label text for a condition setting or the default one 
Decode a language array 
Decode a language array 
Boot up the system 
Test if the event must get dispatched if so trigger deprecation and dispatch then 
Handle event to update the sorting for DCA combinations 
Get the needed services 
 
 
 
Retrieve the simple query 
Add parameters to the list 
Replace the table name in the query string 
Retrieve the value with the given name from the service container 
Retrieve the value with the given name from the source with the given name 
Convert a parameter using an aggregate function 
Convert a parameter in the query string 
Retrieve the row 
Generate a frontend url 
Generate a filter URL from the current request 
Split the current request into fragments strip the URL suffix recreate the GET array and return the page ID 
Determine the fragments for the passed request 
Strip the leading locale if any 
Update the fragments for folder URL aliases 
Fetch matching page candidates 
Call the get Page Id From Url HOOKs 
Extract POST data from the passed request 
 
Collect all tagged attribute factories 
Collect all tagged filter factories 
Collect all tagged filter factories 
Checks whether the column with the given name is a Meta Model system column 
Checks whether the column with the given name is not a Meta Model system column and is a valid column name 
Checks whether the given table exists 
Ensures that the given table does not exist 
Creates a table with the given name 
Renames a table with the given name to the given new name 
Deletes the table with the given name 
Add a index to given tablename for specified columnname 
Checks whether the given table exists 
Checks whether the given column does not exist 
Add a column to a table 
Rename a column and or change it s type in a table 
Delete a column from a table 
Enables or disables Variant support on a certain Meta Model table 
Check is a table column exists 
Generate a particular sub part of the file tree and return it as HTML string 
Provide options for default selection 
Replaces the current session data with the stored session data 
Add the modules to the backend sections 
Inject all child tables 
Get the jump to page data 
Generate the module 
Obtain the filter setting factory 
Obtain the filter URL builder 
Build the sub query for a comparing operator like 
Return the filter query for a foo IN a b filter 
Return the filter query for a foo LIKE ba r filter 
Calculate a native SQL sub procedure 
Method to optimize as many system column lookup filters as possible into a combined filter rule 
Build an AND or OR query 
Retrieve the attribute for a filter operation 
Combine a filter in standard filter array notation 
Prepare a filter and return it 
Provide options for default selection 
Translates an generated alias see get Attribute Names to the corresponding attribute id 
Check if we have to add the Create variant button 
Handle the create variant event 
Check the items before the edit start If there is a item with variant support and a empty vargroup it must be a base So set the varbase to 
Get the breadcrumb navigation via event 
Set the service container 
Create an attribute instance from an information array 
 inheritdoc 
 
 
 
 
 
 
Event handler 
Perform the bread crumb generating 
Extract the id value from the serialized parameter with the given name 
Check if we have to purge the Meta Models cache 
Parse and build the backend view definition for the old Contao backend view 
Get or create the definition 
Parse the listing configuration 
Parse the sorting part of listing configuration 
Set the correct sorting value 
Convert a render group type from Input Screen value to Group And Sorting Information Interface value 
Parse the sorting part of listing configuration 
Retrieve the legend with the given name 
Retrieve a property from a legend or create a new one 
Handle the paste into and after event 
Add attributes to the Meta Model 
Configure the filter module 
Generate an url determined by the given params and configured jump To page 
Redirect the browser to the url determined by the given params configured jump To page will get used 
Retrieve the parameter values 
Parse a single filter widget 
Check if we want to redirect to another url 
Get the frontend filter options to use 
Get the filters 
Retrieve the parameter values 
Render a module or content element 
Add the clear all Filter 
Check if the type allows children 
Set the maximum amount of allowed children only valid when is Nested Type true 
Setup the allowance of attribute types to be added to this factory 
Retrieve the list of known attribute types 
 inherit Doc 
 inherit Doc 
Provide options for property condition types 
Retrieve the type name from an attribute 
 
Create a new exception for an existing column 
Retrieve the Meta Model the given model is attached to 
 
Provide options for attribute type selection 
Test if we want to handle the event 
Trim the values and validate them 
Generate the widget and return it as string 
Handle the deletion of a Meta Model and all attached data 
Handle the update of a Meta Model and all attached data 
Remove the select button when in list view and override edit all is active 
Set the Meta Model instance 
 
Build the cache service 
Build the picker service 
Render the html for the input screen condition 
Create a rule instance from the passed query builder 
 
Sanitize the connection value 
 inheritdoc 
Set the service container 
Try to unserialize a value 
 
Retrieve all attributes implementing the given interface 
Narrow down the list of Ids that match the given filter 
Fetch the native database rows with the given ids 
This method is called to retrieve the data for certain items from the database 
This method is called to retrieve the data for certain items from the database 
This method is called to retrieve the data for certain items from the database 
Clone the given filter or create an empty one if no filter has been passed 
 
 
 
 
Retrieve all attributes with the given names 
 
 
 inheritdoc 
 
 
 
 
Update the value of a native column for the given ids with the given data 
Update an attribute for the given ids with the given data 
Update the variants with the value if needed 
Create a new item in the database 
 
 
 
 
Obtain the doctrine connection 
Save the base columns of an item and return true if it is a new item 
Retrieve the type name from an attribute 
 
Retrieve the combinations for the passed user 
Retrieve the palette combinations from the database 
Retrieve the parameters for the label 
Delete an item 
Set a language as active language in Contao and return the previous language 
Retrieve the Meta Model 
Fetch a single or first record by id or filter 
Set base config with source and other necessary parameter 
Fetch an empty single record new item 
Prepare a filter and return it 
Extract the sorting from the given config 
Fetch the ids via the given filter 
Fetch the items via the given filter 
Fetch all records optional filtered sorted and limited 
Retrieve all unique values for the given property 
Return the amount of total items filtering may be used in the config 
Determine if a given value is unique within the metamodel 
Reset the fallback field 
Save an item to the data provider 
Save a collection of items to the data provider 
Check if two models have the same values in all properties 
Fetch a variant of a single record by id 
 inheritdoc 
 inheritdoc 
Decode the given value from a serialized language array into the real language array 
Encode the given value from a real language array into a serialized language array 
Build the widget for the MCW 
Prepares the sub palettes e g add option for translated attributes for different filter types 
Create all conditions for the given palette 
Get a legend Create it if not exists 
Get the property chain condition for the property 
Get a property from a legend Create if not exists 
Get the visible condition for a property Create it if not exists 
Populate the environment 
Map all translation values from the given array to the given destination domain using the optional base key 
Add the translations for the input screen 
Provide options for default selection 
Ensure that all options have a value 
Generates the configuration tree builder 
Resolves a path 
Set the service container 
Collect the attribute settings for the given render setting 
Create a ICollection instance from the id 
 
Test if the event is for the correct table and in backend scope 
 
Fix up the modules in the backend 
Build the language string for the passed backend module 
 
Retrieve the Meta Model attached to the model filter setting 
Build the data definition palettes 
Apply conditions for meta palettes of the certain render setting types 
Obtain the list of registered type names 
Test if the passed type supports nesting 
Get the amount of children this type supports for unlimited returns 
Test if an attribute type is supported for the passed condition type 
Create a condition from the passed configuration 
Run controller and parse the login template 
Retrieve the options for the attributes 
Retrieve the filter parameter name to react on 
Return the label to use 
Internal helper function for descendant classes to retrieve the options 
 
 
 inheritdoc 
 inheritdoc 
Retrieve the attribute we are filtering on 
Determine the filter value from the passed values 
Draw the attribute in the backend listing 
Generate the module 
Call the generate method from parent class 
Generate an url determined by the given params and configured jump To page 
 
Calculate the name of a sub palette attribute 
Build the data definition palettes 
Generate the paste button 
Handle event to update the empty type safety values for DCA combinations 
Update type safety values 
 inherit Doc 
Handle the event 
 
Register multiple event listeners 
Retrieve the Meta Model with the given id 
Parse the correct conditions 
Parse the correct conditions for a Meta Model with variant support 
Parse the correct conditions for a Meta Model with variant support 
Parse the correct conditions for a Meta Model with variant support 
Build a where clause for the given id s and language code 
Retrieve the values to be used in the INSERT or UPDATE SQL for the given parameters 
 
Determine the available languages 
 
 
 
 
 
 
Filter the item ids for ids that exist in the database 
 
 
Handle the paste into and after buttons 
Handle the paste into and after buttons 
Find a item by its id 
Determines if this Meta Model instance is subject to variant handling 
Check the buttons based on the action 
Check the PA and PI without a contained model 
Check the PI for the root element 
Check the PA and PI with a model 
Check the PA and PI with a model and variant support 
Check the PA and PI with a model and a normal flat build 
Retrieve the Meta Model attached to the model condition setting 
 inheritdoc 
 inheritdoc 
 inheritdoc 
 inheritdoc 
 inheritdoc 
 inheritdoc 
Retrieve the cache to use 
 inheritdoc 
 inheritdoc 
Parse and build the backend view definition for the old Contao backend view 
Retrieve or create the palette definition 
Create a property for the palette 
Build the conditions for the passed condition array 
Parse the template 
Handle the update of an attribute and all attached data 
Check if either type or column name have been changed within the model 
Transform a legend information into the property legends 
Translate a property 
Apply legend conditions to its attribute 
Translate database rows into legend and property information 
Transform a single condition into a valid condition object 
Transform the given condition array into real conditions 
Transform the grouping and sorting modes 
 
 
 inherit Doc 
Populate the environment 
Inject the service container into the data driver instances 
Process the request 
Render the output array for the template 
Fetch existing entries 
Generate the form 
Translate the checkbox caption 
Perform addition now 
Get the current Backend referrer URL 
Purge the file cache 
Retrieve a list of all backend sections like content system etc 
Set a value in the target page 
Add a slug parameter 
Add a slug parameter 
Retrieve the options for the attributes 
Generate the list 
Retrieve all filter parameters from the input class for the specified filter setting 
Compile the content element 
 
Returns if the given value is currently active in the given filter settings 
Translate an option to a proper url value to be used in the filter url 
Add a parameter to the url if it is auto item it will get prepended 
Build the filter url based upon the fragments 
Generate the options for the frontend widget as the frontend templates expect them 
Returns the frontend filter widget information for the filter setting 
Validate the widget using the value 
Retrieve the human readable name or title from the attribute 
This extracts the value for the given language from the given language array 
Hook additional attribute formatter that want to format the value 
When rendered via a template this populates the template with values 
 
 
Set the language strings 
Retrieve the base definition by the user from dca config 
Extract an override value 
Extract an override value 
 
 inheritdoc 
 
Build the data definition 
Ensure at least one submit element is present in any of the rows 
Parse a single row with all elements 
Add filter elements to the panel 
Add sort element to the panel 
Add search element to the panel 
Handle database upgrade for the jump To field 
Handle database upgrade for the published field in tl metamodel dcasetting 
Handle database upgrade for changing sub palettes to input field conditions 
Upgrade the database to change from closed dca to editable creatable and deletable 
Upgrade the input screens 
Upgrade the input screens 
Perform all upgrade steps 
Called by tl metamodel table Name onsave callback 
Provide options for attribute type selection 
Retrieve the service container in use 
Set the limit 
Set sorting to an attribute or system column optionally in the given direction 
Override the output format of the used view 
Set Meta Model and render settings 
Add the attribute names for meta title and description 
Prepare the Meta Model 
Prepare the view 
Set the filter setting to use 
Set parameters 
Add additional filter rules to the list on the fly 
Return all attributes that shall be fetched from the Meta Model 
Prepare the rendering 
Retrieve the output format used by this list 
Retrieve the translation string for the given lang key 
Set the title and description in the page object 
Render the list view 
Build the definition 
Get or create the basic definition 
Calculate the wizard 
Get all configs 
Get a Meta Models by name or id 
Get the view for a Meta Models 
Get the language 
Get the list of jump Tos based on the items 
Get the base URL 
Remove all empty detail pages 
Set parameters 
Start point for the hook get Searchable Pages 
Get a Meta Models a filter and a render Setting Get all items based on the filter and build the jump To urls 
Retrieve the filter rule if anything to filter 
Build the sub query for a comparing operator like 
Return the filter query for a foo IN a b filter 
Return the filter query for a foo LIKE ba r filter 
Add a filter condition child 
Add a sub procedure 
Retrieve the options for the attributes 
 
 
Retrieve the jump to label 
Retrieve the details for the page with the given id 
Determine the page id and other details 
 
Retrieve the options for the attributes 
Get a x pixel resized icon of the passed image if it exists return the default icon otherwise 
Get a x pixel resized icon img tag of the passed image if it exists return the default MM icon otherwise 
Translate the file ID to file path 
 inheritdoc 
 inheritdoc 
 
Create a new setting 
Fetch all child rules for the given setting 
Collect the rules for a filter setting 
 inheritdoc 
Return the edit wizard 
Fetch all attribute names for the current Meta Model 
Fetch all available filter settings for the current meta model 
Called from subclass 
Base encode 
Get attributes for checkbox wizard 
Render an edit button 
Get a list with all allowed attributes for meta description 
Retrieve the Meta Model instance 
Fetch the template group for the current Meta Model content element 
 
Return the link picker wizard this is called from Multi column wizard in render settings jump To page handling 
Updates the meta information of the attribute 
This method is called to store the data for certain items to the database 
 inheritdoc 
Search all items that match the given expression 
Creates the underlying database structure for this field 
Removes the underlying database structure for this field 
Renames the underlying database structure for this field 
Get all options for the input screens 
Render the html for the input screen condition 
 
 
Return the names of all properties stored within this model 
 
 
 
 
 inherit Doc 
 
 inherit Doc 
 
 
Get all options for the user groups 
Clear the button if the User is not admin 
Handle the event and delegate to the build method 
Retrieve the type name from an attribute 
 
Set the allowed file extensions 
Contao DBAFS Support 
Walks the list of pending folders via Toolbox File add Path 
Generate an URL for downloading the given file 
Walk all files and fetch desired additional information like image sizes etc 
Maps the sorting from the files to the source 
Sorts the internal file list by a given condition 
Attach first last and even odd classes to the given array 
Sort by filename 
Sort by modification time 
Sort by passed id list 
Shuffle the file list 
Check if a file download is desired 
Translate the file ID to file path 
Convert an array of values handled by Meta Models to a value to be stored in the database array of bin uuid 
Convert an array of values stored in the database array of bin uuid to a value to be handled by Meta Models 
Convert an uuid or path to a value to be handled by Meta Models 
Add the passed file model collection to the current buffer if the extension is allowed 
Process a single file 
Resize the image if needed 
 inherit Doc 
Retrieve the connection 
Generate the list 
Provide options for the values contained within a certain attribute 
Translates an value to a generated alias to allow numeric values 
Translates an generated alias to the corresponding value 
Set the the value select to multiple 
 
Obtain the values of a property within a dc general instance 
Build the property definition 
Build the property information for a certain property from the data container array 
Retrieves or creates a property information in the definition container 
Set the label in the property 
Set the description in the property 
Set the excluded flag in the property 
Set the searchable flag in the property 
Set the widget type in the property 
Set the options in the property 
Set the explanation in the property 
Set the evaluation array 
Set the empty value if defined 
 
 
 
Test if the passed type supports nesting 
Get the amount of children this type supports for undefined returns null 
Test if an attribute type is supported for the passed condition type 
Create a condition from the passed configuration 
Retrieve a list of all backend sections like content system etc 
Decode a language array 
Decode a language array 
Extract all languages from the Meta Model and return them as array 
Create a widget for naming contexts Use the language and translation information from the Meta Model 
Search all files with the given file extension below the given path 
The real calculating function 
Load a data container 
Handle for Meta Model tables this loads the base definition tl metamodel item 
Handle for non Meta Model tables this adds the child operations 
Build the data container map 
Build the caption for a table 
This method exists only for being compatible when Meta Models are being used as child table from DC Table context 
Helper function for see Meta Model Item parse Value and see Meta Model Item parse Attribute 
Check if a value is empty 
Run through each level of an array and check if we have at least one empty value 
Return the native value of an attribute 
Fetch the meta model variants for this item 
Fetch the meta model variant base for this item 
Find all Variants including the variant base 
Save the current data for every attribute to the data sink 
Register the assets in Contao 
Renders the item in the given output format 
Renders a single attribute in the given output format 
Returns a new item containing the same values as this item but no id 
Returns a new item containing the same values as this item but no id 
Create the CSS class for variant information 
 
Build the definition 
Create or get the Meta Model definition 
Test if the given column post fix is a reserved by Meta Models 
Checks whether the column with the given name is a Meta Model system column 
Checks whether the column with the given name is not a Meta Model system column and is a valid column name 
Ensures that the given table does not exist 
Creates a table with the given name 
Renames a table with the given name to the given new name 
Deletes the table with the given name 
Add a index to given tablename for specified columnname 
Checks whether the given table exists 
Add a column to a table 
Rename a column and or change it s type in a table 
Delete a column from a table 
Enables or disables Variant support on a certain Meta Model table 
Load the passed file and decode it 
Authenticate the user preserving the object stack 
 
Retrieve the input screen 
Get the Meta Model instance referenced in the pid property of the Model 
Create an attribute from the passed data 
 
Handle the update of an attribute and all attached data 
Delete joint condition setting with attribute 
Extract the attribute instance from the Meta Model 
Prepares an option list with alias name connection for all attributes 
Translates an attribute id to a generated alias 
Translates an generated alias to the corresponding attribute id 
 
Create the data provider definition in the container if not already set 
Retrieve the data provider definition 
Clear the button if the User is not admin 
Validate the column name and ensure that the column does not exist already 
Parse and build the backend view definition for the old Contao backend view 
Add the select command to the backend view definition 
Parse the defined model scoped operations and populate the definition 
Build a command into the the command collection 
Retrieve or create a command instance of the given name 
Create the caption text for the child model 
Hook function 
Extract the permissions from the Contao backend user 
Build a menu section 
Add a module to the modules list 
Determine if is active 
Obtain the combinations for the current user 
Retrieve a combination for a table 
Obtain child input screens of the passed parent 
Obtain parented input screens 
Retrieve the input screens 
 
 
 
 
 
 
 
 
Generate the paste button 
Test if a model accepts another child 
Decode the title value 
Encode the title value 
Generate the widget 
Evaluate an insert tag 
Get the jump To for a chosen value 
Get an item 
Get from MM X the item with the id Y and parse the attribute Z and return it 
Get count from a module or content element of a mm 
Try to load the Meta Model by id or name 
Get the Meta Model id and the filter id 
Get count form one MM for chosen filter 
Check if the item is published 
Translate the id of a Meta Model to the correct name of the Meta Model 
Determines the correct factory from a metamodel table name and creates an instance using the factory 
Create a Meta Model instance with the given information 
Create a Meta Model instance 
Collect the table names from the database 
Collect all attribute information from the database for the Meta Model 
Retrieve the options for the attributes 
 
Set the number of maximum pagination links 
Render the pagination string 
Calculate the limit and offset with pagination 
Calculate the pagination based upon the offset limit and total amount of items 
Generate an help wizard if needed 
Make fields mandatory if necessary 
Retrieve the widget class if it is valid 
Handle the onload callback 
Initialize widget 
Prepare all widgets and store them in the protected arr Widgets property 
Handle the onsave callback for a widget 
Validate the value of the widget 
Validate the widget 
Generate the help tag for a widget if needed 
Build the options for a widget 
Generate the widget and return it as string 
Handle the event 
Set the visibility condition for the widget 
Add a visible condition 
Render a filter setting into html 
Retrieve the Meta Model attached to the model filter setting 
Retrieve the comment for the label 
Retrieve the image for the label 
Retrieve the label text for a filter setting 
Retrieve the label pattern 
Retrieve the parameters for the label with attribute name and url parameter 
Retrieve the parameters for the label with attribute name and url parameter 
Add the suffix to the image if it is disabled 
Pre create the inverse image 
Push an entry 
Get for a table the human readable name or a fallback 
Fetch the template group for the detail view of the current Meta Model module 
Fetch the templates from TL ROOT templates 
Fetch the templates from resource locations 
Fetch a list of matching templates of the current base within the given folder and the passed theme name 
Fetch the ids from all child filter rules 
The real calculating function 
 
Get the css class for an option 
Generate a single checkbox 
 inherit Doc 
 
 
 
 inheritdoc 
Render the current item using the specified render setting 
Render a model for use in a group header 
Add additional parent header fields 
Remove invariant attributes from the render setting 
Translates the values of the jump To entries into the real array 
Translates the values of the jump To entries into the internal array 
Provide options for template selection 
Retrieve the model filters for the MCW 
Fetch information about an input screen 
Prepare the input screen data 
Build condition tree 
Fetch all properties for the passed input screen 
Fetch conditions for an input screen 
Fetch groupings for an input screen 
Convert property list to legend list 
Convert a legend property 
Convert an attribute property 
Render the html for the input screen condition 
Draw the input screen setting 
Draw a legend 
Handle the event 
Check if the actual argument is the same as the expected 
Retrieve the messages of all exceptions as chain 
Check if the actual argument is of type array and empty and the expected value is of type string and also empty 
Check for differences in arrays 
Helper to determine if two values are the same 
 
 
 
 
Retrieve a list of all referenced attributes within the filter setting 
Disable the mandatory checkbox field if the selected attribute is unique 
Retrieve a setting from the settings instance 
Configure the legacy service container 
Prepare the language options 
Test if the event is for the correct table and in backend scope 
Provide options for additional css files 
Provide options for additional javascript files 
Scan for files with the given extension 
Try to load the combinations from cache 
Retrieve the current user 
Try to load the combinations from cache 
Try to load the combinations from cache 
Resolve all combinations available 
Set a table mapping 
Ensure the value is a Meta Model name and not an id 
Retrieve the palette combinations from the database 
Fetch the palette view configurations valid for the given group ids 
Pull in all DCA settings for the buffered Meta Models and buffer them in the static class 
Build an input screen instance and return it 
Check if the input screen for a Meta Model is stand alone 
Retrieve the render setting that is active for the current user 
Retrieve the input screen that is active for the current user 
Retrieve all standalone input screens 
Get the name of the parenting Meta Model 
Retrieve all standalone input screens or optionally the children of a given parent 
Retrieve all standalone input screens or optionally the children of a given parent 
 
 
Create a breadcrumb store 
Build the data definition palettes 
Build the filter params for the widget 
A naive transformation of possible term and wildcard arrays in a DSL query 
Transform search parameters to string 
Build a callable url 
Index a new document or update it if existing 
Update a part of a document 
Search 
Perform a request against the given path method payload combination Example es request status 
Flush this index type combination 
Index a new document or update it if existing 
Update a part of a document 
delete a document 
create a request payload with all pending operations 
Add a term to this query 
Add a wildcard to this query 
Build the DSL as array 
Add array clause can only be one 
Build the DSL as array 
Index a new document or update it if existing 
Update a part of a document 
Search 
Search 
Perform a request against the given path method payload combination Example es request status 
Flush this index type combination 
Perform a http call against an url with an optional payload 
Build to array 
Add or overwrite existing field by name 
Get or set a config 
Get a client instance Defaults to opening a http transport connection to 
Change what index to go against 
Change what types to act against 
Puts a mapping on index 
Perform a raw request 
Index a new document or update it if existing 
Update a part of a document 
Perform search this is the sweet spot 
Flush this index type combination 
Expand a given path array or string If this is not an absolute path index type will be prepended If it is an absolute path it will be used as is 
Parse a DSN string into an associative array 
Begin a transparent bulk transaction if one is already running return its handle 
commit a bulk transaction 
Init 
Render template hint 
Render array as dl 
Check if hints should be displayed 
Get renderer 
Event core block abstract to html after 
Get skin file content 
Get option array 
Render template hint 
Render box 
convert nested array to tab indented list 
Find file and line of the class statement 
Find a filename in the include path fallback 
Get block information 
Check if remote call is enabled in configuration 
Get remote call url template 
Get block methods incl methods of parent classes 
Get path information of a block 
Check if a block is within another one that is cached 
Render title 
Factory method to create type instances Type instances are implemented as flyweights 
Adds a custom type to the type map 
Overrides an already defined type to use a different implementation 
Gets a reference proxy instance for the entity of the given type and identified by the given identifier 
Generate the Proxy file name 
Generates proxy classes for all given classes 
Generates a proxy class file 
Generates the methods of a proxy class 
Generates the code for the sleep method for a proxy class 
Resolves a registered namespace alias to the full namespace 
Add a new default annotation driver with a correctly configured annotation reader 
 
Loads the metadata of the class in question and all it s ancestors whose metadata is still not loaded 
 param int generator Type 
Create a Query for the view in the specified design document 
Create a Native query for the view of the specified design document 
Create a Couch DB Lucene Query 
Clears the Object Manager All objects that are currently managed by this Object Manager become detached 
Initialize an object that is a lazy load proxy or do nothing 
 param string K Key encryption key param string IV Initialization vector param null string P Data to encrypt null for authentication param null string A Additional Authentication Data param int tag length Tag length 
This method will append the tag at the end of the ciphertext 
 param string K Key encryption key param string key length Key length param string IV Initialization vector param null string P Data to encrypt null for authentication param null string A Additional Authentication Data param int tag length Tag length 
 param string K Key encryption key param string key length Key length param string IV Initialization vector param null string P Data to encrypt null for authentication param null string A Additional Authentication Data param int tag length Tag length 
 param string K Key encryption key param string key length Key length param string IV Initialization vector param null string P Data to encrypt null for authentication param null string A Additional Authentication Data param int tag length Tag length 
 param string K Key encryption key param string IV Initialization vector param string null C Data to encrypt null for authentication param string null A Additional Authentication Data param string T Tag 
This method should be used if the tag is appended at the end of the ciphertext It is used by some AES GCM implementations such as the Java one 
 param string K Key encryption key param string key length Key length param string IV Initialization vector param string null C Data to encrypt null for authentication param string null A Additional Authentication Data param string T Tag 
 param string K Key encryption key param string key length Key length param string IV Initialization vector param string null C Data to encrypt null for authentication param string null A Additional Authentication Data param string T Tag param int tag length Tag length 
 param K param key length param IV param A 
 param int s bits param int x 
 param X param Y 
 param string input 
 param string H param string X 
 param string K param int key length param string ICB param string X 
 param string o param string o 
Send a request 
Converting parameters array to a single string with encoded values 
Returns response headers as array 
Send a POST call with media upload to Twitter API via OAuth 
Getting OAuth parameters to be used in request headers 
Converting all parameters agetrrays to a single string with encoded values 
Getting OAuth signature base string 
Converting OAuth parameters array to a single string with encoded values 
Get response headers 
Send a GET call to Twitter API via OAuth 
Validate Credentials Array 
Getting full URL from a Twitter resource 
Returns raw response body 
Processing Twitter Exceptions in case of error 
Build a multipart message 
Get binary data of a file 
Reset Call State 
Get a bearer token from consumer keys 
Invalidate a bearer token 
Generate bearer token credentials 
Building request HTTP headers 
Adds the job to the scheduler 
Schedules a job with a CRON expression 
Schedules jobs sleeps until a job has to be scheduled Returns when jobs were scheduled 
Does a Redis BLPOP on the queue and blocks until a job is available 
Generates the OAuth login URL 
Modify the relationship between the current user and the target user 
Search media by its location 
Pagination feature 
The call operator 
Access Token Setter 
Merge permission scope with default scope Allow only valid values 
Register the service provider 
Run the created process builder 
Search package by given name 
Make config manager php file 
Convert providers or facade details to template 
Entry point for installation 
Get the package name and version provided by user 
Prettify Package result 
Ask user for package key 
Prettify package details 
Run the migration command 
Search package by given name 
Get Migration file list from the package 
Run the build 
Get Service Providers 
Get Facades 
Get migration 
Get the package files 
Check manager file exists in package or not 
Notify user 
Get resource instance 
Instantiate a class and use it like chain responsibility 
Get classes from given files 
Get the file by class name 
Start searching service provider in package 
Search the given package 
Publish resource files 
Bootstrap application services 
 param Pre Serialize Event event 
Get host url scheme host port 
Dump object as html 
Dump object s to String or stringified value 
dump object constants as html 
Dump object methods as html 
Dump method parameters as HTML 
Dump object s php Doc info as html 
Dump object properties as HTML 
Generate some info regarding the given method names 
returns information about an object 
Populate constants extends methods php Doc properties etc 
debug obj Abstract Start event subscriber 
debug obj Abstract End event subscriber 
Get object s constants 
Adds methods to abstraction 
Add minimal method information to abstraction 
Magic methods may be defined in a class doc block If so move this information to the properties array 
Adds properties to abstraction 
Add Update properties with info from debug Info method 
Magic properties may be defined in a class doc block If so move this information to the properties array 
Get parameter details 
Get true typehint not php Doc typehint 
Get property info 
Get property type and description from php Doc comment 
for nested objects ie object is a property of an object returns the parent class 
Is the passed object excluded from debugging 
Get method info 
Get default Value and constant Name info from php Doc param 
Determine prop Info overrides value 
Sorts property method array by visibility or name 
Get error level constants understood by specified php version 
 to Constant String description 
Get all constants included in specified error level excludes E ALL 
Go through all the rows of array to determine what the keys are and their order 
Get values for passed keys 
Handle table call 
Get the keys contained in value 
Get object abstraction s values if object has a stringified or to String value it will bereturned 
Handle clear call 
Clear alerts 
Remove error warn from summary log 
clear errors for given log 
Clear log entries 
 clear Log Helper description 
Clear summary entries 
Build message that gets appended to log 
returns information about an array 
Get backtrace 
Retrieve a data value or property 
Retrieve a configuration value 
Returns the Singleton instance of this class IF INSTANCE EXISTS 
Error handler 
Handle uncaught exceptions 
php shutdown event subscriber 
Register this error handler and shutdown function 
Set one or more config values 
Set the calling file line for next error this override will apply until cleared or error occurs 
un register this error handler and shutdown function 
Remove internal frames from backtrace 
Normalize backtrace from debug backtrace or xdebug get function stack 
Build error object 
Generate hash used to uniquely identify this error 
Handle E USER ERROR 
Rudimentary doc block parsing 
Parse php Doc tag 
Find parent php Doc 
Get comment contents 
Php Doc won t be different between object instances 
Parse method parameters 
Parse tags 
Split parameter string into individual params 
Trim leading spaces from each description line 
Send an email 
Serializes and emails log 
get error statistics from error Handler how many errors were captured in out of console breakdown per error category 
Get calling line file for error and warn 
Return the group group Collapsed ancestors 
Extracts meta data from args 
Do we have log entries 
debug init subscriber 
debug config subscriber 
error Handler error event subscriber adds error to console as error or warn 
debug output event subscriber 
Email Log if email Log is always or on Error output log if not already output 
Publish Trigger Dispatch event Event will get published on ancestor channels if propagation not stopped 
Build list of errors for email 
Log some PHP info 
Log if PHP s error reporting E ALL E STRICT PHPDebug Console is not logging E ALL E STRICT 
Log Cookie Post Files data 
Log Request Headers 
Log SERVER values specified by log Server Keys config option 
Get store values such as runtime peak memory usage 
Output the log via Fire PHP headers 
Output a log entry to Firephp 
Initialize firephp s meta array 
Build table rows 
set Fire PHP log entry header s 
output the log as javascript which outputs the log to the console 
Return log entry as javascript console xxxx 
Handle alert method 
Returns an error summary 
If last Error was fatal output the error 
Returns summary for errors that were logged to console while collect true 
Returns summary for errors that were logged to console while collect true 
Returns summary for errors that occurred while log collect false 
Get the error for the given category 
Subscribe to all of the event subscribers defined in passed obj 
Gets the subscribers of a specific event or all subscribers sorted by descending priority 
Checks whether an event has any registered subscribers 
Publish Trigger Dispatch event 
Unsubscribe from all of the event subscribers defined in passed obj 
Subscribe to event 
Removes an event subscriber from the specified event 
Calls the subscribers of an event 
Calls the passed object s get Subscriptions method and returns a normalized list of subscriptions 
Sorts the internal list of subscribers for the given event by priority 
Register this stream wrapper 
Close the directory 
Opens a directory for reading 
Read a single filename of a directory 
Reset directory name pointer 
Create a directory 
Rename a file 
Remove a directory 
Close a file 
Tests for end of file on a file pointer 
Flush the output 
Advisory file locking 
Change file options 
Opens file or URL 
Read from stream 
Seek to specific location in a stream 
Retrieve information about a file resource 
Retrieve the current position of a stream 
Truncates a file to the given size 
Write to stream 
Unlink a file 
Retrieve information about a file 
Output the log as chromelogger headers 
Process log entry 
Return a list of event subscribers 
error Handler error event subscriber 
Publish WAMP message to topic 
JSON doesn t handle binary well at all a strings with invalid utf can t be json encoded b javascript has a unicode problem will munge strings base encode all strings 
Publish pre existing log entries 
Publish initial meta data 
Retrieve a config or data value 
Want to store a snapshot of arrays objects resources Remove any reference to an external variable 
Returns value s type 
Add an alert to top of log 
Log a message and stack trace to console if first argument is false 
Clear the log 
Log the number of times this has been called with the given label 
Resets the counter 
Close current group 
Initiate the beginning of summary log entries 
Set ancestor groups to uncollapsed 
Starts recording a performance profile 
Stops recording profile info adds info to the log 
Output array as a table 
Start a timer identified by label 
Behaves like a stopwatch returns running time If label is passed timer is paused If label is not passed timer is removed from timer stack 
Log get the running time without stopping pausing the timer 
Log the running time without stopping pausing the timer also logs additional arguments 
Log a stack trace 
Return a named subinstance if channel does not exist it will be created 
Return array of channels 
Advanced usage 
metafy value values 
Publishes debug output event and returns result 
Advanced usage 
A wrapper for error Handler set Error Caller 
Debug class autoloader 
Store the arguments if collect is false does nothing otherwise abstracts values publishes debug log event appends log if event propagation not stopped 
Append group or group Collapsed to log 
Log time End and time Get 
Calculate total group depth 
Set container services 
Get Method s default argument list 
Set where append Log appends to 
Logs with an arbitrary level 
Exctract potential meta values from context 
Interpolates context values into the message placeholders 
Recursively merge two arrays 
Get value from array 
Build attribute string 
Build an html tag 
Get all HTTP header key values as an associative array for the current request 
Convert size int into k B 
Returns information regarding previous call stack position call user func and call user func array are skipped 
returns required included files sorted by directory 
Returns cli cron ajax or http 
Returns a sent pending response header value 
Is passed argument a simple array with all integer in sequence from to n empty array returns true 
Parse string o attributes into a key value array 
Parse HTML XML tag 
Generate a unique request id 
serialize log for emailing 
Use to unserialize the log serialized by email Log 
Convert array attribute value to string 
Convert boolean attribute value to string 
Get config val 
debug output subscriber 
Set one or more config values 
Close any unclosed groups 
Determine default output As 
Remove empty groups with hide If Empty meta value 
Set output As value instantiate object if necessary add Plugin if not already subscribed 
Uncollapse groups containing errors 
End profiling and return data 
Set initial stack info 
Tick function 
Remove internal frames from backtrace 
Remove function from stack and add time to profile 
Add function to call stack 
Get debug or child configuration value s 
Get config for lazy loaded class 
Set one or more config values 
Test REQUEST debug against passed key return collect output values 
Set cfg values for Debug and child classes 
Get config for debug If no path specified config for debug and dependencies is returned 
get available config keys for objects 
Convert key path val to array 
Normalizes cfg groups values by class 
Normalize string path Returns either empty string all config values grouped by class class we want all config values for class class key want specific value from this class class may be debug 
some config values exist in multiple modules 
Set Debug config 
debug config event subscriber 
debug log event subscriber 
Set file we will write to 
 
Is value a timestamp 
Dump float value 
Dump object 
Dump string 
Handle alert method 
Normalize table data 
Ready row value s 
